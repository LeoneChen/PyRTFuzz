<?xml version="1.0" ?>
<apisepc version="1.0">
  <library name="http">
    <module importfrom="['calendar:timegm']" imports="['copy', 'datetime', 'http', 'http.client', 'http.cookiejar', 'io', 'logging', 're', 'threading:_threading', 'time', 'traceback', 'urllib.parse', 'urllib.request', 'warnings']" name="http.cookiejar">
      <class init="obj = http.cookiejar.Cookie(None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="Cookie">
        <api name="__init__">
          <expr>None</expr>
          <args>['version:NoneType', 'name:NoneType', 'value:NoneType', 'port:NoneType', 'port_specified:NoneType', 'domain:NoneType', 'domain_specified:NoneType', 'domain_initial_dot:NoneType', 'path:NoneType', 'path_specified:NoneType', 'secure:NoneType', 'expires:NoneType', 'discard:NoneType', 'comment:NoneType', 'comment_url:NoneType', 'rest:NoneType', 'rfc2109:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_nonstandard_attr">
          <expr>ret = obj.has_nonstandard_attr(name)%%['str']</expr>
          <args>['name:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_nonstandard_attr">
          <expr>ret = obj.get_nonstandard_attr(name,default)%%['None', 'None']</expr>
          <args>['name:None', 'default:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_nonstandard_attr">
          <expr>obj.set_nonstandard_attr(name,value)%%['None', 'None']</expr>
          <args>['name:None', 'value:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_expired">
          <expr>ret = obj.is_expired(now)%%['float']</expr>
          <args>['now:float']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = http.cookiejar.CookiePolicy()%%[]" name="CookiePolicy">
        <api name="set_ok">
          <expr>obj.set_ok(cookie,request)%%['None', 'None']</expr>
          <args>['cookie:None', 'request:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="return_ok">
          <expr>obj.return_ok(cookie,request)%%['None', 'None']</expr>
          <args>['cookie:None', 'request:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="domain_return_ok">
          <expr>ret = obj.domain_return_ok(domain,request)%%['None', 'None']</expr>
          <args>['domain:None', 'request:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="path_return_ok">
          <expr>ret = obj.path_return_ok(path,request)%%['None', 'None']</expr>
          <args>['path:None', 'request:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="http.cookiejar.CookiePolicy" init="obj = http.cookiejar.DefaultCookiePolicy()%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="DefaultCookiePolicy">
        <api name="__init__">
          <expr>None</expr>
          <args>['blocked_domains:NoneType', 'allowed_domains:NoneType', 'netscape:NoneType', 'rfc2965:NoneType', 'rfc2109_as_netscape:NoneType', 'hide_cookie2:NoneType', 'strict_domain:NoneType', 'strict_rfc2965_unverifiable:NoneType', 'strict_ns_unverifiable:NoneType', 'strict_ns_domain:NoneType', 'strict_ns_set_initial_dollar:NoneType', 'strict_ns_set_path:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None, None, None, None, None, 'DomainLiberal', None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="blocked_domains">
          <expr>ret = obj.blocked_domains()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_blocked_domains">
          <expr>obj.set_blocked_domains(blocked_domains)%%['list']</expr>
          <args>['blocked_domains:list']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_blocked">
          <expr>ret = obj.is_blocked(domain)%%['str']</expr>
          <args>['domain:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="allowed_domains">
          <expr>ret = obj.allowed_domains()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_allowed_domains">
          <expr>obj.set_allowed_domains(allowed_domains)%%['None']</expr>
          <args>['allowed_domains:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_not_allowed">
          <expr>ret = obj.is_not_allowed(domain)%%['str']</expr>
          <args>['domain:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_ok">
          <expr>ret = obj.set_ok(cookie,request)%%['Cookie', 'Request']</expr>
          <args>['cookie:Cookie', 'request:Request']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_ok_version">
          <expr>ret = obj.set_ok_version(cookie,request)%%['Cookie', 'Request']</expr>
          <args>['cookie:Cookie', 'request:Request']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_ok_verifiability">
          <expr>ret = obj.set_ok_verifiability(cookie,request)%%['Cookie', 'Request']</expr>
          <args>['cookie:Cookie', 'request:Request']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_ok_name">
          <expr>ret = obj.set_ok_name(cookie,request)%%['Cookie', 'Request']</expr>
          <args>['cookie:Cookie', 'request:Request']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_ok_path">
          <expr>ret = obj.set_ok_path(cookie,request)%%['Cookie', 'Request']</expr>
          <args>['cookie:Cookie', 'request:Request']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_ok_domain">
          <expr>ret = obj.set_ok_domain(cookie,request)%%['Cookie', 'Request']</expr>
          <args>['cookie:Cookie', 'request:Request']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_ok_port">
          <expr>ret = obj.set_ok_port(cookie,request)%%['Cookie', 'Request']</expr>
          <args>['cookie:Cookie', 'request:Request']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="return_ok">
          <expr>ret = obj.return_ok(cookie,request)%%['Cookie', 'Request']</expr>
          <args>['cookie:Cookie', 'request:Request']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="return_ok_version">
          <expr>ret = obj.return_ok_version(cookie,request)%%['Cookie', 'Request']</expr>
          <args>['cookie:Cookie', 'request:Request']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="return_ok_verifiability">
          <expr>ret = obj.return_ok_verifiability(cookie,request)%%['Cookie', 'Request']</expr>
          <args>['cookie:Cookie', 'request:Request']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="return_ok_secure">
          <expr>ret = obj.return_ok_secure(cookie,request)%%['Cookie', 'Request']</expr>
          <args>['cookie:Cookie', 'request:Request']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="return_ok_expires">
          <expr>ret = obj.return_ok_expires(cookie,request)%%['Cookie', 'Request']</expr>
          <args>['cookie:Cookie', 'request:Request']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="return_ok_port">
          <expr>ret = obj.return_ok_port(cookie,request)%%['Cookie', 'Request']</expr>
          <args>['cookie:Cookie', 'request:Request']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="return_ok_domain">
          <expr>ret = obj.return_ok_domain(cookie,request)%%['Cookie', 'Request']</expr>
          <args>['cookie:Cookie', 'request:Request']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="domain_return_ok">
          <expr>ret = obj.domain_return_ok(domain,request)%%['str', 'Request']</expr>
          <args>['domain:str', 'request:Request']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="path_return_ok">
          <expr>ret = obj.path_return_ok(path,request)%%['str', 'Request']</expr>
          <args>['path:str', 'request:Request']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = http.cookiejar.Absent()%%[]" name="Absent"/>
      <class init="obj = http.cookiejar.CookieJar()%%['NoneType']" name="CookieJar">
        <api name="__init__">
          <expr>None</expr>
          <args>['policy:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_policy">
          <expr>obj.set_policy(policy)%%['DefaultCookiePolicy']</expr>
          <args>['policy:DefaultCookiePolicy']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_cookie_header">
          <expr>obj.add_cookie_header(request)%%['Request']</expr>
          <args>['request:Request']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="make_cookies">
          <expr>ret = obj.make_cookies(response,request)%%['FakeResponse', 'Request']</expr>
          <args>['response:FakeResponse', 'request:Request']</args>
          <return>['ret:NoneType', 'cookies:list']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_cookie_if_ok">
          <expr>obj.set_cookie_if_ok(cookie,request)%%['None', 'None']</expr>
          <args>['cookie:None', 'request:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="extract_cookies">
          <expr>obj.extract_cookies(response,request)%%['FakeResponse', 'Request']</expr>
          <args>['response:FakeResponse', 'request:Request']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clear_session_cookies">
          <expr>obj.clear_session_cookies()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="OSError" init="obj = http.cookiejar.LoadError()%%[]" name="LoadError"/>
      <class base="http.cookiejar.CookieJar" init="obj = http.cookiejar.FileCookieJar()%%['NoneType', 'NoneType', 'NoneType']" name="FileCookieJar">
        <api name="__init__">
          <expr>None</expr>
          <args>['filename:NoneType', 'delayload:NoneType', 'policy:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="save">
          <expr>obj.save(filename,ignore_discard,ignore_expires)%%['None', 'None', 'None']</expr>
          <args>['filename:None', 'ignore_discard:None', 'ignore_expires:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="revert">
          <expr>obj.revert(filename,ignore_discard,ignore_expires)%%['None', 'None', 'None']</expr>
          <args>['filename:None', 'ignore_discard:None', 'ignore_expires:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="http.cookiejar.FileCookieJar" init="obj = http.cookiejar.LWPCookieJar()%%['NoneType', 'NoneType', 'NoneType']" name="LWPCookieJar">
        <api name="as_lwp_str">
          <expr>ret = obj.as_lwp_str(ignore_discard,ignore_expires)%%['bool', 'bool']</expr>
          <args>['ignore_discard:bool', 'ignore_expires:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="save">
          <expr>obj.save(filename,ignore_discard,ignore_expires)%%['str', 'bool', 'bool']</expr>
          <args>['filename:str', 'ignore_discard:bool', 'ignore_expires:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="http.cookiejar.FileCookieJar" init="obj = http.cookiejar.MozillaCookieJar()%%['NoneType', 'NoneType', 'NoneType']" name="MozillaCookieJar">
        <api name="save">
          <expr>obj.save(filename,ignore_discard,ignore_expires)%%['NoneType', 'bool', 'bool']</expr>
          <args>['filename:NoneType', 'ignore_discard:bool', 'ignore_expires:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="time2isoz">
        <expr>ret = http.cookiejar.time2isoz(t)%%['int']</expr>
        <args>['t:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="time2netscape">
        <expr>ret = http.cookiejar.time2netscape(t)%%['int']</expr>
        <args>['t:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="offset_from_tz_string">
        <expr>ret = http.cookiejar.offset_from_tz_string(tz)%%['str']</expr>
        <args>['tz:str']</args>
        <return>['offset:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="http2time">
        <expr>ret = http.cookiejar.http2time(text)%%['str']</expr>
        <args>['text:str']</args>
        <return>['ret:NoneType', '_str2time:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="iso2time">
        <expr>ret = http.cookiejar.iso2time(text)%%['str']</expr>
        <args>['text:str']</args>
        <return>['ret:NoneType', '_str2time:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="unmatched">
        <expr>ret = http.cookiejar.unmatched(match)%%['Match']</expr>
        <args>['match:Match']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="split_header_words">
        <expr>ret = http.cookiejar.split_header_words(header_values)%%['list']</expr>
        <args>['header_values:list']</args>
        <return>['result:list']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="join_header_words">
        <expr>ret = http.cookiejar.join_header_words(lists)%%['list']</expr>
        <args>['lists:list']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="strip_quotes">
        <expr>ret = http.cookiejar.strip_quotes(text)%%['str']</expr>
        <args>['text:str']</args>
        <return>['text:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parse_ns_headers">
        <expr>ret = http.cookiejar.parse_ns_headers(ns_headers)%%['list']</expr>
        <args>['ns_headers:list']</args>
        <return>['result:list']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="is_HDN">
        <expr>ret = http.cookiejar.is_HDN(text)%%['str']</expr>
        <args>['text:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="domain_match">
        <expr>ret = http.cookiejar.domain_match(A,B)%%['str', 'str']</expr>
        <args>['A:str', 'B:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="liberal_is_HDN">
        <expr>ret = http.cookiejar.liberal_is_HDN(text)%%['str']</expr>
        <args>['text:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="user_domain_match">
        <expr>ret = http.cookiejar.user_domain_match(A,B)%%['str', 'str']</expr>
        <args>['A:str', 'B:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="request_host">
        <expr>ret = http.cookiejar.request_host(request)%%['Request']</expr>
        <args>['request:Request']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="eff_request_host">
        <expr>http.cookiejar.eff_request_host(request)%%['Request']</expr>
        <args>['request:Request']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="request_path">
        <expr>ret = http.cookiejar.request_path(request)%%['Request']</expr>
        <args>['request:Request']</args>
        <return>['path:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="request_port">
        <expr>ret = http.cookiejar.request_port(request)%%['Request']</expr>
        <args>['request:Request']</args>
        <return>['port:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="uppercase_escaped_char">
        <expr>ret = http.cookiejar.uppercase_escaped_char(match)%%['Match']</expr>
        <args>['match:Match']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="escape_path">
        <expr>ret = http.cookiejar.escape_path(path)%%['str']</expr>
        <args>['path:str']</args>
        <return>['path:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="reach">
        <expr>ret = http.cookiejar.reach(h)%%['str']</expr>
        <args>['h:str']</args>
        <return>['ret:NoneType', 'h:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="is_third_party">
        <expr>ret = http.cookiejar.is_third_party(request)%%['None']</expr>
        <args>['request:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="vals_sorted_by_key">
        <expr>ret = http.cookiejar.vals_sorted_by_key(adict)%%['dict']</expr>
        <args>['adict:dict']</args>
        <return>['map:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="deepvalues">
        <expr>http.cookiejar.deepvalues(mapping)%%['dict']</expr>
        <args>['mapping:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="lwp_cookie_str">
        <expr>ret = http.cookiejar.lwp_cookie_str(cookie)%%['Cookie']</expr>
        <args>['cookie:Cookie']</args>
        <return>['join_header_words:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>Exception</exception>
        <exception>KeyError</exception>
        <exception>NotImplementedError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>copy.Error</exception>
        <exception>http.client.BadStatusLine</exception>
        <exception>http.client.CannotSendHeader</exception>
        <exception>http.client.CannotSendRequest</exception>
        <exception>http.client.HTTPException</exception>
        <exception>http.client.ImproperConnectionState</exception>
        <exception>http.client.IncompleteRead</exception>
        <exception>http.client.InvalidURL</exception>
        <exception>http.client.LineTooLong</exception>
        <exception>http.client.NotConnected</exception>
        <exception>http.client.RemoteDisconnected</exception>
        <exception>http.client.ResponseNotReady</exception>
        <exception>http.client.UnimplementedFileMode</exception>
        <exception>http.client.UnknownProtocol</exception>
        <exception>http.client.UnknownTransferEncoding</exception>
        <exception>http.cookiejar.LoadError</exception>
        <exception>threading.BrokenBarrierError</exception>
      </errors>
    </module>
    <module importfrom="['urllib.parse:urlsplit']" imports="['collections.abc', 'email.message', 'email.parser', 'http', 'http.client', 'io', 're', 'socket', 'ssl']" name="http.client">
      <class base="email.message.Message" init="obj = http.client.HTTPMessage()%%['NoneType']" name="HTTPMessage">
        <api name="getallmatchingheaders">
          <expr>ret = obj.getallmatchingheaders(name)%%['None']</expr>
          <args>['name:None']</args>
          <return>['lst:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="io.BufferedIOBase" init="obj = http.client.HTTPResponse(None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType']" name="HTTPResponse">
        <api name="__init__">
          <expr>None</expr>
          <args>['sock:NoneType', 'debuglevel:NoneType', 'method:NoneType', 'url:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="begin">
          <expr>obj.begin()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="readable">
          <expr>ret = obj.readable()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isclosed">
          <expr>ret = obj.isclosed()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getheader">
          <expr>ret = obj.getheader(name,default)%%['str', 'str']</expr>
          <args>['name:str', 'default:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getheaders">
          <expr>ret = obj.getheaders()%%[]</expr>
          <args>[]</args>
          <return>['list:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info">
          <expr>ret = obj.info()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="geturl">
          <expr>ret = obj.geturl()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getcode">
          <expr>ret = obj.getcode()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = http.client.HTTPConnection(None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="HTTPConnection">
        <api name="__init__">
          <expr>None</expr>
          <args>['host:NoneType', 'port:NoneType', 'timeout:NoneType', 'source_address:NoneType', 'blocksize:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_tunnel">
          <expr>obj.set_tunnel(host,port,headers)%%['str', 'int', 'dict']</expr>
          <args>['host:str', 'port:int', 'headers:dict']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_debuglevel">
          <expr>obj.set_debuglevel(level)%%['int']</expr>
          <args>['level:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="request">
          <expr>obj.request(method,url,body,headers)%%['str', 'str', 'bytes', 'dict']</expr>
          <args>['method:str', 'url:str', 'body:bytes', 'headers:dict']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['encode_chunked:bool']</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="getresponse">
          <expr>ret = obj.getresponse()%%[]</expr>
          <args>[]</args>
          <return>['response:HTTPResponse']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="http.client.HTTPConnection" init="obj = http.client.HTTPSConnection(None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="HTTPSConnection">
        <api name="__init__">
          <expr>None</expr>
          <args>['host:NoneType', 'port:NoneType', 'key_file:NoneType', 'cert_file:NoneType', 'timeout:NoneType', 'source_address:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['context:NoneType', 'check_hostname:NoneType', 'blocksize:NoneType']</kwoargs>
          <defa>[None, None, None, None, None]</defa>
          <kwodefa>[None, None, None]</kwodefa>
        </api>
      </class>
      <class base="Exception" init="obj = http.client.HTTPException()%%[]" name="HTTPException"/>
      <class base="HTTPException" init="obj = http.client.NotConnected()%%[]" name="NotConnected"/>
      <class base="HTTPException" init="obj = http.client.InvalidURL()%%[]" name="InvalidURL"/>
      <class base="HTTPException" init="obj = http.client.UnknownProtocol()%%[]" name="UnknownProtocol"/>
      <class base="HTTPException" init="obj = http.client.UnknownTransferEncoding()%%[]" name="UnknownTransferEncoding"/>
      <class base="HTTPException" init="obj = http.client.UnimplementedFileMode()%%[]" name="UnimplementedFileMode"/>
      <class base="HTTPException" init="obj = http.client.IncompleteRead()%%[]" name="IncompleteRead"/>
      <class base="HTTPException" init="obj = http.client.ImproperConnectionState()%%[]" name="ImproperConnectionState"/>
      <class base="ImproperConnectionState" init="obj = http.client.CannotSendRequest()%%[]" name="CannotSendRequest"/>
      <class base="ImproperConnectionState" init="obj = http.client.CannotSendHeader()%%[]" name="CannotSendHeader"/>
      <class base="ImproperConnectionState" init="obj = http.client.ResponseNotReady()%%[]" name="ResponseNotReady"/>
      <class base="HTTPException" init="obj = http.client.BadStatusLine()%%[]" name="BadStatusLine"/>
      <class base="HTTPException" init="obj = http.client.LineTooLong()%%[]" name="LineTooLong"/>
      <class base="ConnectionResetError" init="obj = http.client.RemoteDisconnected()%%[]" name="RemoteDisconnected"/>
      <api name="parse_headers">
        <expr>ret = http.client.parse_headers(fp,_class)%%['BufferedReader', 'type']</expr>
        <args>['fp:BufferedReader', '_class:type']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['HTTPMessage']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ConnectionError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>RuntimeError</exception>
        <exception>TypeError</exception>
        <exception>UnicodeEncodeError</exception>
        <exception>ValueError</exception>
        <exception>http.client.BadStatusLine</exception>
        <exception>http.client.CannotSendHeader</exception>
        <exception>http.client.CannotSendRequest</exception>
        <exception>http.client.HTTPException</exception>
        <exception>http.client.ImproperConnectionState</exception>
        <exception>http.client.IncompleteRead</exception>
        <exception>http.client.InvalidURL</exception>
        <exception>http.client.LineTooLong</exception>
        <exception>http.client.NotConnected</exception>
        <exception>http.client.RemoteDisconnected</exception>
        <exception>http.client.ResponseNotReady</exception>
        <exception>http.client.UnimplementedFileMode</exception>
        <exception>http.client.UnknownProtocol</exception>
        <exception>http.client.UnknownTransferEncoding</exception>
      </errors>
    </module>
    <module importfrom="['functools:partial', 'http:HTTPStatus']" imports="['argparse', 'base64', 'binascii', 'copy', 'datetime', 'email.utils', 'html', 'http', 'http.client', 'http.server', 'io', 'mimetypes', 'os', 'posixpath', 'pwd', 'select', 'shutil', 'socket', 'socketserver', 'subprocess', 'sys', 'time', 'urllib.parse']" name="http.server">
      <class base="socketserver.TCPServer" init="obj = http.server.HTTPServer(None,None)%%['NoneType', 'NoneType', 'NoneType']" name="HTTPServer"/>
      <class base="socketserver.ThreadingMixIn" init="obj = http.server.ThreadingHTTPServer()%%[]" name="ThreadingHTTPServer"/>
      <class base="socketserver.StreamRequestHandler" init="obj = http.server.BaseHTTPRequestHandler()%%[]" name="BaseHTTPRequestHandler">
        <api name="parse_request">
          <expr>ret = obj.parse_request()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="handle_expect_100">
          <expr>ret = obj.handle_expect_100()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="handle">
          <expr>obj.handle()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="version_string">
          <expr>ret = obj.version_string()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="date_time_string">
          <expr>ret = obj.date_time_string(timestamp)%%['None']</expr>
          <args>['timestamp:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="log_date_time_string">
          <expr>ret = obj.log_date_time_string()%%[]</expr>
          <args>[]</args>
          <return>['s:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="address_string">
          <expr>ret = obj.address_string()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="http.server.BaseHTTPRequestHandler" init="obj = http.server.SimpleHTTPRequestHandler()%%[]" name="SimpleHTTPRequestHandler">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['directory:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="do_GET">
          <expr>obj.do_GET()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_HEAD">
          <expr>obj.do_HEAD()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="list_directory">
          <expr>ret = obj.list_directory(path)%%['None']</expr>
          <args>['path:None']</args>
          <return>['f:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="http.server.SimpleHTTPRequestHandler" init="obj = http.server.CGIHTTPRequestHandler()%%[]" name="CGIHTTPRequestHandler">
        <api name="do_POST">
          <expr>obj.do_POST()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_cgi">
          <expr>ret = obj.is_cgi()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_executable">
          <expr>ret = obj.is_executable(path)%%['None']</expr>
          <args>['path:None']</args>
          <return>['executable:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="nobody_uid">
        <expr>ret = http.server.nobody_uid()%%[]</expr>
        <args>[]</args>
        <return>['nobody:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="executable">
        <expr>ret = http.server.executable(path)%%['None']</expr>
        <args>['path:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>IndexError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>OverflowError</exception>
        <exception>TypeError</exception>
        <exception>UnicodeDecodeError</exception>
        <exception>UnicodeError</exception>
        <exception>ValueError</exception>
        <exception>argparse.ArgumentError</exception>
        <exception>argparse.ArgumentTypeError</exception>
        <exception>copy.Error</exception>
        <exception>http.client.BadStatusLine</exception>
        <exception>http.client.CannotSendHeader</exception>
        <exception>http.client.CannotSendRequest</exception>
        <exception>http.client.HTTPException</exception>
        <exception>http.client.ImproperConnectionState</exception>
        <exception>http.client.IncompleteRead</exception>
        <exception>http.client.InvalidURL</exception>
        <exception>http.client.LineTooLong</exception>
        <exception>http.client.NotConnected</exception>
        <exception>http.client.RemoteDisconnected</exception>
        <exception>http.client.ResponseNotReady</exception>
        <exception>http.client.UnimplementedFileMode</exception>
        <exception>http.client.UnknownProtocol</exception>
        <exception>http.client.UnknownTransferEncoding</exception>
        <exception>shutil.Error</exception>
        <exception>shutil.ExecError</exception>
        <exception>shutil.ReadError</exception>
        <exception>shutil.RegistryError</exception>
        <exception>shutil.SameFileError</exception>
        <exception>shutil.SpecialFileError</exception>
        <exception>socket.timeout</exception>
      </errors>
    </module>
    <module importfrom="['time:gmtime', 'time:time']" imports="['http', 'http.cookies', 're', 'string']" name="http.cookies">
      <class base="Exception" init="obj = http.cookies.CookieError()%%[]" name="CookieError"/>
      <class base="builtins.dict" init="obj = http.cookies.Morsel()%%[]" name="Morsel">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="key">
          <expr>ret = obj.key()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="value">
          <expr>ret = obj.value()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="coded_value">
          <expr>ret = obj.coded_value()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="copy">
          <expr>ret = obj.copy()%%[]</expr>
          <args>[]</args>
          <return>['morsel:Morsel']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isReservedKey">
          <expr>ret = obj.isReservedKey(K)%%['str']</expr>
          <args>['K:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set">
          <expr>obj.set(key,val,coded_val)%%['str', 'str', 'str']</expr>
          <args>['key:str', 'val:str', 'coded_val:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="output">
          <expr>ret = obj.output(attrs,header)%%['list', 'str']</expr>
          <args>['attrs:list', 'header:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="js_output">
          <expr>ret = obj.js_output(attrs)%%['list']</expr>
          <args>['attrs:list']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="OutputString">
          <expr>ret = obj.OutputString(attrs)%%['list']</expr>
          <args>['attrs:list']</args>
          <return>['_semispacejoin:builtin_function_or_method']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="builtins.dict" init="obj = http.cookies.BaseCookie()%%['builtin_function_or_method']" name="BaseCookie">
        <api name="value_decode">
          <expr>obj.value_decode(val)%%['None']</expr>
          <args>['val:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="__init__">
          <expr>None</expr>
          <args>['input:builtin_function_or_method']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="output">
          <expr>ret = obj.output(attrs,header,sep)%%['None', 'None', 'None']</expr>
          <args>['attrs:None', 'header:None', 'sep:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="js_output">
          <expr>ret = obj.js_output(attrs)%%['None']</expr>
          <args>['attrs:None']</args>
          <return>['_nulljoin:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="load">
          <expr>obj.load(rawdata)%%['None']</expr>
          <args>['rawdata:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="http.cookies.BaseCookie" init="obj = http.cookies.SimpleCookie()%%['builtin_function_or_method']" name="SimpleCookie">
        <api name="value_decode">
          <expr>obj.value_decode(val)%%['str']</expr>
          <args>['val:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>http.cookies.CookieError</exception>
      </errors>
    </module>
  </library>
  <library name="xmlrpc">
    <module importfrom="['datetime:datetime', 'decimal:Decimal', 'io:BytesIO', 'xml.parsers:expat']" imports="['base64', 'errno', 'gzip', 'http.client', 'sys', 'time', 'urllib.parse', 'xmlrpc', 'xmlrpc.client']" name="xmlrpc.client">
      <class base="Exception" init="obj = xmlrpc.client.Error()%%[]" name="Error"/>
      <class base="Error" init="obj = xmlrpc.client.ProtocolError()%%[]" name="ProtocolError"/>
      <class base="Error" init="obj = xmlrpc.client.ResponseError()%%[]" name="ResponseError"/>
      <class base="Error" init="obj = xmlrpc.client.Fault()%%[]" name="Fault"/>
      <class init="obj = xmlrpc.client.DateTime()%%['NoneType']" name="DateTime">
        <api name="__init__">
          <expr>None</expr>
          <args>['value:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(data)%%['None']</expr>
          <args>['data:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="encode">
          <expr>obj.encode(out)%%['None']</expr>
          <args>['out:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = xmlrpc.client.Binary()%%['NoneType']" name="Binary">
        <api name="__init__">
          <expr>None</expr>
          <args>['data:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="encode">
          <expr>obj.encode(out)%%['None']</expr>
          <args>['out:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = xmlrpc.client.ExpatParser(None)%%['NoneType']" name="ExpatParser">
        <api name="__init__">
          <expr>None</expr>
          <args>['target:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="feed">
          <expr>obj.feed(data)%%['str']</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="close">
          <expr>obj.close()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = xmlrpc.client.Marshaller()%%['NoneType', 'NoneType']" name="Marshaller">
        <api name="__init__">
          <expr>None</expr>
          <args>['encoding:NoneType', 'allow_none:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dumps">
          <expr>ret = obj.dumps(values)%%['tuple']</expr>
          <args>['values:tuple']</args>
          <return>['result:str']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dump_nil">
          <expr>obj.dump_nil(value,write)%%['NoneType', 'builtin_function_or_method']</expr>
          <args>['value:NoneType', 'write:builtin_function_or_method']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dump_bool">
          <expr>obj.dump_bool(value,write)%%['None', 'None']</expr>
          <args>['value:None', 'write:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dump_long">
          <expr>obj.dump_long(value,write)%%['int', 'builtin_function_or_method']</expr>
          <args>['value:int', 'write:builtin_function_or_method']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dump_double">
          <expr>obj.dump_double(value,write)%%['None', 'None']</expr>
          <args>['value:None', 'write:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dump_unicode">
          <expr>obj.dump_unicode(value,write,escape)%%['str', 'builtin_function_or_method', 'function']</expr>
          <args>['value:str', 'write:builtin_function_or_method', 'escape:function']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['escape']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dump_bytes">
          <expr>obj.dump_bytes(value,write)%%['None', 'None']</expr>
          <args>['value:None', 'write:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dump_array">
          <expr>obj.dump_array(value,write)%%['tuple', 'builtin_function_or_method']</expr>
          <args>['value:tuple', 'write:builtin_function_or_method']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dump_datetime">
          <expr>obj.dump_datetime(value,write)%%['None', 'None']</expr>
          <args>['value:None', 'write:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dump_instance">
          <expr>obj.dump_instance(value,write)%%['DateTime', 'builtin_function_or_method']</expr>
          <args>['value:DateTime', 'write:builtin_function_or_method']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = xmlrpc.client.Unmarshaller()%%['NoneType', 'NoneType']" name="Unmarshaller">
        <api name="__init__">
          <expr>None</expr>
          <args>['use_datetime:NoneType', 'use_builtin_types:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="close">
          <expr>ret = obj.close()%%[]</expr>
          <args>[]</args>
          <return>['tuple:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getmethodname">
          <expr>ret = obj.getmethodname()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="xml">
          <expr>obj.xml(encoding,standalone)%%['NoneType', 'NoneType']</expr>
          <args>['encoding:NoneType', 'standalone:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="start">
          <expr>obj.start(tag,attrs)%%['str', 'dict']</expr>
          <args>['tag:str', 'attrs:dict']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="data">
          <expr>obj.data(text)%%['str']</expr>
          <args>['text:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end">
          <expr>ret = obj.end(tag)%%['str']</expr>
          <args>['tag:str']</args>
          <return>['f:function']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_dispatch">
          <expr>ret = obj.end_dispatch(tag,data)%%['None', 'None']</expr>
          <args>['tag:None', 'data:None']</args>
          <return>['f:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_nil">
          <expr>obj.end_nil(data)%%['str']</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_boolean">
          <expr>obj.end_boolean(data)%%['str']</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_int">
          <expr>obj.end_int(data)%%['str']</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_double">
          <expr>obj.end_double(data)%%['str']</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_bigdecimal">
          <expr>obj.end_bigdecimal(data)%%['None']</expr>
          <args>['data:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_array">
          <expr>obj.end_array(data)%%['str']</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_struct">
          <expr>obj.end_struct(data)%%['str']</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_base64">
          <expr>obj.end_base64(data)%%['str']</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_dateTime">
          <expr>obj.end_dateTime(data)%%['None']</expr>
          <args>['data:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_value">
          <expr>obj.end_value(data)%%['str']</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_params">
          <expr>obj.end_params(data)%%['str']</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_fault">
          <expr>obj.end_fault(data)%%['None']</expr>
          <args>['data:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_methodName">
          <expr>obj.end_methodName(data)%%['str']</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = xmlrpc.client.MultiCallIterator(None)%%['NoneType']" name="MultiCallIterator">
        <api name="__init__">
          <expr>None</expr>
          <args>['results:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = xmlrpc.client.MultiCall(None)%%['NoneType']" name="MultiCall">
        <api name="__init__">
          <expr>None</expr>
          <args>['server:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = xmlrpc.client.GzipDecodedResponse(None)%%['NoneType']" name="GzipDecodedResponse">
        <api name="__init__">
          <expr>None</expr>
          <args>['response:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = xmlrpc.client.Transport()%%['NoneType', 'NoneType']" name="Transport">
        <api name="__init__">
          <expr>None</expr>
          <args>['use_datetime:NoneType', 'use_builtin_types:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="request">
          <expr>ret = obj.request(host,handler,request_body,verbose)%%['None', 'None', 'None', 'None']</expr>
          <args>['host:None', 'handler:None', 'request_body:None', 'verbose:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="xmlrpc.client.Transport" init="obj = xmlrpc.client.SafeTransport()%%['NoneType', 'NoneType']" name="SafeTransport">
        <api name="__init__">
          <expr>None</expr>
          <args>['use_datetime:NoneType', 'use_builtin_types:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['context:NoneType']</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
      </class>
      <class init="obj = xmlrpc.client.ServerProxy(None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="ServerProxy">
        <api name="__init__">
          <expr>None</expr>
          <args>['uri:NoneType', 'transport:NoneType', 'encoding:NoneType', 'verbose:NoneType', 'allow_none:NoneType', 'use_datetime:NoneType', 'use_builtin_types:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['context:NoneType']</kwoargs>
          <defa>[None, None, None, None, None, None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
      </class>
      <api name="escape">
        <expr>ret = xmlrpc.client.escape(s)%%['str']</expr>
        <args>['s:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getparser">
        <expr>xmlrpc.client.getparser(use_datetime,use_builtin_types)%%['bool', 'bool']</expr>
        <args>['use_datetime:bool', 'use_builtin_types:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dumps">
        <expr>ret = xmlrpc.client.dumps(params,methodname,methodresponse,encoding,allow_none)%%['tuple', 'NoneType', 'bool', 'str', 'int']</expr>
        <args>['params:tuple', 'methodname:NoneType', 'methodresponse:bool', 'encoding:str', 'allow_none:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="loads">
        <expr>xmlrpc.client.loads(data,use_datetime,use_builtin_types)%%['str', 'bool', 'bool']</expr>
        <args>['data:str', 'use_datetime:bool', 'use_builtin_types:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="gzip_encode">
        <expr>ret = xmlrpc.client.gzip_encode(data)%%['bytes']</expr>
        <args>['data:bytes']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="gzip_decode">
        <expr>ret = xmlrpc.client.gzip_decode(data,max_decode)%%['bytes', 'int']</expr>
        <args>['data:bytes', 'max_decode:int']</args>
        <return>['decoded:bytes']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>Exception</exception>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
        <exception>NotImplementedError</exception>
        <exception>OSError</exception>
        <exception>OverflowError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>http.client.BadStatusLine</exception>
        <exception>http.client.CannotSendHeader</exception>
        <exception>http.client.CannotSendRequest</exception>
        <exception>http.client.HTTPException</exception>
        <exception>http.client.ImproperConnectionState</exception>
        <exception>http.client.IncompleteRead</exception>
        <exception>http.client.InvalidURL</exception>
        <exception>http.client.LineTooLong</exception>
        <exception>http.client.NotConnected</exception>
        <exception>http.client.RemoteDisconnected</exception>
        <exception>http.client.ResponseNotReady</exception>
        <exception>http.client.UnimplementedFileMode</exception>
        <exception>http.client.UnknownProtocol</exception>
        <exception>http.client.UnknownTransferEncoding</exception>
        <exception>xmlrpc.client.Error</exception>
        <exception>xmlrpc.client.Fault</exception>
        <exception>xmlrpc.client.ProtocolError</exception>
        <exception>xmlrpc.client.ResponseError</exception>
      </errors>
    </module>
    <module importfrom="['functools:partial', 'http.server:BaseHTTPRequestHandler', 'inspect:signature', 'xmlrpc.client:Fault', 'xmlrpc.client:dumps', 'xmlrpc.client:gzip_decode', 'xmlrpc.client:gzip_encode', 'xmlrpc.client:loads']" imports="['datetime', 'fcntl', 'html', 'http.server', 'os', 'pydoc', 're', 'socketserver', 'sys', 'traceback', 'xmlrpc', 'xmlrpc.server']" name="xmlrpc.server">
      <class init="obj = xmlrpc.server.SimpleXMLRPCDispatcher()%%['NoneType', 'NoneType', 'NoneType']" name="SimpleXMLRPCDispatcher">
        <api name="__init__">
          <expr>None</expr>
          <args>['allow_none:NoneType', 'encoding:NoneType', 'use_builtin_types:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="register_instance">
          <expr>obj.register_instance(instance,allow_dotted_names)%%['None', 'None']</expr>
          <args>['instance:None', 'allow_dotted_names:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="register_function">
          <expr>ret = obj.register_function(function,name)%%['builtin_function_or_method', 'str']</expr>
          <args>['function:builtin_function_or_method', 'name:str']</args>
          <return>['partial:type', 'function:builtin_function_or_method']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="register_introspection_functions">
          <expr>obj.register_introspection_functions()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="register_multicall_functions">
          <expr>obj.register_multicall_functions()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="system_listMethods">
          <expr>ret = obj.system_listMethods()%%[]</expr>
          <args>[]</args>
          <return>['sorted:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="system_methodSignature">
          <expr>ret = obj.system_methodSignature(method_name)%%['None']</expr>
          <args>['method_name:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="system_methodHelp">
          <expr>ret = obj.system_methodHelp(method_name)%%['None']</expr>
          <args>['method_name:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="system_multicall">
          <expr>ret = obj.system_multicall(call_list)%%['None']</expr>
          <args>['call_list:None']</args>
          <return>['results:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="http.server.BaseHTTPRequestHandler" init="obj = xmlrpc.server.SimpleXMLRPCRequestHandler()%%[]" name="SimpleXMLRPCRequestHandler">
        <api name="accept_encodings">
          <expr>ret = obj.accept_encodings()%%[]</expr>
          <args>[]</args>
          <return>['r:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_rpc_path_valid">
          <expr>ret = obj.is_rpc_path_valid()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_POST">
          <expr>obj.do_POST()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="socketserver.TCPServer" init="obj = xmlrpc.server.SimpleXMLRPCServer(None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="SimpleXMLRPCServer">
        <api name="__init__">
          <expr>None</expr>
          <args>['addr:NoneType', 'requestHandler:NoneType', 'logRequests:NoneType', 'allow_none:NoneType', 'encoding:NoneType', 'bind_and_activate:NoneType', 'use_builtin_types:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['SimpleXMLRPCRequestHandler', None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="xmlrpc.server.SimpleXMLRPCServer" init="obj = xmlrpc.server.MultiPathXMLRPCServer(None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="MultiPathXMLRPCServer">
        <api name="__init__">
          <expr>None</expr>
          <args>['addr:NoneType', 'requestHandler:NoneType', 'logRequests:NoneType', 'allow_none:NoneType', 'encoding:NoneType', 'bind_and_activate:NoneType', 'use_builtin_types:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['SimpleXMLRPCRequestHandler', None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_dispatcher">
          <expr>ret = obj.add_dispatcher(path,dispatcher)%%['None', 'None']</expr>
          <args>['path:None', 'dispatcher:None']</args>
          <return>['dispatcher:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_dispatcher">
          <expr>ret = obj.get_dispatcher(path)%%['None']</expr>
          <args>['path:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="xmlrpc.server.SimpleXMLRPCDispatcher" init="obj = xmlrpc.server.CGIXMLRPCRequestHandler()%%['NoneType', 'NoneType', 'NoneType']" name="CGIXMLRPCRequestHandler">
        <api name="__init__">
          <expr>None</expr>
          <args>['allow_none:NoneType', 'encoding:NoneType', 'use_builtin_types:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="handle_request">
          <expr>obj.handle_request(request_text)%%['None']</expr>
          <args>['request_text:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="pydoc.HTMLDoc" init="obj = xmlrpc.server.ServerHTMLDoc()%%[]" name="ServerHTMLDoc">
        <api name="docroutine">
          <expr>ret = obj.docroutine(object,name,mod,funcs,classes,methods,cl)%%['function', 'str', 'NoneType', 'dict', 'dict', 'dict', 'NoneType']</expr>
          <args>['object:function', 'name:str', 'mod:NoneType', 'funcs:dict', 'classes:dict', 'methods:dict', 'cl:NoneType']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="docserver">
          <expr>ret = obj.docserver(server_name,package_documentation,methods)%%['str', 'str', 'dict']</expr>
          <args>['server_name:str', 'package_documentation:str', 'methods:dict']</args>
          <return>['result:str']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = xmlrpc.server.XMLRPCDocGenerator()%%[]" name="XMLRPCDocGenerator">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_server_title">
          <expr>obj.set_server_title(server_title)%%['None']</expr>
          <args>['server_title:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_server_name">
          <expr>obj.set_server_name(server_name)%%['None']</expr>
          <args>['server_name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_server_documentation">
          <expr>obj.set_server_documentation(server_documentation)%%['None']</expr>
          <args>['server_documentation:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="generate_html_documentation">
          <expr>ret = obj.generate_html_documentation()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="xmlrpc.server.SimpleXMLRPCRequestHandler" init="obj = xmlrpc.server.DocXMLRPCRequestHandler()%%[]" name="DocXMLRPCRequestHandler">
        <api name="do_GET">
          <expr>obj.do_GET()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="xmlrpc.server.SimpleXMLRPCServer" init="obj = xmlrpc.server.DocXMLRPCServer(None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="DocXMLRPCServer">
        <api name="__init__">
          <expr>None</expr>
          <args>['addr:NoneType', 'requestHandler:NoneType', 'logRequests:NoneType', 'allow_none:NoneType', 'encoding:NoneType', 'bind_and_activate:NoneType', 'use_builtin_types:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['DocXMLRPCRequestHandler', None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="xmlrpc.server.CGIXMLRPCRequestHandler" init="obj = xmlrpc.server.DocCGIXMLRPCRequestHandler()%%[]" name="DocCGIXMLRPCRequestHandler">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="resolve_dotted_attribute">
        <expr>ret = xmlrpc.server.resolve_dotted_attribute(obj,attr,allow_dotted_names)%%['ClassWithAnnotation', 'str', 'bool']</expr>
        <args>['obj:ClassWithAnnotation', 'attr:str', 'allow_dotted_names:bool']</args>
        <return>['obj:method']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="list_public_methods">
        <expr>ret = xmlrpc.server.list_public_methods(obj)%%['ClassWithAnnotation']</expr>
        <args>['obj:ClassWithAnnotation']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>Exception</exception>
        <exception>Fault</exception>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>NotImplementedError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>pydoc.ErrorDuringImport</exception>
      </errors>
    </module>
  </library>
  <library name="curses">
    <module importfrom="[]" imports="['curses', 'curses.ascii', 'curses.textpad']" name="curses.textpad">
      <class init="obj = curses.textpad.Textbox(None)%%['None', 'None']" name="Textbox">
        <api name="__init__">
          <expr>None</expr>
          <args>['win:None', 'insert_mode:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_command">
          <expr>ret = obj.do_command(ch)%%['None']</expr>
          <args>['ch:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="edit">
          <expr>ret = obj.edit(validate)%%['None']</expr>
          <args>['validate:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="rectangle">
        <expr>curses.textpad.rectangle(win,uly,ulx,lry,lrx)%%['None', 'None', 'None', 'None', 'None']</expr>
        <args>['win:None', 'uly:None', 'ulx:None', 'lry:None', 'lrx:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>curses.error</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['curses', 'curses.panel']" name="curses.panel"/>
    <module importfrom="[]" imports="['curses', 'curses.has_key']" name="curses.has_key">
      <api name="has_key">
        <expr>ret = curses.has_key.has_key(ch)%%['None']</expr>
        <args>['ch:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['curses', 'curses.ascii']" name="curses.ascii">
      <api name="isalnum">
        <expr>ret = curses.ascii.isalnum(c)%%['None']</expr>
        <args>['c:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isalpha">
        <expr>ret = curses.ascii.isalpha(c)%%['None']</expr>
        <args>['c:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isascii">
        <expr>ret = curses.ascii.isascii(c)%%['None']</expr>
        <args>['c:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isblank">
        <expr>ret = curses.ascii.isblank(c)%%['None']</expr>
        <args>['c:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="iscntrl">
        <expr>ret = curses.ascii.iscntrl(c)%%['None']</expr>
        <args>['c:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isdigit">
        <expr>ret = curses.ascii.isdigit(c)%%['None']</expr>
        <args>['c:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isgraph">
        <expr>ret = curses.ascii.isgraph(c)%%['None']</expr>
        <args>['c:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="islower">
        <expr>ret = curses.ascii.islower(c)%%['None']</expr>
        <args>['c:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isprint">
        <expr>ret = curses.ascii.isprint(c)%%['None']</expr>
        <args>['c:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ispunct">
        <expr>ret = curses.ascii.ispunct(c)%%['None']</expr>
        <args>['c:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isspace">
        <expr>ret = curses.ascii.isspace(c)%%['None']</expr>
        <args>['c:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isupper">
        <expr>ret = curses.ascii.isupper(c)%%['None']</expr>
        <args>['c:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isxdigit">
        <expr>ret = curses.ascii.isxdigit(c)%%['None']</expr>
        <args>['c:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isctrl">
        <expr>ret = curses.ascii.isctrl(c)%%['None']</expr>
        <args>['c:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ismeta">
        <expr>ret = curses.ascii.ismeta(c)%%['None']</expr>
        <args>['c:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ascii">
        <expr>ret = curses.ascii.ascii(c)%%['None']</expr>
        <args>['c:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ctrl">
        <expr>ret = curses.ascii.ctrl(c)%%['None']</expr>
        <args>['c:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="alt">
        <expr>ret = curses.ascii.alt(c)%%['None']</expr>
        <args>['c:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="unctrl">
        <expr>ret = curses.ascii.unctrl(c)%%['None']</expr>
        <args>['c:None']</args>
        <return>['ret:None', 'rep:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
  </library>
  <library name="tkinter">
    <module importfrom="['tkinter:*', 'tkinter:messagebox']" imports="['tkinter', 'tkinter.simpledialog']" name="tkinter.simpledialog">
      <class init="obj = tkinter.simpledialog.SimpleDialog(None)%%['None', 'None', 'None', 'None', 'None', 'None', 'None']" name="SimpleDialog">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'text:None', 'buttons:None', 'default:None', 'cancel:None', 'title:None', 'class_:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="go">
          <expr>ret = obj.go()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="return_event">
          <expr>obj.return_event(event)%%['None']</expr>
          <args>['event:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="wm_delete_window">
          <expr>obj.wm_delete_window()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.Toplevel" init="obj = tkinter.simpledialog.Dialog(None)%%['None', 'None']" name="Dialog">
        <api name="__init__">
          <expr>None</expr>
          <args>['parent:None', 'title:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="body">
          <expr>obj.body(master)%%['None']</expr>
          <args>['master:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="buttonbox">
          <expr>obj.buttonbox()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ok">
          <expr>obj.ok(event)%%['None']</expr>
          <args>['event:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="validate">
          <expr>ret = obj.validate()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="askinteger">
        <expr>ret = tkinter.simpledialog.askinteger(title,prompt)%%['None', 'None']</expr>
        <args>['title:None', 'prompt:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="askfloat">
        <expr>ret = tkinter.simpledialog.askfloat(title,prompt)%%['None', 'None']</expr>
        <args>['title:None', 'prompt:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="askstring">
        <expr>ret = tkinter.simpledialog.askstring(title,prompt)%%['None', 'None']</expr>
        <args>['title:None', 'prompt:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['itertools', 'tkinter', 'tkinter.font']" name="tkinter.font">
      <class init="obj = tkinter.font.Font()%%['None', 'None', 'None', 'None']" name="Font">
        <api name="__init__">
          <expr>None</expr>
          <args>['root:None', 'font:None', 'name:None', 'exists:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="copy">
          <expr>ret = obj.copy()%%[]</expr>
          <args>[]</args>
          <return>['Font:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="actual">
          <expr>ret = obj.actual(option,displayof)%%['None', 'None']</expr>
          <args>['option:None', 'displayof:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="config">
          <expr>ret = obj.config()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="measure">
          <expr>ret = obj.measure(text,displayof)%%['None', 'None']</expr>
          <args>['text:None', 'displayof:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="metrics">
          <expr>ret = obj.metrics()%%[]</expr>
          <args>[]</args>
          <return>['ret:None', 'options:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="nametofont">
        <expr>ret = tkinter.font.nametofont(name)%%['None']</expr>
        <args>['name:None']</args>
        <return>['Font:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="families">
        <expr>ret = tkinter.font.families(root,displayof)%%['None', 'None']</expr>
        <args>['root:None', 'displayof:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="names">
        <expr>ret = tkinter.font.names(root)%%['None']</expr>
        <args>['root:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>Exception</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['tkinter.constants:BOTH', 'tkinter.constants:END', 'tkinter.constants:LEFT', 'tkinter.constants:RIGHT', 'tkinter.constants:Y', 'tkinter:Frame', 'tkinter:Grid', 'tkinter:Pack', 'tkinter:Place', 'tkinter:Scrollbar', 'tkinter:Text']" imports="['tkinter', 'tkinter.scrolledtext']" name="tkinter.scrolledtext">
      <class base="tkinter.Text" init="obj = tkinter.scrolledtext.ScrolledText()%%['None']" name="ScrolledText">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="example">
        <expr>tkinter.scrolledtext.example()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['tkinter:*']" imports="['os', 'tkinter', 'tkinter.tix']" name="tkinter.tix">
      <class init="obj = tkinter.tix.tixCommand()%%[]" name="tixCommand">
        <api name="tix_addbitmapdir">
          <expr>ret = obj.tix_addbitmapdir(directory)%%['None']</expr>
          <args>['directory:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tix_cget">
          <expr>ret = obj.tix_cget(option)%%['None']</expr>
          <args>['option:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tix_configure">
          <expr>ret = obj.tix_configure(cnf)%%['None']</expr>
          <args>['cnf:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tix_filedialog">
          <expr>ret = obj.tix_filedialog(dlgclass)%%['None']</expr>
          <args>['dlgclass:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tix_getbitmap">
          <expr>ret = obj.tix_getbitmap(name)%%['None']</expr>
          <args>['name:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tix_getimage">
          <expr>ret = obj.tix_getimage(name)%%['None']</expr>
          <args>['name:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tix_option_get">
          <expr>ret = obj.tix_option_get(name)%%['None']</expr>
          <args>['name:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tix_resetoptions">
          <expr>ret = obj.tix_resetoptions(newScheme,newFontSet,newScmPrio)%%['None', 'None', 'None']</expr>
          <args>['newScheme:None', 'newFontSet:None', 'newScmPrio:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.Tk" init="obj = tkinter.tix.Tk()%%['None', 'None', 'None']" name="Tk">
        <api name="__init__">
          <expr>None</expr>
          <args>['screenName:None', 'baseName:None', 'className:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = tkinter.tix.Form()%%[]" name="Form">
        <api name="config">
          <expr>obj.config(cnf)%%['None']</expr>
          <args>['cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="check">
          <expr>ret = obj.check()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="forget">
          <expr>obj.forget()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="grid">
          <expr>ret = obj.grid(xsize,ysize)%%['None', 'None']</expr>
          <args>['xsize:None', 'ysize:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info">
          <expr>ret = obj.info(option)%%['None']</expr>
          <args>['option:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="slaves">
          <expr>ret = obj.slaves()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.Widget" init="obj = tkinter.tix.TixWidget()%%['None', 'None', 'None', 'None', 'None']" name="TixWidget">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'widgetName:None', 'static_options:None', 'cnf:None', 'kw:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_silent">
          <expr>obj.set_silent(value)%%['None']</expr>
          <args>['value:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="subwidget">
          <expr>ret = obj.subwidget(name)%%['None']</expr>
          <args>['name:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="subwidgets_all">
          <expr>ret = obj.subwidgets_all()%%[]</expr>
          <args>[]</args>
          <return>['ret:None', 'retlist:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="config_all">
          <expr>obj.config_all(option,value)%%['None', 'None']</expr>
          <args>['option:None', 'value:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="image_create">
          <expr>ret = obj.image_create(imgtype,cnf,master)%%['None', 'None', 'None']</expr>
          <args>['imgtype:None', 'cnf:None', 'master:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="image_delete">
          <expr>obj.image_delete(imgname)%%['None']</expr>
          <args>['imgname:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.TixSubWidget(None,None)%%['None', 'None', 'None', 'None']" name="TixSubWidget">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'name:None', 'destroy_physically:None', 'check_intermediate:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = tkinter.tix.DisplayStyle(None)%%['None', 'None']" name="DisplayStyle">
        <api name="__init__">
          <expr>None</expr>
          <args>['itemtype:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['master:None']</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="delete">
          <expr>obj.delete()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="config">
          <expr>ret = obj.config(cnf)%%['None']</expr>
          <args>['cnf:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.Balloon()%%['None', 'None']" name="Balloon">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="bind_widget">
          <expr>obj.bind_widget(widget,cnf)%%['None', 'None']</expr>
          <args>['widget:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unbind_widget">
          <expr>obj.unbind_widget(widget)%%['None']</expr>
          <args>['widget:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.ButtonBox()%%['None', 'None']" name="ButtonBox">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add">
          <expr>ret = obj.add(name,cnf)%%['None', 'None']</expr>
          <args>['name:None', 'cnf:None']</args>
          <return>['btn:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="invoke">
          <expr>obj.invoke(name)%%['None']</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.ComboBox()%%['None', 'None']" name="ComboBox">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_history">
          <expr>obj.add_history(str)%%['None']</expr>
          <args>['str:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="append_history">
          <expr>obj.append_history(str)%%['None']</expr>
          <args>['str:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="insert">
          <expr>obj.insert(index,str)%%['None', 'None']</expr>
          <args>['index:None', 'str:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pick">
          <expr>obj.pick(index)%%['None']</expr>
          <args>['index:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.Control()%%['None', 'None']" name="Control">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decrement">
          <expr>obj.decrement()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="increment">
          <expr>obj.increment()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="invoke">
          <expr>obj.invoke()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="update">
          <expr>obj.update()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.DirList(None)%%['None', 'None']" name="DirList">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="chdir">
          <expr>obj.chdir(dir)%%['None']</expr>
          <args>['dir:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.DirTree(None)%%['None', 'None']" name="DirTree">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="chdir">
          <expr>obj.chdir(dir)%%['None']</expr>
          <args>['dir:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.DirSelectBox(None)%%['None', 'None']" name="DirSelectBox">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.ExFileSelectBox(None)%%['None', 'None']" name="ExFileSelectBox">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="filter">
          <expr>obj.filter()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="invoke">
          <expr>obj.invoke()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.DirSelectDialog(None)%%['None', 'None']" name="DirSelectDialog">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="popup">
          <expr>obj.popup()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="popdown">
          <expr>obj.popdown()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.ExFileSelectDialog(None)%%['None', 'None']" name="ExFileSelectDialog">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="popup">
          <expr>obj.popup()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="popdown">
          <expr>obj.popdown()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.FileSelectBox(None)%%['None', 'None']" name="FileSelectBox">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="apply_filter">
          <expr>obj.apply_filter()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="invoke">
          <expr>obj.invoke()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.FileSelectDialog(None)%%['None', 'None']" name="FileSelectDialog">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="popup">
          <expr>obj.popup()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="popdown">
          <expr>obj.popdown()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.FileEntry(None)%%['None', 'None']" name="FileEntry">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="invoke">
          <expr>obj.invoke()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.HList()%%['None', 'None']" name="HList">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add">
          <expr>ret = obj.add(entry,cnf)%%['None', 'None']</expr>
          <args>['entry:None', 'cnf:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_child">
          <expr>ret = obj.add_child(parent,cnf)%%['None', 'None']</expr>
          <args>['parent:None', 'cnf:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="anchor_set">
          <expr>obj.anchor_set(entry)%%['None']</expr>
          <args>['entry:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="anchor_clear">
          <expr>obj.anchor_clear()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="column_width">
          <expr>ret = obj.column_width(col,width,chars)%%['None', 'None', 'None']</expr>
          <args>['col:None', 'width:None', 'chars:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="delete_all">
          <expr>obj.delete_all()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="delete_entry">
          <expr>obj.delete_entry(entry)%%['None']</expr>
          <args>['entry:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="delete_offsprings">
          <expr>obj.delete_offsprings(entry)%%['None']</expr>
          <args>['entry:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="delete_siblings">
          <expr>obj.delete_siblings(entry)%%['None']</expr>
          <args>['entry:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dragsite_set">
          <expr>obj.dragsite_set(index)%%['None']</expr>
          <args>['index:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dragsite_clear">
          <expr>obj.dragsite_clear()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dropsite_set">
          <expr>obj.dropsite_set(index)%%['None']</expr>
          <args>['index:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dropsite_clear">
          <expr>obj.dropsite_clear()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="header_create">
          <expr>obj.header_create(col,cnf)%%['None', 'None']</expr>
          <args>['col:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="header_configure">
          <expr>ret = obj.header_configure(col,cnf)%%['None', 'None']</expr>
          <args>['col:None', 'cnf:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="header_cget">
          <expr>ret = obj.header_cget(col,opt)%%['None', 'None']</expr>
          <args>['col:None', 'opt:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="header_exists">
          <expr>ret = obj.header_exists(col)%%['None']</expr>
          <args>['col:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="header_delete">
          <expr>obj.header_delete(col)%%['None']</expr>
          <args>['col:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="header_size">
          <expr>ret = obj.header_size(col)%%['None']</expr>
          <args>['col:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="hide_entry">
          <expr>obj.hide_entry(entry)%%['None']</expr>
          <args>['entry:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="indicator_create">
          <expr>obj.indicator_create(entry,cnf)%%['None', 'None']</expr>
          <args>['entry:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="indicator_configure">
          <expr>ret = obj.indicator_configure(entry,cnf)%%['None', 'None']</expr>
          <args>['entry:None', 'cnf:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="indicator_cget">
          <expr>ret = obj.indicator_cget(entry,opt)%%['None', 'None']</expr>
          <args>['entry:None', 'opt:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="indicator_exists">
          <expr>ret = obj.indicator_exists(entry)%%['None']</expr>
          <args>['entry:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="indicator_delete">
          <expr>obj.indicator_delete(entry)%%['None']</expr>
          <args>['entry:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="indicator_size">
          <expr>ret = obj.indicator_size(entry)%%['None']</expr>
          <args>['entry:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_anchor">
          <expr>ret = obj.info_anchor()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_bbox">
          <expr>ret = obj.info_bbox(entry)%%['None']</expr>
          <args>['entry:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_children">
          <expr>ret = obj.info_children(entry)%%['None']</expr>
          <args>['entry:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_data">
          <expr>ret = obj.info_data(entry)%%['None']</expr>
          <args>['entry:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_dragsite">
          <expr>ret = obj.info_dragsite()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_dropsite">
          <expr>ret = obj.info_dropsite()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_exists">
          <expr>ret = obj.info_exists(entry)%%['None']</expr>
          <args>['entry:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_hidden">
          <expr>ret = obj.info_hidden(entry)%%['None']</expr>
          <args>['entry:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_next">
          <expr>ret = obj.info_next(entry)%%['None']</expr>
          <args>['entry:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_parent">
          <expr>ret = obj.info_parent(entry)%%['None']</expr>
          <args>['entry:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_prev">
          <expr>ret = obj.info_prev(entry)%%['None']</expr>
          <args>['entry:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_selection">
          <expr>ret = obj.info_selection()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="item_cget">
          <expr>ret = obj.item_cget(entry,col,opt)%%['None', 'None', 'None']</expr>
          <args>['entry:None', 'col:None', 'opt:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="item_configure">
          <expr>ret = obj.item_configure(entry,col,cnf)%%['None', 'None', 'None']</expr>
          <args>['entry:None', 'col:None', 'cnf:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="item_create">
          <expr>obj.item_create(entry,col,cnf)%%['None', 'None', 'None']</expr>
          <args>['entry:None', 'col:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="item_exists">
          <expr>ret = obj.item_exists(entry,col)%%['None', 'None']</expr>
          <args>['entry:None', 'col:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="item_delete">
          <expr>obj.item_delete(entry,col)%%['None', 'None']</expr>
          <args>['entry:None', 'col:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="entrycget">
          <expr>ret = obj.entrycget(entry,opt)%%['None', 'None']</expr>
          <args>['entry:None', 'opt:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="entryconfigure">
          <expr>ret = obj.entryconfigure(entry,cnf)%%['None', 'None']</expr>
          <args>['entry:None', 'cnf:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="nearest">
          <expr>ret = obj.nearest(y)%%['None']</expr>
          <args>['y:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="see">
          <expr>obj.see(entry)%%['None']</expr>
          <args>['entry:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="selection_clear">
          <expr>obj.selection_clear(cnf)%%['None']</expr>
          <args>['cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="selection_includes">
          <expr>ret = obj.selection_includes(entry)%%['None']</expr>
          <args>['entry:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="selection_set">
          <expr>obj.selection_set(first,last)%%['None', 'None']</expr>
          <args>['first:None', 'last:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="show_entry">
          <expr>ret = obj.show_entry(entry)%%['None']</expr>
          <args>['entry:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.InputOnly()%%['None', 'None']" name="InputOnly">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.LabelEntry()%%['None', 'None']" name="LabelEntry">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.LabelFrame()%%['None', 'None']" name="LabelFrame">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.ListNoteBook(None)%%['None', 'None']" name="ListNoteBook">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add">
          <expr>ret = obj.add(name,cnf)%%['None', 'None']</expr>
          <args>['name:None', 'cnf:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="page">
          <expr>ret = obj.page(name)%%['None']</expr>
          <args>['name:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pages">
          <expr>ret = obj.pages()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="raise_page">
          <expr>obj.raise_page(name)%%['None']</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.Meter()%%['None', 'None']" name="Meter">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.NoteBook()%%['None', 'None']" name="NoteBook">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add">
          <expr>ret = obj.add(name,cnf)%%['None', 'None']</expr>
          <args>['name:None', 'cnf:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="delete">
          <expr>obj.delete(name)%%['None']</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="page">
          <expr>ret = obj.page(name)%%['None']</expr>
          <args>['name:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pages">
          <expr>ret = obj.pages()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="raise_page">
          <expr>obj.raise_page(name)%%['None']</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="raised">
          <expr>ret = obj.raised()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.NoteBookFrame()%%['None', 'None', 'None', 'None', 'None']" name="NoteBookFrame"/>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.OptionMenu(None)%%['None', 'None']" name="OptionMenu">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_command">
          <expr>obj.add_command(name,cnf)%%['None', 'None']</expr>
          <args>['name:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_separator">
          <expr>obj.add_separator(name,cnf)%%['None', 'None']</expr>
          <args>['name:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="delete">
          <expr>obj.delete(name)%%['None']</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="disable">
          <expr>obj.disable(name)%%['None']</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="enable">
          <expr>obj.enable(name)%%['None']</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.PanedWindow(None)%%['None', 'None']" name="PanedWindow">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add">
          <expr>ret = obj.add(name,cnf)%%['None', 'None']</expr>
          <args>['name:None', 'cnf:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="delete">
          <expr>obj.delete(name)%%['None']</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="forget">
          <expr>obj.forget(name)%%['None']</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="panecget">
          <expr>ret = obj.panecget(entry,opt)%%['None', 'None']</expr>
          <args>['entry:None', 'opt:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="paneconfigure">
          <expr>ret = obj.paneconfigure(entry,cnf)%%['None', 'None']</expr>
          <args>['entry:None', 'cnf:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="panes">
          <expr>ret = obj.panes()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.PopupMenu(None)%%['None', 'None']" name="PopupMenu">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="bind_widget">
          <expr>obj.bind_widget(widget)%%['None']</expr>
          <args>['widget:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unbind_widget">
          <expr>obj.unbind_widget(widget)%%['None']</expr>
          <args>['widget:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="post_widget">
          <expr>obj.post_widget(widget,x,y)%%['None', 'None', 'None']</expr>
          <args>['widget:None', 'x:None', 'y:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.ResizeHandle(None)%%['None', 'None']" name="ResizeHandle">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="attach_widget">
          <expr>obj.attach_widget(widget)%%['None']</expr>
          <args>['widget:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="detach_widget">
          <expr>obj.detach_widget(widget)%%['None']</expr>
          <args>['widget:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="hide">
          <expr>obj.hide(widget)%%['None']</expr>
          <args>['widget:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="show">
          <expr>obj.show(widget)%%['None']</expr>
          <args>['widget:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.ScrolledHList(None)%%['None', 'None']" name="ScrolledHList">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.ScrolledListBox(None)%%['None', 'None']" name="ScrolledListBox">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.ScrolledText(None)%%['None', 'None']" name="ScrolledText">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.ScrolledTList(None)%%['None', 'None']" name="ScrolledTList">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.ScrolledWindow(None)%%['None', 'None']" name="ScrolledWindow">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.Select(None)%%['None', 'None']" name="Select">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add">
          <expr>ret = obj.add(name,cnf)%%['None', 'None']</expr>
          <args>['name:None', 'cnf:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="invoke">
          <expr>obj.invoke(name)%%['None']</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.Shell()%%['None', 'None']" name="Shell">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.DialogShell()%%['None', 'None']" name="DialogShell">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="popdown">
          <expr>obj.popdown()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="popup">
          <expr>obj.popup()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="center">
          <expr>obj.center()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.StdButtonBox()%%['None', 'None']" name="StdButtonBox">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="invoke">
          <expr>obj.invoke(name)%%['None']</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.TList()%%['None', 'None']" name="TList">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="active_set">
          <expr>obj.active_set(index)%%['None']</expr>
          <args>['index:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="active_clear">
          <expr>obj.active_clear()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="anchor_set">
          <expr>obj.anchor_set(index)%%['None']</expr>
          <args>['index:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="anchor_clear">
          <expr>obj.anchor_clear()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="delete">
          <expr>obj.delete(from_,to)%%['None', 'None']</expr>
          <args>['from_:None', 'to:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dragsite_set">
          <expr>obj.dragsite_set(index)%%['None']</expr>
          <args>['index:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dragsite_clear">
          <expr>obj.dragsite_clear()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dropsite_set">
          <expr>obj.dropsite_set(index)%%['None']</expr>
          <args>['index:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dropsite_clear">
          <expr>obj.dropsite_clear()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="insert">
          <expr>obj.insert(index,cnf)%%['None', 'None']</expr>
          <args>['index:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_active">
          <expr>ret = obj.info_active()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_anchor">
          <expr>ret = obj.info_anchor()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_down">
          <expr>ret = obj.info_down(index)%%['None']</expr>
          <args>['index:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_left">
          <expr>ret = obj.info_left(index)%%['None']</expr>
          <args>['index:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_right">
          <expr>ret = obj.info_right(index)%%['None']</expr>
          <args>['index:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_selection">
          <expr>ret = obj.info_selection()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_size">
          <expr>ret = obj.info_size()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_up">
          <expr>ret = obj.info_up(index)%%['None']</expr>
          <args>['index:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="nearest">
          <expr>ret = obj.nearest(x,y)%%['None', 'None']</expr>
          <args>['x:None', 'y:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="see">
          <expr>obj.see(index)%%['None']</expr>
          <args>['index:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="selection_clear">
          <expr>obj.selection_clear(cnf)%%['None']</expr>
          <args>['cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="selection_includes">
          <expr>ret = obj.selection_includes(index)%%['None']</expr>
          <args>['index:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="selection_set">
          <expr>obj.selection_set(first,last)%%['None', 'None']</expr>
          <args>['first:None', 'last:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.Tree()%%['None', 'None']" name="Tree">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="autosetmode">
          <expr>obj.autosetmode()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="close">
          <expr>obj.close(entrypath)%%['None']</expr>
          <args>['entrypath:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getmode">
          <expr>ret = obj.getmode(entrypath)%%['None']</expr>
          <args>['entrypath:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="open">
          <expr>obj.open(entrypath)%%['None']</expr>
          <args>['entrypath:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setmode">
          <expr>obj.setmode(entrypath,mode)%%['None', 'None']</expr>
          <args>['entrypath:None', 'mode:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.CheckList()%%['None', 'None']" name="CheckList">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="autosetmode">
          <expr>obj.autosetmode()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="close">
          <expr>obj.close(entrypath)%%['None']</expr>
          <args>['entrypath:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getmode">
          <expr>ret = obj.getmode(entrypath)%%['None']</expr>
          <args>['entrypath:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="open">
          <expr>obj.open(entrypath)%%['None']</expr>
          <args>['entrypath:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getselection">
          <expr>ret = obj.getselection(mode)%%['None']</expr>
          <args>['mode:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getstatus">
          <expr>ret = obj.getstatus(entrypath)%%['None']</expr>
          <args>['entrypath:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setstatus">
          <expr>obj.setstatus(entrypath,mode)%%['None', 'None']</expr>
          <args>['entrypath:None', 'mode:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.CObjView()%%['None', 'None', 'None', 'None', 'None']" name="CObjView"/>
      <class base="tkinter.tix.TixWidget" init="obj = tkinter.tix.Grid()%%['None', 'None']" name="Grid">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="anchor_clear">
          <expr>obj.anchor_clear()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="anchor_get">
          <expr>ret = obj.anchor_get()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="anchor_set">
          <expr>obj.anchor_set(x,y)%%['None', 'None']</expr>
          <args>['x:None', 'y:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="delete_row">
          <expr>obj.delete_row(from_,to)%%['None', 'None']</expr>
          <args>['from_:None', 'to:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="delete_column">
          <expr>obj.delete_column(from_,to)%%['None', 'None']</expr>
          <args>['from_:None', 'to:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="edit_apply">
          <expr>obj.edit_apply()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="edit_set">
          <expr>obj.edit_set(x,y)%%['None', 'None']</expr>
          <args>['x:None', 'y:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="entrycget">
          <expr>ret = obj.entrycget(x,y,option)%%['None', 'None', 'None']</expr>
          <args>['x:None', 'y:None', 'option:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="entryconfigure">
          <expr>ret = obj.entryconfigure(x,y,cnf)%%['None', 'None', 'None']</expr>
          <args>['x:None', 'y:None', 'cnf:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_exists">
          <expr>ret = obj.info_exists(x,y)%%['None', 'None']</expr>
          <args>['x:None', 'y:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_bbox">
          <expr>ret = obj.info_bbox(x,y)%%['None', 'None']</expr>
          <args>['x:None', 'y:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="move_column">
          <expr>obj.move_column(from_,to,offset)%%['None', 'None', 'None']</expr>
          <args>['from_:None', 'to:None', 'offset:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="move_row">
          <expr>obj.move_row(from_,to,offset)%%['None', 'None', 'None']</expr>
          <args>['from_:None', 'to:None', 'offset:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="nearest">
          <expr>ret = obj.nearest(x,y)%%['None', 'None']</expr>
          <args>['x:None', 'y:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set">
          <expr>obj.set(x,y,itemtype)%%['None', 'None', 'None']</expr>
          <args>['x:None', 'y:None', 'itemtype:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="size_column">
          <expr>ret = obj.size_column(index)%%['None']</expr>
          <args>['index:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="size_row">
          <expr>ret = obj.size_row(index)%%['None']</expr>
          <args>['index:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unset">
          <expr>obj.unset(x,y)%%['None', 'None']</expr>
          <args>['x:None', 'y:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.tix.Grid" init="obj = tkinter.tix.ScrolledGrid()%%['None', 'None']" name="ScrolledGrid">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="OptionName">
        <expr>ret = tkinter.tix.OptionName(widget)%%['None']</expr>
        <args>['widget:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="FileTypeList">
        <expr>ret = tkinter.tix.FileTypeList(dict)%%['None']</expr>
        <args>['dict:None']</args>
        <return>['s:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>RuntimeError</exception>
        <exception>TclError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['tkinter.commondialog:Dialog']" imports="['tkinter', 'tkinter.messagebox']" name="tkinter.messagebox">
      <class base="tkinter.commondialog.Dialog" init="obj = tkinter.messagebox.Message()%%['None']" name="Message"/>
      <api name="showinfo">
        <expr>ret = tkinter.messagebox.showinfo(title,message)%%['None', 'None']</expr>
        <args>['title:None', 'message:None']</args>
        <return>['_show:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="showwarning">
        <expr>ret = tkinter.messagebox.showwarning(title,message)%%['None', 'None']</expr>
        <args>['title:None', 'message:None']</args>
        <return>['_show:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="showerror">
        <expr>ret = tkinter.messagebox.showerror(title,message)%%['None', 'None']</expr>
        <args>['title:None', 'message:None']</args>
        <return>['_show:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="askquestion">
        <expr>ret = tkinter.messagebox.askquestion(title,message)%%['None', 'None']</expr>
        <args>['title:None', 'message:None']</args>
        <return>['_show:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="askokcancel">
        <expr>ret = tkinter.messagebox.askokcancel(title,message)%%['None', 'None']</expr>
        <args>['title:None', 'message:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="askyesno">
        <expr>ret = tkinter.messagebox.askyesno(title,message)%%['None', 'None']</expr>
        <args>['title:None', 'message:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="askyesnocancel">
        <expr>ret = tkinter.messagebox.askyesnocancel(title,message)%%['None', 'None']</expr>
        <args>['title:None', 'message:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="askretrycancel">
        <expr>ret = tkinter.messagebox.askretrycancel(title,message)%%['None', 'None']</expr>
        <args>['title:None', 'message:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['tkinter', 'tkinter.constants']" name="tkinter.constants"/>
    <module importfrom="['tkinter.commondialog:Dialog']" imports="['tkinter', 'tkinter.colorchooser']" name="tkinter.colorchooser">
      <class base="tkinter.commondialog.Dialog" init="obj = tkinter.colorchooser.Chooser()%%['None']" name="Chooser"/>
      <api name="askcolor">
        <expr>ret = tkinter.colorchooser.askcolor(color)%%['None']</expr>
        <args>['color:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['tkinter:*']" imports="['tkinter', 'tkinter.dialog']" name="tkinter.dialog">
      <class base="tkinter.Widget" init="obj = tkinter.dialog.Dialog()%%['None', 'None']" name="Dialog">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['tkinter', 'tkinter.dnd']" name="tkinter.dnd">
      <class init="obj = tkinter.dnd.DndHandler(None,None)%%['None', 'None']" name="DndHandler">
        <api name="__init__">
          <expr>None</expr>
          <args>['source:None', 'event:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="on_motion">
          <expr>obj.on_motion(event)%%['None']</expr>
          <args>['event:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="on_release">
          <expr>obj.on_release(event)%%['None']</expr>
          <args>['event:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="cancel">
          <expr>obj.cancel(event)%%['None']</expr>
          <args>['event:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = tkinter.dnd.Icon(None)%%['None']" name="Icon">
        <api name="__init__">
          <expr>None</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="attach">
          <expr>obj.attach(canvas,x,y)%%['None', 'None', 'None']</expr>
          <args>['canvas:None', 'x:None', 'y:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="press">
          <expr>obj.press(event)%%['None']</expr>
          <args>['event:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="move">
          <expr>obj.move(event)%%['None']</expr>
          <args>['event:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="putback">
          <expr>obj.putback()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = tkinter.dnd.Tester(None)%%['None']" name="Tester">
        <api name="__init__">
          <expr>None</expr>
          <args>['root:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dnd_accept">
          <expr>ret = obj.dnd_accept(source,event)%%['None', 'None']</expr>
          <args>['source:None', 'event:None']</args>
          <return>['self:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="dnd_start">
        <expr>ret = tkinter.dnd.dnd_start(source,event)%%['None', 'None']</expr>
        <args>['source:None', 'event:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['tkinter:*']" imports="['tkinter', 'tkinter.commondialog']" name="tkinter.commondialog">
      <class init="obj = tkinter.commondialog.Dialog()%%['None']" name="Dialog">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="show">
          <expr>ret = obj.show()%%[]</expr>
          <args>[]</args>
          <return>['s:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['os', 'tkinter', 'tkinter.ttk', 'warnings']" name="tkinter.ttk">
      <class base="builtins.object" init="obj = tkinter.ttk.Style()%%['None']" name="Style">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="configure">
          <expr>ret = obj.configure(style,query_opt)%%['None', 'None']</expr>
          <args>['style:None', 'query_opt:None']</args>
          <return>['result:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="map">
          <expr>ret = obj.map(style,query_opt)%%['None', 'None']</expr>
          <args>['style:None', 'query_opt:None']</args>
          <return>['_list_from_statespec:None', '_splitdict:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="lookup">
          <expr>ret = obj.lookup(style,option,state,default)%%['None', 'None', 'None', 'None']</expr>
          <args>['style:None', 'option:None', 'state:None', 'default:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="layout">
          <expr>ret = obj.layout(style,layoutspec)%%['None', 'None']</expr>
          <args>['style:None', 'layoutspec:None']</args>
          <return>['_list_from_layouttuple:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="element_create">
          <expr>obj.element_create(elementname,etype)%%['None', 'None']</expr>
          <args>['elementname:None', 'etype:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="element_names">
          <expr>ret = obj.element_names()%%[]</expr>
          <args>[]</args>
          <return>['tuple:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="element_options">
          <expr>ret = obj.element_options(elementname)%%['None']</expr>
          <args>['elementname:None']</args>
          <return>['tuple:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="theme_create">
          <expr>obj.theme_create(themename,parent,settings)%%['None', 'None', 'None']</expr>
          <args>['themename:None', 'parent:None', 'settings:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="theme_settings">
          <expr>obj.theme_settings(themename,settings)%%['None', 'None']</expr>
          <args>['themename:None', 'settings:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="theme_names">
          <expr>ret = obj.theme_names()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="theme_use">
          <expr>ret = obj.theme_use(themename)%%['None']</expr>
          <args>['themename:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.Widget" init="obj = tkinter.ttk.Widget(None,None)%%['None', 'None', 'None']" name="Widget">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'widgetname:None', 'kw:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="identify">
          <expr>ret = obj.identify(x,y)%%['None', 'None']</expr>
          <args>['x:None', 'y:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="instate">
          <expr>ret = obj.instate(statespec,callback)%%['None', 'None']</expr>
          <args>['statespec:None', 'callback:None']</args>
          <return>['callback:None', 'ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="state">
          <expr>ret = obj.state(statespec)%%['None']</expr>
          <args>['statespec:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.ttk.Widget" init="obj = tkinter.ttk.Button()%%['None']" name="Button">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="invoke">
          <expr>ret = obj.invoke()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.ttk.Widget" init="obj = tkinter.ttk.Checkbutton()%%['None']" name="Checkbutton">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="invoke">
          <expr>ret = obj.invoke()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.ttk.Widget" init="obj = tkinter.ttk.Entry()%%['None', 'None']" name="Entry">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'widget:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="bbox">
          <expr>ret = obj.bbox(index)%%['None']</expr>
          <args>['index:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="identify">
          <expr>ret = obj.identify(x,y)%%['None', 'None']</expr>
          <args>['x:None', 'y:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="validate">
          <expr>ret = obj.validate()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.ttk.Entry" init="obj = tkinter.ttk.Combobox()%%['None']" name="Combobox">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="current">
          <expr>ret = obj.current(newindex)%%['None']</expr>
          <args>['newindex:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set">
          <expr>obj.set(value)%%['None']</expr>
          <args>['value:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.ttk.Widget" init="obj = tkinter.ttk.Frame()%%['None']" name="Frame">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.ttk.Widget" init="obj = tkinter.ttk.Label()%%['None']" name="Label">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.ttk.Widget" init="obj = tkinter.ttk.Labelframe()%%['None']" name="Labelframe">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.ttk.Widget" init="obj = tkinter.ttk.Menubutton()%%['None']" name="Menubutton">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.ttk.Widget" init="obj = tkinter.ttk.Notebook()%%['None']" name="Notebook">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add">
          <expr>obj.add(child)%%['None']</expr>
          <args>['child:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="forget">
          <expr>obj.forget(tab_id)%%['None']</expr>
          <args>['tab_id:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="hide">
          <expr>obj.hide(tab_id)%%['None']</expr>
          <args>['tab_id:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="identify">
          <expr>ret = obj.identify(x,y)%%['None', 'None']</expr>
          <args>['x:None', 'y:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="index">
          <expr>ret = obj.index(tab_id)%%['None']</expr>
          <args>['tab_id:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="insert">
          <expr>obj.insert(pos,child)%%['None', 'None']</expr>
          <args>['pos:None', 'child:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="select">
          <expr>ret = obj.select(tab_id)%%['None']</expr>
          <args>['tab_id:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tab">
          <expr>ret = obj.tab(tab_id,option)%%['None', 'None']</expr>
          <args>['tab_id:None', 'option:None']</args>
          <return>['_val_or_dict:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tabs">
          <expr>ret = obj.tabs()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="enable_traversal">
          <expr>obj.enable_traversal()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.ttk.Widget" init="obj = tkinter.ttk.Panedwindow()%%['None']" name="Panedwindow">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="insert">
          <expr>obj.insert(pos,child)%%['None', 'None']</expr>
          <args>['pos:None', 'child:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pane">
          <expr>ret = obj.pane(pane,option)%%['None', 'None']</expr>
          <args>['pane:None', 'option:None']</args>
          <return>['_val_or_dict:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sashpos">
          <expr>ret = obj.sashpos(index,newpos)%%['None', 'None']</expr>
          <args>['index:None', 'newpos:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.ttk.Widget" init="obj = tkinter.ttk.Progressbar()%%['None']" name="Progressbar">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="start">
          <expr>obj.start(interval)%%['None']</expr>
          <args>['interval:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="step">
          <expr>obj.step(amount)%%['None']</expr>
          <args>['amount:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="stop">
          <expr>obj.stop()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.ttk.Widget" init="obj = tkinter.ttk.Radiobutton()%%['None']" name="Radiobutton">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="invoke">
          <expr>ret = obj.invoke()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.ttk.Widget" init="obj = tkinter.ttk.Scale()%%['None']" name="Scale">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.ttk.Widget" init="obj = tkinter.ttk.Scrollbar()%%['None']" name="Scrollbar">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.ttk.Widget" init="obj = tkinter.ttk.Separator()%%['None']" name="Separator">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.ttk.Widget" init="obj = tkinter.ttk.Sizegrip()%%['None']" name="Sizegrip">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.ttk.Entry" init="obj = tkinter.ttk.Spinbox()%%['None']" name="Spinbox">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set">
          <expr>obj.set(value)%%['None']</expr>
          <args>['value:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.ttk.Widget" init="obj = tkinter.ttk.Treeview()%%['None']" name="Treeview">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="bbox">
          <expr>ret = obj.bbox(item,column)%%['None', 'None']</expr>
          <args>['item:None', 'column:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_children">
          <expr>ret = obj.get_children(item)%%['None']</expr>
          <args>['item:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_children">
          <expr>obj.set_children(item)%%['None']</expr>
          <args>['item:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="column">
          <expr>ret = obj.column(column,option)%%['None', 'None']</expr>
          <args>['column:None', 'option:None']</args>
          <return>['_val_or_dict:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="delete">
          <expr>obj.delete()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="detach">
          <expr>obj.detach()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="exists">
          <expr>ret = obj.exists(item)%%['None']</expr>
          <args>['item:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="focus">
          <expr>ret = obj.focus(item)%%['None']</expr>
          <args>['item:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="heading">
          <expr>ret = obj.heading(column,option)%%['None', 'None']</expr>
          <args>['column:None', 'option:None']</args>
          <return>['_val_or_dict:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="identify_row">
          <expr>ret = obj.identify_row(y)%%['None']</expr>
          <args>['y:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="identify_column">
          <expr>ret = obj.identify_column(x)%%['None']</expr>
          <args>['x:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="identify_region">
          <expr>ret = obj.identify_region(x,y)%%['None', 'None']</expr>
          <args>['x:None', 'y:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="identify_element">
          <expr>ret = obj.identify_element(x,y)%%['None', 'None']</expr>
          <args>['x:None', 'y:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="index">
          <expr>ret = obj.index(item)%%['None']</expr>
          <args>['item:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="insert">
          <expr>ret = obj.insert(parent,index,iid)%%['None', 'None', 'None']</expr>
          <args>['parent:None', 'index:None', 'iid:None']</args>
          <return>['res:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="item">
          <expr>ret = obj.item(item,option)%%['None', 'None']</expr>
          <args>['item:None', 'option:None']</args>
          <return>['_val_or_dict:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="move">
          <expr>obj.move(item,parent,index)%%['None', 'None', 'None']</expr>
          <args>['item:None', 'parent:None', 'index:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="next">
          <expr>ret = obj.next(item)%%['None']</expr>
          <args>['item:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parent">
          <expr>ret = obj.parent(item)%%['None']</expr>
          <args>['item:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="prev">
          <expr>ret = obj.prev(item)%%['None']</expr>
          <args>['item:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="see">
          <expr>obj.see(item)%%['None']</expr>
          <args>['item:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="selection">
          <expr>ret = obj.selection(selop,items)%%['None', 'None']</expr>
          <args>['selop:None', 'items:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['_sentinel', None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="selection_set">
          <expr>obj.selection_set()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="selection_add">
          <expr>obj.selection_add()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="selection_remove">
          <expr>obj.selection_remove()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="selection_toggle">
          <expr>obj.selection_toggle()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set">
          <expr>ret = obj.set(item,column,value)%%['None', 'None', 'None']</expr>
          <args>['item:None', 'column:None', 'value:None']</args>
          <return>['_splitdict:None', 'res:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tag_bind">
          <expr>obj.tag_bind(tagname,sequence,callback)%%['None', 'None', 'None']</expr>
          <args>['tagname:None', 'sequence:None', 'callback:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tag_configure">
          <expr>ret = obj.tag_configure(tagname,option)%%['None', 'None']</expr>
          <args>['tagname:None', 'option:None']</args>
          <return>['_val_or_dict:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tag_has">
          <expr>ret = obj.tag_has(tagname,item)%%['None', 'None']</expr>
          <args>['tagname:None', 'item:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.ttk.Frame" init="obj = tkinter.ttk.LabeledScale()%%['None', 'None', 'None', 'None']" name="LabeledScale">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'variable:None', 'from_:None', 'to:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="value">
          <expr>obj.value(val)%%['None']</expr>
          <args>['val:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.ttk.Menubutton" init="obj = tkinter.ttk.OptionMenu(None,None)%%['None', 'None', 'None']" name="OptionMenu">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'variable:None', 'default:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_menu">
          <expr>obj.set_menu(default)%%['None']</expr>
          <args>['default:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="tclobjs_to_py">
        <expr>ret = tkinter.ttk.tclobjs_to_py(adict)%%['None']</expr>
        <args>['adict:None']</args>
        <return>['adict:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="setup_master">
        <expr>ret = tkinter.ttk.setup_master(master)%%['None']</expr>
        <args>['master:None']</args>
        <return>['master:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>RuntimeError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['tkinter.dialog:Dialog', 'tkinter:*', 'tkinter:commondialog']" imports="['fnmatch', 'os', 'tkinter', 'tkinter.filedialog']" name="tkinter.filedialog">
      <class init="obj = tkinter.filedialog.FileDialog(None)%%['None', 'None']" name="FileDialog">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'title:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="go">
          <expr>ret = obj.go(dir_or_file,pattern,default,key)%%['None', 'None', 'None', 'None']</expr>
          <args>['dir_or_file:None', 'pattern:None', 'default:None', 'key:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dirs_double_event">
          <expr>obj.dirs_double_event(event)%%['None']</expr>
          <args>['event:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dirs_select_event">
          <expr>obj.dirs_select_event(event)%%['None']</expr>
          <args>['event:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="files_double_event">
          <expr>obj.files_double_event(event)%%['None']</expr>
          <args>['event:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="files_select_event">
          <expr>obj.files_select_event(event)%%['None']</expr>
          <args>['event:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ok_event">
          <expr>obj.ok_event(event)%%['None']</expr>
          <args>['event:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_selection">
          <expr>ret = obj.get_selection()%%[]</expr>
          <args>[]</args>
          <return>['file:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="cancel_command">
          <expr>obj.cancel_command(event)%%['None']</expr>
          <args>['event:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.filedialog.FileDialog" init="obj = tkinter.filedialog.LoadFileDialog(None)%%['None', 'None']" name="LoadFileDialog"/>
      <class base="tkinter.filedialog.FileDialog" init="obj = tkinter.filedialog.SaveFileDialog(None)%%['None', 'None']" name="SaveFileDialog"/>
      <class base="tkinter.filedialog._Dialog" init="obj = tkinter.filedialog.Open()%%[]" name="Open"/>
      <class base="tkinter.filedialog._Dialog" init="obj = tkinter.filedialog.SaveAs()%%[]" name="SaveAs"/>
      <class base="tkinter.commondialog.Dialog" init="obj = tkinter.filedialog.Directory()%%['None']" name="Directory"/>
      <api name="askopenfilename">
        <expr>ret = tkinter.filedialog.askopenfilename()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="asksaveasfilename">
        <expr>ret = tkinter.filedialog.asksaveasfilename()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="askopenfilenames">
        <expr>ret = tkinter.filedialog.askopenfilenames()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="askopenfile">
        <expr>ret = tkinter.filedialog.askopenfile(mode)%%['None']</expr>
        <args>['mode:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="askopenfiles">
        <expr>ret = tkinter.filedialog.askopenfiles(mode)%%['None']</expr>
        <args>['mode:None']</args>
        <return>['files:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="asksaveasfile">
        <expr>ret = tkinter.filedialog.asksaveasfile(mode)%%['None']</expr>
        <args>['mode:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="askdirectory">
        <expr>ret = tkinter.filedialog.askdirectory()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
  </library>
  <library name="wsgiref">
    <module importfrom="['http.server:BaseHTTPRequestHandler', 'http.server:HTTPServer', 'io:StringIO', 'platform:python_implementation', 'wsgiref.handlers:SimpleHandler']" imports="['sys', 'urllib.parse', 'webbrowser', 'wsgiref', 'wsgiref.simple_server']" name="wsgiref.simple_server">
      <class base="wsgiref.handlers.SimpleHandler" init="obj = wsgiref.simple_server.ServerHandler(None,None,None,None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="ServerHandler"/>
      <class base="http.server.HTTPServer" init="obj = wsgiref.simple_server.WSGIServer()%%[]" name="WSGIServer">
        <api name="get_app">
          <expr>ret = obj.get_app()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_app">
          <expr>obj.set_app(application)%%['function']</expr>
          <args>['application:function']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="http.server.BaseHTTPRequestHandler" init="obj = wsgiref.simple_server.WSGIRequestHandler()%%[]" name="WSGIRequestHandler">
        <api name="get_environ">
          <expr>ret = obj.get_environ()%%[]</expr>
          <args>[]</args>
          <return>['env:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_stderr">
          <expr>ret = obj.get_stderr()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="handle">
          <expr>obj.handle()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="demo_app">
        <expr>ret = wsgiref.simple_server.demo_app(environ,start_response)%%['None', 'None']</expr>
        <args>['environ:None', 'start_response:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="make_server">
        <expr>ret = wsgiref.simple_server.make_server(host,port,app,server_class,handler_class)%%['str', 'int', 'function', 'type', 'type']</expr>
        <args>['host:str', 'port:int', 'app:function', 'server_class:type', 'handler_class:type']</args>
        <return>['server:MockServer']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['WSGIServer', 'WSGIRequestHandler']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>webbrowser.Error</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['re', 'sys', 'warnings', 'wsgiref', 'wsgiref.validate']" name="wsgiref.validate">
      <class base="Warning" init="obj = wsgiref.validate.WSGIWarning()%%[]" name="WSGIWarning"/>
      <class init="obj = wsgiref.validate.InputWrapper(None)%%['NoneType']" name="InputWrapper">
        <api name="__init__">
          <expr>None</expr>
          <args>['wsgi_input:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="close">
          <expr>obj.close()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = wsgiref.validate.ErrorWrapper(None)%%['NoneType']" name="ErrorWrapper">
        <api name="__init__">
          <expr>None</expr>
          <args>['wsgi_errors:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="writelines">
          <expr>obj.writelines(seq)%%['None']</expr>
          <args>['seq:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="close">
          <expr>obj.close()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = wsgiref.validate.WriteWrapper(None)%%['NoneType']" name="WriteWrapper">
        <api name="__init__">
          <expr>None</expr>
          <args>['wsgi_writer:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = wsgiref.validate.PartialIteratorWrapper(None)%%['NoneType']" name="PartialIteratorWrapper">
        <api name="__init__">
          <expr>None</expr>
          <args>['wsgi_iterator:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = wsgiref.validate.IteratorWrapper(None,None)%%['NoneType', 'NoneType']" name="IteratorWrapper">
        <api name="__init__">
          <expr>None</expr>
          <args>['wsgi_iterator:NoneType', 'check_start_response:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="assert_">
        <expr>wsgiref.validate.assert_(cond)%%['bool']</expr>
        <args>['cond:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="check_string_type">
        <expr>ret = wsgiref.validate.check_string_type(value,title)%%['str', 'str']</expr>
        <args>['value:str', 'title:str']</args>
        <return>['value:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="validator">
        <expr>ret = wsgiref.validate.validator(application)%%['function']</expr>
        <args>['application:function']</args>
        <return>['lint_app:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="check_environ">
        <expr>wsgiref.validate.check_environ(environ)%%['dict']</expr>
        <args>['environ:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="check_input">
        <expr>wsgiref.validate.check_input(wsgi_input)%%['BufferedReader']</expr>
        <args>['wsgi_input:BufferedReader']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="check_errors">
        <expr>wsgiref.validate.check_errors(wsgi_errors)%%['StringIO']</expr>
        <args>['wsgi_errors:StringIO']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="check_status">
        <expr>wsgiref.validate.check_status(status)%%['str']</expr>
        <args>['status:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="check_headers">
        <expr>wsgiref.validate.check_headers(headers)%%['list']</expr>
        <args>['headers:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="check_content_type">
        <expr>wsgiref.validate.check_content_type(status,headers)%%['str', 'list']</expr>
        <args>['status:str', 'headers:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="check_exc_info">
        <expr>wsgiref.validate.check_exc_info(exc_info)%%['NoneType']</expr>
        <args>['exc_info:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="check_iterator">
        <expr>wsgiref.validate.check_iterator(iterator)%%['list']</expr>
        <args>['iterator:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AssertionError</exception>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>wsgiref.validate.WSGIWarning</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['re', 'wsgiref', 'wsgiref.headers']" name="wsgiref.headers">
      <class init="obj = wsgiref.headers.Headers()%%['NoneType']" name="Headers">
        <api name="__init__">
          <expr>None</expr>
          <args>['headers:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_all">
          <expr>ret = obj.get_all(name)%%['str']</expr>
          <args>['name:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="keys">
          <expr>ret = obj.keys()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="values">
          <expr>ret = obj.values()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="items">
          <expr>ret = obj.items()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setdefault">
          <expr>ret = obj.setdefault(name,value)%%['str', 'str']</expr>
          <args>['name:str', 'value:str']</args>
          <return>['value:str', 'result:str']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_header">
          <expr>obj.add_header(_name,_value)%%['str', 'str']</expr>
          <args>['_name:str', '_value:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AssertionError</exception>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['headers:Headers', 'traceback:print_exception', 'util:FileWrapper', 'util:guess_scheme', 'util:is_hop_by_hop', 'warnings:warn']" imports="['os', 'sys', 'time', 'wsgiref', 'wsgiref.handlers']" name="wsgiref.handlers">
      <class init="obj = wsgiref.handlers.BaseHandler()%%[]" name="BaseHandler">
        <api name="run">
          <expr>obj.run(application)%%['None']</expr>
          <args>['application:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sendfile">
          <expr>ret = obj.sendfile()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="result_is_file">
          <expr>ret = obj.result_is_file()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="client_is_modern">
          <expr>ret = obj.client_is_modern()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="handle_error">
          <expr>obj.handle_error()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="wsgiref.handlers.BaseHandler" init="obj = wsgiref.handlers.SimpleHandler(None,None,None,None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="SimpleHandler">
        <api name="__init__">
          <expr>None</expr>
          <args>['stdin:NoneType', 'stdout:NoneType', 'stderr:NoneType', 'environ:NoneType', 'multithread:NoneType', 'multiprocess:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="wsgiref.handlers.SimpleHandler" init="obj = wsgiref.handlers.BaseCGIHandler(None,None,None,None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="BaseCGIHandler"/>
      <class base="wsgiref.handlers.BaseCGIHandler" init="obj = wsgiref.handlers.CGIHandler()%%[]" name="CGIHandler">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="wsgiref.handlers.BaseCGIHandler" init="obj = wsgiref.handlers.IISCGIHandler()%%[]" name="IISCGIHandler">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="format_date_time">
        <expr>ret = wsgiref.handlers.format_date_time(timestamp)%%['float']</expr>
        <args>['timestamp:float']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_environ">
        <expr>ret = wsgiref.handlers.read_environ()%%[]</expr>
        <args>[]</args>
        <return>['environ:dict']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AssertionError</exception>
        <exception>AttributeError</exception>
        <exception>BrokenPipeError</exception>
        <exception>ConnectionAbortedError</exception>
        <exception>ConnectionResetError</exception>
        <exception>LookupError</exception>
        <exception>NotImplementedError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['io:BytesIO', 'io:StringIO', 'urllib.parse:quote']" imports="['posixpath', 'wsgiref', 'wsgiref.util']" name="wsgiref.util">
      <class init="obj = wsgiref.util.FileWrapper(None)%%['NoneType', 'NoneType']" name="FileWrapper">
        <api name="__init__">
          <expr>None</expr>
          <args>['filelike:NoneType', 'blksize:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="guess_scheme">
        <expr>ret = wsgiref.util.guess_scheme(environ)%%['dict']</expr>
        <args>['environ:dict']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="application_uri">
        <expr>ret = wsgiref.util.application_uri(environ)%%['dict']</expr>
        <args>['environ:dict']</args>
        <return>['url:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="request_uri">
        <expr>ret = wsgiref.util.request_uri(environ,include_query)%%['dict', 'int']</expr>
        <args>['environ:dict', 'include_query:int']</args>
        <return>['url:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="shift_path_info">
        <expr>ret = wsgiref.util.shift_path_info(environ)%%['dict']</expr>
        <args>['environ:dict']</args>
        <return>['ret:NoneType', 'name:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="setup_testing_defaults">
        <expr>wsgiref.util.setup_testing_defaults(environ)%%['dict']</expr>
        <args>['environ:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="is_hop_by_hop">
        <expr>ret = wsgiref.util.is_hop_by_hop(header_name)%%['str']</expr>
        <args>['header_name:str']</args>
        <return>['_hoppish:builtin_function_or_method']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>IndexError</exception>
        <exception>OSError</exception>
        <exception>StopIteration</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
  </library>
  <library name="asyncio">
    <module importfrom="['asyncio:base_tasks', 'asyncio:coroutines', 'asyncio:events', 'asyncio:futures', 'coroutines:coroutine', 'queues:Queue']" imports="['asyncio', 'asyncio.tasks', 'concurrent.futures', 'contextvars', 'functools', 'inspect', 'types', 'warnings', 'weakref']" name="asyncio.tasks">
      <class base="futures._PyFuture" init="obj = asyncio.tasks.Task(None)%%['NoneType']" name="Task">
        <api name="all_tasks">
          <expr>ret = obj.all_tasks(cls,loop)%%['None', 'None']</expr>
          <args>['cls:None', 'loop:None']</args>
          <return>['_all_tasks_compat:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="__init__">
          <expr>None</expr>
          <args>['coro:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['loop:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="set_result">
          <expr>obj.set_result(result)%%['str']</expr>
          <args>['result:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_exception">
          <expr>obj.set_exception(exception)%%['ValueError']</expr>
          <args>['exception:ValueError']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_stack">
          <expr>ret = obj.get_stack()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['limit:int']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="print_stack">
          <expr>ret = obj.print_stack()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['limit:int', 'file:StringIO']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None, None]</kwodefa>
        </api>
        <api name="cancel">
          <expr>ret = obj.cancel()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="current_task">
        <expr>ret = asyncio.tasks.current_task(loop)%%['_UnixSelectorEventLoop']</expr>
        <args>['loop:_UnixSelectorEventLoop']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="all_tasks">
        <expr>ret = asyncio.tasks.all_tasks(loop)%%['Mock']</expr>
        <args>['loop:Mock']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="create_task">
        <expr>ret = asyncio.tasks.create_task(coro)%%['coroutine']</expr>
        <args>['coro:coroutine']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="wait">
        <expr>ret = asyncio.tasks.wait(fs)%%['list']</expr>
        <args>['fs:list']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['loop:TestLoop', 'timeout:float', 'return_when:str']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None, None, 'ALL_COMPLETED']</kwodefa>
      </api>
      <api name="wait_for">
        <expr>ret = asyncio.tasks.wait_for(fut,timeout)%%['coroutine', 'float']</expr>
        <args>['fut:coroutine', 'timeout:float']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['loop:_UnixSelectorEventLoop']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <api name="as_completed">
        <expr>asyncio.tasks.as_completed(fs)%%['list']</expr>
        <args>['fs:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['loop:TestLoop', 'timeout:float']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None, None]</kwodefa>
      </api>
      <api name="sleep">
        <expr>ret = asyncio.tasks.sleep(delay,result)%%['int', 'str']</expr>
        <args>['delay:int', 'result:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['loop:BaseEventLoop']</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <api name="ensure_future">
        <expr>ret = asyncio.tasks.ensure_future(coro_or_future)%%['coroutine']</expr>
        <args>['coro_or_future:coroutine']</args>
        <return>['task:Task', 'coro_or_future:coroutine', 'ensure_future:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['loop:BaseEventLoop']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <api name="gather">
        <expr>ret = asyncio.tasks.gather()%%[]</expr>
        <args>[]</args>
        <return>['outer:_GatheringFuture']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['loop:_UnixSelectorEventLoop', 'return_exceptions:bool']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None, None]</kwodefa>
      </api>
      <api name="shield">
        <expr>ret = asyncio.tasks.shield(arg)%%['Future']</expr>
        <args>['arg:Future']</args>
        <return>['inner:Future', 'outer:Future']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['loop:TestLoop']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <api name="run_coroutine_threadsafe">
        <expr>ret = asyncio.tasks.run_coroutine_threadsafe(coro,loop)%%['generator', '_UnixSelectorEventLoop']</expr>
        <args>['coro:generator', 'loop:_UnixSelectorEventLoop']</args>
        <return>['future:Future']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>BaseException</exception>
        <exception>Exception</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>RuntimeError</exception>
        <exception>StopIteration</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>futures.CancelledError</exception>
        <exception>futures.InvalidStateError</exception>
        <exception>futures.TimeoutError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['asyncio', 'asyncio.log', 'logging']" name="asyncio.log"/>
    <module importfrom="[]" imports="['asyncio', 'asyncio.protocols']" name="asyncio.protocols">
      <class init="obj = asyncio.protocols.BaseProtocol()%%[]" name="BaseProtocol">
        <api name="connection_made">
          <expr>obj.connection_made(transport)%%['None']</expr>
          <args>['transport:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="connection_lost">
          <expr>obj.connection_lost(exc)%%['None']</expr>
          <args>['exc:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pause_writing">
          <expr>obj.pause_writing()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="resume_writing">
          <expr>obj.resume_writing()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="asyncio.protocols.BaseProtocol" init="obj = asyncio.protocols.Protocol()%%[]" name="Protocol">
        <api name="data_received">
          <expr>obj.data_received(data)%%['Mock']</expr>
          <args>['data:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="eof_received">
          <expr>obj.eof_received()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="asyncio.protocols.BaseProtocol" init="obj = asyncio.protocols.BufferedProtocol()%%[]" name="BufferedProtocol">
        <api name="get_buffer">
          <expr>obj.get_buffer(sizehint)%%['None']</expr>
          <args>['sizehint:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="buffer_updated">
          <expr>obj.buffer_updated(nbytes)%%['None']</expr>
          <args>['nbytes:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="eof_received">
          <expr>obj.eof_received()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="asyncio.protocols.BaseProtocol" init="obj = asyncio.protocols.DatagramProtocol()%%[]" name="DatagramProtocol">
        <api name="datagram_received">
          <expr>obj.datagram_received(data,addr)%%['Mock', 'Mock']</expr>
          <args>['data:Mock', 'addr:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="error_received">
          <expr>obj.error_received(exc)%%['Mock']</expr>
          <args>['exc:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="asyncio.protocols.BaseProtocol" init="obj = asyncio.protocols.SubprocessProtocol()%%[]" name="SubprocessProtocol">
        <api name="pipe_data_received">
          <expr>obj.pipe_data_received(fd,data)%%['int', 'Mock']</expr>
          <args>['fd:int', 'data:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pipe_connection_lost">
          <expr>obj.pipe_connection_lost(fd,exc)%%['int', 'Mock']</expr>
          <args>['fd:int', 'exc:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="process_exited">
          <expr>obj.process_exited()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>RuntimeError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['asyncio:format_helpers']" imports="['asyncio', 'asyncio.base_futures', 'concurrent.futures._base', 'reprlib']" name="asyncio.base_futures">
      <class base="Error" init="obj = asyncio.base_futures.InvalidStateError()%%[]" name="InvalidStateError"/>
      <api name="isfuture">
        <expr>ret = asyncio.base_futures.isfuture(obj)%%['coroutine']</expr>
        <args>['obj:coroutine']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>asyncio.base_futures.InvalidStateError</exception>
      </errors>
    </module>
    <module importfrom="['asyncio:base_events', 'asyncio:constants', 'asyncio:events', 'asyncio:futures', 'asyncio:protocols', 'asyncio:sslproto', 'asyncio:transports', 'log:logger']" imports="['asyncio', 'asyncio.proactor_events', 'io', 'os', 'socket', 'warnings']" name="asyncio.proactor_events">
      <class base="asyncio.base_events.BaseEventLoop" init="obj = asyncio.proactor_events.BaseProactorEventLoop(None)%%['NoneType']" name="BaseProactorEventLoop">
        <api name="__init__">
          <expr>None</expr>
          <args>['proactor:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sock_recv">
          <expr>ret = obj.sock_recv(sock,n)%%['None', 'None']</expr>
          <args>['sock:None', 'n:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sock_recv_into">
          <expr>ret = obj.sock_recv_into(sock,buf)%%['None', 'None']</expr>
          <args>['sock:None', 'buf:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sock_sendall">
          <expr>ret = obj.sock_sendall(sock,data)%%['None', 'None']</expr>
          <args>['sock:None', 'data:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sock_connect">
          <expr>ret = obj.sock_connect(sock,address)%%['None', 'None']</expr>
          <args>['sock:None', 'address:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sock_accept">
          <expr>ret = obj.sock_accept(sock)%%['None']</expr>
          <args>['sock:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>ConnectionAbortedError</exception>
        <exception>ConnectionResetError</exception>
        <exception>Exception</exception>
        <exception>NotImplementedError</exception>
        <exception>OSError</exception>
        <exception>RuntimeError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>futures.CancelledError</exception>
      </errors>
    </module>
    <module importfrom="['asyncio:base_futures', 'asyncio:constants', 'asyncio:format_helpers', 'log:logger']" imports="['asyncio', 'asyncio.coroutines', 'collections.abc', 'functools', 'inspect', 'os', 'sys', 'traceback', 'types']" name="asyncio.coroutines">
      <class init="obj = asyncio.coroutines.CoroWrapper(None)%%['NoneType', 'NoneType']" name="CoroWrapper">
        <api name="__init__">
          <expr>None</expr>
          <args>['gen:NoneType', 'func:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="gi_frame">
          <expr>ret = obj.gi_frame()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="gi_running">
          <expr>ret = obj.gi_running()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="gi_code">
          <expr>ret = obj.gi_code()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="gi_yieldfrom">
          <expr>ret = obj.gi_yieldfrom()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="coroutine">
        <expr>ret = asyncio.coroutines.coroutine(func)%%['function']</expr>
        <args>['func:function']</args>
        <return>['func:function', 'wrapper:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="iscoroutinefunction">
        <expr>ret = asyncio.coroutines.iscoroutinefunction(func)%%['TaskStepMethWrapper']</expr>
        <args>['func:TaskStepMethWrapper']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="iscoroutine">
        <expr>ret = asyncio.coroutines.iscoroutine(obj)%%['coroutine']</expr>
        <args>['obj:coroutine']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['asyncio:coroutines', 'asyncio:events', 'asyncio:protocols', 'log:logger', 'tasks:sleep']" imports="['asyncio', 'asyncio.streams', 'socket']" name="asyncio.streams">
      <class base="EOFError" init="obj = asyncio.streams.IncompleteReadError()%%[]" name="IncompleteReadError"/>
      <class base="Exception" init="obj = asyncio.streams.LimitOverrunError()%%[]" name="LimitOverrunError"/>
      <class base="asyncio.protocols.Protocol" init="obj = asyncio.streams.FlowControlMixin()%%['NoneType']" name="FlowControlMixin">
        <api name="__init__">
          <expr>None</expr>
          <args>['loop:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pause_writing">
          <expr>obj.pause_writing()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="resume_writing">
          <expr>obj.resume_writing()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="connection_lost">
          <expr>obj.connection_lost(exc)%%['None']</expr>
          <args>['exc:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="asyncio.streams.FlowControlMixin" init="obj = asyncio.streams.StreamReaderProtocol(None)%%['NoneType', 'NoneType', 'NoneType']" name="StreamReaderProtocol">
        <api name="__init__">
          <expr>None</expr>
          <args>['stream_reader:NoneType', 'client_connected_cb:NoneType', 'loop:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="connection_made">
          <expr>obj.connection_made(transport)%%['_SelectorSocketTransport']</expr>
          <args>['transport:_SelectorSocketTransport']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="data_received">
          <expr>obj.data_received(data)%%['bytes']</expr>
          <args>['data:bytes']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="eof_received">
          <expr>ret = obj.eof_received()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = asyncio.streams.StreamWriter(None,None,None,None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType']" name="StreamWriter">
        <api name="__init__">
          <expr>None</expr>
          <args>['transport:NoneType', 'protocol:NoneType', 'reader:NoneType', 'loop:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="transport">
          <expr>ret = obj.transport()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="wait_closed">
          <expr>obj.wait_closed()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="drain">
          <expr>obj.drain()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = asyncio.streams.StreamReader()%%['NoneType', 'NoneType']" name="StreamReader">
        <api name="__init__">
          <expr>None</expr>
          <args>['limit:NoneType', 'loop:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['_DEFAULT_LIMIT', None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="at_eof">
          <expr>ret = obj.at_eof()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="readexactly">
          <expr>ret = obj.readexactly(n)%%['int']</expr>
          <args>['n:int']</args>
          <return>['ret:NoneType', 'data:bytes']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="open_connection">
        <expr>asyncio.streams.open_connection(host,port)%%['str', 'int']</expr>
        <args>['host:str', 'port:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['loop:_UnixSelectorEventLoop', 'limit:int']</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[None, '_DEFAULT_LIMIT']</kwodefa>
      </api>
      <api name="start_server">
        <expr>ret = asyncio.streams.start_server(client_connected_cb,host,port)%%['function', 'str', 'int']</expr>
        <args>['client_connected_cb:function', 'host:str', 'port:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['loop:_UnixSelectorEventLoop', 'limit:int']</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[None, '_DEFAULT_LIMIT']</kwodefa>
      </api>
      <api name="open_unix_connection">
        <expr>asyncio.streams.open_unix_connection(path)%%['str']</expr>
        <args>['path:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['loop:_UnixSelectorEventLoop', 'limit:int']</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[None, '_DEFAULT_LIMIT']</kwodefa>
      </api>
      <api name="start_unix_server">
        <expr>ret = asyncio.streams.start_unix_server(client_connected_cb,path)%%['function', 'str']</expr>
        <args>['client_connected_cb:function', 'path:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['loop:_UnixSelectorEventLoop', 'limit:int']</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[None, '_DEFAULT_LIMIT']</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ConnectionResetError</exception>
        <exception>NotImplementedError</exception>
        <exception>OSError</exception>
        <exception>RuntimeError</exception>
        <exception>StopAsyncIteration</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>asyncio.streams.IncompleteReadError</exception>
        <exception>asyncio.streams.LimitOverrunError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['asyncio', 'asyncio.constants', 'enum']" name="asyncio.constants"/>
    <module importfrom="['asyncio:events', 'asyncio:locks']" imports="['asyncio', 'asyncio.queues', 'collections', 'heapq']" name="asyncio.queues">
      <class base="Exception" init="obj = asyncio.queues.QueueEmpty()%%[]" name="QueueEmpty"/>
      <class base="Exception" init="obj = asyncio.queues.QueueFull()%%[]" name="QueueFull"/>
      <class init="obj = asyncio.queues.Queue()%%['NoneType']" name="Queue">
        <api name="__init__">
          <expr>None</expr>
          <args>['maxsize:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['loop:NoneType']</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="maxsize">
          <expr>ret = obj.maxsize()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="empty">
          <expr>ret = obj.empty()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="full">
          <expr>ret = obj.full()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="put">
          <expr>ret = obj.put(item)%%['int']</expr>
          <args>['item:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get">
          <expr>ret = obj.get()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="task_done">
          <expr>obj.task_done()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="join">
          <expr>obj.join()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="asyncio.queues.Queue" init="obj = asyncio.queues.PriorityQueue()%%['NoneType']" name="PriorityQueue"/>
      <class base="asyncio.queues.Queue" init="obj = asyncio.queues.LifoQueue()%%['NoneType']" name="LifoQueue"/>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>asyncio.queues.QueueEmpty</exception>
        <exception>asyncio.queues.QueueFull</exception>
      </errors>
    </module>
    <module importfrom="['asyncio:DefaultEventLoopPolicy', 'asyncio:format_helpers']" imports="['asyncio', 'asyncio.events', 'contextvars', 'os', 'socket', 'subprocess', 'sys', 'threading']" name="asyncio.events">
      <class base="RuntimeError" init="obj = asyncio.events.SendfileNotAvailableError()%%[]" name="SendfileNotAvailableError"/>
      <class init="obj = asyncio.events.Handle(None,None,None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType']" name="Handle">
        <api name="__init__">
          <expr>None</expr>
          <args>['callback:NoneType', 'args:NoneType', 'loop:NoneType', 'context:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="cancel">
          <expr>obj.cancel()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="cancelled">
          <expr>ret = obj.cancelled()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="asyncio.events.Handle" init="obj = asyncio.events.TimerHandle(None,None,None,None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="TimerHandle">
        <api name="__init__">
          <expr>None</expr>
          <args>['when:NoneType', 'callback:NoneType', 'args:NoneType', 'loop:NoneType', 'context:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="when">
          <expr>ret = obj.when()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = asyncio.events.AbstractServer()%%[]" name="AbstractServer">
        <api name="get_loop">
          <expr>obj.get_loop()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_serving">
          <expr>obj.is_serving()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="start_serving">
          <expr>obj.start_serving()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="serve_forever">
          <expr>obj.serve_forever()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = asyncio.events.AbstractEventLoop()%%[]" name="AbstractEventLoop">
        <api name="run_forever">
          <expr>obj.run_forever()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run_until_complete">
          <expr>obj.run_until_complete(future)%%['NoneType']</expr>
          <args>['future:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="stop">
          <expr>obj.stop()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_running">
          <expr>obj.is_running()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_closed">
          <expr>obj.is_closed()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="shutdown_asyncgens">
          <expr>obj.shutdown_asyncgens()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="call_soon">
          <expr>ret = obj.call_soon(callback)%%['NoneType']</expr>
          <args>['callback:NoneType']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="call_at">
          <expr>obj.call_at(when,callback)%%['Mock', 'Mock']</expr>
          <args>['when:Mock', 'callback:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="time">
          <expr>obj.time()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="create_future">
          <expr>obj.create_future()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="create_task">
          <expr>obj.create_task(coro)%%['NoneType']</expr>
          <args>['coro:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="call_soon_threadsafe">
          <expr>obj.call_soon_threadsafe(callback)%%['NoneType']</expr>
          <args>['callback:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run_in_executor">
          <expr>obj.run_in_executor(executor,func)%%['Mock', 'Mock']</expr>
          <args>['executor:Mock', 'func:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_default_executor">
          <expr>obj.set_default_executor(executor)%%['Mock']</expr>
          <args>['executor:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getaddrinfo">
          <expr>obj.getaddrinfo(host,port)%%['str', 'int']</expr>
          <args>['host:str', 'port:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['family:int', 'type:int', 'proto:int', 'flags:int']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None, None, None, None]</kwodefa>
        </api>
        <api name="getnameinfo">
          <expr>obj.getnameinfo(sockaddr,flags)%%['tuple', 'int']</expr>
          <args>['sockaddr:tuple', 'flags:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="create_connection">
          <expr>obj.create_connection(protocol_factory,host,port)%%['Mock', 'NoneType', 'NoneType']</expr>
          <args>['protocol_factory:Mock', 'host:NoneType', 'port:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['ssl:NoneType', 'family:int', 'proto:int', 'flags:int', 'sock:NoneType', 'local_addr:NoneType', 'server_hostname:NoneType', 'ssl_handshake_timeout:NoneType']</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[None, None, None, None, None, None, None, None]</kwodefa>
        </api>
        <api name="create_server">
          <expr>obj.create_server(protocol_factory,host,port)%%['Mock', 'NoneType', 'NoneType']</expr>
          <args>['protocol_factory:Mock', 'host:NoneType', 'port:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['family:AddressFamily', 'flags:AddressInfo', 'sock:NoneType', 'backlog:int', 'ssl:NoneType', 'reuse_address:NoneType', 'reuse_port:NoneType', 'ssl_handshake_timeout:NoneType', 'start_serving:bool']</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[None, None, None, None, None, None, None, None, None]</kwodefa>
        </api>
        <api name="sendfile">
          <expr>obj.sendfile(transport,file,offset,count)%%['Mock', 'Mock', 'int', 'NoneType']</expr>
          <args>['transport:Mock', 'file:Mock', 'offset:int', 'count:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['fallback:bool']</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="start_tls">
          <expr>obj.start_tls(transport,protocol,sslcontext)%%['None', 'None', 'None']</expr>
          <args>['transport:None', 'protocol:None', 'sslcontext:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['server_side:None', 'server_hostname:None', 'ssl_handshake_timeout:None']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None, None, None]</kwodefa>
        </api>
        <api name="create_unix_connection">
          <expr>obj.create_unix_connection(protocol_factory,path)%%['None', 'None']</expr>
          <args>['protocol_factory:None', 'path:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['ssl:None', 'sock:None', 'server_hostname:None', 'ssl_handshake_timeout:None']</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[None, None, None, None]</kwodefa>
        </api>
        <api name="create_unix_server">
          <expr>obj.create_unix_server(protocol_factory,path)%%['None', 'None']</expr>
          <args>['protocol_factory:None', 'path:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['sock:None', 'backlog:None', 'ssl:None', 'ssl_handshake_timeout:None', 'start_serving:None']</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[None, None, None, None, None]</kwodefa>
        </api>
        <api name="create_datagram_endpoint">
          <expr>obj.create_datagram_endpoint(protocol_factory,local_addr,remote_addr)%%['Mock', 'NoneType', 'NoneType']</expr>
          <args>['protocol_factory:Mock', 'local_addr:NoneType', 'remote_addr:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['family:int', 'proto:int', 'flags:int', 'reuse_address:NoneType', 'reuse_port:NoneType', 'allow_broadcast:NoneType', 'sock:NoneType']</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[None, None, None, None, None, None, None]</kwodefa>
        </api>
        <api name="connect_read_pipe">
          <expr>obj.connect_read_pipe(protocol_factory,pipe)%%['Mock', '_SentinelObject']</expr>
          <args>['protocol_factory:Mock', 'pipe:_SentinelObject']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="connect_write_pipe">
          <expr>obj.connect_write_pipe(protocol_factory,pipe)%%['Mock', '_SentinelObject']</expr>
          <args>['protocol_factory:Mock', 'pipe:_SentinelObject']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="subprocess_shell">
          <expr>obj.subprocess_shell(protocol_factory,cmd)%%['Mock', '_Sentinel']</expr>
          <args>['protocol_factory:Mock', 'cmd:_Sentinel']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['stdin:int', 'stdout:int', 'stderr:int']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None, None, None]</kwodefa>
        </api>
        <api name="subprocess_exec">
          <expr>obj.subprocess_exec(protocol_factory)%%['Mock']</expr>
          <args>['protocol_factory:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['stdin:int', 'stdout:int', 'stderr:int']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None, None, None]</kwodefa>
        </api>
        <api name="add_reader">
          <expr>obj.add_reader(fd,callback)%%['int', 'Mock']</expr>
          <args>['fd:int', 'callback:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="remove_reader">
          <expr>obj.remove_reader(fd)%%['int']</expr>
          <args>['fd:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_writer">
          <expr>obj.add_writer(fd,callback)%%['int', 'Mock']</expr>
          <args>['fd:int', 'callback:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="remove_writer">
          <expr>obj.remove_writer(fd)%%['int']</expr>
          <args>['fd:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sock_recv">
          <expr>obj.sock_recv(sock,nbytes)%%['Mock', 'int']</expr>
          <args>['sock:Mock', 'nbytes:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sock_recv_into">
          <expr>obj.sock_recv_into(sock,buf)%%['Mock', 'int']</expr>
          <args>['sock:Mock', 'buf:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sock_sendall">
          <expr>obj.sock_sendall(sock,data)%%['Mock', 'int']</expr>
          <args>['sock:Mock', 'data:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sock_connect">
          <expr>obj.sock_connect(sock,address)%%['Mock', 'Mock']</expr>
          <args>['sock:Mock', 'address:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sock_accept">
          <expr>obj.sock_accept(sock)%%['Mock']</expr>
          <args>['sock:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sock_sendfile">
          <expr>obj.sock_sendfile(sock,file,offset,count)%%['Mock', 'Mock', 'int', 'NoneType']</expr>
          <args>['sock:Mock', 'file:Mock', 'offset:int', 'count:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['fallback:NoneType']</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="add_signal_handler">
          <expr>obj.add_signal_handler(sig,callback)%%['int', 'Mock']</expr>
          <args>['sig:int', 'callback:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="remove_signal_handler">
          <expr>obj.remove_signal_handler(sig)%%['int']</expr>
          <args>['sig:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_task_factory">
          <expr>obj.set_task_factory(factory)%%['None']</expr>
          <args>['factory:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_task_factory">
          <expr>obj.get_task_factory()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_exception_handler">
          <expr>obj.get_exception_handler()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_exception_handler">
          <expr>obj.set_exception_handler(handler)%%['Mock']</expr>
          <args>['handler:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="default_exception_handler">
          <expr>obj.default_exception_handler(context)%%['Mock']</expr>
          <args>['context:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="call_exception_handler">
          <expr>obj.call_exception_handler(context)%%['Mock']</expr>
          <args>['context:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_debug">
          <expr>obj.get_debug()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_debug">
          <expr>obj.set_debug(enabled)%%['Mock']</expr>
          <args>['enabled:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = asyncio.events.AbstractEventLoopPolicy()%%[]" name="AbstractEventLoopPolicy">
        <api name="get_event_loop">
          <expr>obj.get_event_loop()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_event_loop">
          <expr>obj.set_event_loop(loop)%%['object']</expr>
          <args>['loop:object']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="new_event_loop">
          <expr>obj.new_event_loop()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_child_watcher">
          <expr>obj.get_child_watcher()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_child_watcher">
          <expr>obj.set_child_watcher(watcher)%%['object']</expr>
          <args>['watcher:object']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="asyncio.events.AbstractEventLoopPolicy" init="obj = asyncio.events.BaseDefaultEventLoopPolicy()%%[]" name="BaseDefaultEventLoopPolicy">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_event_loop">
          <expr>ret = obj.get_event_loop()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="new_event_loop">
          <expr>ret = obj.new_event_loop()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="get_running_loop">
        <expr>ret = asyncio.events.get_running_loop()%%[]</expr>
        <args>[]</args>
        <return>['loop:_UnixSelectorEventLoop']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_event_loop_policy">
        <expr>ret = asyncio.events.get_event_loop_policy()%%[]</expr>
        <args>[]</args>
        <return>['_event_loop_policy:_UnixDefaultEventLoopPolicy']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="set_event_loop_policy">
        <expr>asyncio.events.set_event_loop_policy(policy)%%['object']</expr>
        <args>['policy:object']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_event_loop">
        <expr>ret = asyncio.events.get_event_loop()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="set_event_loop">
        <expr>asyncio.events.set_event_loop(loop)%%['_UnixSelectorEventLoop']</expr>
        <args>['loop:_UnixSelectorEventLoop']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="new_event_loop">
        <expr>ret = asyncio.events.new_event_loop()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_child_watcher">
        <expr>ret = asyncio.events.get_child_watcher()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="set_child_watcher">
        <expr>ret = asyncio.events.set_child_watcher(watcher)%%['SafeChildWatcher']</expr>
        <args>['watcher:SafeChildWatcher']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>Exception</exception>
        <exception>ImportError</exception>
        <exception>NotImplementedError</exception>
        <exception>OSError</exception>
        <exception>RuntimeError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>asyncio.events.SendfileNotAvailableError</exception>
        <exception>threading.BrokenBarrierError</exception>
      </errors>
    </module>
    <module importfrom="['asyncio:base_events', 'asyncio:constants', 'asyncio:protocols', 'asyncio:transports', 'log:logger']" imports="['asyncio', 'asyncio.sslproto', 'collections', 'ssl', 'warnings']" name="asyncio.sslproto">
      <class base="asyncio.protocols.Protocol" init="obj = asyncio.sslproto.SSLProtocol(None,None,None,None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="SSLProtocol">
        <api name="__init__">
          <expr>None</expr>
          <args>['loop:NoneType', 'app_protocol:NoneType', 'sslcontext:NoneType', 'waiter:NoneType', 'server_side:NoneType', 'server_hostname:NoneType', 'call_connection_made:NoneType', 'ssl_handshake_timeout:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="connection_lost">
          <expr>obj.connection_lost(exc)%%['SSLCertVerificationError']</expr>
          <args>['exc:SSLCertVerificationError']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>Exception</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>RuntimeError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>ssl.SSLError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['asyncio', 'asyncio.transports']" name="asyncio.transports">
      <class init="obj = asyncio.transports.BaseTransport()%%['NoneType']" name="BaseTransport">
        <api name="__init__">
          <expr>None</expr>
          <args>['extra:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_extra_info">
          <expr>ret = obj.get_extra_info(name,default)%%['None', 'None']</expr>
          <args>['name:None', 'default:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_closing">
          <expr>obj.is_closing()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="close">
          <expr>obj.close()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_protocol">
          <expr>obj.set_protocol(protocol)%%['None']</expr>
          <args>['protocol:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_protocol">
          <expr>obj.get_protocol()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="asyncio.transports.BaseTransport" init="obj = asyncio.transports.ReadTransport()%%['NoneType']" name="ReadTransport">
        <api name="is_reading">
          <expr>obj.is_reading()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pause_reading">
          <expr>obj.pause_reading()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="resume_reading">
          <expr>obj.resume_reading()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="asyncio.transports.BaseTransport" init="obj = asyncio.transports.WriteTransport()%%['NoneType']" name="WriteTransport">
        <api name="set_write_buffer_limits">
          <expr>obj.set_write_buffer_limits(high,low)%%['None', 'None']</expr>
          <args>['high:None', 'low:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_write_buffer_size">
          <expr>obj.get_write_buffer_size()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="writelines">
          <expr>obj.writelines(list_of_data)%%['None']</expr>
          <args>['list_of_data:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="write_eof">
          <expr>obj.write_eof()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="can_write_eof">
          <expr>obj.can_write_eof()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="abort">
          <expr>obj.abort()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="asyncio.transports.ReadTransport" init="obj = asyncio.transports.Transport()%%[]" name="Transport"/>
      <class base="asyncio.transports.BaseTransport" init="obj = asyncio.transports.DatagramTransport()%%['NoneType']" name="DatagramTransport">
        <api name="sendto">
          <expr>obj.sendto(data,addr)%%['str', 'NoneType']</expr>
          <args>['data:str', 'addr:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="abort">
          <expr>obj.abort()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="asyncio.transports.BaseTransport" init="obj = asyncio.transports.SubprocessTransport()%%['NoneType']" name="SubprocessTransport">
        <api name="get_pid">
          <expr>obj.get_pid()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_returncode">
          <expr>obj.get_returncode()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_pipe_transport">
          <expr>obj.get_pipe_transport(fd)%%['int']</expr>
          <args>['fd:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="send_signal">
          <expr>obj.send_signal(signal)%%['int']</expr>
          <args>['signal:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="terminate">
          <expr>obj.terminate()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="kill">
          <expr>obj.kill()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>Exception</exception>
        <exception>NotImplementedError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['asyncio:constants', 'asyncio:coroutines', 'asyncio:events', 'asyncio:futures', 'asyncio:protocols', 'asyncio:sslproto', 'asyncio:tasks', 'asyncio:transports', 'log:logger']" imports="['asyncio', 'asyncio.base_events', 'collections', 'collections.abc', 'concurrent.futures', 'heapq', 'itertools', 'logging', 'os', 'socket', 'ssl', 'subprocess', 'sys', 'threading', 'time', 'traceback', 'warnings', 'weakref']" name="asyncio.base_events">
      <class base="asyncio.events.AbstractServer" init="obj = asyncio.base_events.Server(None,None,None,None,None,None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="Server">
        <api name="__init__">
          <expr>None</expr>
          <args>['loop:NoneType', 'sockets:NoneType', 'protocol_factory:NoneType', 'ssl_context:NoneType', 'backlog:NoneType', 'ssl_handshake_timeout:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_loop">
          <expr>ret = obj.get_loop()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_serving">
          <expr>ret = obj.is_serving()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sockets">
          <expr>ret = obj.sockets()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType', 'list:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="close">
          <expr>obj.close()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="start_serving">
          <expr>obj.start_serving()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="serve_forever">
          <expr>obj.serve_forever()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="wait_closed">
          <expr>obj.wait_closed()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="asyncio.events.AbstractEventLoop" init="obj = asyncio.base_events.BaseEventLoop()%%[]" name="BaseEventLoop">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="create_task">
          <expr>ret = obj.create_task(coro)%%['coroutine']</expr>
          <args>['coro:coroutine']</args>
          <return>['task:Task']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_task_factory">
          <expr>obj.set_task_factory(factory)%%['function']</expr>
          <args>['factory:function']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_task_factory">
          <expr>ret = obj.get_task_factory()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="shutdown_asyncgens">
          <expr>obj.shutdown_asyncgens()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run_until_complete">
          <expr>ret = obj.run_until_complete(future)%%['coroutine']</expr>
          <args>['future:coroutine']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="call_later">
          <expr>ret = obj.call_later(delay,callback)%%['float', 'function']</expr>
          <args>['delay:float', 'callback:function']</args>
          <return>['timer:TimerHandle']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['context:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="set_default_executor">
          <expr>obj.set_default_executor(executor)%%['Mock']</expr>
          <args>['executor:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getnameinfo">
          <expr>ret = obj.getnameinfo(sockaddr,flags)%%['None', 'None']</expr>
          <args>['sockaddr:None', 'flags:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sock_sendfile">
          <expr>ret = obj.sock_sendfile(sock,file,offset,count)%%['None', 'None', 'None', 'None']</expr>
          <args>['sock:None', 'file:None', 'offset:None', 'count:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['fallback:None']</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="create_connection">
          <expr>obj.create_connection(protocol_factory,host,port)%%['None', 'None', 'None']</expr>
          <args>['protocol_factory:None', 'host:None', 'port:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['ssl:None', 'family:None', 'proto:None', 'flags:None', 'sock:None', 'local_addr:None', 'server_hostname:None', 'ssl_handshake_timeout:None']</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[None, None, None, None, None, None, None, None]</kwodefa>
        </api>
        <api name="sendfile">
          <expr>ret = obj.sendfile(transport,file,offset,count)%%['None', 'None', 'None', 'None']</expr>
          <args>['transport:None', 'file:None', 'offset:None', 'count:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['fallback:None']</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="start_tls">
          <expr>ret = obj.start_tls(transport,protocol,sslcontext)%%['None', 'None', 'None']</expr>
          <args>['transport:None', 'protocol:None', 'sslcontext:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['server_side:None', 'server_hostname:None', 'ssl_handshake_timeout:None']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None, None, None]</kwodefa>
        </api>
        <api name="create_datagram_endpoint">
          <expr>obj.create_datagram_endpoint(protocol_factory,local_addr,remote_addr)%%['None', 'None', 'None']</expr>
          <args>['protocol_factory:None', 'local_addr:None', 'remote_addr:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['family:None', 'proto:None', 'flags:None', 'reuse_address:None', 'reuse_port:None', 'allow_broadcast:None', 'sock:None']</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[None, None, None, '_unset', None, None, None]</kwodefa>
        </api>
        <api name="create_server">
          <expr>ret = obj.create_server(protocol_factory,host,port)%%['None', 'None', 'None']</expr>
          <args>['protocol_factory:None', 'host:None', 'port:None']</args>
          <return>['server:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['family:None', 'flags:None', 'sock:None', 'backlog:None', 'ssl:None', 'reuse_address:None', 'reuse_port:None', 'ssl_handshake_timeout:None', 'start_serving:None']</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[None, None, None, None, None, None, None, None, None]</kwodefa>
        </api>
        <api name="connect_accepted_socket">
          <expr>obj.connect_accepted_socket(protocol_factory,sock)%%['None', 'None']</expr>
          <args>['protocol_factory:None', 'sock:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['ssl:None', 'ssl_handshake_timeout:None']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None, None]</kwodefa>
        </api>
        <api name="connect_read_pipe">
          <expr>obj.connect_read_pipe(protocol_factory,pipe)%%['None', 'None']</expr>
          <args>['protocol_factory:None', 'pipe:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="connect_write_pipe">
          <expr>obj.connect_write_pipe(protocol_factory,pipe)%%['None', 'None']</expr>
          <args>['protocol_factory:None', 'pipe:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="subprocess_shell">
          <expr>obj.subprocess_shell(protocol_factory,cmd)%%['None', 'None']</expr>
          <args>['protocol_factory:None', 'cmd:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['stdin:None', 'stdout:None', 'stderr:None', 'universal_newlines:None', 'shell:None', 'bufsize:None']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None, None, None, None, None, None]</kwodefa>
        </api>
        <api name="subprocess_exec">
          <expr>obj.subprocess_exec(protocol_factory,program)%%['None', 'None']</expr>
          <args>['protocol_factory:None', 'program:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['stdin:None', 'stdout:None', 'stderr:None', 'universal_newlines:None', 'shell:None', 'bufsize:None']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None, None, None, None, None, None]</kwodefa>
        </api>
        <api name="get_exception_handler">
          <expr>ret = obj.get_exception_handler()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_exception_handler">
          <expr>obj.set_exception_handler(handler)%%['function']</expr>
          <args>['handler:function']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_debug">
          <expr>obj.set_debug(enabled)%%['bool']</expr>
          <args>['enabled:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>ConnectionError</exception>
        <exception>Exception</exception>
        <exception>ImportError</exception>
        <exception>NotImplementedError</exception>
        <exception>OSError</exception>
        <exception>RuntimeError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>events.SendfileNotAvailableError</exception>
        <exception>futures.CancelledError</exception>
        <exception>socket.error</exception>
        <exception>threading.BrokenBarrierError</exception>
      </errors>
    </module>
    <module importfrom="['asyncio:base_futures', 'asyncio:coroutines']" imports="['asyncio', 'asyncio.base_tasks', 'linecache', 'traceback']" name="asyncio.base_tasks">
      <errors>
        <exception>AttributeError</exception>
      </errors>
    </module>
    <module importfrom="['asyncio:events', 'asyncio:futures', 'coroutines:coroutine']" imports="['asyncio', 'asyncio.locks', 'collections', 'warnings']" name="asyncio.locks">
      <class base="asyncio.locks._ContextManagerMixin" init="obj = asyncio.locks.Lock()%%[]" name="Lock">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['loop:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="locked">
          <expr>ret = obj.locked()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = asyncio.locks.Event()%%[]" name="Event">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['loop:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="is_set">
          <expr>ret = obj.is_set()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set">
          <expr>obj.set()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clear">
          <expr>obj.clear()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="wait">
          <expr>ret = obj.wait()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="asyncio.locks._ContextManagerMixin" init="obj = asyncio.locks.Condition()%%['NoneType']" name="Condition">
        <api name="__init__">
          <expr>None</expr>
          <args>['lock:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['loop:NoneType']</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="wait_for">
          <expr>ret = obj.wait_for(predicate)%%['function']</expr>
          <args>['predicate:function']</args>
          <return>['result:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="notify_all">
          <expr>obj.notify_all()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="asyncio.locks._ContextManagerMixin" init="obj = asyncio.locks.Semaphore()%%['NoneType']" name="Semaphore">
        <api name="__init__">
          <expr>None</expr>
          <args>['value:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['loop:NoneType']</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
      </class>
      <class base="asyncio.locks.Semaphore" init="obj = asyncio.locks.BoundedSemaphore()%%['NoneType']" name="BoundedSemaphore">
        <api name="__init__">
          <expr>None</expr>
          <args>['value:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['loop:NoneType']</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>RuntimeError</exception>
        <exception>StopIteration</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>futures.CancelledError</exception>
      </errors>
    </module>
    <module importfrom="['asyncio:base_events', 'asyncio:base_subprocess', 'asyncio:constants', 'asyncio:coroutines', 'asyncio:events', 'asyncio:futures', 'asyncio:selector_events', 'asyncio:tasks', 'asyncio:transports', 'log:logger']" imports="['asyncio', 'asyncio.unix_events', 'errno', 'io', 'os', 'selectors', 'signal', 'socket', 'stat', 'subprocess', 'sys', 'threading', 'warnings']" name="asyncio.unix_events">
      <class init="obj = asyncio.unix_events.AbstractChildWatcher()%%[]" name="AbstractChildWatcher">
        <api name="remove_child_handler">
          <expr>obj.remove_child_handler(pid)%%['Mock']</expr>
          <args>['pid:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="attach_loop">
          <expr>obj.attach_loop(loop)%%['Mock']</expr>
          <args>['loop:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="asyncio.unix_events.AbstractChildWatcher" init="obj = asyncio.unix_events.BaseChildWatcher()%%[]" name="BaseChildWatcher">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="asyncio.unix_events.BaseChildWatcher" init="obj = asyncio.unix_events.SafeChildWatcher()%%[]" name="SafeChildWatcher">
        <api name="remove_child_handler">
          <expr>ret = obj.remove_child_handler(pid)%%['int']</expr>
          <args>['pid:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="asyncio.unix_events.BaseChildWatcher" init="obj = asyncio.unix_events.FastChildWatcher()%%[]" name="FastChildWatcher">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="remove_child_handler">
          <expr>ret = obj.remove_child_handler(pid)%%['int']</expr>
          <args>['pid:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>BlockingIOError</exception>
        <exception>ChildProcessError</exception>
        <exception>Exception</exception>
        <exception>FileNotFoundError</exception>
        <exception>ImportError</exception>
        <exception>InterruptedError</exception>
        <exception>KeyError</exception>
        <exception>NotImplementedError</exception>
        <exception>OSError</exception>
        <exception>RuntimeError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>threading.BrokenBarrierError</exception>
      </errors>
    </module>
    <module importfrom="['asyncio:base_futures', 'asyncio:events', 'asyncio:format_helpers']" imports="['asyncio', 'asyncio.futures', 'concurrent.futures', 'contextvars', 'logging', 'sys']" name="asyncio.futures">
      <class init="obj = asyncio.futures.Future()%%[]" name="Future">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['loop:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="get_loop">
          <expr>ret = obj.get_loop()%%[]</expr>
          <args>[]</args>
          <return>['loop:TestLoop']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="cancel">
          <expr>ret = obj.cancel()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="cancelled">
          <expr>ret = obj.cancelled()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="done">
          <expr>ret = obj.done()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_done_callback">
          <expr>obj.add_done_callback(fn)%%['function']</expr>
          <args>['fn:function']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['context:Context']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="remove_done_callback">
          <expr>ret = obj.remove_done_callback(fn)%%['function']</expr>
          <args>['fn:function']</args>
          <return>['removed_count:int']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_result">
          <expr>obj.set_result(result)%%['str']</expr>
          <args>['result:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_exception">
          <expr>obj.set_exception(exception)%%['RuntimeError']</expr>
          <args>['exception:RuntimeError']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="wrap_future">
        <expr>ret = asyncio.futures.wrap_future(future)%%['Future']</expr>
        <args>['future:Future']</args>
        <return>['future:Future', 'new_future:Future']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['loop:_UnixSelectorEventLoop']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>CancelledError</exception>
        <exception>ImportError</exception>
        <exception>InvalidStateError</exception>
        <exception>OSError</exception>
        <exception>RuntimeError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['asyncio:constants']" imports="['asyncio', 'asyncio.format_helpers', 'functools', 'inspect', 'reprlib', 'sys', 'traceback']" name="asyncio.format_helpers">
      <api name="extract_stack">
        <expr>ret = asyncio.format_helpers.extract_stack(f,limit)%%['frame', 'NoneType']</expr>
        <args>['f:frame', 'limit:NoneType']</args>
        <return>['stack:StackSummary']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['asyncio:coroutines', 'asyncio:events', 'asyncio:tasks']" imports="['asyncio', 'asyncio.runners']" name="asyncio.runners">
      <api name="run">
        <expr>ret = asyncio.runners.run(main)%%['coroutine']</expr>
        <args>['main:coroutine']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['debug:bool']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>RuntimeError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['asyncio:base_events', 'asyncio:constants', 'asyncio:events', 'asyncio:futures', 'asyncio:protocols', 'asyncio:sslproto', 'asyncio:transports', 'log:logger']" imports="['asyncio', 'asyncio.selector_events', 'collections', 'errno', 'functools', 'selectors', 'socket', 'ssl', 'warnings', 'weakref']" name="asyncio.selector_events">
      <class base="asyncio.base_events.BaseEventLoop" init="obj = asyncio.selector_events.BaseSelectorEventLoop()%%['NoneType']" name="BaseSelectorEventLoop">
        <api name="__init__">
          <expr>None</expr>
          <args>['selector:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_reader">
          <expr>ret = obj.add_reader(fd,callback)%%['None', 'None']</expr>
          <args>['fd:None', 'callback:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sock_recv">
          <expr>ret = obj.sock_recv(sock,n)%%['None', 'None']</expr>
          <args>['sock:None', 'n:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sock_recv_into">
          <expr>ret = obj.sock_recv_into(sock,buf)%%['None', 'None']</expr>
          <args>['sock:None', 'buf:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sock_sendall">
          <expr>ret = obj.sock_sendall(sock,data)%%['socket', 'memoryview']</expr>
          <args>['sock:socket', 'data:memoryview']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sock_connect">
          <expr>ret = obj.sock_connect(sock,address)%%['socket', 'tuple']</expr>
          <args>['sock:socket', 'address:tuple']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sock_accept">
          <expr>ret = obj.sock_accept(sock)%%['None']</expr>
          <args>['sock:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>BlockingIOError</exception>
        <exception>ConnectionAbortedError</exception>
        <exception>Exception</exception>
        <exception>ImportError</exception>
        <exception>InterruptedError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>RuntimeError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
  </library>
  <library name="sqlite3">
    <module importfrom="[]" imports="['collections.abc', 'datetime', 'sqlite3', 'sqlite3.dbapi2', 'time']" name="sqlite3.dbapi2">
      <api name="DateFromTicks">
        <expr>ret = sqlite3.dbapi2.DateFromTicks(ticks)%%['int']</expr>
        <args>['ticks:int']</args>
        <return>['Date:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="TimeFromTicks">
        <expr>ret = sqlite3.dbapi2.TimeFromTicks(ticks)%%['int']</expr>
        <args>['ticks:int']</args>
        <return>['Time:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="TimestampFromTicks">
        <expr>ret = sqlite3.dbapi2.TimestampFromTicks(ticks)%%['int']</expr>
        <args>['ticks:int']</args>
        <return>['Timestamp:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['sqlite3', 'sqlite3.dump']" name="sqlite3.dump"/>
  </library>
  <library name="collections">
    <module importfrom="[]" imports="['collections', 'collections.abc']" name="collections.abc"/>
  </library>
  <library name="encodings">
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.mac_arabic']" name="encodings.mac_arabic">
      <class base="codecs.Codec" init="obj = encodings.mac_arabic.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['None', 'None']</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['None', 'None']</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.mac_arabic.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['None', 'None']</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.mac_arabic.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['None', 'None']</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.mac_arabic.Codec" init="obj = encodings.mac_arabic.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.mac_arabic.Codec" init="obj = encodings.mac_arabic.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.mac_arabic.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.latin_1']" name="encodings.latin_1">
      <class base="codecs.Codec" init="obj = encodings.latin_1.Codec()%%[]" name="Codec"/>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.latin_1.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.latin_1.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.latin_1.Codec" init="obj = encodings.latin_1.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.latin_1.Codec" init="obj = encodings.latin_1.StreamReader()%%[]" name="StreamReader"/>
      <class base="encodings.latin_1.StreamWriter" init="obj = encodings.latin_1.StreamConverter()%%[]" name="StreamConverter"/>
      <api name="getregentry">
        <expr>ret = encodings.latin_1.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['io:BytesIO']" imports="['codecs', 'encodings', 'encodings.quopri_codec', 'quopri']" name="encodings.quopri_codec">
      <class base="codecs.Codec" init="obj = encodings.quopri_codec.Codec()%%[]" name="Codec"/>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.quopri_codec.IncrementalEncoder()%%['None']" name="IncrementalEncoder"/>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.quopri_codec.IncrementalDecoder()%%['None']" name="IncrementalDecoder"/>
      <class base="encodings.quopri_codec.Codec" init="obj = encodings.quopri_codec.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.quopri_codec.Codec" init="obj = encodings.quopri_codec.StreamReader()%%[]" name="StreamReader"/>
      <api name="quopri_encode">
        <expr>encodings.quopri_codec.quopri_encode(input,errors)%%['bytes', 'str']</expr>
        <args>['input:bytes', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="quopri_decode">
        <expr>encodings.quopri_codec.quopri_decode(input,errors)%%['bytes', 'str']</expr>
        <args>['input:bytes', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getregentry">
        <expr>ret = encodings.quopri_codec.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp1257']" name="encodings.cp1257">
      <class base="codecs.Codec" init="obj = encodings.cp1257.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp1257.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp1257.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp1257.Codec" init="obj = encodings.cp1257.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp1257.Codec" init="obj = encodings.cp1257.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp1257.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp866']" name="encodings.cp866">
      <class base="codecs.Codec" init="obj = encodings.cp866.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp866.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp866.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp866.Codec" init="obj = encodings.cp866.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp866.Codec" init="obj = encodings.cp866.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp866.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.gbk']" name="encodings.gbk">
      <class base="codecs.Codec" init="obj = encodings.gbk.Codec()%%[]" name="Codec"/>
      <class base="builtins.MultibyteIncrementalEncoder" init="obj = encodings.gbk.IncrementalEncoder()%%[]" name="IncrementalEncoder"/>
      <class base="builtins.MultibyteIncrementalDecoder" init="obj = encodings.gbk.IncrementalDecoder()%%[]" name="IncrementalDecoder"/>
      <class base="encodings.gbk.Codec" init="obj = encodings.gbk.StreamReader()%%[]" name="StreamReader"/>
      <class base="encodings.gbk.Codec" init="obj = encodings.gbk.StreamWriter()%%[]" name="StreamWriter"/>
      <api name="getregentry">
        <expr>ret = encodings.gbk.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp437']" name="encodings.cp437">
      <class base="codecs.Codec" init="obj = encodings.cp437.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['memoryview', 'str']</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp437.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp437.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp437.Codec" init="obj = encodings.cp437.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp437.Codec" init="obj = encodings.cp437.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp437.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.mac_roman']" name="encodings.mac_roman">
      <class base="codecs.Codec" init="obj = encodings.mac_roman.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.mac_roman.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.mac_roman.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.mac_roman.Codec" init="obj = encodings.mac_roman.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.mac_roman.Codec" init="obj = encodings.mac_roman.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.mac_roman.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp932']" name="encodings.cp932">
      <class base="codecs.Codec" init="obj = encodings.cp932.Codec()%%[]" name="Codec"/>
      <class base="builtins.MultibyteIncrementalEncoder" init="obj = encodings.cp932.IncrementalEncoder()%%[]" name="IncrementalEncoder"/>
      <class base="builtins.MultibyteIncrementalDecoder" init="obj = encodings.cp932.IncrementalDecoder()%%[]" name="IncrementalDecoder"/>
      <class base="encodings.cp932.Codec" init="obj = encodings.cp932.StreamReader()%%[]" name="StreamReader"/>
      <class base="encodings.cp932.Codec" init="obj = encodings.cp932.StreamWriter()%%[]" name="StreamWriter"/>
      <api name="getregentry">
        <expr>ret = encodings.cp932.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.mac_croatian']" name="encodings.mac_croatian">
      <class base="codecs.Codec" init="obj = encodings.mac_croatian.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['None', 'None']</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['None', 'None']</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.mac_croatian.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['None', 'None']</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.mac_croatian.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['None', 'None']</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.mac_croatian.Codec" init="obj = encodings.mac_croatian.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.mac_croatian.Codec" init="obj = encodings.mac_croatian.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.mac_croatian.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.iso8859_11']" name="encodings.iso8859_11">
      <class base="codecs.Codec" init="obj = encodings.iso8859_11.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.iso8859_11.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.iso8859_11.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.iso8859_11.Codec" init="obj = encodings.iso8859_11.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.iso8859_11.Codec" init="obj = encodings.iso8859_11.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.iso8859_11.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.mac_greek']" name="encodings.mac_greek">
      <class base="codecs.Codec" init="obj = encodings.mac_greek.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.mac_greek.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.mac_greek.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.mac_greek.Codec" init="obj = encodings.mac_greek.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.mac_greek.Codec" init="obj = encodings.mac_greek.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.mac_greek.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp1253']" name="encodings.cp1253">
      <class base="codecs.Codec" init="obj = encodings.cp1253.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp1253.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp1253.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp1253.Codec" init="obj = encodings.cp1253.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp1253.Codec" init="obj = encodings.cp1253.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp1253.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.unicode_escape']" name="encodings.unicode_escape">
      <class base="codecs.Codec" init="obj = encodings.unicode_escape.Codec()%%[]" name="Codec"/>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.unicode_escape.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.BufferedIncrementalDecoder" init="obj = encodings.unicode_escape.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.unicode_escape.Codec" init="obj = encodings.unicode_escape.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.unicode_escape.Codec" init="obj = encodings.unicode_escape.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.unicode_escape.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.iso2022_jp_2']" name="encodings.iso2022_jp_2">
      <class base="codecs.Codec" init="obj = encodings.iso2022_jp_2.Codec()%%[]" name="Codec"/>
      <class base="builtins.MultibyteIncrementalEncoder" init="obj = encodings.iso2022_jp_2.IncrementalEncoder()%%[]" name="IncrementalEncoder"/>
      <class base="builtins.MultibyteIncrementalDecoder" init="obj = encodings.iso2022_jp_2.IncrementalDecoder()%%[]" name="IncrementalDecoder"/>
      <class base="encodings.iso2022_jp_2.Codec" init="obj = encodings.iso2022_jp_2.StreamReader()%%[]" name="StreamReader"/>
      <class base="encodings.iso2022_jp_2.Codec" init="obj = encodings.iso2022_jp_2.StreamWriter()%%[]" name="StreamWriter"/>
      <api name="getregentry">
        <expr>ret = encodings.iso2022_jp_2.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.iso2022_kr']" name="encodings.iso2022_kr">
      <class base="codecs.Codec" init="obj = encodings.iso2022_kr.Codec()%%[]" name="Codec"/>
      <class base="builtins.MultibyteIncrementalEncoder" init="obj = encodings.iso2022_kr.IncrementalEncoder()%%[]" name="IncrementalEncoder"/>
      <class base="builtins.MultibyteIncrementalDecoder" init="obj = encodings.iso2022_kr.IncrementalDecoder()%%[]" name="IncrementalDecoder"/>
      <class base="encodings.iso2022_kr.Codec" init="obj = encodings.iso2022_kr.StreamReader()%%[]" name="StreamReader"/>
      <class base="encodings.iso2022_kr.Codec" init="obj = encodings.iso2022_kr.StreamWriter()%%[]" name="StreamWriter"/>
      <api name="getregentry">
        <expr>ret = encodings.iso2022_kr.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp1252']" name="encodings.cp1252">
      <class base="codecs.Codec" init="obj = encodings.cp1252.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['memoryview', 'str']</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp1252.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp1252.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp1252.Codec" init="obj = encodings.cp1252.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp1252.Codec" init="obj = encodings.cp1252.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp1252.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.koi8_r']" name="encodings.koi8_r">
      <class base="codecs.Codec" init="obj = encodings.koi8_r.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['memoryview', 'str']</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.koi8_r.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.koi8_r.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.koi8_r.Codec" init="obj = encodings.koi8_r.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.koi8_r.Codec" init="obj = encodings.koi8_r.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.koi8_r.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.mac_centeuro']" name="encodings.mac_centeuro">
      <class base="codecs.Codec" init="obj = encodings.mac_centeuro.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['None', 'None']</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['None', 'None']</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.mac_centeuro.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['None', 'None']</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.mac_centeuro.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['None', 'None']</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.mac_centeuro.Codec" init="obj = encodings.mac_centeuro.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.mac_centeuro.Codec" init="obj = encodings.mac_centeuro.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.mac_centeuro.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.utf_32_le']" name="encodings.utf_32_le">
      <class base="codecs.IncrementalEncoder" init="obj = encodings.utf_32_le.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['None', 'None']</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.BufferedIncrementalDecoder" init="obj = encodings.utf_32_le.IncrementalDecoder()%%['None']" name="IncrementalDecoder"/>
      <class base="codecs.StreamWriter" init="obj = encodings.utf_32_le.StreamWriter(None)%%['None', 'None']" name="StreamWriter"/>
      <class base="codecs.StreamReader" init="obj = encodings.utf_32_le.StreamReader(None)%%['None', 'None']" name="StreamReader"/>
      <api name="decode">
        <expr>ret = encodings.utf_32_le.decode(input,errors)%%['memoryview', 'str']</expr>
        <args>['input:memoryview', 'errors:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getregentry">
        <expr>ret = encodings.utf_32_le.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.punycode']" name="encodings.punycode">
      <class base="codecs.Codec" init="obj = encodings.punycode.Codec()%%[]" name="Codec">
        <api name="decode">
          <expr>obj.decode(input,errors)%%['bytes', 'str']</expr>
          <args>['input:bytes', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.punycode.IncrementalEncoder()%%['None']" name="IncrementalEncoder"/>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.punycode.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['None', 'None']</expr>
          <args>['input:None', 'final:None']</args>
          <return>['punycode_decode:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.punycode.Codec" init="obj = encodings.punycode.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.punycode.Codec" init="obj = encodings.punycode.StreamReader()%%[]" name="StreamReader"/>
      <api name="segregate">
        <expr>encodings.punycode.segregate(str)%%['str']</expr>
        <args>['str:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="selective_len">
        <expr>ret = encodings.punycode.selective_len(str,max)%%['str', 'int']</expr>
        <args>['str:str', 'max:int']</args>
        <return>['res:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="selective_find">
        <expr>encodings.punycode.selective_find(str,char,index,pos)%%['str', 'str', 'int', 'int']</expr>
        <args>['str:str', 'char:str', 'index:int', 'pos:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="insertion_unsort">
        <expr>ret = encodings.punycode.insertion_unsort(str,extended)%%['str', 'list']</expr>
        <args>['str:str', 'extended:list']</args>
        <return>['result:list']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="T">
        <expr>ret = encodings.punycode.T(j,bias)%%['int', 'int']</expr>
        <args>['j:int', 'bias:int']</args>
        <return>['ret:NoneType', 'res:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="generate_generalized_integer">
        <expr>ret = encodings.punycode.generate_generalized_integer(N,bias)%%['int', 'int']</expr>
        <args>['N:int', 'bias:int']</args>
        <return>['bytes:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="adapt">
        <expr>ret = encodings.punycode.adapt(delta,first,numchars)%%['int', 'bool', 'int']</expr>
        <args>['delta:int', 'first:bool', 'numchars:int']</args>
        <return>['bias:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="generate_integers">
        <expr>ret = encodings.punycode.generate_integers(baselen,deltas)%%['int', 'list']</expr>
        <args>['baselen:int', 'deltas:list']</args>
        <return>['bytes:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="punycode_encode">
        <expr>ret = encodings.punycode.punycode_encode(text)%%['str']</expr>
        <args>['text:str']</args>
        <return>['ret:NoneType', 'extended:bytes']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="decode_generalized_number">
        <expr>encodings.punycode.decode_generalized_number(extended,extpos,bias,errors)%%['str', 'int', 'int', 'str']</expr>
        <args>['extended:str', 'extpos:int', 'bias:int', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="insertion_sort">
        <expr>ret = encodings.punycode.insertion_sort(base,extended,errors)%%['str', 'str', 'str']</expr>
        <args>['base:str', 'extended:str', 'errors:str']</args>
        <return>['base:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="punycode_decode">
        <expr>ret = encodings.punycode.punycode_decode(text,errors)%%['bytes', 'str']</expr>
        <args>['text:bytes', 'errors:str']</args>
        <return>['insertion_sort:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getregentry">
        <expr>ret = encodings.punycode.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>IndexError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>UnicodeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.big5']" name="encodings.big5">
      <class base="codecs.Codec" init="obj = encodings.big5.Codec()%%[]" name="Codec"/>
      <class base="builtins.MultibyteIncrementalEncoder" init="obj = encodings.big5.IncrementalEncoder()%%[]" name="IncrementalEncoder"/>
      <class base="builtins.MultibyteIncrementalDecoder" init="obj = encodings.big5.IncrementalDecoder()%%[]" name="IncrementalDecoder"/>
      <class base="encodings.big5.Codec" init="obj = encodings.big5.StreamReader()%%[]" name="StreamReader"/>
      <class base="encodings.big5.Codec" init="obj = encodings.big5.StreamWriter()%%[]" name="StreamWriter"/>
      <api name="getregentry">
        <expr>ret = encodings.big5.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.utf_7']" name="encodings.utf_7">
      <class base="codecs.IncrementalEncoder" init="obj = encodings.utf_7.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.BufferedIncrementalDecoder" init="obj = encodings.utf_7.IncrementalDecoder()%%['None']" name="IncrementalDecoder"/>
      <class base="codecs.StreamWriter" init="obj = encodings.utf_7.StreamWriter(None)%%['None', 'None']" name="StreamWriter"/>
      <class base="codecs.StreamReader" init="obj = encodings.utf_7.StreamReader(None)%%['None', 'None']" name="StreamReader"/>
      <api name="decode">
        <expr>ret = encodings.utf_7.decode(input,errors)%%['int', 'str']</expr>
        <args>['input:int', 'errors:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getregentry">
        <expr>ret = encodings.utf_7.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.palmos']" name="encodings.palmos">
      <class base="codecs.Codec" init="obj = encodings.palmos.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.palmos.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.palmos.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.palmos.Codec" init="obj = encodings.palmos.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.palmos.Codec" init="obj = encodings.palmos.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.palmos.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['bz2', 'codecs', 'encodings', 'encodings.bz2_codec']" name="encodings.bz2_codec">
      <class base="codecs.Codec" init="obj = encodings.bz2_codec.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['None', 'None']</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['bz2_encode:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['None', 'None']</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['bz2_decode:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.bz2_codec.IncrementalEncoder()%%['NoneType']" name="IncrementalEncoder">
        <api name="__init__">
          <expr>None</expr>
          <args>['errors:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['None', 'None']</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="reset">
          <expr>obj.reset()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.bz2_codec.IncrementalDecoder()%%['NoneType']" name="IncrementalDecoder">
        <api name="__init__">
          <expr>None</expr>
          <args>['errors:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['None', 'None']</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="reset">
          <expr>obj.reset()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.bz2_codec.Codec" init="obj = encodings.bz2_codec.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.bz2_codec.Codec" init="obj = encodings.bz2_codec.StreamReader()%%[]" name="StreamReader"/>
      <api name="bz2_encode">
        <expr>encodings.bz2_codec.bz2_encode(input,errors)%%['bytes', 'str']</expr>
        <args>['input:bytes', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="bz2_decode">
        <expr>encodings.bz2_codec.bz2_decode(input,errors)%%['bytes', 'str']</expr>
        <args>['input:bytes', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getregentry">
        <expr>ret = encodings.bz2_codec.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>EOFError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['encodings', 'encodings.aliases']" name="encodings.aliases"/>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp862']" name="encodings.cp862">
      <class base="codecs.Codec" init="obj = encodings.cp862.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp862.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp862.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp862.Codec" init="obj = encodings.cp862.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp862.Codec" init="obj = encodings.cp862.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp862.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['unicodedata:ucd_3_2_0']" imports="['codecs', 'encodings', 'encodings.idna', 're', 'stringprep']" name="encodings.idna">
      <class base="codecs.Codec" init="obj = encodings.idna.Codec()%%[]" name="Codec"/>
      <class base="codecs.BufferedIncrementalEncoder" init="obj = encodings.idna.IncrementalEncoder()%%['None']" name="IncrementalEncoder"/>
      <class base="codecs.BufferedIncrementalDecoder" init="obj = encodings.idna.IncrementalDecoder()%%['None']" name="IncrementalDecoder"/>
      <class base="encodings.idna.Codec" init="obj = encodings.idna.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.idna.Codec" init="obj = encodings.idna.StreamReader()%%[]" name="StreamReader"/>
      <api name="nameprep">
        <expr>ret = encodings.idna.nameprep(label)%%['str']</expr>
        <args>['label:str']</args>
        <return>['label:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ToASCII">
        <expr>ret = encodings.idna.ToASCII(label)%%['str']</expr>
        <args>['label:str']</args>
        <return>['label:bytes']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ToUnicode">
        <expr>ret = encodings.idna.ToUnicode(label)%%['str']</expr>
        <args>['label:str']</args>
        <return>['str:type', 'result:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getregentry">
        <expr>ret = encodings.idna.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>UnicodeDecodeError</exception>
        <exception>UnicodeEncodeError</exception>
        <exception>UnicodeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['base64', 'codecs', 'encodings', 'encodings.base64_codec']" name="encodings.base64_codec">
      <class base="codecs.Codec" init="obj = encodings.base64_codec.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['None', 'None']</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['base64_encode:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['None', 'None']</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['base64_decode:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.base64_codec.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['None', 'None']</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.base64_codec.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['None', 'None']</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.base64_codec.Codec" init="obj = encodings.base64_codec.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.base64_codec.Codec" init="obj = encodings.base64_codec.StreamReader()%%[]" name="StreamReader"/>
      <api name="base64_encode">
        <expr>encodings.base64_codec.base64_encode(input,errors)%%['bytes', 'str']</expr>
        <args>['input:bytes', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="base64_decode">
        <expr>encodings.base64_codec.base64_decode(input,errors)%%['bytes', 'str']</expr>
        <args>['input:bytes', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getregentry">
        <expr>ret = encodings.base64_codec.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.utf_8']" name="encodings.utf_8">
      <class base="codecs.IncrementalEncoder" init="obj = encodings.utf_8.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.BufferedIncrementalDecoder" init="obj = encodings.utf_8.IncrementalDecoder()%%['None']" name="IncrementalDecoder"/>
      <class base="codecs.StreamWriter" init="obj = encodings.utf_8.StreamWriter(None)%%['None', 'None']" name="StreamWriter"/>
      <class base="codecs.StreamReader" init="obj = encodings.utf_8.StreamReader(None)%%['None', 'None']" name="StreamReader"/>
      <api name="decode">
        <expr>ret = encodings.utf_8.decode(input,errors)%%['int', 'str']</expr>
        <args>['input:int', 'errors:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getregentry">
        <expr>ret = encodings.utf_8.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.koi8_t']" name="encodings.koi8_t">
      <class base="codecs.Codec" init="obj = encodings.koi8_t.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.koi8_t.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.koi8_t.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.koi8_t.Codec" init="obj = encodings.koi8_t.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.koi8_t.Codec" init="obj = encodings.koi8_t.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.koi8_t.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.undefined']" name="encodings.undefined">
      <class base="codecs.Codec" init="obj = encodings.undefined.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)%%['bytes', 'str']</expr>
          <args>['input:bytes', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.undefined.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>obj.encode(input,final)%%['None', 'None']</expr>
          <args>['input:None', 'final:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.undefined.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>obj.decode(input,final)%%['None', 'None']</expr>
          <args>['input:None', 'final:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.undefined.Codec" init="obj = encodings.undefined.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.undefined.Codec" init="obj = encodings.undefined.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.undefined.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>UnicodeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.euc_kr']" name="encodings.euc_kr">
      <class base="codecs.Codec" init="obj = encodings.euc_kr.Codec()%%[]" name="Codec"/>
      <class base="builtins.MultibyteIncrementalEncoder" init="obj = encodings.euc_kr.IncrementalEncoder()%%[]" name="IncrementalEncoder"/>
      <class base="builtins.MultibyteIncrementalDecoder" init="obj = encodings.euc_kr.IncrementalDecoder()%%[]" name="IncrementalDecoder"/>
      <class base="encodings.euc_kr.Codec" init="obj = encodings.euc_kr.StreamReader()%%[]" name="StreamReader"/>
      <class base="encodings.euc_kr.Codec" init="obj = encodings.euc_kr.StreamWriter()%%[]" name="StreamWriter"/>
      <api name="getregentry">
        <expr>ret = encodings.euc_kr.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.shift_jis']" name="encodings.shift_jis">
      <class base="codecs.Codec" init="obj = encodings.shift_jis.Codec()%%[]" name="Codec"/>
      <class base="builtins.MultibyteIncrementalEncoder" init="obj = encodings.shift_jis.IncrementalEncoder()%%[]" name="IncrementalEncoder"/>
      <class base="builtins.MultibyteIncrementalDecoder" init="obj = encodings.shift_jis.IncrementalDecoder()%%[]" name="IncrementalDecoder"/>
      <class base="encodings.shift_jis.Codec" init="obj = encodings.shift_jis.StreamReader()%%[]" name="StreamReader"/>
      <class base="encodings.shift_jis.Codec" init="obj = encodings.shift_jis.StreamWriter()%%[]" name="StreamWriter"/>
      <api name="getregentry">
        <expr>ret = encodings.shift_jis.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp856']" name="encodings.cp856">
      <class base="codecs.Codec" init="obj = encodings.cp856.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp856.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp856.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp856.Codec" init="obj = encodings.cp856.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp856.Codec" init="obj = encodings.cp856.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp856.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.koi8_u']" name="encodings.koi8_u">
      <class base="codecs.Codec" init="obj = encodings.koi8_u.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.koi8_u.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.koi8_u.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.koi8_u.Codec" init="obj = encodings.koi8_u.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.koi8_u.Codec" init="obj = encodings.koi8_u.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.koi8_u.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.utf_32', 'sys']" name="encodings.utf_32">
      <class base="codecs.IncrementalEncoder" init="obj = encodings.utf_32.IncrementalEncoder()%%['NoneType']" name="IncrementalEncoder">
        <api name="__init__">
          <expr>None</expr>
          <args>['errors:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['None', 'None']</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getstate">
          <expr>ret = obj.getstate()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setstate">
          <expr>obj.setstate(state)%%['None']</expr>
          <args>['state:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.BufferedIncrementalDecoder" init="obj = encodings.utf_32.IncrementalDecoder()%%['NoneType']" name="IncrementalDecoder">
        <api name="__init__">
          <expr>None</expr>
          <args>['errors:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getstate">
          <expr>obj.getstate()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.StreamWriter" init="obj = encodings.utf_32.StreamWriter(None)%%['NoneType', 'NoneType']" name="StreamWriter">
        <api name="__init__">
          <expr>None</expr>
          <args>['stream:NoneType', 'errors:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.StreamReader" init="obj = encodings.utf_32.StreamReader(None)%%['None', 'None']" name="StreamReader">
        <api name="decode">
          <expr>obj.decode(input,errors)%%['bytes', 'str']</expr>
          <args>['input:bytes', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="decode">
        <expr>ret = encodings.utf_32.decode(input,errors)%%['None', 'None']</expr>
        <args>['input:None', 'errors:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getregentry">
        <expr>ret = encodings.utf_32.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>UnicodeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.mac_farsi']" name="encodings.mac_farsi">
      <class base="codecs.Codec" init="obj = encodings.mac_farsi.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['None', 'None']</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['None', 'None']</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.mac_farsi.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['None', 'None']</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.mac_farsi.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['None', 'None']</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.mac_farsi.Codec" init="obj = encodings.mac_farsi.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.mac_farsi.Codec" init="obj = encodings.mac_farsi.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.mac_farsi.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.iso2022_jp_ext']" name="encodings.iso2022_jp_ext">
      <class base="codecs.Codec" init="obj = encodings.iso2022_jp_ext.Codec()%%[]" name="Codec"/>
      <class base="builtins.MultibyteIncrementalEncoder" init="obj = encodings.iso2022_jp_ext.IncrementalEncoder()%%[]" name="IncrementalEncoder"/>
      <class base="builtins.MultibyteIncrementalDecoder" init="obj = encodings.iso2022_jp_ext.IncrementalDecoder()%%[]" name="IncrementalDecoder"/>
      <class base="encodings.iso2022_jp_ext.Codec" init="obj = encodings.iso2022_jp_ext.StreamReader()%%[]" name="StreamReader"/>
      <class base="encodings.iso2022_jp_ext.Codec" init="obj = encodings.iso2022_jp_ext.StreamWriter()%%[]" name="StreamWriter"/>
      <api name="getregentry">
        <expr>ret = encodings.iso2022_jp_ext.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.iso8859_1']" name="encodings.iso8859_1">
      <class base="codecs.Codec" init="obj = encodings.iso8859_1.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['None', 'None']</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['None', 'None']</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.iso8859_1.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['None', 'None']</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.iso8859_1.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['None', 'None']</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.iso8859_1.Codec" init="obj = encodings.iso8859_1.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.iso8859_1.Codec" init="obj = encodings.iso8859_1.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.iso8859_1.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp855']" name="encodings.cp855">
      <class base="codecs.Codec" init="obj = encodings.cp855.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp855.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp855.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp855.Codec" init="obj = encodings.cp855.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp855.Codec" init="obj = encodings.cp855.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp855.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp869']" name="encodings.cp869">
      <class base="codecs.Codec" init="obj = encodings.cp869.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp869.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp869.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp869.Codec" init="obj = encodings.cp869.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp869.Codec" init="obj = encodings.cp869.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp869.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.zlib_codec', 'zlib']" name="encodings.zlib_codec">
      <class base="codecs.Codec" init="obj = encodings.zlib_codec.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['None', 'None']</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['zlib_encode:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['None', 'None']</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['zlib_decode:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.zlib_codec.IncrementalEncoder()%%['NoneType']" name="IncrementalEncoder">
        <api name="__init__">
          <expr>None</expr>
          <args>['errors:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['None', 'None']</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="reset">
          <expr>obj.reset()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.zlib_codec.IncrementalDecoder()%%['NoneType']" name="IncrementalDecoder">
        <api name="__init__">
          <expr>None</expr>
          <args>['errors:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['None', 'None']</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="reset">
          <expr>obj.reset()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.zlib_codec.Codec" init="obj = encodings.zlib_codec.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.zlib_codec.Codec" init="obj = encodings.zlib_codec.StreamReader()%%[]" name="StreamReader"/>
      <api name="zlib_encode">
        <expr>encodings.zlib_codec.zlib_encode(input,errors)%%['bytes', 'str']</expr>
        <args>['input:bytes', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="zlib_decode">
        <expr>encodings.zlib_codec.zlib_decode(input,errors)%%['bytes', 'str']</expr>
        <args>['input:bytes', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getregentry">
        <expr>ret = encodings.zlib_codec.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp858']" name="encodings.cp858">
      <class base="codecs.Codec" init="obj = encodings.cp858.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp858.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp858.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp858.Codec" init="obj = encodings.cp858.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp858.Codec" init="obj = encodings.cp858.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp858.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp737']" name="encodings.cp737">
      <class base="codecs.Codec" init="obj = encodings.cp737.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp737.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp737.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp737.Codec" init="obj = encodings.cp737.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp737.Codec" init="obj = encodings.cp737.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp737.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.mac_cyrillic']" name="encodings.mac_cyrillic">
      <class base="codecs.Codec" init="obj = encodings.mac_cyrillic.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.mac_cyrillic.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.mac_cyrillic.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.mac_cyrillic.Codec" init="obj = encodings.mac_cyrillic.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.mac_cyrillic.Codec" init="obj = encodings.mac_cyrillic.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.mac_cyrillic.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.gb18030']" name="encodings.gb18030">
      <class base="codecs.Codec" init="obj = encodings.gb18030.Codec()%%[]" name="Codec"/>
      <class base="builtins.MultibyteIncrementalEncoder" init="obj = encodings.gb18030.IncrementalEncoder()%%[]" name="IncrementalEncoder"/>
      <class base="builtins.MultibyteIncrementalDecoder" init="obj = encodings.gb18030.IncrementalDecoder()%%[]" name="IncrementalDecoder"/>
      <class base="encodings.gb18030.Codec" init="obj = encodings.gb18030.StreamReader()%%[]" name="StreamReader"/>
      <class base="encodings.gb18030.Codec" init="obj = encodings.gb18030.StreamWriter()%%[]" name="StreamWriter"/>
      <api name="getregentry">
        <expr>ret = encodings.gb18030.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp861']" name="encodings.cp861">
      <class base="codecs.Codec" init="obj = encodings.cp861.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp861.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp861.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp861.Codec" init="obj = encodings.cp861.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp861.Codec" init="obj = encodings.cp861.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp861.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.euc_jp']" name="encodings.euc_jp">
      <class base="codecs.Codec" init="obj = encodings.euc_jp.Codec()%%[]" name="Codec"/>
      <class base="builtins.MultibyteIncrementalEncoder" init="obj = encodings.euc_jp.IncrementalEncoder()%%[]" name="IncrementalEncoder"/>
      <class base="builtins.MultibyteIncrementalDecoder" init="obj = encodings.euc_jp.IncrementalDecoder()%%[]" name="IncrementalDecoder"/>
      <class base="encodings.euc_jp.Codec" init="obj = encodings.euc_jp.StreamReader()%%[]" name="StreamReader"/>
      <class base="encodings.euc_jp.Codec" init="obj = encodings.euc_jp.StreamWriter()%%[]" name="StreamWriter"/>
      <api name="getregentry">
        <expr>ret = encodings.euc_jp.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.ascii']" name="encodings.ascii">
      <class base="codecs.Codec" init="obj = encodings.ascii.Codec()%%[]" name="Codec"/>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.ascii.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.ascii.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.ascii.Codec" init="obj = encodings.ascii.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.ascii.Codec" init="obj = encodings.ascii.StreamReader()%%[]" name="StreamReader"/>
      <class base="encodings.ascii.StreamWriter" init="obj = encodings.ascii.StreamConverter()%%[]" name="StreamConverter"/>
      <api name="getregentry">
        <expr>ret = encodings.ascii.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp1256']" name="encodings.cp1256">
      <class base="codecs.Codec" init="obj = encodings.cp1256.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp1256.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp1256.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp1256.Codec" init="obj = encodings.cp1256.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp1256.Codec" init="obj = encodings.cp1256.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp1256.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.shift_jisx0213']" name="encodings.shift_jisx0213">
      <class base="codecs.Codec" init="obj = encodings.shift_jisx0213.Codec()%%[]" name="Codec"/>
      <class base="builtins.MultibyteIncrementalEncoder" init="obj = encodings.shift_jisx0213.IncrementalEncoder()%%[]" name="IncrementalEncoder"/>
      <class base="builtins.MultibyteIncrementalDecoder" init="obj = encodings.shift_jisx0213.IncrementalDecoder()%%[]" name="IncrementalDecoder"/>
      <class base="encodings.shift_jisx0213.Codec" init="obj = encodings.shift_jisx0213.StreamReader()%%[]" name="StreamReader"/>
      <class base="encodings.shift_jisx0213.Codec" init="obj = encodings.shift_jisx0213.StreamWriter()%%[]" name="StreamWriter"/>
      <api name="getregentry">
        <expr>ret = encodings.shift_jisx0213.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp852']" name="encodings.cp852">
      <class base="codecs.Codec" init="obj = encodings.cp852.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp852.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp852.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp852.Codec" init="obj = encodings.cp852.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp852.Codec" init="obj = encodings.cp852.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp852.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp1254']" name="encodings.cp1254">
      <class base="codecs.Codec" init="obj = encodings.cp1254.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp1254.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp1254.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp1254.Codec" init="obj = encodings.cp1254.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp1254.Codec" init="obj = encodings.cp1254.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp1254.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.iso8859_16']" name="encodings.iso8859_16">
      <class base="codecs.Codec" init="obj = encodings.iso8859_16.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.iso8859_16.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.iso8859_16.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.iso8859_16.Codec" init="obj = encodings.iso8859_16.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.iso8859_16.Codec" init="obj = encodings.iso8859_16.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.iso8859_16.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.utf_32_be']" name="encodings.utf_32_be">
      <class base="codecs.IncrementalEncoder" init="obj = encodings.utf_32_be.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['None', 'None']</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.BufferedIncrementalDecoder" init="obj = encodings.utf_32_be.IncrementalDecoder()%%['None']" name="IncrementalDecoder"/>
      <class base="codecs.StreamWriter" init="obj = encodings.utf_32_be.StreamWriter(None)%%['None', 'None']" name="StreamWriter"/>
      <class base="codecs.StreamReader" init="obj = encodings.utf_32_be.StreamReader(None)%%['None', 'None']" name="StreamReader"/>
      <api name="decode">
        <expr>ret = encodings.utf_32_be.decode(input,errors)%%['memoryview', 'str']</expr>
        <args>['input:memoryview', 'errors:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getregentry">
        <expr>ret = encodings.utf_32_be.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.iso8859_15']" name="encodings.iso8859_15">
      <class base="codecs.Codec" init="obj = encodings.iso8859_15.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['memoryview', 'str']</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.iso8859_15.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.iso8859_15.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.iso8859_15.Codec" init="obj = encodings.iso8859_15.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.iso8859_15.Codec" init="obj = encodings.iso8859_15.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.iso8859_15.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.iso8859_4']" name="encodings.iso8859_4">
      <class base="codecs.Codec" init="obj = encodings.iso8859_4.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.iso8859_4.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.iso8859_4.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.iso8859_4.Codec" init="obj = encodings.iso8859_4.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.iso8859_4.Codec" init="obj = encodings.iso8859_4.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.iso8859_4.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp1125']" name="encodings.cp1125">
      <class base="codecs.Codec" init="obj = encodings.cp1125.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp1125.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp1125.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp1125.Codec" init="obj = encodings.cp1125.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp1125.Codec" init="obj = encodings.cp1125.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp1125.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp860']" name="encodings.cp860">
      <class base="codecs.Codec" init="obj = encodings.cp860.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp860.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp860.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp860.Codec" init="obj = encodings.cp860.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp860.Codec" init="obj = encodings.cp860.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp860.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.iso2022_jp_3']" name="encodings.iso2022_jp_3">
      <class base="codecs.Codec" init="obj = encodings.iso2022_jp_3.Codec()%%[]" name="Codec"/>
      <class base="builtins.MultibyteIncrementalEncoder" init="obj = encodings.iso2022_jp_3.IncrementalEncoder()%%[]" name="IncrementalEncoder"/>
      <class base="builtins.MultibyteIncrementalDecoder" init="obj = encodings.iso2022_jp_3.IncrementalDecoder()%%[]" name="IncrementalDecoder"/>
      <class base="encodings.iso2022_jp_3.Codec" init="obj = encodings.iso2022_jp_3.StreamReader()%%[]" name="StreamReader"/>
      <class base="encodings.iso2022_jp_3.Codec" init="obj = encodings.iso2022_jp_3.StreamWriter()%%[]" name="StreamWriter"/>
      <api name="getregentry">
        <expr>ret = encodings.iso2022_jp_3.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp863']" name="encodings.cp863">
      <class base="codecs.Codec" init="obj = encodings.cp863.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp863.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp863.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp863.Codec" init="obj = encodings.cp863.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp863.Codec" init="obj = encodings.cp863.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp863.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.mac_romanian']" name="encodings.mac_romanian">
      <class base="codecs.Codec" init="obj = encodings.mac_romanian.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['None', 'None']</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['None', 'None']</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.mac_romanian.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['None', 'None']</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.mac_romanian.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['None', 'None']</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.mac_romanian.Codec" init="obj = encodings.mac_romanian.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.mac_romanian.Codec" init="obj = encodings.mac_romanian.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.mac_romanian.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.utf_16_le']" name="encodings.utf_16_le">
      <class base="codecs.IncrementalEncoder" init="obj = encodings.utf_16_le.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.BufferedIncrementalDecoder" init="obj = encodings.utf_16_le.IncrementalDecoder()%%['None']" name="IncrementalDecoder"/>
      <class base="codecs.StreamWriter" init="obj = encodings.utf_16_le.StreamWriter(None)%%['None', 'None']" name="StreamWriter"/>
      <class base="codecs.StreamReader" init="obj = encodings.utf_16_le.StreamReader(None)%%['None', 'None']" name="StreamReader"/>
      <api name="decode">
        <expr>ret = encodings.utf_16_le.decode(input,errors)%%['int', 'str']</expr>
        <args>['input:int', 'errors:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getregentry">
        <expr>ret = encodings.utf_16_le.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.johab']" name="encodings.johab">
      <class base="codecs.Codec" init="obj = encodings.johab.Codec()%%[]" name="Codec"/>
      <class base="builtins.MultibyteIncrementalEncoder" init="obj = encodings.johab.IncrementalEncoder()%%[]" name="IncrementalEncoder"/>
      <class base="builtins.MultibyteIncrementalDecoder" init="obj = encodings.johab.IncrementalDecoder()%%[]" name="IncrementalDecoder"/>
      <class base="encodings.johab.Codec" init="obj = encodings.johab.StreamReader()%%[]" name="StreamReader"/>
      <class base="encodings.johab.Codec" init="obj = encodings.johab.StreamWriter()%%[]" name="StreamWriter"/>
      <api name="getregentry">
        <expr>ret = encodings.johab.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.euc_jis_2004']" name="encodings.euc_jis_2004">
      <class base="codecs.Codec" init="obj = encodings.euc_jis_2004.Codec()%%[]" name="Codec"/>
      <class base="builtins.MultibyteIncrementalEncoder" init="obj = encodings.euc_jis_2004.IncrementalEncoder()%%[]" name="IncrementalEncoder"/>
      <class base="builtins.MultibyteIncrementalDecoder" init="obj = encodings.euc_jis_2004.IncrementalDecoder()%%[]" name="IncrementalDecoder"/>
      <class base="encodings.euc_jis_2004.Codec" init="obj = encodings.euc_jis_2004.StreamReader()%%[]" name="StreamReader"/>
      <class base="encodings.euc_jis_2004.Codec" init="obj = encodings.euc_jis_2004.StreamWriter()%%[]" name="StreamWriter"/>
      <api name="getregentry">
        <expr>ret = encodings.euc_jis_2004.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.iso8859_3']" name="encodings.iso8859_3">
      <class base="codecs.Codec" init="obj = encodings.iso8859_3.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.iso8859_3.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.iso8859_3.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.iso8859_3.Codec" init="obj = encodings.iso8859_3.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.iso8859_3.Codec" init="obj = encodings.iso8859_3.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.iso8859_3.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp500']" name="encodings.cp500">
      <class base="codecs.Codec" init="obj = encodings.cp500.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp500.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp500.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp500.Codec" init="obj = encodings.cp500.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp500.Codec" init="obj = encodings.cp500.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp500.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.tis_620']" name="encodings.tis_620">
      <class base="codecs.Codec" init="obj = encodings.tis_620.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.tis_620.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.tis_620.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.tis_620.Codec" init="obj = encodings.tis_620.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.tis_620.Codec" init="obj = encodings.tis_620.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.tis_620.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.euc_jisx0213']" name="encodings.euc_jisx0213">
      <class base="codecs.Codec" init="obj = encodings.euc_jisx0213.Codec()%%[]" name="Codec"/>
      <class base="builtins.MultibyteIncrementalEncoder" init="obj = encodings.euc_jisx0213.IncrementalEncoder()%%[]" name="IncrementalEncoder"/>
      <class base="builtins.MultibyteIncrementalDecoder" init="obj = encodings.euc_jisx0213.IncrementalDecoder()%%[]" name="IncrementalDecoder"/>
      <class base="encodings.euc_jisx0213.Codec" init="obj = encodings.euc_jisx0213.StreamReader()%%[]" name="StreamReader"/>
      <class base="encodings.euc_jisx0213.Codec" init="obj = encodings.euc_jisx0213.StreamWriter()%%[]" name="StreamWriter"/>
      <api name="getregentry">
        <expr>ret = encodings.euc_jisx0213.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.iso8859_8']" name="encodings.iso8859_8">
      <class base="codecs.Codec" init="obj = encodings.iso8859_8.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.iso8859_8.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.iso8859_8.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.iso8859_8.Codec" init="obj = encodings.iso8859_8.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.iso8859_8.Codec" init="obj = encodings.iso8859_8.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.iso8859_8.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.iso8859_5']" name="encodings.iso8859_5">
      <class base="codecs.Codec" init="obj = encodings.iso8859_5.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.iso8859_5.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.iso8859_5.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.iso8859_5.Codec" init="obj = encodings.iso8859_5.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.iso8859_5.Codec" init="obj = encodings.iso8859_5.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.iso8859_5.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.iso8859_6']" name="encodings.iso8859_6">
      <class base="codecs.Codec" init="obj = encodings.iso8859_6.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.iso8859_6.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.iso8859_6.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.iso8859_6.Codec" init="obj = encodings.iso8859_6.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.iso8859_6.Codec" init="obj = encodings.iso8859_6.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.iso8859_6.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['binascii', 'codecs', 'encodings', 'encodings.hex_codec']" name="encodings.hex_codec">
      <class base="codecs.Codec" init="obj = encodings.hex_codec.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['None', 'None']</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['hex_encode:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['None', 'None']</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['hex_decode:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.hex_codec.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['None', 'None']</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.hex_codec.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['None', 'None']</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.hex_codec.Codec" init="obj = encodings.hex_codec.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.hex_codec.Codec" init="obj = encodings.hex_codec.StreamReader()%%[]" name="StreamReader"/>
      <api name="hex_encode">
        <expr>encodings.hex_codec.hex_encode(input,errors)%%['bytes', 'str']</expr>
        <args>['input:bytes', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="hex_decode">
        <expr>encodings.hex_codec.hex_decode(input,errors)%%['bytes', 'str']</expr>
        <args>['input:bytes', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getregentry">
        <expr>ret = encodings.hex_codec.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.mac_latin2']" name="encodings.mac_latin2">
      <class base="codecs.Codec" init="obj = encodings.mac_latin2.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.mac_latin2.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.mac_latin2.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.mac_latin2.Codec" init="obj = encodings.mac_latin2.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.mac_latin2.Codec" init="obj = encodings.mac_latin2.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.mac_latin2.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.iso2022_jp_1']" name="encodings.iso2022_jp_1">
      <class base="codecs.Codec" init="obj = encodings.iso2022_jp_1.Codec()%%[]" name="Codec"/>
      <class base="builtins.MultibyteIncrementalEncoder" init="obj = encodings.iso2022_jp_1.IncrementalEncoder()%%[]" name="IncrementalEncoder"/>
      <class base="builtins.MultibyteIncrementalDecoder" init="obj = encodings.iso2022_jp_1.IncrementalDecoder()%%[]" name="IncrementalDecoder"/>
      <class base="encodings.iso2022_jp_1.Codec" init="obj = encodings.iso2022_jp_1.StreamReader()%%[]" name="StreamReader"/>
      <class base="encodings.iso2022_jp_1.Codec" init="obj = encodings.iso2022_jp_1.StreamWriter()%%[]" name="StreamWriter"/>
      <api name="getregentry">
        <expr>ret = encodings.iso2022_jp_1.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp1250']" name="encodings.cp1250">
      <class base="codecs.Codec" init="obj = encodings.cp1250.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp1250.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp1250.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp1250.Codec" init="obj = encodings.cp1250.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp1250.Codec" init="obj = encodings.cp1250.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp1250.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.mac_turkish']" name="encodings.mac_turkish">
      <class base="codecs.Codec" init="obj = encodings.mac_turkish.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.mac_turkish.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.mac_turkish.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.mac_turkish.Codec" init="obj = encodings.mac_turkish.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.mac_turkish.Codec" init="obj = encodings.mac_turkish.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.mac_turkish.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.big5hkscs']" name="encodings.big5hkscs">
      <class base="codecs.Codec" init="obj = encodings.big5hkscs.Codec()%%[]" name="Codec"/>
      <class base="builtins.MultibyteIncrementalEncoder" init="obj = encodings.big5hkscs.IncrementalEncoder()%%[]" name="IncrementalEncoder"/>
      <class base="builtins.MultibyteIncrementalDecoder" init="obj = encodings.big5hkscs.IncrementalDecoder()%%[]" name="IncrementalDecoder"/>
      <class base="encodings.big5hkscs.Codec" init="obj = encodings.big5hkscs.StreamReader()%%[]" name="StreamReader"/>
      <class base="encodings.big5hkscs.Codec" init="obj = encodings.big5hkscs.StreamWriter()%%[]" name="StreamWriter"/>
      <api name="getregentry">
        <expr>ret = encodings.big5hkscs.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.raw_unicode_escape']" name="encodings.raw_unicode_escape">
      <class base="codecs.Codec" init="obj = encodings.raw_unicode_escape.Codec()%%[]" name="Codec"/>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.raw_unicode_escape.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.BufferedIncrementalDecoder" init="obj = encodings.raw_unicode_escape.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.raw_unicode_escape.Codec" init="obj = encodings.raw_unicode_escape.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.raw_unicode_escape.Codec" init="obj = encodings.raw_unicode_escape.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.raw_unicode_escape.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp775']" name="encodings.cp775">
      <class base="codecs.Codec" init="obj = encodings.cp775.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp775.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp775.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp775.Codec" init="obj = encodings.cp775.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp775.Codec" init="obj = encodings.cp775.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp775.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.ptcp154']" name="encodings.ptcp154">
      <class base="codecs.Codec" init="obj = encodings.ptcp154.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.ptcp154.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.ptcp154.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.ptcp154.Codec" init="obj = encodings.ptcp154.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.ptcp154.Codec" init="obj = encodings.ptcp154.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.ptcp154.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp1140']" name="encodings.cp1140">
      <class base="codecs.Codec" init="obj = encodings.cp1140.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp1140.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp1140.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp1140.Codec" init="obj = encodings.cp1140.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp1140.Codec" init="obj = encodings.cp1140.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp1140.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.hz']" name="encodings.hz">
      <class base="codecs.Codec" init="obj = encodings.hz.Codec()%%[]" name="Codec"/>
      <class base="builtins.MultibyteIncrementalEncoder" init="obj = encodings.hz.IncrementalEncoder()%%[]" name="IncrementalEncoder"/>
      <class base="builtins.MultibyteIncrementalDecoder" init="obj = encodings.hz.IncrementalDecoder()%%[]" name="IncrementalDecoder"/>
      <class base="encodings.hz.Codec" init="obj = encodings.hz.StreamReader()%%[]" name="StreamReader"/>
      <class base="encodings.hz.Codec" init="obj = encodings.hz.StreamWriter()%%[]" name="StreamWriter"/>
      <api name="getregentry">
        <expr>ret = encodings.hz.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.gb2312']" name="encodings.gb2312">
      <class base="codecs.Codec" init="obj = encodings.gb2312.Codec()%%[]" name="Codec"/>
      <class base="builtins.MultibyteIncrementalEncoder" init="obj = encodings.gb2312.IncrementalEncoder()%%[]" name="IncrementalEncoder"/>
      <class base="builtins.MultibyteIncrementalDecoder" init="obj = encodings.gb2312.IncrementalDecoder()%%[]" name="IncrementalDecoder"/>
      <class base="encodings.gb2312.Codec" init="obj = encodings.gb2312.StreamReader()%%[]" name="StreamReader"/>
      <class base="encodings.gb2312.Codec" init="obj = encodings.gb2312.StreamWriter()%%[]" name="StreamWriter"/>
      <api name="getregentry">
        <expr>ret = encodings.gb2312.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.iso8859_10']" name="encodings.iso8859_10">
      <class base="codecs.Codec" init="obj = encodings.iso8859_10.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.iso8859_10.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.iso8859_10.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.iso8859_10.Codec" init="obj = encodings.iso8859_10.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.iso8859_10.Codec" init="obj = encodings.iso8859_10.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.iso8859_10.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp1006']" name="encodings.cp1006">
      <class base="codecs.Codec" init="obj = encodings.cp1006.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp1006.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp1006.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp1006.Codec" init="obj = encodings.cp1006.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp1006.Codec" init="obj = encodings.cp1006.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp1006.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp850']" name="encodings.cp850">
      <class base="codecs.Codec" init="obj = encodings.cp850.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp850.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp850.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp850.Codec" init="obj = encodings.cp850.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp850.Codec" init="obj = encodings.cp850.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp850.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp1026']" name="encodings.cp1026">
      <class base="codecs.Codec" init="obj = encodings.cp1026.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp1026.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp1026.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp1026.Codec" init="obj = encodings.cp1026.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp1026.Codec" init="obj = encodings.cp1026.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp1026.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.iso8859_9']" name="encodings.iso8859_9">
      <class base="codecs.Codec" init="obj = encodings.iso8859_9.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.iso8859_9.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.iso8859_9.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.iso8859_9.Codec" init="obj = encodings.iso8859_9.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.iso8859_9.Codec" init="obj = encodings.iso8859_9.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.iso8859_9.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp037']" name="encodings.cp037">
      <class base="codecs.Codec" init="obj = encodings.cp037.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp037.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp037.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp037.Codec" init="obj = encodings.cp037.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp037.Codec" init="obj = encodings.cp037.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp037.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp864']" name="encodings.cp864">
      <class base="codecs.Codec" init="obj = encodings.cp864.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp864.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp864.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp864.Codec" init="obj = encodings.cp864.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp864.Codec" init="obj = encodings.cp864.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp864.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.utf_16_be']" name="encodings.utf_16_be">
      <class base="codecs.IncrementalEncoder" init="obj = encodings.utf_16_be.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.BufferedIncrementalDecoder" init="obj = encodings.utf_16_be.IncrementalDecoder()%%['None']" name="IncrementalDecoder"/>
      <class base="codecs.StreamWriter" init="obj = encodings.utf_16_be.StreamWriter(None)%%['None', 'None']" name="StreamWriter"/>
      <class base="codecs.StreamReader" init="obj = encodings.utf_16_be.StreamReader(None)%%['None', 'None']" name="StreamReader"/>
      <api name="decode">
        <expr>ret = encodings.utf_16_be.decode(input,errors)%%['int', 'str']</expr>
        <args>['input:int', 'errors:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getregentry">
        <expr>ret = encodings.utf_16_be.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.utf_16', 'sys']" name="encodings.utf_16">
      <class base="codecs.IncrementalEncoder" init="obj = encodings.utf_16.IncrementalEncoder()%%['NoneType']" name="IncrementalEncoder">
        <api name="__init__">
          <expr>None</expr>
          <args>['errors:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getstate">
          <expr>ret = obj.getstate()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setstate">
          <expr>obj.setstate(state)%%['int']</expr>
          <args>['state:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.BufferedIncrementalDecoder" init="obj = encodings.utf_16.IncrementalDecoder()%%['NoneType']" name="IncrementalDecoder">
        <api name="__init__">
          <expr>None</expr>
          <args>['errors:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getstate">
          <expr>obj.getstate()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.StreamWriter" init="obj = encodings.utf_16.StreamWriter(None)%%['NoneType', 'NoneType']" name="StreamWriter">
        <api name="__init__">
          <expr>None</expr>
          <args>['stream:NoneType', 'errors:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.StreamReader" init="obj = encodings.utf_16.StreamReader(None)%%['None', 'None']" name="StreamReader">
        <api name="decode">
          <expr>obj.decode(input,errors)%%['bytes', 'str']</expr>
          <args>['input:bytes', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="decode">
        <expr>ret = encodings.utf_16.decode(input,errors)%%['int', 'str']</expr>
        <args>['input:int', 'errors:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getregentry">
        <expr>ret = encodings.utf_16.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>UnicodeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp875']" name="encodings.cp875">
      <class base="codecs.Codec" init="obj = encodings.cp875.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp875.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp875.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp875.Codec" init="obj = encodings.cp875.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp875.Codec" init="obj = encodings.cp875.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp875.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.iso2022_jp_2004']" name="encodings.iso2022_jp_2004">
      <class base="codecs.Codec" init="obj = encodings.iso2022_jp_2004.Codec()%%[]" name="Codec"/>
      <class base="builtins.MultibyteIncrementalEncoder" init="obj = encodings.iso2022_jp_2004.IncrementalEncoder()%%[]" name="IncrementalEncoder"/>
      <class base="builtins.MultibyteIncrementalDecoder" init="obj = encodings.iso2022_jp_2004.IncrementalDecoder()%%[]" name="IncrementalDecoder"/>
      <class base="encodings.iso2022_jp_2004.Codec" init="obj = encodings.iso2022_jp_2004.StreamReader()%%[]" name="StreamReader"/>
      <class base="encodings.iso2022_jp_2004.Codec" init="obj = encodings.iso2022_jp_2004.StreamWriter()%%[]" name="StreamWriter"/>
      <api name="getregentry">
        <expr>ret = encodings.iso2022_jp_2004.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.shift_jis_2004']" name="encodings.shift_jis_2004">
      <class base="codecs.Codec" init="obj = encodings.shift_jis_2004.Codec()%%[]" name="Codec"/>
      <class base="builtins.MultibyteIncrementalEncoder" init="obj = encodings.shift_jis_2004.IncrementalEncoder()%%[]" name="IncrementalEncoder"/>
      <class base="builtins.MultibyteIncrementalDecoder" init="obj = encodings.shift_jis_2004.IncrementalDecoder()%%[]" name="IncrementalDecoder"/>
      <class base="encodings.shift_jis_2004.Codec" init="obj = encodings.shift_jis_2004.StreamReader()%%[]" name="StreamReader"/>
      <class base="encodings.shift_jis_2004.Codec" init="obj = encodings.shift_jis_2004.StreamWriter()%%[]" name="StreamWriter"/>
      <api name="getregentry">
        <expr>ret = encodings.shift_jis_2004.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp949']" name="encodings.cp949">
      <class base="codecs.Codec" init="obj = encodings.cp949.Codec()%%[]" name="Codec"/>
      <class base="builtins.MultibyteIncrementalEncoder" init="obj = encodings.cp949.IncrementalEncoder()%%[]" name="IncrementalEncoder"/>
      <class base="builtins.MultibyteIncrementalDecoder" init="obj = encodings.cp949.IncrementalDecoder()%%[]" name="IncrementalDecoder"/>
      <class base="encodings.cp949.Codec" init="obj = encodings.cp949.StreamReader()%%[]" name="StreamReader"/>
      <class base="encodings.cp949.Codec" init="obj = encodings.cp949.StreamWriter()%%[]" name="StreamWriter"/>
      <api name="getregentry">
        <expr>ret = encodings.cp949.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp857']" name="encodings.cp857">
      <class base="codecs.Codec" init="obj = encodings.cp857.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp857.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp857.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp857.Codec" init="obj = encodings.cp857.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp857.Codec" init="obj = encodings.cp857.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp857.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.mac_iceland']" name="encodings.mac_iceland">
      <class base="codecs.Codec" init="obj = encodings.mac_iceland.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['memoryview', 'str']</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.mac_iceland.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.mac_iceland.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.mac_iceland.Codec" init="obj = encodings.mac_iceland.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.mac_iceland.Codec" init="obj = encodings.mac_iceland.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.mac_iceland.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.iso8859_13']" name="encodings.iso8859_13">
      <class base="codecs.Codec" init="obj = encodings.iso8859_13.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.iso8859_13.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.iso8859_13.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.iso8859_13.Codec" init="obj = encodings.iso8859_13.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.iso8859_13.Codec" init="obj = encodings.iso8859_13.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.iso8859_13.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp865']" name="encodings.cp865">
      <class base="codecs.Codec" init="obj = encodings.cp865.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp865.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp865.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp865.Codec" init="obj = encodings.cp865.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp865.Codec" init="obj = encodings.cp865.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp865.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp720']" name="encodings.cp720">
      <class base="codecs.Codec" init="obj = encodings.cp720.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp720.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp720.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp720.Codec" init="obj = encodings.cp720.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp720.Codec" init="obj = encodings.cp720.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp720.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.iso8859_2']" name="encodings.iso8859_2">
      <class base="codecs.Codec" init="obj = encodings.iso8859_2.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['memoryview', 'str']</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.iso8859_2.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.iso8859_2.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.iso8859_2.Codec" init="obj = encodings.iso8859_2.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.iso8859_2.Codec" init="obj = encodings.iso8859_2.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.iso8859_2.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.kz1048']" name="encodings.kz1048">
      <class base="codecs.Codec" init="obj = encodings.kz1048.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.kz1048.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.kz1048.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.kz1048.Codec" init="obj = encodings.kz1048.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.kz1048.Codec" init="obj = encodings.kz1048.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.kz1048.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.iso8859_14']" name="encodings.iso8859_14">
      <class base="codecs.Codec" init="obj = encodings.iso8859_14.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.iso8859_14.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.iso8859_14.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.iso8859_14.Codec" init="obj = encodings.iso8859_14.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.iso8859_14.Codec" init="obj = encodings.iso8859_14.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.iso8859_14.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.iso8859_7']" name="encodings.iso8859_7">
      <class base="codecs.Codec" init="obj = encodings.iso8859_7.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.iso8859_7.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.iso8859_7.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.iso8859_7.Codec" init="obj = encodings.iso8859_7.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.iso8859_7.Codec" init="obj = encodings.iso8859_7.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.iso8859_7.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.hp_roman8']" name="encodings.hp_roman8">
      <class base="codecs.Codec" init="obj = encodings.hp_roman8.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.hp_roman8.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.hp_roman8.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.hp_roman8.Codec" init="obj = encodings.hp_roman8.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.hp_roman8.Codec" init="obj = encodings.hp_roman8.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.hp_roman8.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.rot_13', 'sys']" name="encodings.rot_13">
      <class base="codecs.Codec" init="obj = encodings.rot_13.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>obj.encode(input,errors)%%['None', 'None']</expr>
          <args>['input:None', 'errors:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)%%['None', 'None']</expr>
          <args>['input:None', 'errors:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.rot_13.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['None', 'None']</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.rot_13.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['None', 'None']</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.rot_13.Codec" init="obj = encodings.rot_13.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.rot_13.Codec" init="obj = encodings.rot_13.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.rot_13.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="rot13">
        <expr>encodings.rot_13.rot13(infile,outfile)%%['None', 'None']</expr>
        <args>['infile:None', 'outfile:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'functools']" name="encodings.cp65001">
      <errors>
        <exception>LookupError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.unicode_internal']" name="encodings.unicode_internal">
      <class base="codecs.Codec" init="obj = encodings.unicode_internal.Codec()%%[]" name="Codec"/>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.unicode_internal.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['None', 'None']</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.unicode_internal.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['None', 'None']</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.unicode_internal.Codec" init="obj = encodings.unicode_internal.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.unicode_internal.Codec" init="obj = encodings.unicode_internal.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.unicode_internal.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp950']" name="encodings.cp950">
      <class base="codecs.Codec" init="obj = encodings.cp950.Codec()%%[]" name="Codec"/>
      <class base="builtins.MultibyteIncrementalEncoder" init="obj = encodings.cp950.IncrementalEncoder()%%[]" name="IncrementalEncoder"/>
      <class base="builtins.MultibyteIncrementalDecoder" init="obj = encodings.cp950.IncrementalDecoder()%%[]" name="IncrementalDecoder"/>
      <class base="encodings.cp950.Codec" init="obj = encodings.cp950.StreamReader()%%[]" name="StreamReader"/>
      <class base="encodings.cp950.Codec" init="obj = encodings.cp950.StreamWriter()%%[]" name="StreamWriter"/>
      <api name="getregentry">
        <expr>ret = encodings.cp950.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp1255']" name="encodings.cp1255">
      <class base="codecs.Codec" init="obj = encodings.cp1255.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp1255.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp1255.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp1255.Codec" init="obj = encodings.cp1255.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp1255.Codec" init="obj = encodings.cp1255.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp1255.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.charmap']" name="encodings.charmap">
      <class base="codecs.Codec" init="obj = encodings.charmap.Codec()%%[]" name="Codec"/>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.charmap.IncrementalEncoder()%%['NoneType', 'NoneType']" name="IncrementalEncoder">
        <api name="__init__">
          <expr>None</expr>
          <args>['errors:NoneType', 'mapping:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.charmap.IncrementalDecoder()%%['NoneType', 'NoneType']" name="IncrementalDecoder">
        <api name="__init__">
          <expr>None</expr>
          <args>['errors:NoneType', 'mapping:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.charmap.Codec" init="obj = encodings.charmap.StreamWriter(None)%%['NoneType', 'NoneType', 'NoneType']" name="StreamWriter">
        <api name="__init__">
          <expr>None</expr>
          <args>['stream:NoneType', 'errors:NoneType', 'mapping:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.charmap.Codec" init="obj = encodings.charmap.StreamReader(None)%%['NoneType', 'NoneType', 'NoneType']" name="StreamReader">
        <api name="__init__">
          <expr>None</expr>
          <args>['stream:NoneType', 'errors:NoneType', 'mapping:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="getregentry">
        <expr>ret = encodings.charmap.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp273']" name="encodings.cp273">
      <class base="codecs.Codec" init="obj = encodings.cp273.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['memoryview', 'str']</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp273.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['None', 'None']</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp273.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['None', 'None']</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp273.Codec" init="obj = encodings.cp273.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp273.Codec" init="obj = encodings.cp273.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp273.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp874']" name="encodings.cp874">
      <class base="codecs.Codec" init="obj = encodings.cp874.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp874.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp874.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp874.Codec" init="obj = encodings.cp874.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp874.Codec" init="obj = encodings.cp874.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp874.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['io:BytesIO']" imports="['binascii', 'codecs', 'encodings', 'encodings.uu_codec']" name="encodings.uu_codec">
      <class base="codecs.Codec" init="obj = encodings.uu_codec.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['None', 'None']</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['uu_encode:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['None', 'None']</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['uu_decode:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.uu_codec.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['None', 'None']</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.uu_codec.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['None', 'None']</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.uu_codec.Codec" init="obj = encodings.uu_codec.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.uu_codec.Codec" init="obj = encodings.uu_codec.StreamReader()%%[]" name="StreamReader"/>
      <api name="uu_encode">
        <expr>encodings.uu_codec.uu_encode(input,errors,filename,mode)%%['bytes', 'str', 'str', 'int']</expr>
        <args>['input:bytes', 'errors:str', 'filename:str', 'mode:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="uu_decode">
        <expr>encodings.uu_codec.uu_decode(input,errors)%%['bytes', 'str']</expr>
        <args>['input:bytes', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getregentry">
        <expr>ret = encodings.uu_codec.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>binascii.Error</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp1251']" name="encodings.cp1251">
      <class base="codecs.Codec" init="obj = encodings.cp1251.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp1251.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp1251.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp1251.Codec" init="obj = encodings.cp1251.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp1251.Codec" init="obj = encodings.cp1251.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp1251.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp1258']" name="encodings.cp1258">
      <class base="codecs.Codec" init="obj = encodings.cp1258.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp1258.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp1258.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp1258.Codec" init="obj = encodings.cp1258.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp1258.Codec" init="obj = encodings.cp1258.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp1258.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.iso2022_jp']" name="encodings.iso2022_jp">
      <class base="codecs.Codec" init="obj = encodings.iso2022_jp.Codec()%%[]" name="Codec"/>
      <class base="builtins.MultibyteIncrementalEncoder" init="obj = encodings.iso2022_jp.IncrementalEncoder()%%[]" name="IncrementalEncoder"/>
      <class base="builtins.MultibyteIncrementalDecoder" init="obj = encodings.iso2022_jp.IncrementalDecoder()%%[]" name="IncrementalDecoder"/>
      <class base="encodings.iso2022_jp.Codec" init="obj = encodings.iso2022_jp.StreamReader()%%[]" name="StreamReader"/>
      <class base="encodings.iso2022_jp.Codec" init="obj = encodings.iso2022_jp.StreamWriter()%%[]" name="StreamWriter"/>
      <api name="getregentry">
        <expr>ret = encodings.iso2022_jp.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.utf_8_sig']" name="encodings.utf_8_sig">
      <class base="codecs.IncrementalEncoder" init="obj = encodings.utf_8_sig.IncrementalEncoder()%%['NoneType']" name="IncrementalEncoder">
        <api name="__init__">
          <expr>None</expr>
          <args>['errors:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getstate">
          <expr>ret = obj.getstate()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setstate">
          <expr>obj.setstate(state)%%['None']</expr>
          <args>['state:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.BufferedIncrementalDecoder" init="obj = encodings.utf_8_sig.IncrementalDecoder()%%['NoneType']" name="IncrementalDecoder">
        <api name="__init__">
          <expr>None</expr>
          <args>['errors:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.StreamWriter" init="obj = encodings.utf_8_sig.StreamWriter(None)%%['None', 'None']" name="StreamWriter"/>
      <class base="codecs.StreamReader" init="obj = encodings.utf_8_sig.StreamReader(None)%%['None', 'None']" name="StreamReader">
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['bytes', 'str']</expr>
          <args>['input:bytes', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="encode">
        <expr>encodings.utf_8_sig.encode(input,errors)%%['str', 'str']</expr>
        <args>['input:str', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="decode">
        <expr>encodings.utf_8_sig.decode(input,errors)%%['memoryview', 'str']</expr>
        <args>['input:memoryview', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getregentry">
        <expr>ret = encodings.utf_8_sig.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codecs', 'encodings', 'encodings.cp424']" name="encodings.cp424">
      <class base="codecs.Codec" init="obj = encodings.cp424.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>ret = obj.encode(input,errors)%%['str', 'str']</expr>
          <args>['input:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,errors)%%['int', 'str']</expr>
          <args>['input:int', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = encodings.cp424.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = encodings.cp424.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="encodings.cp424.Codec" init="obj = encodings.cp424.StreamWriter()%%[]" name="StreamWriter"/>
      <class base="encodings.cp424.Codec" init="obj = encodings.cp424.StreamReader()%%[]" name="StreamReader"/>
      <api name="getregentry">
        <expr>ret = encodings.cp424.getregentry()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
  </library>
  <library name="pydoc_data">
    <module importfrom="[]" imports="['pydoc_data', 'pydoc_data.topics']" name="pydoc_data.topics"/>
  </library>
  <library name="venv"/>
  <library name="email">
    <module importfrom="['email:errors', 'email:utils', 'types:MappingProxyType']" imports="['email', 'email.headerregistry']" name="email.headerregistry">
      <class init="obj = email.headerregistry.Address()%%['NoneType', 'NoneType', 'NoneType', 'NoneType']" name="Address">
        <api name="__init__">
          <expr>None</expr>
          <args>['display_name:NoneType', 'username:NoneType', 'domain:NoneType', 'addr_spec:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="display_name">
          <expr>ret = obj.display_name()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="username">
          <expr>ret = obj.username()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="domain">
          <expr>ret = obj.domain()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="addr_spec">
          <expr>ret = obj.addr_spec()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType', 'lp:str']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = email.headerregistry.Group()%%['NoneType', 'NoneType']" name="Group">
        <api name="__init__">
          <expr>None</expr>
          <args>['display_name:NoneType', 'addresses:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="display_name">
          <expr>ret = obj.display_name()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="addresses">
          <expr>ret = obj.addresses()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="builtins.str" init="obj = email.headerregistry.BaseHeader()%%[]" name="BaseHeader">
        <api name="name">
          <expr>ret = obj.name()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="defects">
          <expr>ret = obj.defects()%%[]</expr>
          <args>[]</args>
          <return>['tuple:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = email.headerregistry.UnstructuredHeader()%%[]" name="UnstructuredHeader"/>
      <class base="email.headerregistry.UnstructuredHeader" init="obj = email.headerregistry.UniqueUnstructuredHeader()%%[]" name="UniqueUnstructuredHeader"/>
      <class init="obj = email.headerregistry.DateHeader()%%[]" name="DateHeader">
        <api name="datetime">
          <expr>ret = obj.datetime()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="email.headerregistry.DateHeader" init="obj = email.headerregistry.UniqueDateHeader()%%[]" name="UniqueDateHeader"/>
      <class init="obj = email.headerregistry.AddressHeader()%%[]" name="AddressHeader">
        <api name="groups">
          <expr>ret = obj.groups()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="addresses">
          <expr>ret = obj.addresses()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="email.headerregistry.AddressHeader" init="obj = email.headerregistry.UniqueAddressHeader()%%[]" name="UniqueAddressHeader"/>
      <class base="email.headerregistry.AddressHeader" init="obj = email.headerregistry.SingleAddressHeader()%%[]" name="SingleAddressHeader">
        <api name="address">
          <expr>ret = obj.address()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="email.headerregistry.SingleAddressHeader" init="obj = email.headerregistry.UniqueSingleAddressHeader()%%[]" name="UniqueSingleAddressHeader"/>
      <class init="obj = email.headerregistry.MIMEVersionHeader()%%[]" name="MIMEVersionHeader">
        <api name="major">
          <expr>ret = obj.major()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="minor">
          <expr>ret = obj.minor()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="version">
          <expr>ret = obj.version()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = email.headerregistry.ParameterizedMIMEHeader()%%[]" name="ParameterizedMIMEHeader">
        <api name="params">
          <expr>ret = obj.params()%%[]</expr>
          <args>[]</args>
          <return>['MappingProxyType:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="email.headerregistry.ParameterizedMIMEHeader" init="obj = email.headerregistry.ContentTypeHeader()%%[]" name="ContentTypeHeader">
        <api name="maintype">
          <expr>ret = obj.maintype()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="subtype">
          <expr>ret = obj.subtype()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="content_type">
          <expr>ret = obj.content_type()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="email.headerregistry.ParameterizedMIMEHeader" init="obj = email.headerregistry.ContentDispositionHeader()%%[]" name="ContentDispositionHeader">
        <api name="content_disposition">
          <expr>ret = obj.content_disposition()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = email.headerregistry.ContentTransferEncodingHeader()%%[]" name="ContentTransferEncodingHeader">
        <api name="cte">
          <expr>ret = obj.cte()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = email.headerregistry.HeaderRegistry()%%['NoneType', 'NoneType', 'NoneType']" name="HeaderRegistry">
        <api name="__init__">
          <expr>None</expr>
          <args>['base_class:NoneType', 'default_class:NoneType', 'use_default_map:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['BaseHeader', 'UnstructuredHeader', None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="map_to_type">
          <expr>obj.map_to_type(name,cls)%%['str', 'type']</expr>
          <args>['name:str', 'cls:type']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['base64:encodebytes', 'quopri:encodestring']" imports="['email', 'email.encoders']" name="email.encoders">
      <api name="encode_base64">
        <expr>email.encoders.encode_base64(msg)%%['MIMEImage']</expr>
        <args>['msg:MIMEImage']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="encode_quopri">
        <expr>email.encoders.encode_quopri(msg)%%['MIMEApplication']</expr>
        <args>['msg:MIMEApplication']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="encode_7or8bit">
        <expr>email.encoders.encode_7or8bit(msg)%%['Message']</expr>
        <args>['msg:Message']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="encode_noop">
        <expr>email.encoders.encode_noop(msg)%%['MIMEApplication']</expr>
        <args>['msg:MIMEApplication']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>UnicodeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['email._encoded_words:decode_b', 'email._policybase:Policy', 'email._policybase:compat32', 'email.generator:BytesGenerator', 'email.generator:Generator', 'email.iterators:walk', 'email:charset', 'email:errors', 'email:utils', 'io:BytesIO', 'io:StringIO']" imports="['email', 'email.message', 'quopri', 're', 'uu']" name="email.message">
      <class init="obj = email.message.Message()%%['NoneType']" name="Message">
        <api name="__init__">
          <expr>None</expr>
          <args>['policy:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['compat32']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_multipart">
          <expr>ret = obj.is_multipart()%%[]</expr>
          <args>[]</args>
          <return>['isinstance:builtin_function_or_method']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_unixfrom">
          <expr>obj.set_unixfrom(unixfrom)%%['str']</expr>
          <args>['unixfrom:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_unixfrom">
          <expr>ret = obj.get_unixfrom()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="attach">
          <expr>obj.attach(payload)%%['Message']</expr>
          <args>['payload:Message']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_payload">
          <expr>ret = obj.get_payload(i,decode)%%['int', 'bool']</expr>
          <args>['i:int', 'decode:bool']</args>
          <return>['ret:NoneType', 'bpayload:bytes', 'payload:str']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_payload">
          <expr>obj.set_payload(payload,charset)%%['str', 'str']</expr>
          <args>['payload:str', 'charset:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_charset">
          <expr>ret = obj.get_charset()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="keys">
          <expr>ret = obj.keys()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="values">
          <expr>ret = obj.values()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="items">
          <expr>ret = obj.items()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_raw">
          <expr>obj.set_raw(name,value)%%['str', 'str']</expr>
          <args>['name:str', 'value:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="raw_items">
          <expr>ret = obj.raw_items()%%[]</expr>
          <args>[]</args>
          <return>['iter:builtin_function_or_method']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_all">
          <expr>ret = obj.get_all(name,failobj)%%['str', 'str']</expr>
          <args>['name:str', 'failobj:str']</args>
          <return>['failobj:str', 'values:list']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_content_maintype">
          <expr>ret = obj.get_content_maintype()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_content_subtype">
          <expr>ret = obj.get_content_subtype()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_default_type">
          <expr>obj.set_default_type(ctype)%%['str']</expr>
          <args>['ctype:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_type">
          <expr>obj.set_type(type,header,requote)%%['str', 'str', 'bool']</expr>
          <args>['type:str', 'header:str', 'requote:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_filename">
          <expr>ret = obj.get_filename(failobj)%%['str']</expr>
          <args>['failobj:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_boundary">
          <expr>ret = obj.get_boundary(failobj)%%['NoneType']</expr>
          <args>['failobj:NoneType']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_boundary">
          <expr>obj.set_boundary(boundary)%%['str']</expr>
          <args>['boundary:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_charsets">
          <expr>ret = obj.get_charsets(failobj)%%['str']</expr>
          <args>['failobj:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_content_disposition">
          <expr>ret = obj.get_content_disposition()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType', 'c_d:str']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="email.message.Message" init="obj = email.message.MIMEPart()%%['NoneType']" name="MIMEPart">
        <api name="__init__">
          <expr>None</expr>
          <args>['policy:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_attachment">
          <expr>ret = obj.is_attachment()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_body">
          <expr>ret = obj.get_body(preferencelist)%%['tuple']</expr>
          <args>['preferencelist:tuple']</args>
          <return>['body:MIMEPart']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="iter_attachments">
          <expr>obj.iter_attachments()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="iter_parts">
          <expr>obj.iter_parts()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="make_related">
          <expr>obj.make_related(boundary)%%['str']</expr>
          <args>['boundary:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="make_alternative">
          <expr>obj.make_alternative(boundary)%%['str']</expr>
          <args>['boundary:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="make_mixed">
          <expr>obj.make_mixed(boundary)%%['str']</expr>
          <args>['boundary:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_related">
          <expr>obj.add_related()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_alternative">
          <expr>obj.add_alternative()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_attachment">
          <expr>obj.add_attachment()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clear">
          <expr>obj.clear()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clear_content">
          <expr>obj.clear_content()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="email.message.MIMEPart" init="obj = email.message.EmailMessage()%%['NoneType']" name="EmailMessage"/>
      <errors>
        <exception>AttributeError</exception>
        <exception>LookupError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>UnicodeEncodeError</exception>
        <exception>UnicodeError</exception>
        <exception>ValueError</exception>
        <exception>errors.HeaderParseError</exception>
        <exception>uu.Error</exception>
      </errors>
    </module>
    <module importfrom="['copy:deepcopy', 'io:BytesIO', 'io:StringIO']" imports="['email', 'email.generator', 'random', 're', 'sys', 'time']" name="email.generator">
      <class init="obj = email.generator.Generator(None)%%['NoneType', 'NoneType', 'NoneType']" name="Generator">
        <api name="__init__">
          <expr>None</expr>
          <args>['outfp:NoneType', 'mangle_from_:NoneType', 'maxheaderlen:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['policy:NoneType']</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
      </class>
      <class base="email.generator.Generator" init="obj = email.generator.BytesGenerator(None)%%['NoneType', 'NoneType', 'NoneType']" name="BytesGenerator"/>
      <class base="email.generator.Generator" init="obj = email.generator.DecodedGenerator(None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType']" name="DecodedGenerator">
        <api name="__init__">
          <expr>None</expr>
          <args>['outfp:NoneType', 'mangle_from_:NoneType', 'maxheaderlen:NoneType', 'fmt:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['policy:NoneType']</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['email.encoders:encode_7or8bit', 'email:errors', 'functools:partial']" imports="['email', 'email.base64mime', 'email.charset', 'email.quoprimime']" name="email.charset">
      <class init="obj = email.charset.Charset()%%['NoneType']" name="Charset">
        <api name="__init__">
          <expr>None</expr>
          <args>['input_charset:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['DEFAULT_CHARSET']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_body_encoding">
          <expr>ret = obj.get_body_encoding()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType', 'encode_7or8bit:function']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="header_encode_lines">
          <expr>ret = obj.header_encode_lines(string,maxlengths)%%['str', 'generator']</expr>
          <args>['string:str', 'maxlengths:generator']</args>
          <return>['lines:list']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="add_charset">
        <expr>email.charset.add_charset(charset,header_enc,body_enc,output_charset)%%['str', 'int', 'NoneType', 'str']</expr>
        <args>['charset:str', 'header_enc:int', 'body_enc:NoneType', 'output_charset:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="add_alias">
        <expr>email.charset.add_alias(alias,canonical)%%['None', 'None']</expr>
        <args>['alias:None', 'canonical:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="add_codec">
        <expr>email.charset.add_codec(charset,codecname)%%['None', 'None']</expr>
        <args>['charset:None', 'codecname:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['email.errors:HeaderParseError', 'email:charset']" imports="['binascii', 'email', 'email.base64mime', 'email.header', 'email.quoprimime', 're']" name="email.header">
      <class init="obj = email.header.Header()%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="Header">
        <api name="__init__">
          <expr>None</expr>
          <args>['s:NoneType', 'charset:NoneType', 'maxlinelen:NoneType', 'header_name:NoneType', 'continuation_ws:NoneType', 'errors:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="decode_header">
        <expr>ret = email.header.decode_header(header)%%['str']</expr>
        <args>['header:str']</args>
        <return>['ret:NoneType', 'collapsed:list']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="make_header">
        <expr>ret = email.header.make_header(decoded_seq,maxlinelen,header_name,continuation_ws)%%['list', 'NoneType', 'NoneType', 'str']</expr>
        <args>['decoded_seq:list', 'maxlinelen:NoneType', 'header_name:NoneType', 'continuation_ws:str']</args>
        <return>['h:Header']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AssertionError</exception>
        <exception>AttributeError</exception>
        <exception>HeaderParseError</exception>
        <exception>IndexError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>UnicodeEncodeError</exception>
        <exception>ValueError</exception>
        <exception>binascii.Error</exception>
      </errors>
    </module>
    <module importfrom="['collections:deque', 'email._policybase:compat32', 'email:errors', 'io:StringIO']" imports="['email', 'email.feedparser', 're']" name="email.feedparser">
      <class base="builtins.object" init="obj = email.feedparser.BufferedSubFile()%%[]" name="BufferedSubFile">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="push_eof_matcher">
          <expr>obj.push_eof_matcher(pred)%%['builtin_function_or_method']</expr>
          <args>['pred:builtin_function_or_method']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pop_eof_matcher">
          <expr>ret = obj.pop_eof_matcher()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="close">
          <expr>obj.close()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unreadline">
          <expr>obj.unreadline(line)%%['str']</expr>
          <args>['line:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="push">
          <expr>obj.push(data)%%['str']</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = email.feedparser.FeedParser()%%['NoneType']" name="FeedParser">
        <api name="__init__">
          <expr>None</expr>
          <args>['_factory:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['policy:NoneType']</kwoargs>
          <defa>[None]</defa>
          <kwodefa>['compat32']</kwodefa>
        </api>
        <api name="feed">
          <expr>obj.feed(data)%%['str']</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="email.feedparser.FeedParser" init="obj = email.feedparser.BytesFeedParser()%%['NoneType']" name="BytesFeedParser"/>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>StopIteration</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['email:quoprimime']" imports="['binascii', 'email', 'email.charset', 'email.contentmanager', 'email.errors', 'email.message']" name="email.contentmanager">
      <class init="obj = email.contentmanager.ContentManager()%%[]" name="ContentManager">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_get_handler">
          <expr>obj.add_get_handler(key,handler)%%['str', 'function']</expr>
          <args>['key:str', 'handler:function']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_content">
          <expr>ret = obj.get_content(msg)%%['EmailMessage']</expr>
          <args>['msg:EmailMessage']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_set_handler">
          <expr>obj.add_set_handler(typekey,handler)%%['type', 'function']</expr>
          <args>['typekey:type', 'handler:function']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_content">
          <expr>obj.set_content(msg,obj)%%['EmailMessage', 'str']</expr>
          <args>['msg:EmailMessage', 'obj:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="get_text_content">
        <expr>ret = email.contentmanager.get_text_content(msg,errors)%%['EmailMessage', 'str']</expr>
        <args>['msg:EmailMessage', 'errors:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_non_text_content">
        <expr>ret = email.contentmanager.get_non_text_content(msg)%%['EmailMessage']</expr>
        <args>['msg:EmailMessage']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_message_content">
        <expr>ret = email.contentmanager.get_message_content(msg)%%['EmailMessage']</expr>
        <args>['msg:EmailMessage']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_and_fixup_unknown_message_content">
        <expr>ret = email.contentmanager.get_and_fixup_unknown_message_content(msg)%%['EmailMessage']</expr>
        <args>['msg:EmailMessage']</args>
        <return>['bytes:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="set_text_content">
        <expr>email.contentmanager.set_text_content(msg,string,subtype,charset,cte,disposition,filename,cid,params,headers)%%['EmailMessage', 'str', 'str', 'str', 'str', 'str', 'str', 'str', 'dict', 'tuple']</expr>
        <args>['msg:EmailMessage', 'string:str', 'subtype:str', 'charset:str', 'cte:str', 'disposition:str', 'filename:str', 'cid:str', 'params:dict', 'headers:tuple']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None, None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="set_message_content">
        <expr>email.contentmanager.set_message_content(msg,message,subtype,cte,disposition,filename,cid,params,headers)%%['EmailMessage', 'EmailMessage', 'str', 'str', 'str', 'str', 'str', 'dict', 'tuple']</expr>
        <args>['msg:EmailMessage', 'message:EmailMessage', 'subtype:str', 'cte:str', 'disposition:str', 'filename:str', 'cid:str', 'params:dict', 'headers:tuple']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="set_bytes_content">
        <expr>email.contentmanager.set_bytes_content(msg,data,maintype,subtype,cte,disposition,filename,cid,params,headers)%%['EmailMessage', 'bytes', 'str', 'str', 'str', 'str', 'str', 'str', 'dict', 'tuple']</expr>
        <args>['msg:EmailMessage', 'data:bytes', 'maintype:str', 'subtype:str', 'cte:str', 'disposition:str', 'filename:str', 'cid:str', 'params:dict', 'headers:tuple']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>UnicodeDecodeError</exception>
        <exception>ValueError</exception>
        <exception>email.errors.BoundaryError</exception>
        <exception>email.errors.CharsetError</exception>
        <exception>email.errors.CloseBoundaryNotFoundDefect</exception>
        <exception>email.errors.FirstHeaderLineIsContinuationDefect</exception>
        <exception>email.errors.HeaderDefect</exception>
        <exception>email.errors.HeaderMissingRequiredValue</exception>
        <exception>email.errors.HeaderParseError</exception>
        <exception>email.errors.InvalidBase64CharactersDefect</exception>
        <exception>email.errors.InvalidBase64LengthDefect</exception>
        <exception>email.errors.InvalidBase64PaddingDefect</exception>
        <exception>email.errors.InvalidHeaderDefect</exception>
        <exception>email.errors.InvalidMultipartContentTransferEncodingDefect</exception>
        <exception>email.errors.MessageDefect</exception>
        <exception>email.errors.MessageError</exception>
        <exception>email.errors.MessageParseError</exception>
        <exception>email.errors.MisplacedEnvelopeHeaderDefect</exception>
        <exception>email.errors.MissingHeaderBodySeparatorDefect</exception>
        <exception>email.errors.MultipartConversionError</exception>
        <exception>email.errors.MultipartInvariantViolationDefect</exception>
        <exception>email.errors.NoBoundaryInMultipartDefect</exception>
        <exception>email.errors.NonASCIILocalPartDefect</exception>
        <exception>email.errors.NonPrintableDefect</exception>
        <exception>email.errors.ObsoleteHeaderDefect</exception>
        <exception>email.errors.StartBoundaryNotFoundDefect</exception>
        <exception>email.errors.UndecodableBytesDefect</exception>
      </errors>
    </module>
    <module importfrom="['email._policybase:compat32', 'email.feedparser:BytesFeedParser', 'email.feedparser:FeedParser', 'io:StringIO', 'io:TextIOWrapper']" imports="['email', 'email.parser']" name="email.parser">
      <class init="obj = email.parser.Parser()%%['NoneType']" name="Parser">
        <api name="__init__">
          <expr>None</expr>
          <args>['_class:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['policy:NoneType']</kwoargs>
          <defa>[None]</defa>
          <kwodefa>['compat32']</kwodefa>
        </api>
        <api name="parsestr">
          <expr>ret = obj.parsestr(text,headersonly)%%['str', 'bool']</expr>
          <args>['text:str', 'headersonly:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="email.parser.Parser" init="obj = email.parser.HeaderParser()%%['NoneType']" name="HeaderParser"/>
      <class init="obj = email.parser.BytesParser()%%[]" name="BytesParser">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parsebytes">
          <expr>ret = obj.parsebytes(text,headersonly)%%['bytes', 'bool']</expr>
          <args>['text:bytes', 'headersonly:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="email.parser.BytesParser" init="obj = email.parser.BytesHeaderParser()%%[]" name="BytesHeaderParser"/>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['base64:b64encode', 'binascii:a2b_base64', 'binascii:b2a_base64']" imports="['email', 'email.base64mime']" name="email.base64mime">
      <api name="header_length">
        <expr>ret = email.base64mime.header_length(bytearray)%%['bytes']</expr>
        <args>['bytearray:bytes']</args>
        <return>['n:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="header_encode">
        <expr>ret = email.base64mime.header_encode(header_bytes,charset)%%['bytes', 'str']</expr>
        <args>['header_bytes:bytes', 'charset:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="body_encode">
        <expr>ret = email.base64mime.body_encode(s,maxlinelen,eol)%%['bytes', 'int', 'str']</expr>
        <args>['s:bytes', 'maxlinelen:int', 'eol:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, 'NL']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="decode">
        <expr>ret = email.base64mime.decode(string)%%['str']</expr>
        <args>['string:str']</args>
        <return>['bytes:type', 'a2b_base64:builtin_function_or_method']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['email._parseaddr:AddressList', 'email._parseaddr:mktime_tz', 'email._parseaddr:parsedate', 'email._parseaddr:parsedate_tz', 'email._parseaddr:quote', 'email.charset:Charset']" imports="['datetime', 'email', 'email.utils', 'os', 'random', 're', 'socket', 'time', 'urllib.parse']" name="email.utils">
      <api name="formataddr">
        <expr>ret = email.utils.formataddr(pair,charset)%%['tuple', 'CharsetMock']</expr>
        <args>['pair:tuple', 'charset:CharsetMock']</args>
        <return>['ret:NoneType', 'address:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getaddresses">
        <expr>ret = email.utils.getaddresses(fieldvalues)%%['list']</expr>
        <args>['fieldvalues:list']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="formatdate">
        <expr>ret = email.utils.formatdate(timeval,localtime,usegmt)%%['float', 'bool', 'bool']</expr>
        <args>['timeval:float', 'localtime:bool', 'usegmt:bool']</args>
        <return>['format_datetime:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="format_datetime">
        <expr>ret = email.utils.format_datetime(dt,usegmt)%%['datetime', 'bool']</expr>
        <args>['dt:datetime', 'usegmt:bool']</args>
        <return>['_format_timetuple_and_zone:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="make_msgid">
        <expr>ret = email.utils.make_msgid(idstring,domain)%%['str', 'str']</expr>
        <args>['idstring:str', 'domain:str']</args>
        <return>['msgid:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parsedate_to_datetime">
        <expr>ret = email.utils.parsedate_to_datetime(data)%%['str']</expr>
        <args>['data:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parseaddr">
        <expr>ret = email.utils.parseaddr(addr)%%['str']</expr>
        <args>['addr:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="unquote">
        <expr>ret = email.utils.unquote(str)%%['str']</expr>
        <args>['str:str']</args>
        <return>['ret:NoneType', 'str:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="decode_rfc2231">
        <expr>ret = email.utils.decode_rfc2231(s)%%['str']</expr>
        <args>['s:str']</args>
        <return>['parts:list']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="encode_rfc2231">
        <expr>ret = email.utils.encode_rfc2231(s,charset,language)%%['str', 'str', 'str']</expr>
        <args>['s:str', 'charset:str', 'language:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="decode_params">
        <expr>ret = email.utils.decode_params(params)%%['list']</expr>
        <args>['params:list']</args>
        <return>['new_params:list']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="collapse_rfc2231_value">
        <expr>ret = email.utils.collapse_rfc2231_value(value,errors,fallback_charset)%%['str', 'str', 'str']</expr>
        <args>['value:str', 'errors:str', 'fallback_charset:str']</args>
        <return>['unquote:function', 'str:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="localtime">
        <expr>ret = email.utils.localtime(dt,isdst)%%['datetime', 'int']</expr>
        <args>['dt:datetime', 'isdst:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>LookupError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>UnicodeEncodeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['email._policybase:Compat32', 'email._policybase:Policy', 'email._policybase:compat32', 'email.contentmanager:raw_data_manager', 'email.headerregistry:HeaderRegistry', 'email.message:EmailMessage']" imports="['email', 'email.policy', 're', 'sys']" name="email.policy">
      <class base="email._policybase.Policy" init="obj = email.policy.EmailPolicy()%%[]" name="EmailPolicy">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="header_max_count">
          <expr>ret = obj.header_max_count(name)%%['str']</expr>
          <args>['name:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="header_source_parse">
          <expr>obj.header_source_parse(sourcelines)%%['list']</expr>
          <args>['sourcelines:list']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="header_store_parse">
          <expr>obj.header_store_parse(name,value)%%['str', 'str']</expr>
          <args>['name:str', 'value:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="header_fetch_parse">
          <expr>ret = obj.header_fetch_parse(name,value)%%['str', 'str']</expr>
          <args>['name:str', 'value:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="fold_binary">
          <expr>ret = obj.fold_binary(name,value)%%['str', '_UniqueUnstructuredHeader']</expr>
          <args>['name:str', 'value:_UniqueUnstructuredHeader']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['string:ascii_letters', 'string:digits', 'string:hexdigits']" imports="['email', 'email.quoprimime', 're']" name="email.quoprimime">
      <api name="header_check">
        <expr>ret = email.quoprimime.header_check(octet)%%['int']</expr>
        <args>['octet:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="body_check">
        <expr>ret = email.quoprimime.body_check(octet)%%['int']</expr>
        <args>['octet:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="header_length">
        <expr>ret = email.quoprimime.header_length(bytearray)%%['bytes']</expr>
        <args>['bytearray:bytes']</args>
        <return>['sum:builtin_function_or_method']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="body_length">
        <expr>ret = email.quoprimime.body_length(bytearray)%%['bytes']</expr>
        <args>['bytearray:bytes']</args>
        <return>['sum:builtin_function_or_method']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="unquote">
        <expr>ret = email.quoprimime.unquote(s)%%['str']</expr>
        <args>['s:str']</args>
        <return>['chr:builtin_function_or_method']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="quote">
        <expr>ret = email.quoprimime.quote(c)%%['str']</expr>
        <args>['c:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="header_encode">
        <expr>ret = email.quoprimime.header_encode(header_bytes,charset)%%['bytes', 'str']</expr>
        <args>['header_bytes:bytes', 'charset:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="body_encode">
        <expr>ret = email.quoprimime.body_encode(body,maxlinelen,eol)%%['str', 'int', 'str']</expr>
        <args>['body:str', 'maxlinelen:int', 'eol:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, 'NL']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="decode">
        <expr>ret = email.quoprimime.decode(encoded,eol)%%['str', 'str']</expr>
        <args>['encoded:str', 'eol:str']</args>
        <return>['encoded:str', 'decoded:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['NL']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="header_decode">
        <expr>ret = email.quoprimime.header_decode(s)%%['str']</expr>
        <args>['s:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['io:StringIO']" imports="['email', 'email.iterators', 'sys']" name="email.iterators">
      <api name="walk">
        <expr>email.iterators.walk()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="body_line_iterator">
        <expr>email.iterators.body_line_iterator(msg,decode)%%['Message', 'bool']</expr>
        <args>['msg:Message', 'decode:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="typed_subpart_iterator">
        <expr>email.iterators.typed_subpart_iterator(msg,maintype,subtype)%%['Message', 'str', 'str']</expr>
        <args>['msg:Message', 'maintype:str', 'subtype:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['email', 'email.errors']" name="email.errors">
      <class base="Exception" init="obj = email.errors.MessageError()%%[]" name="MessageError"/>
      <class base="MessageError" init="obj = email.errors.MessageParseError()%%[]" name="MessageParseError"/>
      <class base="MessageParseError" init="obj = email.errors.HeaderParseError()%%[]" name="HeaderParseError"/>
      <class base="MessageParseError" init="obj = email.errors.BoundaryError()%%[]" name="BoundaryError"/>
      <class base="MessageError" init="obj = email.errors.MultipartConversionError()%%[]" name="MultipartConversionError"/>
      <class base="MessageError" init="obj = email.errors.CharsetError()%%[]" name="CharsetError"/>
      <class base="ValueError" init="obj = email.errors.MessageDefect()%%[]" name="MessageDefect"/>
      <class base="MessageDefect" init="obj = email.errors.NoBoundaryInMultipartDefect()%%[]" name="NoBoundaryInMultipartDefect"/>
      <class base="MessageDefect" init="obj = email.errors.StartBoundaryNotFoundDefect()%%[]" name="StartBoundaryNotFoundDefect"/>
      <class base="MessageDefect" init="obj = email.errors.CloseBoundaryNotFoundDefect()%%[]" name="CloseBoundaryNotFoundDefect"/>
      <class base="MessageDefect" init="obj = email.errors.FirstHeaderLineIsContinuationDefect()%%[]" name="FirstHeaderLineIsContinuationDefect"/>
      <class base="MessageDefect" init="obj = email.errors.MisplacedEnvelopeHeaderDefect()%%[]" name="MisplacedEnvelopeHeaderDefect"/>
      <class base="MessageDefect" init="obj = email.errors.MissingHeaderBodySeparatorDefect()%%[]" name="MissingHeaderBodySeparatorDefect"/>
      <class base="MessageDefect" init="obj = email.errors.MultipartInvariantViolationDefect()%%[]" name="MultipartInvariantViolationDefect"/>
      <class base="MessageDefect" init="obj = email.errors.InvalidMultipartContentTransferEncodingDefect()%%[]" name="InvalidMultipartContentTransferEncodingDefect"/>
      <class base="MessageDefect" init="obj = email.errors.UndecodableBytesDefect()%%[]" name="UndecodableBytesDefect"/>
      <class base="MessageDefect" init="obj = email.errors.InvalidBase64PaddingDefect()%%[]" name="InvalidBase64PaddingDefect"/>
      <class base="MessageDefect" init="obj = email.errors.InvalidBase64CharactersDefect()%%[]" name="InvalidBase64CharactersDefect"/>
      <class base="MessageDefect" init="obj = email.errors.InvalidBase64LengthDefect()%%[]" name="InvalidBase64LengthDefect"/>
      <class base="MessageDefect" init="obj = email.errors.HeaderDefect()%%[]" name="HeaderDefect"/>
      <class base="HeaderDefect" init="obj = email.errors.InvalidHeaderDefect()%%[]" name="InvalidHeaderDefect"/>
      <class base="HeaderDefect" init="obj = email.errors.HeaderMissingRequiredValue()%%[]" name="HeaderMissingRequiredValue"/>
      <class base="HeaderDefect" init="obj = email.errors.NonPrintableDefect()%%[]" name="NonPrintableDefect"/>
      <class base="HeaderDefect" init="obj = email.errors.ObsoleteHeaderDefect()%%[]" name="ObsoleteHeaderDefect"/>
      <class base="HeaderDefect" init="obj = email.errors.NonASCIILocalPartDefect()%%[]" name="NonASCIILocalPartDefect"/>
      <errors>
        <exception>email.errors.BoundaryError</exception>
        <exception>email.errors.CharsetError</exception>
        <exception>email.errors.CloseBoundaryNotFoundDefect</exception>
        <exception>email.errors.FirstHeaderLineIsContinuationDefect</exception>
        <exception>email.errors.HeaderDefect</exception>
        <exception>email.errors.HeaderMissingRequiredValue</exception>
        <exception>email.errors.HeaderParseError</exception>
        <exception>email.errors.InvalidBase64CharactersDefect</exception>
        <exception>email.errors.InvalidBase64LengthDefect</exception>
        <exception>email.errors.InvalidBase64PaddingDefect</exception>
        <exception>email.errors.InvalidHeaderDefect</exception>
        <exception>email.errors.InvalidMultipartContentTransferEncodingDefect</exception>
        <exception>email.errors.MessageDefect</exception>
        <exception>email.errors.MessageError</exception>
        <exception>email.errors.MessageParseError</exception>
        <exception>email.errors.MisplacedEnvelopeHeaderDefect</exception>
        <exception>email.errors.MissingHeaderBodySeparatorDefect</exception>
        <exception>email.errors.MultipartConversionError</exception>
        <exception>email.errors.MultipartInvariantViolationDefect</exception>
        <exception>email.errors.NoBoundaryInMultipartDefect</exception>
        <exception>email.errors.NonASCIILocalPartDefect</exception>
        <exception>email.errors.NonPrintableDefect</exception>
        <exception>email.errors.ObsoleteHeaderDefect</exception>
        <exception>email.errors.StartBoundaryNotFoundDefect</exception>
        <exception>email.errors.UndecodableBytesDefect</exception>
      </errors>
    </module>
    <module importfrom="['email.mime.nonmultipart:MIMENonMultipart', 'email:message']" imports="['email', 'email.mime', 'email.mime.message']" name="email.mime.message">
      <class base="email.mime.nonmultipart.MIMENonMultipart" init="obj = email.mime.message.MIMEMessage(None)%%['NoneType', 'NoneType']" name="MIMEMessage">
        <api name="__init__">
          <expr>None</expr>
          <args>['_msg:NoneType', '_subtype:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['policy:NoneType']</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['email.mime.nonmultipart:MIMENonMultipart', 'email:encoders']" imports="['email', 'email.mime', 'email.mime.application']" name="email.mime.application">
      <class base="email.mime.nonmultipart.MIMENonMultipart" init="obj = email.mime.application.MIMEApplication(None)%%['NoneType', 'NoneType', 'NoneType']" name="MIMEApplication">
        <api name="__init__">
          <expr>None</expr>
          <args>['_data:NoneType', '_subtype:NoneType', '_encoder:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['policy:NoneType']</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['email:message']" imports="['email', 'email.mime', 'email.mime.base', 'email.policy']" name="email.mime.base">
      <class base="email.message.Message" init="obj = email.mime.base.MIMEBase(None,None)%%['NoneType', 'NoneType']" name="MIMEBase">
        <api name="__init__">
          <expr>None</expr>
          <args>['_maintype:NoneType', '_subtype:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['policy:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['email.mime.base:MIMEBase']" imports="['email', 'email.mime', 'email.mime.multipart']" name="email.mime.multipart">
      <class base="email.mime.base.MIMEBase" init="obj = email.mime.multipart.MIMEMultipart()%%['NoneType', 'NoneType', 'NoneType']" name="MIMEMultipart">
        <api name="__init__">
          <expr>None</expr>
          <args>['_subtype:NoneType', 'boundary:NoneType', '_subparts:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['policy:NoneType']</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['email.charset:Charset', 'email.mime.nonmultipart:MIMENonMultipart']" imports="['email', 'email.mime', 'email.mime.text']" name="email.mime.text">
      <class base="email.mime.nonmultipart.MIMENonMultipart" init="obj = email.mime.text.MIMEText(None)%%['NoneType', 'NoneType', 'NoneType']" name="MIMEText">
        <api name="__init__">
          <expr>None</expr>
          <args>['_text:NoneType', '_subtype:NoneType', '_charset:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['policy:NoneType']</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['email.mime.nonmultipart:MIMENonMultipart', 'email:encoders', 'io:BytesIO']" imports="['email', 'email.mime', 'email.mime.audio', 'sndhdr']" name="email.mime.audio">
      <class base="email.mime.nonmultipart.MIMENonMultipart" init="obj = email.mime.audio.MIMEAudio(None)%%['NoneType', 'NoneType', 'NoneType']" name="MIMEAudio">
        <api name="__init__">
          <expr>None</expr>
          <args>['_audiodata:NoneType', '_subtype:NoneType', '_encoder:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['policy:NoneType']</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['email.mime.nonmultipart:MIMENonMultipart', 'email:encoders']" imports="['email', 'email.mime', 'email.mime.image', 'imghdr']" name="email.mime.image">
      <class base="email.mime.nonmultipart.MIMENonMultipart" init="obj = email.mime.image.MIMEImage(None)%%['NoneType', 'NoneType', 'NoneType']" name="MIMEImage">
        <api name="__init__">
          <expr>None</expr>
          <args>['_imagedata:NoneType', '_subtype:NoneType', '_encoder:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['policy:NoneType']</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['email.mime.base:MIMEBase', 'email:errors']" imports="['email', 'email.mime', 'email.mime.nonmultipart']" name="email.mime.nonmultipart">
      <class base="email.mime.base.MIMEBase" init="obj = email.mime.nonmultipart.MIMENonMultipart(None,None)%%['NoneType', 'NoneType']" name="MIMENonMultipart">
        <api name="attach">
          <expr>obj.attach(payload)%%['None']</expr>
          <args>['payload:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>errors.MultipartConversionError</exception>
      </errors>
    </module>
  </library>
  <library name="turtledemo">
    <module importfrom="['time:perf_counter', 'turtle:Turtle', 'turtle:mainloop']" imports="['turtledemo', 'turtledemo.bytedesign']" name="turtledemo.bytedesign">
      <class base="turtle.Turtle" init="obj = turtledemo.bytedesign.Designer()%%['None', 'None', 'None']" name="Designer">
        <api name="design">
          <expr>obj.design(homePos,scale)%%['None', 'None']</expr>
          <args>['homePos:None', 'scale:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="main">
        <expr>ret = turtledemo.bytedesign.main()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['turtle:*']" imports="['turtledemo', 'turtledemo.yinyang']" name="turtledemo.yinyang">
      <api name="yin">
        <expr>turtledemo.yinyang.yin(radius,color1,color2)%%['None', 'None', 'None']</expr>
        <args>['radius:None', 'color1:None', 'color2:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>ret = turtledemo.yinyang.main()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['turtle:Screen', 'turtle:Turtle', 'turtle:mainloop']" imports="['turtledemo', 'turtledemo.colormixer']" name="turtledemo.colormixer">
      <class base="turtle.Turtle" init="obj = turtledemo.colormixer.ColorTurtle(None,None)%%['None', 'None']" name="ColorTurtle">
        <api name="__init__">
          <expr>None</expr>
          <args>['x:None', 'y:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="shift">
          <expr>obj.shift(x,y)%%['None', 'None']</expr>
          <args>['x:None', 'y:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="setbgcolor">
        <expr>turtledemo.colormixer.setbgcolor()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>ret = turtledemo.colormixer.main()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['turtle:*']" imports="['turtledemo', 'turtledemo.paint']" name="turtledemo.paint">
      <api name="switchupdown">
        <expr>turtledemo.paint.switchupdown(x,y)%%['None', 'None']</expr>
        <args>['x:None', 'y:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="changecolor">
        <expr>turtledemo.paint.changecolor(x,y)%%['None', 'None']</expr>
        <args>['x:None', 'y:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>ret = turtledemo.paint.main()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['turtle:Shape', 'turtle:Turtle', 'turtle:Vec2D', 'turtle:mainloop']" imports="['turtledemo', 'turtledemo.planet_and_moon']" name="turtledemo.planet_and_moon">
      <class base="builtins.object" init="obj = turtledemo.planet_and_moon.GravSys()%%[]" name="GravSys">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="start">
          <expr>obj.start()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="turtle.Turtle" init="obj = turtledemo.planet_and_moon.Star(None,None,None,None,None)%%['None', 'None', 'None', 'None', 'None']" name="Star">
        <api name="__init__">
          <expr>None</expr>
          <args>['m:None', 'x:None', 'v:None', 'gravSys:None', 'shape:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="main">
        <expr>ret = turtledemo.planet_and_moon.main()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['datetime:datetime', 'turtle:*']" imports="['turtledemo', 'turtledemo.clock']" name="turtledemo.clock">
      <api name="jump">
        <expr>turtledemo.clock.jump(distanz,winkel)%%['None', 'None']</expr>
        <args>['distanz:None', 'winkel:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="hand">
        <expr>turtledemo.clock.hand(laenge,spitze)%%['None', 'None']</expr>
        <args>['laenge:None', 'spitze:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="make_hand_shape">
        <expr>turtledemo.clock.make_hand_shape(name,laenge,spitze)%%['None', 'None', 'None']</expr>
        <args>['name:None', 'laenge:None', 'spitze:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="clockface">
        <expr>turtledemo.clock.clockface(radius)%%['None']</expr>
        <args>['radius:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="setup">
        <expr>turtledemo.clock.setup()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="wochentag">
        <expr>ret = turtledemo.clock.wochentag(t)%%['None']</expr>
        <args>['t:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="datum">
        <expr>ret = turtledemo.clock.datum(z)%%['None']</expr>
        <args>['z:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="tick">
        <expr>turtledemo.clock.tick()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>ret = turtledemo.clock.main()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>Terminator</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['turtle:RawTurtle', 'turtle:TK', 'turtle:TurtleScreen']" imports="['turtledemo', 'turtledemo.two_canvases']" name="turtledemo.two_canvases">
      <api name="main">
        <expr>ret = turtledemo.two_canvases.main()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['time:sleep', 'turtle:*']" imports="['turtledemo', 'turtledemo.lindenmayer']" name="turtledemo.lindenmayer">
      <api name="replace">
        <expr>ret = turtledemo.lindenmayer.replace(seq,replacementRules,n)%%['None', 'None', 'None']</expr>
        <args>['seq:None', 'replacementRules:None', 'n:None']</args>
        <return>['seq:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="draw">
        <expr>turtledemo.lindenmayer.draw(commands,rules)%%['None', 'None']</expr>
        <args>['commands:None', 'rules:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>ret = turtledemo.lindenmayer.main()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['turtle:*']" imports="['random', 'turtledemo', 'turtledemo.sorting_animate']" name="turtledemo.sorting_animate">
      <class base="turtle.Turtle" init="obj = turtledemo.sorting_animate.Block(None)%%['None']" name="Block">
        <api name="__init__">
          <expr>None</expr>
          <args>['size:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="glow">
          <expr>obj.glow()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unglow">
          <expr>obj.unglow()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="builtins.list" init="obj = turtledemo.sorting_animate.Shelf(None)%%['None']" name="Shelf">
        <api name="__init__">
          <expr>None</expr>
          <args>['y:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="push">
          <expr>obj.push(d)%%['None']</expr>
          <args>['d:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="isort">
        <expr>turtledemo.sorting_animate.isort(shelf)%%['None']</expr>
        <args>['shelf:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ssort">
        <expr>turtledemo.sorting_animate.ssort(shelf)%%['None']</expr>
        <args>['shelf:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="partition">
        <expr>ret = turtledemo.sorting_animate.partition(shelf,left,right,pivot_index)%%['None', 'None', 'None', 'None']</expr>
        <args>['shelf:None', 'left:None', 'right:None', 'pivot_index:None']</args>
        <return>['store_index:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="qsort">
        <expr>turtledemo.sorting_animate.qsort(shelf,left,right)%%['None', 'None', 'None']</expr>
        <args>['shelf:None', 'left:None', 'right:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="randomize">
        <expr>turtledemo.sorting_animate.randomize()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="show_text">
        <expr>turtledemo.sorting_animate.show_text(text,line)%%['None', 'None']</expr>
        <args>['text:None', 'line:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="start_ssort">
        <expr>turtledemo.sorting_animate.start_ssort()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="start_isort">
        <expr>turtledemo.sorting_animate.start_isort()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="start_qsort">
        <expr>turtledemo.sorting_animate.start_qsort()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="init_shelf">
        <expr>turtledemo.sorting_animate.init_shelf()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="disable_keys">
        <expr>turtledemo.sorting_animate.disable_keys()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="enable_keys">
        <expr>turtledemo.sorting_animate.enable_keys()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>ret = turtledemo.sorting_animate.main()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['random:randrange', 'time:perf_counter', 'turtle:Turtle', 'turtle:colormode', 'turtle:mainloop', 'turtle:tracer']" imports="['turtledemo', 'turtledemo.forest']" name="turtledemo.forest">
      <api name="symRandom">
        <expr>ret = turtledemo.forest.symRandom(n)%%['None']</expr>
        <args>['n:None']</args>
        <return>['randrange:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="randomize">
        <expr>ret = turtledemo.forest.randomize(branchlist,angledist,sizedist)%%['None', 'None', 'None']</expr>
        <args>['branchlist:None', 'angledist:None', 'sizedist:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="randomfd">
        <expr>turtledemo.forest.randomfd(t,distance,parts,angledist)%%['None', 'None', 'None', 'None']</expr>
        <args>['t:None', 'distance:None', 'parts:None', 'angledist:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="tree">
        <expr>turtledemo.forest.tree(tlist,size,level,widthfactor,branchlists,angledist,sizedist)%%['None', 'None', 'None', 'None', 'None', 'None', 'None']</expr>
        <args>['tlist:None', 'size:None', 'level:None', 'widthfactor:None', 'branchlists:None', 'angledist:None', 'sizedist:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="start">
        <expr>turtledemo.forest.start(t,x,y)%%['None', 'None', 'None']</expr>
        <args>['t:None', 'x:None', 'y:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="doit1">
        <expr>ret = turtledemo.forest.doit1(level,pen)%%['None', 'None']</expr>
        <args>['level:None', 'pen:None']</args>
        <return>['t:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="doit2">
        <expr>ret = turtledemo.forest.doit2(level,pen)%%['None', 'None']</expr>
        <args>['level:None', 'pen:None']</args>
        <return>['t:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="doit3">
        <expr>ret = turtledemo.forest.doit3(level,pen)%%['None', 'None']</expr>
        <args>['level:None', 'pen:None']</args>
        <return>['t:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>ret = turtledemo.forest.main()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['turtle:*']" imports="['turtledemo', 'turtledemo.round_dance']" name="turtledemo.round_dance">
      <api name="stop">
        <expr>turtledemo.round_dance.stop()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>ret = turtledemo.round_dance.main()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['turtle:*']" imports="['turtledemo', 'turtledemo.minimal_hanoi']" name="turtledemo.minimal_hanoi">
      <class base="turtle.Turtle" init="obj = turtledemo.minimal_hanoi.Disc(None)%%['None']" name="Disc">
        <api name="__init__">
          <expr>None</expr>
          <args>['n:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="builtins.list" init="obj = turtledemo.minimal_hanoi.Tower(None)%%['None']" name="Tower">
        <api name="__init__">
          <expr>None</expr>
          <args>['x:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="push">
          <expr>obj.push(d)%%['None']</expr>
          <args>['d:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="hanoi">
        <expr>turtledemo.minimal_hanoi.hanoi(n,from_,with_,to_)%%['None', 'None', 'None', 'None']</expr>
        <args>['n:None', 'from_:None', 'with_:None', 'to_:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="play">
        <expr>turtledemo.minimal_hanoi.play()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>ret = turtledemo.minimal_hanoi.main()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>Terminator</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['turtle:*']" imports="['turtledemo', 'turtledemo.chaos']" name="turtledemo.chaos">
      <api name="f">
        <expr>ret = turtledemo.chaos.f(x)%%['None']</expr>
        <args>['x:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="g">
        <expr>ret = turtledemo.chaos.g(x)%%['None']</expr>
        <args>['x:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="h">
        <expr>ret = turtledemo.chaos.h(x)%%['None']</expr>
        <args>['x:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="jumpto">
        <expr>turtledemo.chaos.jumpto(x,y)%%['None', 'None']</expr>
        <args>['x:None', 'y:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="line">
        <expr>turtledemo.chaos.line(x1,y1,x2,y2)%%['None', 'None', 'None', 'None']</expr>
        <args>['x1:None', 'y1:None', 'x2:None', 'y2:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="coosys">
        <expr>turtledemo.chaos.coosys()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="plot">
        <expr>turtledemo.chaos.plot(fun,start,color)%%['None', 'None', 'None']</expr>
        <args>['fun:None', 'start:None', 'color:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>ret = turtledemo.chaos.main()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['math:cos', 'math:pi', 'time:perf_counter', 'time:sleep', 'turtle:*']" imports="['turtledemo', 'turtledemo.penrose']" name="turtledemo.penrose">
      <api name="kite">
        <expr>turtledemo.penrose.kite(l)%%['None']</expr>
        <args>['l:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dart">
        <expr>turtledemo.penrose.dart(l)%%['None']</expr>
        <args>['l:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="inflatekite">
        <expr>turtledemo.penrose.inflatekite(l,n)%%['None', 'None']</expr>
        <args>['l:None', 'n:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="inflatedart">
        <expr>turtledemo.penrose.inflatedart(l,n)%%['None', 'None']</expr>
        <args>['l:None', 'n:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="draw">
        <expr>turtledemo.penrose.draw(l,n,th)%%['None', 'None', 'None']</expr>
        <args>['l:None', 'n:None', 'th:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="sun">
        <expr>turtledemo.penrose.sun(l,n)%%['None', 'None']</expr>
        <args>['l:None', 'n:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="star">
        <expr>turtledemo.penrose.star(l,n)%%['None', 'None']</expr>
        <args>['l:None', 'n:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="makeshapes">
        <expr>turtledemo.penrose.makeshapes()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="start">
        <expr>turtledemo.penrose.start()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="demo">
        <expr>turtledemo.penrose.demo(fun)%%['None']</expr>
        <args>['fun:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['sun']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>ret = turtledemo.penrose.main()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['time:perf_counter', 'time:sleep', 'turtle:Screen', 'turtle:Turtle', 'turtle:mainloop']" imports="['turtledemo', 'turtledemo.rosette']" name="turtledemo.rosette">
      <api name="mn_eck">
        <expr>turtledemo.rosette.mn_eck(p,ne,sz)%%['None', 'None', 'None']</expr>
        <args>['p:None', 'ne:None', 'sz:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>ret = turtledemo.rosette.main()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['random', 'time', 'turtle', 'turtledemo', 'turtledemo.nim']" name="turtledemo.nim">
      <class base="builtins.object" init="obj = turtledemo.nim.NimModel(None)%%['None']" name="NimModel">
        <api name="__init__">
          <expr>None</expr>
          <args>['game:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="game_over">
          <expr>ret = obj.game_over()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="turtle.Turtle" init="obj = turtledemo.nim.Stick(None,None,None)%%['None', 'None', 'None']" name="Stick">
        <api name="__init__">
          <expr>None</expr>
          <args>['row:None', 'col:None', 'game:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="coords">
          <expr>obj.coords(row,col)%%['None', 'None']</expr>
          <args>['row:None', 'col:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="makemove">
          <expr>obj.makemove(x,y)%%['None', 'None']</expr>
          <args>['x:None', 'y:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="builtins.object" init="obj = turtledemo.nim.NimView(None)%%['None']" name="NimView">
        <api name="__init__">
          <expr>None</expr>
          <args>['game:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="builtins.object" init="obj = turtledemo.nim.NimController(None)%%['None']" name="NimController">
        <api name="__init__">
          <expr>None</expr>
          <args>['game:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="builtins.object" init="obj = turtledemo.nim.Nim(None)%%['None']" name="Nim">
        <api name="__init__">
          <expr>None</expr>
          <args>['screen:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="randomrow">
        <expr>ret = turtledemo.nim.randomrow()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="computerzug">
        <expr>ret = turtledemo.nim.computerzug(state)%%['None']</expr>
        <args>['state:None']</args>
        <return>['randommove:None', 'move:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="randommove">
        <expr>turtledemo.nim.randommove(state)%%['None']</expr>
        <args>['state:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>ret = turtledemo.nim.main()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>turtle.Terminator</exception>
        <exception>turtle.TurtleGraphicsError</exception>
      </errors>
    </module>
    <module importfrom="['time:perf_counter', 'time:sleep', 'turtle:*']" imports="['math', 'turtledemo', 'turtledemo.fractalcurves']" name="turtledemo.fractalcurves">
      <class base="turtle.Turtle" init="obj = turtledemo.fractalcurves.CurvesTurtle()%%['None', 'None', 'None']" name="CurvesTurtle">
        <api name="fractalgon">
          <expr>obj.fractalgon(n,rad,lev,dir)%%['None', 'None', 'None', 'None']</expr>
          <args>['n:None', 'rad:None', 'lev:None', 'dir:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="main">
        <expr>ret = turtledemo.fractalcurves.main()%%[]</expr>
        <args>[]</args>
        <return>['res:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['time:perf_counter', 'turtle:Turtle', 'turtle:mainloop']" imports="['turtledemo', 'turtledemo.tree']" name="turtledemo.tree">
      <api name="tree">
        <expr>turtledemo.tree.tree(plist,l,a,f)%%['None', 'None', 'None', 'None']</expr>
        <args>['plist:None', 'l:None', 'a:None', 'f:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="maketree">
        <expr>turtledemo.tree.maketree()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>ret = turtledemo.tree.main()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['turtle:*']" imports="['turtledemo', 'turtledemo.peace']" name="turtledemo.peace">
      <api name="main">
        <expr>ret = turtledemo.peace.main()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
  </library>
  <library name="distutils">
    <module importfrom="['distutils.cmd:Command', 'distutils.config:PyPIRCCommand', 'distutils.debug:DEBUG', 'distutils.dist:Distribution', 'distutils.errors:*', 'distutils.extension:Extension']" imports="['distutils', 'distutils.core', 'os', 'sys']" name="distutils.core">
      <api name="gen_usage">
        <expr>ret = distutils.core.gen_usage(script_name)%%['None']</expr>
        <args>['script_name:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="setup">
        <expr>ret = distutils.core.setup()%%[]</expr>
        <args>[]</args>
        <return>['dist:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="run_setup">
        <expr>ret = distutils.core.run_setup(script_name,script_args,stop_after)%%['None', 'None', 'None']</expr>
        <args>['script_name:None', 'script_args:None', 'stop_after:None']</args>
        <return>['_setup_distribution:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>CCompilerError</exception>
        <exception>DistutilsArgError</exception>
        <exception>DistutilsError</exception>
        <exception>DistutilsSetupError</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>OSError</exception>
        <exception>RuntimeError</exception>
        <exception>SystemExit</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['distutils', 'distutils.debug', 'os']" name="distutils.debug"/>
    <module importfrom="[]" imports="['distutils', 'distutils.log', 'sys']" name="distutils.log">
      <class init="obj = distutils.log.Log()%%['NoneType']" name="Log">
        <api name="__init__">
          <expr>None</expr>
          <args>['threshold:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['WARN']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="log">
          <expr>obj.log(level,msg)%%['int', 'str']</expr>
          <args>['level:int', 'msg:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="debug">
          <expr>obj.debug(msg)%%['str']</expr>
          <args>['msg:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info">
          <expr>obj.info(msg)%%['str']</expr>
          <args>['msg:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="warn">
          <expr>obj.warn(msg)%%['str']</expr>
          <args>['msg:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="error">
          <expr>obj.error(msg)%%['None']</expr>
          <args>['msg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="fatal">
          <expr>obj.fatal(msg)%%['str']</expr>
          <args>['msg:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="set_threshold">
        <expr>ret = distutils.log.set_threshold(level)%%['int']</expr>
        <args>['level:int']</args>
        <return>['old:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="set_verbosity">
        <expr>distutils.log.set_verbosity(v)%%['int']</expr>
        <args>['v:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>UnicodeEncodeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['configparser:ConfigParser', 'distutils.cmd:Command', 'distutils.core:gen_usage', 'distutils.debug:DEBUG', 'distutils.errors:*', 'distutils.fancy_getopt:FancyGetopt', 'distutils.fancy_getopt:translate_longopt', 'distutils.util:check_environ', 'distutils.util:rfc822_escape', 'distutils.util:strtobool', 'distutils:log', 'email:message_from_file', 'pprint:pformat']" imports="['distutils', 'distutils.command', 'distutils.dist', 'distutils.versionpredicate', 'os', 're', 'sys', 'warnings']" name="distutils.dist">
      <class init="obj = distutils.dist.Distribution()%%[]" name="Distribution">
        <api name="dump_option_dicts">
          <expr>obj.dump_option_dicts(header,commands,indent)%%['None', 'None', 'None']</expr>
          <args>['header:None', 'commands:None', 'indent:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parse_config_files">
          <expr>obj.parse_config_files(filenames)%%['None']</expr>
          <args>['filenames:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parse_command_line">
          <expr>ret = obj.parse_command_line()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="handle_display_options">
          <expr>ret = obj.handle_display_options(option_order)%%['list']</expr>
          <args>['option_order:list']</args>
          <return>['ret:NoneType', 'any_display_options:int']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_command_list">
          <expr>ret = obj.get_command_list()%%[]</expr>
          <args>[]</args>
          <return>['rv:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_command_packages">
          <expr>ret = obj.get_command_packages()%%[]</expr>
          <args>[]</args>
          <return>['pkgs:list']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run_commands">
          <expr>obj.run_commands()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_pure_modules">
          <expr>ret = obj.has_pure_modules()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_ext_modules">
          <expr>ret = obj.has_ext_modules()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_c_libraries">
          <expr>ret = obj.has_c_libraries()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_modules">
          <expr>ret = obj.has_modules()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_headers">
          <expr>ret = obj.has_headers()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_scripts">
          <expr>ret = obj.has_scripts()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_data_files">
          <expr>ret = obj.has_data_files()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_pure">
          <expr>ret = obj.is_pure()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = distutils.dist.DistributionMetadata()%%[]" name="DistributionMetadata">
        <api name="read_pkg_file">
          <expr>obj.read_pkg_file(file)%%['None']</expr>
          <args>['file:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="write_pkg_info">
          <expr>obj.write_pkg_info(base_dir)%%['None']</expr>
          <args>['base_dir:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_name">
          <expr>ret = obj.get_name()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_version">
          <expr>ret = obj.get_version()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_fullname">
          <expr>ret = obj.get_fullname()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_author">
          <expr>ret = obj.get_author()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_author_email">
          <expr>ret = obj.get_author_email()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_maintainer">
          <expr>ret = obj.get_maintainer()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_maintainer_email">
          <expr>ret = obj.get_maintainer_email()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_contact">
          <expr>ret = obj.get_contact()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_contact_email">
          <expr>ret = obj.get_contact_email()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_url">
          <expr>ret = obj.get_url()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_license">
          <expr>ret = obj.get_license()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_description">
          <expr>ret = obj.get_description()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_long_description">
          <expr>ret = obj.get_long_description()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_keywords">
          <expr>ret = obj.get_keywords()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_keywords">
          <expr>obj.set_keywords(value)%%['str']</expr>
          <args>['value:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_platforms">
          <expr>ret = obj.get_platforms()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_platforms">
          <expr>obj.set_platforms(value)%%['str']</expr>
          <args>['value:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_classifiers">
          <expr>ret = obj.get_classifiers()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_classifiers">
          <expr>obj.set_classifiers(value)%%['list']</expr>
          <args>['value:list']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_download_url">
          <expr>ret = obj.get_download_url()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_requires">
          <expr>ret = obj.get_requires()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_requires">
          <expr>obj.set_requires(value)%%['None']</expr>
          <args>['value:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_provides">
          <expr>ret = obj.get_provides()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_provides">
          <expr>obj.set_provides(value)%%['None']</expr>
          <args>['value:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_obsoletes">
          <expr>ret = obj.get_obsoletes()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_obsoletes">
          <expr>obj.set_obsoletes(value)%%['list']</expr>
          <args>['value:list']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="fix_help_options">
        <expr>ret = distutils.dist.fix_help_options(options)%%['list']</expr>
        <args>['options:list']</args>
        <return>['new_options:list']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>DistutilsArgError</exception>
        <exception>DistutilsClassError</exception>
        <exception>DistutilsModuleError</exception>
        <exception>DistutilsOptionError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>SystemExit</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['distutils.dep_util:newer', 'distutils.errors:DistutilsFileError', 'distutils:log', 'os.path:basename', 'os.path:dirname', 'os.path:exists', 'os.path:isdir', 'os.path:isfile', 'stat:ST_ATIME', 'stat:ST_MODE', 'stat:ST_MTIME', 'stat:S_IMODE']" imports="['distutils', 'distutils.file_util', 'errno', 'os']" name="distutils.file_util">
      <api name="copy_file">
        <expr>distutils.file_util.copy_file(src,dst,preserve_mode,preserve_times,update,link,verbose,dry_run)%%['str', 'str', 'int', 'int', 'int', 'str', 'int', 'int']</expr>
        <args>['src:str', 'dst:str', 'preserve_mode:int', 'preserve_times:int', 'update:int', 'link:str', 'verbose:int', 'dry_run:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="move_file">
        <expr>ret = distutils.file_util.move_file(src,dst,verbose,dry_run)%%['str', 'str', 'int', 'int']</expr>
        <args>['src:str', 'dst:str', 'verbose:int', 'dry_run:int']</args>
        <return>['dst:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="write_file">
        <expr>distutils.file_util.write_file(filename,contents)%%['None', 'None']</expr>
        <args>['filename:None', 'contents:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>DistutilsFileError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['distutils', 'distutils.version', 're']" name="distutils.version">
      <class init="obj = distutils.version.Version()%%['NoneType']" name="Version">
        <api name="__init__">
          <expr>None</expr>
          <args>['vstring:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="distutils.version.Version" init="obj = distutils.version.StrictVersion()%%['NoneType']" name="StrictVersion">
        <api name="parse">
          <expr>obj.parse(vstring)%%['None']</expr>
          <args>['vstring:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="distutils.version.Version" init="obj = distutils.version.LooseVersion()%%['NoneType']" name="LooseVersion">
        <api name="__init__">
          <expr>None</expr>
          <args>['vstring:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parse">
          <expr>obj.parse(vstring)%%['None']</expr>
          <args>['vstring:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['distutils.debug:DEBUG', 'distutils.errors:DistutilsInternalError', 'distutils.errors:DistutilsTemplateError', 'distutils.util:convert_path', 'distutils:log']" imports="['distutils', 'distutils.filelist', 'fnmatch', 'functools', 'os', 're']" name="distutils.filelist">
      <class init="obj = distutils.filelist.FileList()%%['NoneType', 'NoneType']" name="FileList">
        <api name="__init__">
          <expr>None</expr>
          <args>['warn:NoneType', 'debug_print:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_allfiles">
          <expr>obj.set_allfiles(allfiles)%%['None']</expr>
          <args>['allfiles:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sort">
          <expr>obj.sort()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="remove_duplicates">
          <expr>obj.remove_duplicates()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="process_template_line">
          <expr>obj.process_template_line(line)%%['None']</expr>
          <args>['line:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="include_pattern">
          <expr>ret = obj.include_pattern(pattern,anchor,prefix,is_regex)%%['None', 'None', 'None', 'None']</expr>
          <args>['pattern:None', 'anchor:None', 'prefix:None', 'is_regex:None']</args>
          <return>['files_found:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="exclude_pattern">
          <expr>ret = obj.exclude_pattern(pattern,anchor,prefix,is_regex)%%['None', 'None', 'None', 'None']</expr>
          <args>['pattern:None', 'anchor:None', 'prefix:None', 'is_regex:None']</args>
          <return>['files_found:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="findall">
        <expr>ret = distutils.filelist.findall(dir)%%['None']</expr>
        <args>['dir:None']</args>
        <return>['list:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="glob_to_re">
        <expr>ret = distutils.filelist.glob_to_re(pattern)%%['None']</expr>
        <args>['pattern:None']</args>
        <return>['pattern_re:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="translate_pattern">
        <expr>ret = distutils.filelist.translate_pattern(pattern,anchor,prefix,is_regex)%%['None', 'None', 'None', 'None']</expr>
        <args>['pattern:None', 'anchor:None', 'prefix:None', 'is_regex:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>DistutilsInternalError</exception>
        <exception>DistutilsTemplateError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['distutils.debug:DEBUG', 'distutils.dep_util:newer_group', 'distutils.dep_util:newer_pairwise', 'distutils.dir_util:mkpath', 'distutils.errors:*', 'distutils.fancy_getopt:FancyGetopt', 'distutils.file_util:move_file', 'distutils.spawn:spawn', 'distutils.util:execute', 'distutils.util:split_quoted', 'distutils:log']" imports="['distutils', 'distutils.ccompiler', 'os', 're', 'sys', 'tempfile']" name="distutils.ccompiler">
      <class init="obj = distutils.ccompiler.CCompiler()%%['NoneType', 'NoneType', 'NoneType']" name="CCompiler">
        <api name="__init__">
          <expr>None</expr>
          <args>['verbose:NoneType', 'dry_run:NoneType', 'force:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_executables">
          <expr>obj.set_executables()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="define_macro">
          <expr>obj.define_macro(name,value)%%['None', 'None']</expr>
          <args>['name:None', 'value:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="undefine_macro">
          <expr>obj.undefine_macro(name)%%['None']</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_include_dir">
          <expr>obj.add_include_dir(dir)%%['None']</expr>
          <args>['dir:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_include_dirs">
          <expr>obj.set_include_dirs(dirs)%%['None']</expr>
          <args>['dirs:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_library">
          <expr>obj.add_library(libname)%%['None']</expr>
          <args>['libname:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_libraries">
          <expr>obj.set_libraries(libnames)%%['None']</expr>
          <args>['libnames:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_library_dir">
          <expr>obj.add_library_dir(dir)%%['None']</expr>
          <args>['dir:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_library_dirs">
          <expr>obj.set_library_dirs(dirs)%%['None']</expr>
          <args>['dirs:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_runtime_library_dir">
          <expr>obj.add_runtime_library_dir(dir)%%['None']</expr>
          <args>['dir:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_runtime_library_dirs">
          <expr>obj.set_runtime_library_dirs(dirs)%%['None']</expr>
          <args>['dirs:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_link_object">
          <expr>obj.add_link_object(object)%%['None']</expr>
          <args>['object:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_link_objects">
          <expr>obj.set_link_objects(objects)%%['None']</expr>
          <args>['objects:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="detect_language">
          <expr>ret = obj.detect_language(sources)%%['None']</expr>
          <args>['sources:None']</args>
          <return>['lang:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="preprocess">
          <expr>obj.preprocess(source,output_file,macros,include_dirs,extra_preargs,extra_postargs)%%['None', 'None', 'None', 'None', 'None', 'None']</expr>
          <args>['source:None', 'output_file:None', 'macros:None', 'include_dirs:None', 'extra_preargs:None', 'extra_postargs:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="create_static_lib">
          <expr>obj.create_static_lib(objects,output_libname,output_dir,debug,target_lang)%%['None', 'None', 'None', 'None', 'None']</expr>
          <args>['objects:None', 'output_libname:None', 'output_dir:None', 'debug:None', 'target_lang:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="link_shared_lib">
          <expr>obj.link_shared_lib(objects,output_libname,output_dir,libraries,library_dirs,runtime_library_dirs,export_symbols,debug,extra_preargs,extra_postargs,build_temp,target_lang)%%['None', 'None', 'None', 'None', 'None', 'None', 'None', 'None', 'None', 'None', 'None', 'None']</expr>
          <args>['objects:None', 'output_libname:None', 'output_dir:None', 'libraries:None', 'library_dirs:None', 'runtime_library_dirs:None', 'export_symbols:None', 'debug:None', 'extra_preargs:None', 'extra_postargs:None', 'build_temp:None', 'target_lang:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None, None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="link_shared_object">
          <expr>obj.link_shared_object(objects,output_filename,output_dir,libraries,library_dirs,runtime_library_dirs,export_symbols,debug,extra_preargs,extra_postargs,build_temp,target_lang)%%['None', 'None', 'None', 'None', 'None', 'None', 'None', 'None', 'None', 'None', 'None', 'None']</expr>
          <args>['objects:None', 'output_filename:None', 'output_dir:None', 'libraries:None', 'library_dirs:None', 'runtime_library_dirs:None', 'export_symbols:None', 'debug:None', 'extra_preargs:None', 'extra_postargs:None', 'build_temp:None', 'target_lang:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None, None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="library_dir_option">
          <expr>obj.library_dir_option(dir)%%['None']</expr>
          <args>['dir:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="runtime_library_dir_option">
          <expr>obj.runtime_library_dir_option(dir)%%['None']</expr>
          <args>['dir:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="library_option">
          <expr>obj.library_option(lib)%%['None']</expr>
          <args>['lib:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_function">
          <expr>ret = obj.has_function(funcname,includes,include_dirs,libraries,library_dirs)%%['None', 'None', 'None', 'None', 'None']</expr>
          <args>['funcname:None', 'includes:None', 'include_dirs:None', 'libraries:None', 'library_dirs:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="find_library_file">
          <expr>obj.find_library_file(dirs,lib,debug)%%['None', 'None', 'None']</expr>
          <args>['dirs:None', 'lib:None', 'debug:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="shared_object_filename">
          <expr>ret = obj.shared_object_filename(basename,strip_dir,output_dir)%%['None', 'None', 'None']</expr>
          <args>['basename:None', 'strip_dir:None', 'output_dir:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="executable_filename">
          <expr>ret = obj.executable_filename(basename,strip_dir,output_dir)%%['None', 'None', 'None']</expr>
          <args>['basename:None', 'strip_dir:None', 'output_dir:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="library_filename">
          <expr>ret = obj.library_filename(libname,lib_type,strip_dir,output_dir)%%['None', 'None', 'None', 'None']</expr>
          <args>['libname:None', 'lib_type:None', 'strip_dir:None', 'output_dir:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="announce">
          <expr>obj.announce(msg,level)%%['None', 'None']</expr>
          <args>['msg:None', 'level:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="debug_print">
          <expr>obj.debug_print(msg)%%['None']</expr>
          <args>['msg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="warn">
          <expr>obj.warn(msg)%%['None']</expr>
          <args>['msg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="get_default_compiler">
        <expr>ret = distutils.ccompiler.get_default_compiler(osname,platform)%%['str', 'NoneType']</expr>
        <args>['osname:str', 'platform:NoneType']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="show_compilers">
        <expr>distutils.ccompiler.show_compilers()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="new_compiler">
        <expr>ret = distutils.ccompiler.new_compiler(plat,compiler,verbose,dry_run,force)%%['NoneType', 'NoneType', 'int', 'int', 'int']</expr>
        <args>['plat:NoneType', 'compiler:NoneType', 'verbose:int', 'dry_run:int', 'force:int']</args>
        <return>['klass:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="gen_preprocess_options">
        <expr>ret = distutils.ccompiler.gen_preprocess_options(macros,include_dirs)%%['list', 'list']</expr>
        <args>['macros:list', 'include_dirs:list']</args>
        <return>['pp_opts:list']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="gen_lib_options">
        <expr>ret = distutils.ccompiler.gen_lib_options(compiler,library_dirs,runtime_library_dirs,libraries)%%['UnixCCompiler', 'list', 'list', 'list']</expr>
        <args>['compiler:UnixCCompiler', 'library_dirs:list', 'runtime_library_dirs:list', 'libraries:list']</args>
        <return>['lib_opts:list']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>CompileError</exception>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
        <exception>LinkError</exception>
        <exception>NotImplementedError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>UnknownFileError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['distutils.text_file:TextFile', 'errors:DistutilsPlatformError']" imports="['distutils', 'distutils.sysconfig', 'os', 're', 'sys', 'warnings']" name="distutils.sysconfig">
      <api name="get_python_version">
        <expr>ret = distutils.sysconfig.get_python_version()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_python_inc">
        <expr>ret = distutils.sysconfig.get_python_inc(plat_specific,prefix)%%['int', 'NoneType']</expr>
        <args>['plat_specific:int', 'prefix:NoneType']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_python_lib">
        <expr>ret = distutils.sysconfig.get_python_lib(plat_specific,standard_lib,prefix)%%['int', 'int', 'str']</expr>
        <args>['plat_specific:int', 'standard_lib:int', 'prefix:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="customize_compiler">
        <expr>distutils.sysconfig.customize_compiler(compiler)%%['compiler']</expr>
        <args>['compiler:compiler']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_config_h_filename">
        <expr>ret = distutils.sysconfig.get_config_h_filename()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_makefile_filename">
        <expr>ret = distutils.sysconfig.get_makefile_filename()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parse_config_h">
        <expr>ret = distutils.sysconfig.parse_config_h(fp,g)%%['None', 'None']</expr>
        <args>['fp:None', 'g:None']</args>
        <return>['g:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parse_makefile">
        <expr>ret = distutils.sysconfig.parse_makefile(fn,g)%%['str', 'NoneType']</expr>
        <args>['fn:str', 'g:NoneType']</args>
        <return>['g:dict']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="expand_makefile_vars">
        <expr>ret = distutils.sysconfig.expand_makefile_vars(s,vars)%%['None', 'None']</expr>
        <args>['s:None', 'vars:None']</args>
        <return>['s:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_config_vars">
        <expr>ret = distutils.sysconfig.get_config_vars()%%[]</expr>
        <args>[]</args>
        <return>['vals:list', '_config_vars:dict']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_config_var">
        <expr>ret = distutils.sysconfig.get_config_var(name)%%['str']</expr>
        <args>['name:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>DistutilsPlatformError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['distutils.ccompiler:CCompiler', 'distutils.ccompiler:gen_lib_options', 'distutils.ccompiler:gen_preprocess_options', 'distutils.dep_util:newer', 'distutils.errors:CompileError', 'distutils.errors:DistutilsExecError', 'distutils.errors:DistutilsPlatformError', 'distutils.errors:LibError', 'distutils.errors:LinkError', 'distutils.errors:UnknownFileError', 'distutils.file_util:write_file', 'distutils:log']" imports="['distutils', 'distutils.bcppcompiler', 'os']" name="distutils.bcppcompiler">
      <class base="distutils.ccompiler.CCompiler" init="obj = distutils.bcppcompiler.BCPPCompiler()%%['NoneType', 'NoneType', 'NoneType']" name="BCPPCompiler">
        <api name="__init__">
          <expr>None</expr>
          <args>['verbose:NoneType', 'dry_run:NoneType', 'force:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="compile">
          <expr>ret = obj.compile(sources,output_dir,macros,include_dirs,debug,extra_preargs,extra_postargs,depends)%%['None', 'None', 'None', 'None', 'None', 'None', 'None', 'None']</expr>
          <args>['sources:None', 'output_dir:None', 'macros:None', 'include_dirs:None', 'debug:None', 'extra_preargs:None', 'extra_postargs:None', 'depends:None']</args>
          <return>['objects:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="create_static_lib">
          <expr>obj.create_static_lib(objects,output_libname,output_dir,debug,target_lang)%%['None', 'None', 'None', 'None', 'None']</expr>
          <args>['objects:None', 'output_libname:None', 'output_dir:None', 'debug:None', 'target_lang:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="link">
          <expr>obj.link(target_desc,objects,output_filename,output_dir,libraries,library_dirs,runtime_library_dirs,export_symbols,debug,extra_preargs,extra_postargs,build_temp,target_lang)%%['None', 'None', 'None', 'None', 'None', 'None', 'None', 'None', 'None', 'None', 'None', 'None', 'None']</expr>
          <args>['target_desc:None', 'objects:None', 'output_filename:None', 'output_dir:None', 'libraries:None', 'library_dirs:None', 'runtime_library_dirs:None', 'export_symbols:None', 'debug:None', 'extra_preargs:None', 'extra_postargs:None', 'build_temp:None', 'target_lang:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None, None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="object_filenames">
          <expr>ret = obj.object_filenames(source_filenames,strip_dir,output_dir)%%['None', 'None', 'None']</expr>
          <args>['source_filenames:None', 'strip_dir:None', 'output_dir:None']</args>
          <return>['obj_names:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="preprocess">
          <expr>obj.preprocess(source,output_file,macros,include_dirs,extra_preargs,extra_postargs)%%['None', 'None', 'None', 'None', 'None', 'None']</expr>
          <args>['source:None', 'output_file:None', 'macros:None', 'include_dirs:None', 'extra_preargs:None', 'extra_postargs:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>DistutilsExecError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>UnknownFileError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['distutils.errors:DistutilsFileError', 'distutils.errors:DistutilsInternalError', 'distutils.file_util:copy_file', 'distutils:log']" imports="['distutils', 'distutils.dir_util', 'errno', 'os']" name="distutils.dir_util">
      <api name="mkpath">
        <expr>ret = distutils.dir_util.mkpath(name,mode,verbose,dry_run)%%['str', 'int', 'int', 'int']</expr>
        <args>['name:str', 'mode:int', 'verbose:int', 'dry_run:int']</args>
        <return>['created_dirs:list']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="create_tree">
        <expr>distutils.dir_util.create_tree(base_dir,files,mode,verbose,dry_run)%%['None', 'None', 'None', 'None', 'None']</expr>
        <args>['base_dir:None', 'files:None', 'mode:None', 'verbose:None', 'dry_run:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="copy_tree">
        <expr>ret = distutils.dir_util.copy_tree(src,dst,preserve_mode,preserve_times,preserve_symlinks,update,verbose,dry_run)%%['None', 'None', 'None', 'None', 'None', 'None', 'None', 'None']</expr>
        <args>['src:None', 'dst:None', 'preserve_mode:None', 'preserve_times:None', 'preserve_symlinks:None', 'update:None', 'verbose:None', 'dry_run:None']</args>
        <return>['outputs:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="remove_tree">
        <expr>distutils.dir_util.remove_tree(directory,verbose,dry_run)%%['None', 'None', 'None']</expr>
        <args>['directory:None', 'verbose:None', 'dry_run:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ensure_relative">
        <expr>ret = distutils.dir_util.ensure_relative(path)%%['None']</expr>
        <args>['path:None']</args>
        <return>['path:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>DistutilsFileError</exception>
        <exception>DistutilsInternalError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['distutils.errors:DistutilsFileError', 'stat:ST_MTIME']" imports="['distutils', 'distutils.dep_util', 'os']" name="distutils.dep_util">
      <api name="newer">
        <expr>ret = distutils.dep_util.newer(source,target)%%['str', 'str']</expr>
        <args>['source:str', 'target:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="newer_pairwise">
        <expr>distutils.dep_util.newer_pairwise(sources,targets)%%['None', 'None']</expr>
        <args>['sources:None', 'targets:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="newer_group">
        <expr>ret = distutils.dep_util.newer_group(sources,target,missing)%%['list', 'str', 'str']</expr>
        <args>['sources:list', 'target:str', 'missing:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>DistutilsFileError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['distutils.errors:*']" imports="['distutils', 'distutils.fancy_getopt', 'getopt', 're', 'string', 'sys']" name="distutils.fancy_getopt">
      <class init="obj = distutils.fancy_getopt.FancyGetopt()%%['NoneType']" name="FancyGetopt">
        <api name="__init__">
          <expr>None</expr>
          <args>['option_table:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_option_table">
          <expr>obj.set_option_table(option_table)%%['list']</expr>
          <args>['option_table:list']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_option">
          <expr>obj.add_option(long_option,short_option,help_string)%%['None', 'None', 'None']</expr>
          <args>['long_option:None', 'short_option:None', 'help_string:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_option">
          <expr>ret = obj.has_option(long_option)%%['None']</expr>
          <args>['long_option:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_aliases">
          <expr>obj.set_aliases(alias)%%['dict']</expr>
          <args>['alias:dict']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_negative_aliases">
          <expr>obj.set_negative_aliases(negative_alias)%%['dict']</expr>
          <args>['negative_alias:dict']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_option_order">
          <expr>ret = obj.get_option_order()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="generate_help">
          <expr>ret = obj.generate_help(header)%%['None']</expr>
          <args>['header:None']</args>
          <return>['lines:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="print_help">
          <expr>obj.print_help(header,file)%%['None', 'None']</expr>
          <args>['header:None', 'file:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = distutils.fancy_getopt.OptionDummy()%%['NoneType']" name="OptionDummy">
        <api name="__init__">
          <expr>None</expr>
          <args>['options:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="fancy_getopt">
        <expr>ret = distutils.fancy_getopt.fancy_getopt(options,negative_opt,object,args)%%['None', 'None', 'None', 'None']</expr>
        <args>['options:None', 'negative_opt:None', 'object:None', 'args:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="wrap_text">
        <expr>ret = distutils.fancy_getopt.wrap_text(text,width)%%['None', 'None']</expr>
        <args>['text:None', 'width:None']</args>
        <return>['ret:None', 'lines:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="translate_longopt">
        <expr>ret = distutils.fancy_getopt.translate_longopt(opt)%%['str']</expr>
        <args>['opt:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>DistutilsGetoptError</exception>
        <exception>OSError</exception>
        <exception>RuntimeError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>getopt.GetoptError</exception>
        <exception>getopt.error</exception>
      </errors>
    </module>
    <module importfrom="['configparser:RawConfigParser', 'distutils.cmd:Command']" imports="['cgi', 'distutils', 'distutils.config', 'os']" name="distutils.config">
      <class base="distutils.cmd.Command" init="obj = distutils.config.PyPIRCCommand(None)%%['NoneType']" name="PyPIRCCommand">
        <api name="initialize_options">
          <expr>obj.initialize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['distutils.dir_util:mkpath', 'distutils.errors:DistutilsExecError', 'distutils.spawn:spawn', 'distutils:log', 'grp:getgrnam', 'pwd:getpwnam', 'warnings:warn']" imports="['distutils', 'distutils.archive_util', 'os', 'sys', 'tarfile', 'zipfile']" name="distutils.archive_util">
      <api name="make_tarball">
        <expr>ret = distutils.archive_util.make_tarball(base_name,base_dir,compress,verbose,dry_run,owner,group)%%['str', 'str', 'str', 'int', 'int', 'str', 'str']</expr>
        <args>['base_name:str', 'base_dir:str', 'compress:str', 'verbose:int', 'dry_run:int', 'owner:str', 'group:str']</args>
        <return>['compressed_name:NoneType', 'archive_name:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="make_zipfile">
        <expr>ret = distutils.archive_util.make_zipfile(base_name,base_dir,verbose,dry_run)%%['str', 'str', 'int', 'int']</expr>
        <args>['base_name:str', 'base_dir:str', 'verbose:int', 'dry_run:int']</args>
        <return>['zip_filename:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="check_archive_formats">
        <expr>ret = distutils.archive_util.check_archive_formats(formats)%%['list']</expr>
        <args>['formats:list']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="make_archive">
        <expr>ret = distutils.archive_util.make_archive(base_name,format,root_dir,base_dir,verbose,dry_run,owner,group)%%['str', 'str', 'str', 'str', 'int', 'int', 'str', 'str']</expr>
        <args>['base_name:str', 'format:str', 'root_dir:str', 'base_dir:str', 'verbose:int', 'dry_run:int', 'owner:str', 'group:str']</args>
        <return>['filename:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>DistutilsExecError</exception>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>RuntimeError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>tarfile.CompressionError</exception>
        <exception>tarfile.EOFHeaderError</exception>
        <exception>tarfile.EmptyHeaderError</exception>
        <exception>tarfile.ExtractError</exception>
        <exception>tarfile.HeaderError</exception>
        <exception>tarfile.InvalidHeaderError</exception>
        <exception>tarfile.ReadError</exception>
        <exception>tarfile.StreamError</exception>
        <exception>tarfile.SubsequentHeaderError</exception>
        <exception>tarfile.TarError</exception>
        <exception>tarfile.TruncatedHeaderError</exception>
        <exception>zipfile.BadZipFile</exception>
        <exception>zipfile.LargeZipFile</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['distutils', 'distutils.version', 'distutils.versionpredicate', 'operator', 're']" name="distutils.versionpredicate">
      <class init="obj = distutils.versionpredicate.VersionPredicate(None)%%['NoneType']" name="VersionPredicate">
        <api name="__init__">
          <expr>None</expr>
          <args>['versionPredicateStr:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="satisfied_by">
          <expr>ret = obj.satisfied_by(version)%%['None']</expr>
          <args>['version:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="splitUp">
        <expr>distutils.versionpredicate.splitUp(pred)%%['str']</expr>
        <args>['pred:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="split_provision">
        <expr>distutils.versionpredicate.split_provision(value)%%['str']</expr>
        <args>['value:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['distutils.debug:DEBUG', 'distutils.errors:DistutilsOptionError', 'distutils.fancy_getopt:longopt_xlate', 'distutils.spawn:spawn', 'distutils:archive_util', 'distutils:dep_util', 'distutils:dir_util', 'distutils:file_util', 'distutils:log', 'distutils:util']" imports="['distutils', 'distutils.cmd', 'os', 're', 'sys']" name="distutils.cmd">
      <class init="obj = distutils.cmd.Command(None)%%['NoneType']" name="Command">
        <api name="__init__">
          <expr>None</expr>
          <args>['dist:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="initialize_options">
          <expr>obj.initialize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dump_options">
          <expr>obj.dump_options(header,indent)%%['None', 'None']</expr>
          <args>['header:None', 'indent:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run">
          <expr>obj.run()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="debug_print">
          <expr>obj.debug_print(msg)%%['None']</expr>
          <args>['msg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ensure_string">
          <expr>obj.ensure_string(option,default)%%['None', 'None']</expr>
          <args>['option:None', 'default:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ensure_string_list">
          <expr>obj.ensure_string_list(option)%%['None']</expr>
          <args>['option:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ensure_filename">
          <expr>obj.ensure_filename(option)%%['None']</expr>
          <args>['option:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ensure_dirname">
          <expr>obj.ensure_dirname(option)%%['None']</expr>
          <args>['option:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_command_name">
          <expr>ret = obj.get_command_name()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_undefined_options">
          <expr>obj.set_undefined_options(src_cmd)%%['None']</expr>
          <args>['src_cmd:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_finalized_command">
          <expr>ret = obj.get_finalized_command(command,create)%%['None', 'None']</expr>
          <args>['command:None', 'create:None']</args>
          <return>['cmd_obj:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_sub_commands">
          <expr>ret = obj.get_sub_commands()%%[]</expr>
          <args>[]</args>
          <return>['commands:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="make_file">
          <expr>obj.make_file(infiles,outfile,func,args,exec_msg,skip_msg,level)%%['None', 'None', 'None', 'None', 'None', 'None', 'None']</expr>
          <args>['infiles:None', 'outfile:None', 'func:None', 'args:None', 'exec_msg:None', 'skip_msg:None', 'level:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>DistutilsOptionError</exception>
        <exception>OSError</exception>
        <exception>RuntimeError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['distutils', 'distutils.text_file', 'io', 'sys']" name="distutils.text_file">
      <class init="obj = distutils.text_file.TextFile()%%['NoneType', 'NoneType']" name="TextFile">
        <api name="__init__">
          <expr>None</expr>
          <args>['filename:NoneType', 'file:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="gen_error">
          <expr>ret = obj.gen_error(msg,line)%%['None', 'None']</expr>
          <args>['msg:None', 'line:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="error">
          <expr>obj.error(msg,line)%%['None', 'None']</expr>
          <args>['msg:None', 'line:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="readlines">
          <expr>ret = obj.readlines()%%[]</expr>
          <args>[]</args>
          <return>['lines:list']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unreadline">
          <expr>obj.unreadline(line)%%['None']</expr>
          <args>['line:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['distutils.sysconfig:expand_makefile_vars', 'distutils.sysconfig:parse_makefile', 'distutils.text_file:TextFile', 'distutils.util:split_quoted']" imports="['distutils', 'distutils.extension', 'os', 'warnings']" name="distutils.extension">
      <class init="obj = distutils.extension.Extension(None,None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="Extension">
        <api name="__init__">
          <expr>None</expr>
          <args>['name:NoneType', 'sources:NoneType', 'include_dirs:NoneType', 'define_macros:NoneType', 'undef_macros:NoneType', 'library_dirs:NoneType', 'libraries:NoneType', 'runtime_library_dirs:NoneType', 'extra_objects:NoneType', 'extra_compile_args:NoneType', 'extra_link_args:NoneType', 'export_symbols:NoneType', 'swig_opts:NoneType', 'depends:NoneType', 'language:NoneType', 'optional:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None, None, None, None, None, None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="read_setup_file">
        <expr>ret = distutils.extension.read_setup_file(filename)%%['None']</expr>
        <args>['filename:None']</args>
        <return>['extensions:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['distutils.dep_util:newer', 'distutils.dir_util:mkpath', 'distutils.errors:DistutilsByteCompileError', 'distutils.errors:DistutilsPlatformError', 'distutils.file_util:copy_file', 'distutils.filelist:FileList', 'distutils.spawn:spawn', 'distutils:log', 'lib2to3.refactor:RefactoringTool', 'lib2to3.refactor:get_fixers_from_package', 'py_compile:compile', 'tempfile:mkstemp']" imports="['distutils', 'distutils.sysconfig', 'distutils.util', 'importlib.util', 'os', 'pwd', 're', 'string', 'subprocess', 'sys']" name="distutils.util">
      <class init="obj = distutils.util.Mixin2to3()%%[]" name="Mixin2to3"/>
      <api name="get_platform">
        <expr>ret = distutils.util.get_platform()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="convert_path">
        <expr>ret = distutils.util.convert_path(pathname)%%['str']</expr>
        <args>['pathname:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="change_root">
        <expr>ret = distutils.util.change_root(new_root,pathname)%%['None', 'None']</expr>
        <args>['new_root:None', 'pathname:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="check_environ">
        <expr>distutils.util.check_environ()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="subst_vars">
        <expr>ret = distutils.util.subst_vars(s,local_vars)%%['None', 'None']</expr>
        <args>['s:None', 'local_vars:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="grok_environment_error">
        <expr>ret = distutils.util.grok_environment_error(exc,prefix)%%['None', 'None']</expr>
        <args>['exc:None', 'prefix:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="split_quoted">
        <expr>ret = distutils.util.split_quoted(s)%%['str']</expr>
        <args>['s:str']</args>
        <return>['words:list']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="execute">
        <expr>distutils.util.execute(func,args,msg,verbose,dry_run)%%['builtin_function_or_method', 'tuple', 'str', 'int', 'int']</expr>
        <args>['func:builtin_function_or_method', 'args:tuple', 'msg:str', 'verbose:int', 'dry_run:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="strtobool">
        <expr>ret = distutils.util.strtobool(val)%%['None']</expr>
        <args>['val:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="byte_compile">
        <expr>distutils.util.byte_compile(py_files,optimize,force,prefix,base_dir,verbose,dry_run,direct)%%['list', 'int', 'int', 'str', 'NoneType', 'int', 'int', 'NoneType']</expr>
        <args>['py_files:list', 'optimize:int', 'force:int', 'prefix:str', 'base_dir:NoneType', 'verbose:int', 'dry_run:int', 'direct:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="rfc822_escape">
        <expr>ret = distutils.util.rfc822_escape(header)%%['str']</expr>
        <args>['header:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="run_2to3">
        <expr>distutils.util.run_2to3(files,fixer_names,options,explicit)%%['None', 'None', 'None', 'None']</expr>
        <args>['files:None', 'fixer_names:None', 'options:None', 'explicit:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="copydir_run_2to3">
        <expr>ret = distutils.util.copydir_run_2to3(src,dest,template,fixer_names,options,explicit)%%['None', 'None', 'None', 'None', 'None', 'None']</expr>
        <args>['src:None', 'dest:None', 'template:None', 'fixer_names:None', 'options:None', 'explicit:None']</args>
        <return>['copied:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>DistutilsByteCompileError</exception>
        <exception>DistutilsPlatformError</exception>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>RuntimeError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['distutils.debug:DEBUG', 'distutils.errors:DistutilsExecError', 'distutils.errors:DistutilsPlatformError', 'distutils:log', 'distutils:sysconfig']" imports="['distutils', 'distutils.spawn', 'os', 'sys']" name="distutils.spawn">
      <api name="spawn">
        <expr>distutils.spawn.spawn(cmd,search_path,verbose,dry_run)%%['list', 'int', 'int', 'int']</expr>
        <args>['cmd:list', 'search_path:int', 'verbose:int', 'dry_run:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="find_executable">
        <expr>ret = distutils.spawn.find_executable(executable,path)%%['str', 'NoneType']</expr>
        <args>['executable:str', 'path:NoneType']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>DistutilsExecError</exception>
        <exception>DistutilsPlatformError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['distutils', 'distutils.errors']" name="distutils.errors">
      <class base="Exception" init="obj = distutils.errors.DistutilsError()%%[]" name="DistutilsError"/>
      <class base="DistutilsError" init="obj = distutils.errors.DistutilsModuleError()%%[]" name="DistutilsModuleError"/>
      <class base="DistutilsError" init="obj = distutils.errors.DistutilsClassError()%%[]" name="DistutilsClassError"/>
      <class base="DistutilsError" init="obj = distutils.errors.DistutilsGetoptError()%%[]" name="DistutilsGetoptError"/>
      <class base="DistutilsError" init="obj = distutils.errors.DistutilsArgError()%%[]" name="DistutilsArgError"/>
      <class base="DistutilsError" init="obj = distutils.errors.DistutilsFileError()%%[]" name="DistutilsFileError"/>
      <class base="DistutilsError" init="obj = distutils.errors.DistutilsOptionError()%%[]" name="DistutilsOptionError"/>
      <class base="DistutilsError" init="obj = distutils.errors.DistutilsSetupError()%%[]" name="DistutilsSetupError"/>
      <class base="DistutilsError" init="obj = distutils.errors.DistutilsPlatformError()%%[]" name="DistutilsPlatformError"/>
      <class base="DistutilsError" init="obj = distutils.errors.DistutilsExecError()%%[]" name="DistutilsExecError"/>
      <class base="DistutilsError" init="obj = distutils.errors.DistutilsInternalError()%%[]" name="DistutilsInternalError"/>
      <class base="DistutilsError" init="obj = distutils.errors.DistutilsTemplateError()%%[]" name="DistutilsTemplateError"/>
      <class base="DistutilsError" init="obj = distutils.errors.DistutilsByteCompileError()%%[]" name="DistutilsByteCompileError"/>
      <class base="Exception" init="obj = distutils.errors.CCompilerError()%%[]" name="CCompilerError"/>
      <class base="CCompilerError" init="obj = distutils.errors.PreprocessError()%%[]" name="PreprocessError"/>
      <class base="CCompilerError" init="obj = distutils.errors.CompileError()%%[]" name="CompileError"/>
      <class base="CCompilerError" init="obj = distutils.errors.LibError()%%[]" name="LibError"/>
      <class base="CCompilerError" init="obj = distutils.errors.LinkError()%%[]" name="LinkError"/>
      <class base="CCompilerError" init="obj = distutils.errors.UnknownFileError()%%[]" name="UnknownFileError"/>
      <errors>
        <exception>distutils.errors.CCompilerError</exception>
        <exception>distutils.errors.CompileError</exception>
        <exception>distutils.errors.DistutilsArgError</exception>
        <exception>distutils.errors.DistutilsByteCompileError</exception>
        <exception>distutils.errors.DistutilsClassError</exception>
        <exception>distutils.errors.DistutilsError</exception>
        <exception>distutils.errors.DistutilsExecError</exception>
        <exception>distutils.errors.DistutilsFileError</exception>
        <exception>distutils.errors.DistutilsGetoptError</exception>
        <exception>distutils.errors.DistutilsInternalError</exception>
        <exception>distutils.errors.DistutilsModuleError</exception>
        <exception>distutils.errors.DistutilsOptionError</exception>
        <exception>distutils.errors.DistutilsPlatformError</exception>
        <exception>distutils.errors.DistutilsSetupError</exception>
        <exception>distutils.errors.DistutilsTemplateError</exception>
        <exception>distutils.errors.LibError</exception>
        <exception>distutils.errors.LinkError</exception>
        <exception>distutils.errors.PreprocessError</exception>
        <exception>distutils.errors.UnknownFileError</exception>
      </errors>
    </module>
    <module importfrom="['distutils.ccompiler:gen_lib_options', 'distutils.ccompiler:gen_preprocess_options', 'distutils.errors:CCompilerError', 'distutils.errors:CompileError', 'distutils.errors:DistutilsExecError', 'distutils.errors:UnknownFileError', 'distutils.file_util:write_file', 'distutils.spawn:find_executable', 'distutils.unixccompiler:UnixCCompiler', 'distutils.version:LooseVersion', 'distutils:log', 'distutils:sysconfig', 'subprocess:PIPE', 'subprocess:Popen', 'subprocess:check_output']" imports="['copy', 'distutils', 'distutils.cygwinccompiler', 'os', 're', 'sys']" name="distutils.cygwinccompiler">
      <class base="distutils.unixccompiler.UnixCCompiler" init="obj = distutils.cygwinccompiler.CygwinCCompiler()%%['NoneType', 'NoneType', 'NoneType']" name="CygwinCCompiler">
        <api name="__init__">
          <expr>None</expr>
          <args>['verbose:NoneType', 'dry_run:NoneType', 'force:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="object_filenames">
          <expr>ret = obj.object_filenames(source_filenames,strip_dir,output_dir)%%['None', 'None', 'None']</expr>
          <args>['source_filenames:None', 'strip_dir:None', 'output_dir:None']</args>
          <return>['obj_names:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="distutils.cygwinccompiler.CygwinCCompiler" init="obj = distutils.cygwinccompiler.Mingw32CCompiler()%%['NoneType', 'NoneType', 'NoneType']" name="Mingw32CCompiler">
        <api name="__init__">
          <expr>None</expr>
          <args>['verbose:NoneType', 'dry_run:NoneType', 'force:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="get_msvcr">
        <expr>ret = distutils.cygwinccompiler.get_msvcr()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="check_config_h">
        <expr>distutils.cygwinccompiler.check_config_h()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_versions">
        <expr>ret = distutils.cygwinccompiler.get_versions()%%[]</expr>
        <args>[]</args>
        <return>['tuple:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="is_cygwingcc">
        <expr>ret = distutils.cygwinccompiler.is_cygwingcc()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>DistutilsExecError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>UnknownFileError</exception>
        <exception>ValueError</exception>
        <exception>copy.Error</exception>
      </errors>
    </module>
    <module importfrom="['distutils.ccompiler:CCompiler', 'distutils.ccompiler:gen_lib_options', 'distutils.ccompiler:gen_preprocess_options', 'distutils.dep_util:newer', 'distutils.errors:CompileError', 'distutils.errors:DistutilsExecError', 'distutils.errors:LibError', 'distutils.errors:LinkError', 'distutils:log', 'distutils:sysconfig']" imports="['distutils', 'distutils.unixccompiler', 'os', 're', 'sys']" name="distutils.unixccompiler">
      <class base="distutils.ccompiler.CCompiler" init="obj = distutils.unixccompiler.UnixCCompiler()%%['NoneType', 'NoneType', 'NoneType']" name="UnixCCompiler">
        <api name="preprocess">
          <expr>obj.preprocess(source,output_file,macros,include_dirs,extra_preargs,extra_postargs)%%['str', 'str', 'NoneType', 'NoneType', 'NoneType', 'NoneType']</expr>
          <args>['source:str', 'output_file:str', 'macros:NoneType', 'include_dirs:NoneType', 'extra_preargs:NoneType', 'extra_postargs:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="create_static_lib">
          <expr>obj.create_static_lib(objects,output_libname,output_dir,debug,target_lang)%%['None', 'None', 'None', 'None', 'None']</expr>
          <args>['objects:None', 'output_libname:None', 'output_dir:None', 'debug:None', 'target_lang:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="link">
          <expr>obj.link(target_desc,objects,output_filename,output_dir,libraries,library_dirs,runtime_library_dirs,export_symbols,debug,extra_preargs,extra_postargs,build_temp,target_lang)%%['str', 'list', 'str', 'NoneType', 'list', 'list', 'list', 'list', 'NoneType', 'NoneType', 'list', 'str', 'str']</expr>
          <args>['target_desc:str', 'objects:list', 'output_filename:str', 'output_dir:NoneType', 'libraries:list', 'library_dirs:list', 'runtime_library_dirs:list', 'export_symbols:list', 'debug:NoneType', 'extra_preargs:NoneType', 'extra_postargs:list', 'build_temp:str', 'target_lang:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None, None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="library_dir_option">
          <expr>ret = obj.library_dir_option(dir)%%['None']</expr>
          <args>['dir:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="runtime_library_dir_option">
          <expr>ret = obj.runtime_library_dir_option(dir)%%['None']</expr>
          <args>['dir:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="library_option">
          <expr>ret = obj.library_option(lib)%%['None']</expr>
          <args>['lib:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="find_library_file">
          <expr>ret = obj.find_library_file(dirs,lib,debug)%%['None', 'None', 'None']</expr>
          <args>['dirs:None', 'lib:None', 'debug:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>DistutilsExecError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['distutils.core:Command', 'distutils.errors:*', 'distutils.util:Mixin2to3', 'distutils.util:byte_compile', 'distutils.util:convert_path', 'distutils:log', 'glob:glob']" imports="['distutils', 'distutils.command', 'distutils.command.build_py', 'importlib.util', 'os', 'sys']" name="distutils.command.build_py">
      <class base="distutils.cmd.Command" init="obj = distutils.command.build_py.build_py(None)%%['NoneType']" name="build_py">
        <api name="initialize_options">
          <expr>obj.initialize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run">
          <expr>obj.run()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="check_module">
          <expr>ret = obj.check_module(module,module_file)%%['str', 'str']</expr>
          <args>['module:str', 'module_file:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_source_files">
          <expr>ret = obj.get_source_files()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_outputs">
          <expr>ret = obj.get_outputs(include_bytecode)%%['int']</expr>
          <args>['include_bytecode:int']</args>
          <return>['outputs:list']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="distutils.command.build_py.build_py" init="obj = distutils.command.build_py.build_py_2to3()%%[]" name="build_py_2to3">
        <api name="run">
          <expr>obj.run()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AssertionError</exception>
        <exception>AttributeError</exception>
        <exception>DistutilsFileError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['distutils.core:Command', 'distutils.debug:DEBUG', 'distutils.errors:DistutilsOptionError', 'distutils.errors:DistutilsPlatformError', 'distutils.fancy_getopt:longopt_xlate', 'distutils.file_util:write_file', 'distutils.sysconfig:get_config_vars', 'distutils.util:change_root', 'distutils.util:convert_path', 'distutils.util:get_platform', 'distutils.util:subst_vars', 'distutils:log', 'pprint:pprint', 'site:USER_BASE', 'site:USER_SITE']" imports="['distutils', 'distutils.command', 'distutils.command.install', 'os', 'sys']" name="distutils.command.install">
      <class base="distutils.cmd.Command" init="obj = distutils.command.install.install(None)%%['NoneType']" name="install">
        <api name="initialize_options">
          <expr>obj.initialize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run">
          <expr>obj.run()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_inputs">
          <expr>ret = obj.get_inputs()%%[]</expr>
          <args>[]</args>
          <return>['inputs:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_lib">
          <expr>ret = obj.has_lib()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_data">
          <expr>ret = obj.has_data()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>DistutilsOptionError</exception>
        <exception>DistutilsPlatformError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['distutils.core:Command', 'distutils.errors:DistutilsOptionError', 'distutils.util:byte_compile']" imports="['distutils', 'distutils.command', 'distutils.command.install_lib', 'importlib.util', 'os', 'sys']" name="distutils.command.install_lib">
      <class base="distutils.cmd.Command" init="obj = distutils.command.install_lib.install_lib(None)%%['NoneType']" name="install_lib">
        <api name="initialize_options">
          <expr>obj.initialize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run">
          <expr>obj.run()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_inputs">
          <expr>ret = obj.get_inputs()%%[]</expr>
          <args>[]</args>
          <return>['inputs:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AssertionError</exception>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['concurrent.futures:ThreadPoolExecutor', 'distutils._msvccompiler:MSVCCompiler', 'distutils.ccompiler:new_compiler', 'distutils.ccompiler:show_compilers', 'distutils.core:Command', 'distutils.dep_util:newer_group', 'distutils.errors:*', 'distutils.extension:Extension', 'distutils.sysconfig:customize_compiler', 'distutils.sysconfig:get_config_h_filename', 'distutils.sysconfig:get_config_var', 'distutils.sysconfig:get_python_version', 'distutils.util:get_platform', 'distutils:log', 'distutils:sysconfig', 'site:USER_BASE']" imports="['contextlib', 'distutils', 'distutils.command', 'distutils.command.build_ext', 'os', 're', 'sys']" name="distutils.command.build_ext">
      <class base="distutils.cmd.Command" init="obj = distutils.command.build_ext.build_ext(None)%%['NoneType']" name="build_ext">
        <api name="initialize_options">
          <expr>obj.initialize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run">
          <expr>obj.run()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_source_files">
          <expr>ret = obj.get_source_files()%%[]</expr>
          <args>[]</args>
          <return>['filenames:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_outputs">
          <expr>ret = obj.get_outputs()%%[]</expr>
          <args>[]</args>
          <return>['outputs:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="find_swig">
          <expr>ret = obj.find_swig()%%[]</expr>
          <args>[]</args>
          <return>['ret:None', 'fn:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_export_symbols">
          <expr>ret = obj.get_export_symbols(ext)%%['Extension']</expr>
          <args>['ext:Extension']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_libraries">
          <expr>ret = obj.get_libraries(ext)%%['Extension']</expr>
          <args>['ext:Extension']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="show_compilers">
        <expr>distutils.command.build_ext.show_compilers()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>CCompilerError</exception>
        <exception>CompileError</exception>
        <exception>DistutilsError</exception>
        <exception>DistutilsPlatformError</exception>
        <exception>DistutilsSetupError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['distutils.ccompiler:show_compilers', 'distutils.core:Command', 'distutils.errors:DistutilsOptionError', 'distutils.util:get_platform']" imports="['distutils', 'distutils.command', 'distutils.command.build', 'os', 'sys']" name="distutils.command.build">
      <class base="distutils.cmd.Command" init="obj = distutils.command.build.build(None)%%['NoneType']" name="build">
        <api name="initialize_options">
          <expr>obj.initialize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run">
          <expr>obj.run()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="show_compilers">
        <expr>distutils.command.build.show_compilers()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>DistutilsOptionError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['distutils.core:Command', 'distutils.dir_util:create_tree', 'distutils.dir_util:remove_tree', 'distutils.errors:*', 'distutils.sysconfig:get_python_version', 'distutils.util:get_platform', 'distutils:log', 'msvcrt:CRT_ASSEMBLY_VERSION', 'tempfile:mktemp']" imports="['distutils', 'distutils.command', 'distutils.command.bdist_wininst', 'os', 'struct', 'sys', 'time']" name="distutils.command.bdist_wininst">
      <class base="distutils.cmd.Command" init="obj = distutils.command.bdist_wininst.bdist_wininst(None)%%['NoneType']" name="bdist_wininst">
        <api name="initialize_options">
          <expr>obj.initialize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_exe_bytes">
          <expr>ret = obj.get_exe_bytes()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>DistutilsOptionError</exception>
        <exception>DistutilsPlatformError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['distutils.core:Command', 'distutils.debug:DEBUG', 'distutils.errors:*', 'distutils.file_util:write_file', 'distutils.sysconfig:get_python_version', 'distutils.util:get_platform', 'distutils:log']" imports="['distutils', 'distutils.command', 'distutils.command.bdist_rpm', 'os', 'subprocess', 'sys']" name="distutils.command.bdist_rpm">
      <class base="distutils.cmd.Command" init="obj = distutils.command.bdist_rpm.bdist_rpm(None)%%['NoneType']" name="bdist_rpm">
        <api name="initialize_options">
          <expr>obj.initialize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run">
          <expr>obj.run()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>DistutilsExecError</exception>
        <exception>DistutilsFileError</exception>
        <exception>DistutilsOptionError</exception>
        <exception>DistutilsPlatformError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['distutils.core:Command', 'distutils.dir_util:remove_tree', 'distutils:log']" imports="['distutils', 'distutils.command', 'distutils.command.clean', 'os']" name="distutils.command.clean">
      <class base="distutils.cmd.Command" init="obj = distutils.command.clean.clean(None)%%['NoneType']" name="clean">
        <api name="initialize_options">
          <expr>obj.initialize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run">
          <expr>obj.run()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['distutils.cmd:Command', 'distutils:dir_util', 'distutils:log']" imports="['distutils', 'distutils.command', 'distutils.command.install_egg_info', 'os', 're', 'sys']" name="distutils.command.install_egg_info">
      <class base="distutils.cmd.Command" init="obj = distutils.command.install_egg_info.install_egg_info(None)%%['NoneType']" name="install_egg_info">
        <api name="initialize_options">
          <expr>obj.initialize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run">
          <expr>obj.run()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_outputs">
          <expr>ret = obj.get_outputs()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="safe_name">
        <expr>ret = distutils.command.install_egg_info.safe_name(name)%%['None']</expr>
        <args>['name:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="safe_version">
        <expr>ret = distutils.command.install_egg_info.safe_version(version)%%['None']</expr>
        <args>['version:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="to_filename">
        <expr>ret = distutils.command.install_egg_info.to_filename(name)%%['None']</expr>
        <args>['name:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['distutils.core:PyPIRCCommand', 'distutils.errors:*', 'distutils:log', 'warnings:warn']" imports="['distutils', 'distutils.command', 'distutils.command.register', 'getpass', 'io', 'urllib.parse', 'urllib.request']" name="distutils.command.register">
      <class base="distutils.config.PyPIRCCommand" init="obj = distutils.command.register.register()%%[]" name="register">
        <api name="check_metadata">
          <expr>obj.check_metadata()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="build_post_data">
          <expr>ret = obj.build_post_data(action)%%['None']</expr>
          <args>['action:None']</args>
          <return>['data:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>getpass.GetPassWarning</exception>
        <exception>urllib.error.HTTPError</exception>
        <exception>urllib.error.URLError</exception>
      </errors>
    </module>
    <module importfrom="['distutils.core:Command']" imports="['distutils', 'distutils.command', 'distutils.command.install_headers']" name="distutils.command.install_headers">
      <class base="distutils.cmd.Command" init="obj = distutils.command.install_headers.install_headers(None)%%['NoneType']" name="install_headers">
        <api name="initialize_options">
          <expr>obj.initialize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run">
          <expr>obj.run()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_inputs">
          <expr>ret = obj.get_inputs()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_outputs">
          <expr>ret = obj.get_outputs()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['distutils.core:Command', 'distutils.dep_util:newer', 'distutils.util:Mixin2to3', 'distutils.util:convert_path', 'distutils:log', 'distutils:sysconfig', 'stat:ST_MODE']" imports="['distutils', 'distutils.command', 'distutils.command.build_scripts', 'os', 're', 'tokenize']" name="distutils.command.build_scripts">
      <class base="distutils.cmd.Command" init="obj = distutils.command.build_scripts.build_scripts(None)%%['NoneType']" name="build_scripts">
        <api name="initialize_options">
          <expr>obj.initialize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_source_files">
          <expr>ret = obj.get_source_files()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run">
          <expr>obj.run()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="distutils.command.build_scripts.build_scripts" init="obj = distutils.command.build_scripts.build_scripts_2to3()%%[]" name="build_scripts_2to3"/>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>UnicodeDecodeError</exception>
        <exception>ValueError</exception>
        <exception>tokenize.StopTokenizing</exception>
        <exception>tokenize.TokenError</exception>
      </errors>
    </module>
    <module importfrom="['distutils.archive_util:ARCHIVE_FORMATS', 'distutils.core:Command', 'distutils.errors:DistutilsOptionError', 'distutils.errors:DistutilsTemplateError', 'distutils.fancy_getopt:FancyGetopt', 'distutils.filelist:FileList', 'distutils.text_file:TextFile', 'distutils.util:convert_path', 'distutils:archive_util', 'distutils:dir_util', 'distutils:file_util', 'distutils:log', 'glob:glob', 'warnings:warn']" imports="['distutils', 'distutils.command', 'distutils.command.sdist', 'os', 'sys']" name="distutils.command.sdist">
      <class base="distutils.cmd.Command" init="obj = distutils.command.sdist.sdist(None)%%['NoneType']" name="sdist">
        <api name="checking_metadata">
          <expr>ret = obj.checking_metadata()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="initialize_options">
          <expr>obj.initialize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="check_metadata">
          <expr>obj.check_metadata()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_archive_files">
          <expr>ret = obj.get_archive_files()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="show_formats">
        <expr>distutils.command.sdist.show_formats()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>DistutilsOptionError</exception>
        <exception>DistutilsTemplateError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['distutils.core:Command', 'distutils.errors:DistutilsSetupError', 'docutils.parsers.rst:Parser', 'docutils.utils:Reporter', 'docutils:frontend', 'docutils:nodes', 'io:StringIO']" imports="['distutils', 'distutils.command', 'distutils.command.check']" name="distutils.command.check">
      <class base="docutils.utils.Reporter" init="obj = distutils.command.check.SilentReporter(None,None,None)%%['None', 'None', 'None', 'None', 'None', 'None', 'None']" name="SilentReporter">
        <api name="__init__">
          <expr>None</expr>
          <args>['source:None', 'report_level:None', 'halt_level:None', 'stream:None', 'debug:None', 'encoding:None', 'error_handler:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="distutils.cmd.Command" init="obj = distutils.command.check.check(None)%%['NoneType']" name="check">
        <api name="initialize_options">
          <expr>obj.initialize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run">
          <expr>obj.run()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>DistutilsSetupError</exception>
        <exception>Exception</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['distutils.ccompiler:CCompiler', 'distutils.ccompiler:CompileError', 'distutils.ccompiler:LinkError', 'distutils.ccompiler:new_compiler', 'distutils.core:Command', 'distutils.errors:DistutilsExecError', 'distutils.sysconfig:customize_compiler', 'distutils:log']" imports="['distutils', 'distutils.command', 'distutils.command.config', 'os', 're']" name="distutils.command.config">
      <class base="distutils.cmd.Command" init="obj = distutils.command.config.config(None)%%['NoneType']" name="config">
        <api name="initialize_options">
          <expr>obj.initialize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="search_cpp">
          <expr>ret = obj.search_cpp(pattern,body,headers,include_dirs,lang)%%['str', 'str', 'NoneType', 'NoneType', 'str']</expr>
          <args>['pattern:str', 'body:str', 'headers:NoneType', 'include_dirs:NoneType', 'lang:str']</args>
          <return>['match:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="try_compile">
          <expr>ret = obj.try_compile(body,headers,include_dirs,lang)%%['None', 'None', 'None', 'None']</expr>
          <args>['body:None', 'headers:None', 'include_dirs:None', 'lang:None']</args>
          <return>['ok:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="try_run">
          <expr>ret = obj.try_run(body,headers,include_dirs,libraries,library_dirs,lang)%%['None', 'None', 'None', 'None', 'None', 'None']</expr>
          <args>['body:None', 'headers:None', 'include_dirs:None', 'libraries:None', 'library_dirs:None', 'lang:None']</args>
          <return>['ok:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="check_func">
          <expr>ret = obj.check_func(func,headers,include_dirs,libraries,library_dirs,decl,call)%%['None', 'None', 'None', 'None', 'None', 'None', 'None']</expr>
          <args>['func:None', 'headers:None', 'include_dirs:None', 'libraries:None', 'library_dirs:None', 'decl:None', 'call:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="check_lib">
          <expr>ret = obj.check_lib(library,library_dirs,headers,include_dirs,other_libraries)%%['None', 'None', 'None', 'None', 'None']</expr>
          <args>['library:None', 'library_dirs:None', 'headers:None', 'include_dirs:None', 'other_libraries:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="check_header">
          <expr>ret = obj.check_header(header,include_dirs,library_dirs,lang)%%['None', 'None', 'None', 'None']</expr>
          <args>['header:None', 'include_dirs:None', 'library_dirs:None', 'lang:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="dump_file">
        <expr>distutils.command.config.dump_file(filename,head)%%['str', 'str']</expr>
        <args>['filename:str', 'head:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>CompileError</exception>
        <exception>DistutilsExecError</exception>
        <exception>LinkError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['distutils.core:Command', 'distutils.dir_util:ensure_relative', 'distutils.dir_util:remove_tree', 'distutils.errors:*', 'distutils.sysconfig:get_python_version', 'distutils.util:get_platform', 'distutils:log']" imports="['distutils', 'distutils.command', 'distutils.command.bdist_dumb', 'os']" name="distutils.command.bdist_dumb">
      <class base="distutils.cmd.Command" init="obj = distutils.command.bdist_dumb.bdist_dumb(None)%%['NoneType']" name="bdist_dumb">
        <api name="initialize_options">
          <expr>obj.initialize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run">
          <expr>obj.run()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>DistutilsPlatformError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['distutils.core:Command', 'distutils.util:change_root', 'distutils.util:convert_path']" imports="['distutils', 'distutils.command', 'distutils.command.install_data', 'os']" name="distutils.command.install_data">
      <class base="distutils.cmd.Command" init="obj = distutils.command.install_data.install_data(None)%%['NoneType']" name="install_data">
        <api name="initialize_options">
          <expr>obj.initialize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run">
          <expr>obj.run()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_inputs">
          <expr>ret = obj.get_inputs()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_outputs">
          <expr>ret = obj.get_outputs()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['distutils.ccompiler:new_compiler', 'distutils.ccompiler:show_compilers', 'distutils.core:Command', 'distutils.errors:*', 'distutils.sysconfig:customize_compiler', 'distutils:log']" imports="['distutils', 'distutils.command', 'distutils.command.build_clib', 'os']" name="distutils.command.build_clib">
      <class base="distutils.cmd.Command" init="obj = distutils.command.build_clib.build_clib(None)%%['NoneType']" name="build_clib">
        <api name="initialize_options">
          <expr>obj.initialize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run">
          <expr>obj.run()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_library_names">
          <expr>ret = obj.get_library_names()%%[]</expr>
          <args>[]</args>
          <return>['ret:None', 'lib_names:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_source_files">
          <expr>ret = obj.get_source_files()%%[]</expr>
          <args>[]</args>
          <return>['filenames:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="show_compilers">
        <expr>distutils.command.build_clib.show_compilers()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>DistutilsSetupError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['base64:standard_b64encode', 'distutils.core:PyPIRCCommand', 'distutils.errors:DistutilsError', 'distutils.errors:DistutilsOptionError', 'distutils.spawn:spawn', 'distutils:log', 'urllib.parse:urlparse', 'urllib.request:HTTPError', 'urllib.request:Request', 'urllib.request:urlopen']" imports="['distutils', 'distutils.command', 'distutils.command.upload', 'hashlib', 'io', 'os', 'platform']" name="distutils.command.upload">
      <class base="distutils.config.PyPIRCCommand" init="obj = distutils.command.upload.upload()%%[]" name="upload">
        <api name="run">
          <expr>obj.run()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AssertionError</exception>
        <exception>AttributeError</exception>
        <exception>DistutilsError</exception>
        <exception>DistutilsOptionError</exception>
        <exception>HTTPError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['distutils.core:Command', 'distutils.errors:*', 'distutils.fancy_getopt:FancyGetopt', 'distutils.util:get_platform']" imports="['distutils', 'distutils.command', 'distutils.command.bdist', 'os']" name="distutils.command.bdist">
      <class base="distutils.cmd.Command" init="obj = distutils.command.bdist.bdist(None)%%['NoneType']" name="bdist">
        <api name="initialize_options">
          <expr>obj.initialize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run">
          <expr>obj.run()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="show_formats">
        <expr>distutils.command.bdist.show_formats()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['distutils.core:Command', 'distutils:log', 'stat:ST_MODE']" imports="['distutils', 'distutils.command', 'distutils.command.install_scripts', 'os']" name="distutils.command.install_scripts">
      <class base="distutils.cmd.Command" init="obj = distutils.command.install_scripts.install_scripts(None)%%['NoneType']" name="install_scripts">
        <api name="initialize_options">
          <expr>obj.initialize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run">
          <expr>obj.run()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_inputs">
          <expr>ret = obj.get_inputs()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_outputs">
          <expr>ret = obj.get_outputs()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
  </library>
  <library name="json">
    <module importfrom="[]" imports="['json', 'json.scanner', 're']" name="json.scanner">
      <api name="py_make_scanner">
        <expr>ret = json.scanner.py_make_scanner(context)%%['JSONDecoder']</expr>
        <args>['context:JSONDecoder']</args>
        <return>['scan_once:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['json:scanner']" imports="['json', 'json.decoder', 're']" name="json.decoder">
      <class base="ValueError" init="obj = json.decoder.JSONDecodeError()%%[]" name="JSONDecodeError"/>
      <class base="builtins.object" init="obj = json.decoder.JSONDecoder()%%[]" name="JSONDecoder">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['object_hook:NoneType', 'parse_float:NoneType', 'parse_int:NoneType', 'parse_constant:NoneType', 'strict:NoneType', 'object_pairs_hook:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None, None, None, None, None, None]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(s,_w)%%['str', 'builtin_function_or_method']</expr>
          <args>['s:str', '_w:builtin_function_or_method']</args>
          <return>['obj:dict']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="py_scanstring">
        <expr>json.decoder.py_scanstring(s,end,strict,_b,_m)%%['None', 'None', 'None', 'None', 'None']</expr>
        <args>['s:None', 'end:None', 'strict:None', '_b:None', '_m:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, 'BACKSLASH', None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="JSONObject">
        <expr>json.decoder.JSONObject(s_and_end,strict,scan_once,object_hook,object_pairs_hook,memo,_w,_ws)%%['None', 'None', 'None', 'None', 'None', 'None', 'None', 'None']</expr>
        <args>['s_and_end:None', 'strict:None', 'scan_once:None', 'object_hook:None', 'object_pairs_hook:None', 'memo:None', '_w:None', '_ws:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, 'WHITESPACE_STR']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="JSONArray">
        <expr>json.decoder.JSONArray(s_and_end,scan_once,_w,_ws)%%['None', 'None', 'None', 'None']</expr>
        <args>['s_and_end:None', 'scan_once:None', '_w:None', '_ws:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, 'WHITESPACE_STR']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>IndexError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>StopIteration</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>json.decoder.JSONDecodeError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['json', 'json.encoder', 're']" name="json.encoder">
      <class base="builtins.object" init="obj = json.encoder.JSONEncoder()%%[]" name="JSONEncoder">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['skipkeys:NoneType', 'ensure_ascii:NoneType', 'check_circular:NoneType', 'allow_nan:NoneType', 'sort_keys:NoneType', 'indent:NoneType', 'separators:NoneType', 'default:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None, None, None, None, None, None, None, None]</kwodefa>
        </api>
        <api name="default">
          <expr>obj.default(o)%%['None']</expr>
          <args>['o:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="encode">
          <expr>ret = obj.encode(o)%%['dict']</expr>
          <args>['o:dict']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="py_encode_basestring">
        <expr>ret = json.encoder.py_encode_basestring(s)%%['None']</expr>
        <args>['s:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="py_encode_basestring_ascii">
        <expr>ret = json.encoder.py_encode_basestring_ascii(s)%%['None']</expr>
        <args>['s:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['argparse', 'json', 'json.tool', 'sys']" name="json.tool">
      <api name="main">
        <expr>json.tool.main()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>BrokenPipeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>argparse.ArgumentError</exception>
        <exception>argparse.ArgumentTypeError</exception>
      </errors>
    </module>
  </library>
  <library name="urllib">
    <module importfrom="[]" imports="['urllib', 'urllib.error', 'urllib.response']" name="urllib.error">
      <class base="OSError" init="obj = urllib.error.URLError()%%[]" name="URLError"/>
      <class base="URLError" init="obj = urllib.error.HTTPError()%%[]" name="HTTPError"/>
      <class base="URLError" init="obj = urllib.error.ContentTooShortError()%%[]" name="ContentTooShortError"/>
      <errors>
        <exception>urllib.error.ContentTooShortError</exception>
        <exception>urllib.error.HTTPError</exception>
        <exception>urllib.error.URLError</exception>
      </errors>
    </module>
    <module importfrom="['fnmatch:fnmatch', 'nturl2path:pathname2url', 'nturl2path:url2pathname', 'urllib.error:ContentTooShortError', 'urllib.error:HTTPError', 'urllib.error:URLError', 'urllib.parse:quote', 'urllib.parse:splitattr', 'urllib.parse:splithost', 'urllib.parse:splitpasswd', 'urllib.parse:splitport', 'urllib.parse:splitquery', 'urllib.parse:splittag', 'urllib.parse:splittype', 'urllib.parse:splituser', 'urllib.parse:splitvalue', 'urllib.parse:to_bytes', 'urllib.parse:unquote', 'urllib.parse:unquote_to_bytes', 'urllib.parse:unwrap', 'urllib.parse:urljoin', 'urllib.parse:urlparse', 'urllib.parse:urlsplit', 'urllib.parse:urlunparse', 'urllib.response:addclosehook', 'urllib.response:addinfourl']" imports="['base64', 'bisect', 'contextlib', 'email', 'email.utils', 'ftplib', 'getpass', 'hashlib', 'http.client', 'io', 'mimetypes', 'os', 'posixpath', 're', 'socket', 'ssl', 'string', 'sys', 'tempfile', 'time', 'urllib', 'urllib.request', 'warnings', 'winreg']" name="urllib.request">
      <class init="obj = urllib.request.Request(None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="Request">
        <api name="__init__">
          <expr>None</expr>
          <args>['url:NoneType', 'data:NoneType', 'headers:NoneType', 'origin_req_host:NoneType', 'unverifiable:NoneType', 'method:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="full_url">
          <expr>obj.full_url()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="data">
          <expr>obj.data()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_method">
          <expr>ret = obj.get_method()%%[]</expr>
          <args>[]</args>
          <return>['getattr:builtin_function_or_method']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_full_url">
          <expr>ret = obj.get_full_url()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_proxy">
          <expr>obj.set_proxy(host,type)%%['str', 'str']</expr>
          <args>['host:str', 'type:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_proxy">
          <expr>ret = obj.has_proxy()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_header">
          <expr>obj.add_header(key,val)%%['str', 'str']</expr>
          <args>['key:str', 'val:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_unredirected_header">
          <expr>obj.add_unredirected_header(key,val)%%['str', 'str']</expr>
          <args>['key:str', 'val:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_header">
          <expr>ret = obj.has_header(header_name)%%['str']</expr>
          <args>['header_name:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="header_items">
          <expr>ret = obj.header_items()%%[]</expr>
          <args>[]</args>
          <return>['list:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = urllib.request.OpenerDirector()%%[]" name="OpenerDirector">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_handler">
          <expr>obj.add_handler(handler)%%['ProxyHandler']</expr>
          <args>['handler:ProxyHandler']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="error">
          <expr>ret = obj.error(proto)%%['str']</expr>
          <args>['proto:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = urllib.request.BaseHandler()%%[]" name="BaseHandler"/>
      <class base="urllib.request.BaseHandler" init="obj = urllib.request.HTTPErrorProcessor()%%[]" name="HTTPErrorProcessor">
        <api name="http_response">
          <expr>ret = obj.http_response(request,response)%%['Request', 'HTTPResponse']</expr>
          <args>['request:Request', 'response:HTTPResponse']</args>
          <return>['response:HTTPResponse']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="urllib.request.BaseHandler" init="obj = urllib.request.HTTPDefaultErrorHandler()%%[]" name="HTTPDefaultErrorHandler">
        <api name="http_error_default">
          <expr>obj.http_error_default(req,fp,code,msg,hdrs)%%['Request', 'HTTPResponse', 'int', 'str', 'HTTPMessage']</expr>
          <args>['req:Request', 'fp:HTTPResponse', 'code:int', 'msg:str', 'hdrs:HTTPMessage']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="urllib.request.BaseHandler" init="obj = urllib.request.HTTPRedirectHandler()%%[]" name="HTTPRedirectHandler">
        <api name="http_error_302">
          <expr>ret = obj.http_error_302(req,fp,code,msg,headers)%%['Request', 'HTTPResponse', 'int', 'str', 'HTTPMessage']</expr>
          <args>['req:Request', 'fp:HTTPResponse', 'code:int', 'msg:str', 'headers:HTTPMessage']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="urllib.request.BaseHandler" init="obj = urllib.request.ProxyHandler()%%['NoneType']" name="ProxyHandler">
        <api name="__init__">
          <expr>None</expr>
          <args>['proxies:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="proxy_open">
          <expr>ret = obj.proxy_open(req,proxy,type)%%['Request', 'str', 'str']</expr>
          <args>['req:Request', 'proxy:str', 'type:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = urllib.request.HTTPPasswordMgr()%%[]" name="HTTPPasswordMgr">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_password">
          <expr>obj.add_password(realm,uri,user,passwd)%%['str', 'str', 'str', 'str']</expr>
          <args>['realm:str', 'uri:str', 'user:str', 'passwd:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="find_user_password">
          <expr>ret = obj.find_user_password(realm,authuri)%%['str', 'str']</expr>
          <args>['realm:str', 'authuri:str']</args>
          <return>['authinfo:tuple']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_suburi">
          <expr>ret = obj.is_suburi(base,test)%%['tuple', 'tuple']</expr>
          <args>['base:tuple', 'test:tuple']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="urllib.request.HTTPPasswordMgr" init="obj = urllib.request.HTTPPasswordMgrWithDefaultRealm()%%[]" name="HTTPPasswordMgrWithDefaultRealm"/>
      <class base="urllib.request.HTTPPasswordMgrWithDefaultRealm" init="obj = urllib.request.HTTPPasswordMgrWithPriorAuth()%%[]" name="HTTPPasswordMgrWithPriorAuth">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_authenticated">
          <expr>ret = obj.is_authenticated(authuri)%%['str']</expr>
          <args>['authuri:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = urllib.request.AbstractBasicAuthHandler()%%['NoneType']" name="AbstractBasicAuthHandler">
        <api name="__init__">
          <expr>None</expr>
          <args>['password_mgr:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="http_error_auth_reqed">
          <expr>ret = obj.http_error_auth_reqed(authreq,host,req,headers)%%['None', 'None', 'None', 'None']</expr>
          <args>['authreq:None', 'host:None', 'req:None', 'headers:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="http_request">
          <expr>ret = obj.http_request(req)%%['None']</expr>
          <args>['req:None']</args>
          <return>['req:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="http_response">
          <expr>ret = obj.http_response(req,response)%%['None', 'None']</expr>
          <args>['req:None', 'response:None']</args>
          <return>['response:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="urllib.request.AbstractBasicAuthHandler" init="obj = urllib.request.HTTPBasicAuthHandler()%%['NoneType']" name="HTTPBasicAuthHandler">
        <api name="http_error_401">
          <expr>ret = obj.http_error_401(req,fp,code,msg,headers)%%['Request', 'HTTPResponse', 'int', 'str', 'HTTPMessage']</expr>
          <args>['req:Request', 'fp:HTTPResponse', 'code:int', 'msg:str', 'headers:HTTPMessage']</args>
          <return>['response:HTTPResponse']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="urllib.request.AbstractBasicAuthHandler" init="obj = urllib.request.ProxyBasicAuthHandler()%%['NoneType']" name="ProxyBasicAuthHandler">
        <api name="http_error_407">
          <expr>ret = obj.http_error_407(req,fp,code,msg,headers)%%['Request', 'MockFile', 'int', 'str', 'Message']</expr>
          <args>['req:Request', 'fp:MockFile', 'code:int', 'msg:str', 'headers:Message']</args>
          <return>['response:MockResponse']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = urllib.request.AbstractDigestAuthHandler()%%['NoneType']" name="AbstractDigestAuthHandler">
        <api name="__init__">
          <expr>None</expr>
          <args>['passwd:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="reset_retry_count">
          <expr>obj.reset_retry_count()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="urllib.request.BaseHandler" init="obj = urllib.request.HTTPDigestAuthHandler()%%[]" name="HTTPDigestAuthHandler">
        <api name="http_error_401">
          <expr>ret = obj.http_error_401(req,fp,code,msg,headers)%%['Request', 'MockFile', 'int', 'str', 'Message']</expr>
          <args>['req:Request', 'fp:MockFile', 'code:int', 'msg:str', 'headers:Message']</args>
          <return>['retry:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="urllib.request.BaseHandler" init="obj = urllib.request.ProxyDigestAuthHandler()%%[]" name="ProxyDigestAuthHandler">
        <api name="http_error_407">
          <expr>ret = obj.http_error_407(req,fp,code,msg,headers)%%['Request', 'HTTPResponse', 'int', 'str', 'HTTPMessage']</expr>
          <args>['req:Request', 'fp:HTTPResponse', 'code:int', 'msg:str', 'headers:HTTPMessage']</args>
          <return>['retry:HTTPResponse']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="urllib.request.BaseHandler" init="obj = urllib.request.AbstractHTTPHandler()%%['NoneType']" name="AbstractHTTPHandler">
        <api name="__init__">
          <expr>None</expr>
          <args>['debuglevel:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_http_debuglevel">
          <expr>obj.set_http_debuglevel(level)%%['None']</expr>
          <args>['level:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_request_">
          <expr>ret = obj.do_request_(request)%%['Request']</expr>
          <args>['request:Request']</args>
          <return>['request:Request']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_open">
          <expr>ret = obj.do_open(http_class,req)%%['MockHTTPClass', 'Request']</expr>
          <args>['http_class:MockHTTPClass', 'req:Request']</args>
          <return>['r:MockHTTPResponse']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="urllib.request.AbstractHTTPHandler" init="obj = urllib.request.HTTPHandler()%%['NoneType']" name="HTTPHandler">
        <api name="http_open">
          <expr>ret = obj.http_open(req)%%['Request']</expr>
          <args>['req:Request']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="urllib.request.AbstractHTTPHandler" init="obj = urllib.request.HTTPSHandler()%%['NoneType', 'NoneType', 'NoneType']" name="HTTPSHandler">
        <api name="__init__">
          <expr>None</expr>
          <args>['debuglevel:NoneType', 'context:NoneType', 'check_hostname:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="https_open">
          <expr>ret = obj.https_open(req)%%['Request']</expr>
          <args>['req:Request']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="urllib.request.BaseHandler" init="obj = urllib.request.HTTPCookieProcessor()%%['NoneType']" name="HTTPCookieProcessor">
        <api name="__init__">
          <expr>None</expr>
          <args>['cookiejar:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="http_request">
          <expr>ret = obj.http_request(request)%%['Request']</expr>
          <args>['request:Request']</args>
          <return>['request:Request']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="http_response">
          <expr>ret = obj.http_response(request,response)%%['Request', 'MockResponse']</expr>
          <args>['request:Request', 'response:MockResponse']</args>
          <return>['response:MockResponse']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="urllib.request.BaseHandler" init="obj = urllib.request.UnknownHandler()%%[]" name="UnknownHandler">
        <api name="unknown_open">
          <expr>obj.unknown_open(req)%%['Request']</expr>
          <args>['req:Request']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="urllib.request.BaseHandler" init="obj = urllib.request.FileHandler()%%[]" name="FileHandler">
        <api name="file_open">
          <expr>ret = obj.file_open(req)%%['Request']</expr>
          <args>['req:Request']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_names">
          <expr>ret = obj.get_names()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="urllib.request.BaseHandler" init="obj = urllib.request.FTPHandler()%%[]" name="FTPHandler">
        <api name="ftp_open">
          <expr>ret = obj.ftp_open(req)%%['Request']</expr>
          <args>['req:Request']</args>
          <return>['addinfourl:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="urllib.request.FTPHandler" init="obj = urllib.request.CacheFTPHandler()%%[]" name="CacheFTPHandler">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setTimeout">
          <expr>obj.setTimeout(t)%%['int']</expr>
          <args>['t:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setMaxConns">
          <expr>obj.setMaxConns(m)%%['None']</expr>
          <args>['m:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clear_cache">
          <expr>obj.clear_cache()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="urllib.request.BaseHandler" init="obj = urllib.request.DataHandler()%%[]" name="DataHandler">
        <api name="data_open">
          <expr>ret = obj.data_open(req)%%['Request']</expr>
          <args>['req:Request']</args>
          <return>['addinfourl:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = urllib.request.URLopener()%%['NoneType']" name="URLopener">
        <api name="__init__">
          <expr>None</expr>
          <args>['proxies:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="addheader">
          <expr>obj.addheader()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="retrieve">
          <expr>ret = obj.retrieve(url,filename,reporthook,data)%%['str', 'NoneType', 'NoneType', 'NoneType']</expr>
          <args>['url:str', 'filename:NoneType', 'reporthook:NoneType', 'data:NoneType']</args>
          <return>['ret:NoneType', 'result:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="open_http">
          <expr>ret = obj.open_http(url,data)%%['None', 'None']</expr>
          <args>['url:None', 'data:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="open_https">
          <expr>ret = obj.open_https(url,data)%%['None', 'None']</expr>
          <args>['url:None', 'data:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="open_file">
          <expr>ret = obj.open_file(url)%%['None']</expr>
          <args>['url:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="open_ftp">
          <expr>ret = obj.open_ftp(url)%%['None']</expr>
          <args>['url:None']</args>
          <return>['addinfourl:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="open_data">
          <expr>ret = obj.open_data(url,data)%%['None', 'None']</expr>
          <args>['url:None', 'data:None']</args>
          <return>['addinfourl:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="urllib.request.URLopener" init="obj = urllib.request.FancyURLopener()%%[]" name="FancyURLopener">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="http_error_301">
          <expr>ret = obj.http_error_301(url,fp,errcode,errmsg,headers,data)%%['None', 'None', 'None', 'None', 'None', 'None']</expr>
          <args>['url:None', 'fp:None', 'errcode:None', 'errmsg:None', 'headers:None', 'data:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="http_error_303">
          <expr>ret = obj.http_error_303(url,fp,errcode,errmsg,headers,data)%%['None', 'None', 'None', 'None', 'None', 'None']</expr>
          <args>['url:None', 'fp:None', 'errcode:None', 'errmsg:None', 'headers:None', 'data:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="http_error_307">
          <expr>ret = obj.http_error_307(url,fp,errcode,errmsg,headers,data)%%['None', 'None', 'None', 'None', 'None', 'None']</expr>
          <args>['url:None', 'fp:None', 'errcode:None', 'errmsg:None', 'headers:None', 'data:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="http_error_401">
          <expr>ret = obj.http_error_401(url,fp,errcode,errmsg,headers,data,retry)%%['str', 'FakeSocket', 'int', 'str', 'HTTPMessage', 'NoneType', 'bool']</expr>
          <args>['url:str', 'fp:FakeSocket', 'errcode:int', 'errmsg:str', 'headers:HTTPMessage', 'data:NoneType', 'retry:bool']</args>
          <return>['getattr:builtin_function_or_method']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="http_error_407">
          <expr>ret = obj.http_error_407(url,fp,errcode,errmsg,headers,data,retry)%%['None', 'None', 'None', 'None', 'None', 'None', 'None']</expr>
          <args>['url:None', 'fp:None', 'errcode:None', 'errmsg:None', 'headers:None', 'data:None', 'retry:None']</args>
          <return>['getattr:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="retry_proxy_http_basic_auth">
          <expr>ret = obj.retry_proxy_http_basic_auth(url,realm,data)%%['None', 'None', 'None']</expr>
          <args>['url:None', 'realm:None', 'data:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="retry_proxy_https_basic_auth">
          <expr>ret = obj.retry_proxy_https_basic_auth(url,realm,data)%%['None', 'None', 'None']</expr>
          <args>['url:None', 'realm:None', 'data:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="retry_https_basic_auth">
          <expr>ret = obj.retry_https_basic_auth(url,realm,data)%%['None', 'None', 'None']</expr>
          <args>['url:None', 'realm:None', 'data:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = urllib.request.ftpwrapper(None,None,None,None,None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="ftpwrapper">
        <api name="__init__">
          <expr>None</expr>
          <args>['user:NoneType', 'passwd:NoneType', 'host:NoneType', 'port:NoneType', 'dirs:NoneType', 'timeout:NoneType', 'persistent:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="init">
          <expr>obj.init()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="file_close">
          <expr>obj.file_close()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="urlopen">
        <expr>ret = urllib.request.urlopen(url,data,timeout)%%['str', 'bytes', 'object']</expr>
        <args>['url:str', 'data:bytes', 'timeout:object']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['cafile:str', 'capath:NoneType', 'cadefault:bool', 'context:SSLContext']</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[None, None, None, None]</kwodefa>
      </api>
      <api name="install_opener">
        <expr>urllib.request.install_opener(opener)%%['OpenerDirector']</expr>
        <args>['opener:OpenerDirector']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="urlretrieve">
        <expr>ret = urllib.request.urlretrieve(url,filename,reporthook,data)%%['str', 'str', 'function', 'NoneType']</expr>
        <args>['url:str', 'filename:str', 'reporthook:function', 'data:NoneType']</args>
        <return>['result:tuple']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="urlcleanup">
        <expr>urllib.request.urlcleanup()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="request_host">
        <expr>ret = urllib.request.request_host(request)%%['Request']</expr>
        <args>['request:Request']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="build_opener">
        <expr>ret = urllib.request.build_opener()%%[]</expr>
        <args>[]</args>
        <return>['opener:OpenerDirector']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parse_keqv_list">
        <expr>ret = urllib.request.parse_keqv_list(l)%%['filter']</expr>
        <args>['l:filter']</args>
        <return>['parsed:dict']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parse_http_list">
        <expr>ret = urllib.request.parse_http_list(s)%%['str']</expr>
        <args>['s:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="url2pathname">
        <expr>ret = urllib.request.url2pathname(pathname)%%['str']</expr>
        <args>['pathname:str']</args>
        <return>['unquote:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="pathname2url">
        <expr>ret = urllib.request.pathname2url(pathname)%%['str']</expr>
        <args>['pathname:str']</args>
        <return>['quote:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="localhost">
        <expr>ret = urllib.request.localhost()%%[]</expr>
        <args>[]</args>
        <return>['_localhost:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="thishost">
        <expr>ret = urllib.request.thishost()%%[]</expr>
        <args>[]</args>
        <return>['_thishost:tuple']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ftperrors">
        <expr>ret = urllib.request.ftperrors()%%[]</expr>
        <args>[]</args>
        <return>['_ftperrors:tuple']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="noheaders">
        <expr>ret = urllib.request.noheaders()%%[]</expr>
        <args>[]</args>
        <return>['_noheaders:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getproxies_environment">
        <expr>ret = urllib.request.getproxies_environment()%%[]</expr>
        <args>[]</args>
        <return>['proxies:dict']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="proxy_bypass_environment">
        <expr>ret = urllib.request.proxy_bypass_environment(host,proxies)%%['str', 'NoneType']</expr>
        <args>['host:str', 'proxies:NoneType']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="proxy_bypass">
        <expr>ret = urllib.request.proxy_bypass(host)%%['None']</expr>
        <args>['host:None']</args>
        <return>['proxy_bypass_environment:None', 'proxy_bypass_registry:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getproxies">
        <expr>ret = urllib.request.getproxies()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ContentTooShortError</exception>
        <exception>HTTPError</exception>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>URLError</exception>
        <exception>ValueError</exception>
        <exception>ftplib.Error</exception>
        <exception>ftplib.error_perm</exception>
        <exception>ftplib.error_proto</exception>
        <exception>ftplib.error_reply</exception>
        <exception>ftplib.error_temp</exception>
        <exception>getpass.GetPassWarning</exception>
        <exception>http.client.BadStatusLine</exception>
        <exception>http.client.CannotSendHeader</exception>
        <exception>http.client.CannotSendRequest</exception>
        <exception>http.client.HTTPException</exception>
        <exception>http.client.ImproperConnectionState</exception>
        <exception>http.client.IncompleteRead</exception>
        <exception>http.client.InvalidURL</exception>
        <exception>http.client.LineTooLong</exception>
        <exception>http.client.NotConnected</exception>
        <exception>http.client.RemoteDisconnected</exception>
        <exception>http.client.ResponseNotReady</exception>
        <exception>http.client.UnimplementedFileMode</exception>
        <exception>http.client.UnknownProtocol</exception>
        <exception>http.client.UnknownTransferEncoding</exception>
        <exception>socket.gaierror</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['tempfile', 'urllib', 'urllib.response']" name="urllib.response">
      <class base="tempfile._TemporaryFileWrapper" init="obj = urllib.response.addbase(None)%%['NoneType']" name="addbase">
        <api name="__init__">
          <expr>None</expr>
          <args>['fp:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="urllib.response.addbase" init="obj = urllib.response.addclosehook(None,None)%%['NoneType', 'NoneType']" name="addclosehook">
        <api name="__init__">
          <expr>None</expr>
          <args>['fp:NoneType', 'closehook:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="urllib.response.addbase" init="obj = urllib.response.addinfo(None,None)%%['NoneType', 'NoneType']" name="addinfo">
        <api name="__init__">
          <expr>None</expr>
          <args>['fp:NoneType', 'headers:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info">
          <expr>ret = obj.info()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="urllib.response.addinfo" init="obj = urllib.response.addinfourl(None,None,None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType']" name="addinfourl">
        <api name="__init__">
          <expr>None</expr>
          <args>['fp:NoneType', 'headers:NoneType', 'url:NoneType', 'code:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getcode">
          <expr>ret = obj.getcode()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="geturl">
          <expr>ret = obj.geturl()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['collections', 'time', 'urllib', 'urllib.parse', 'urllib.request', 'urllib.robotparser']" name="urllib.robotparser">
      <class init="obj = urllib.robotparser.RobotFileParser()%%['NoneType']" name="RobotFileParser">
        <api name="__init__">
          <expr>None</expr>
          <args>['url:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="mtime">
          <expr>ret = obj.mtime()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_url">
          <expr>obj.set_url(url)%%['str']</expr>
          <args>['url:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="can_fetch">
          <expr>ret = obj.can_fetch(useragent,url)%%['str', 'str']</expr>
          <args>['useragent:str', 'url:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="crawl_delay">
          <expr>ret = obj.crawl_delay(useragent)%%['str']</expr>
          <args>['useragent:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="request_rate">
          <expr>ret = obj.request_rate(useragent)%%['str']</expr>
          <args>['useragent:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = urllib.robotparser.RuleLine(None,None)%%['NoneType', 'NoneType']" name="RuleLine">
        <api name="__init__">
          <expr>None</expr>
          <args>['path:NoneType', 'allowance:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="applies_to">
          <expr>ret = obj.applies_to(filename)%%['str']</expr>
          <args>['filename:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = urllib.robotparser.Entry()%%[]" name="Entry">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="applies_to">
          <expr>ret = obj.applies_to(useragent)%%['str']</expr>
          <args>['useragent:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>urllib.error.HTTPError</exception>
      </errors>
    </module>
    <module importfrom="['collections:namedtuple']" imports="['collections', 're', 'sys', 'unicodedata', 'urllib', 'urllib.parse']" name="urllib.parse">
      <class base="urllib.parse.DefragResult" init="obj = urllib.parse.DefragResult()%%[]" name="DefragResult">
        <api name="geturl">
          <expr>ret = obj.geturl()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="urllib.parse.SplitResult" init="obj = urllib.parse.SplitResult()%%[]" name="SplitResult">
        <api name="geturl">
          <expr>ret = obj.geturl()%%[]</expr>
          <args>[]</args>
          <return>['urlunsplit:function']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="urllib.parse.ParseResult" init="obj = urllib.parse.ParseResult()%%[]" name="ParseResult">
        <api name="geturl">
          <expr>ret = obj.geturl()%%[]</expr>
          <args>[]</args>
          <return>['urlunparse:function']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="urllib.parse.DefragResult" init="obj = urllib.parse.DefragResultBytes()%%[]" name="DefragResultBytes">
        <api name="geturl">
          <expr>ret = obj.geturl()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="urllib.parse.SplitResult" init="obj = urllib.parse.SplitResultBytes()%%[]" name="SplitResultBytes">
        <api name="geturl">
          <expr>ret = obj.geturl()%%[]</expr>
          <args>[]</args>
          <return>['urlunsplit:function']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="urllib.parse.ParseResult" init="obj = urllib.parse.ParseResultBytes()%%[]" name="ParseResultBytes">
        <api name="geturl">
          <expr>ret = obj.geturl()%%[]</expr>
          <args>[]</args>
          <return>['urlunparse:function']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="collections.defaultdict" init="obj = urllib.parse.Quoter(None)%%['NoneType']" name="Quoter">
        <api name="__init__">
          <expr>None</expr>
          <args>['safe:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="clear_cache">
        <expr>urllib.parse.clear_cache()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="urlparse">
        <expr>ret = urllib.parse.urlparse(url,scheme,allow_fragments)%%['str', 'str', 'bool']</expr>
        <args>['url:str', 'scheme:str', 'allow_fragments:bool']</args>
        <return>['_coerce_result:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="urlsplit">
        <expr>ret = urllib.parse.urlsplit(url,scheme,allow_fragments)%%['str', 'str', 'bool']</expr>
        <args>['url:str', 'scheme:str', 'allow_fragments:bool']</args>
        <return>['_coerce_result:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="urlunparse">
        <expr>ret = urllib.parse.urlunparse(components)%%['ParseResult']</expr>
        <args>['components:ParseResult']</args>
        <return>['_coerce_result:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="urlunsplit">
        <expr>ret = urllib.parse.urlunsplit(components)%%['tuple']</expr>
        <args>['components:tuple']</args>
        <return>['_coerce_result:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="urljoin">
        <expr>ret = urllib.parse.urljoin(base,url,allow_fragments)%%['str', 'str', 'bool']</expr>
        <args>['base:str', 'url:str', 'allow_fragments:bool']</args>
        <return>['url:str', 'base:str', '_coerce_result:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="urldefrag">
        <expr>ret = urllib.parse.urldefrag(url)%%['str']</expr>
        <args>['url:str']</args>
        <return>['_coerce_result:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="unquote_to_bytes">
        <expr>ret = urllib.parse.unquote_to_bytes(string)%%['ValueTerminal']</expr>
        <args>['string:ValueTerminal']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="unquote">
        <expr>ret = urllib.parse.unquote(string,encoding,errors)%%['str', 'str', 'str']</expr>
        <args>['string:str', 'encoding:str', 'errors:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parse_qs">
        <expr>ret = urllib.parse.parse_qs(qs,keep_blank_values,strict_parsing,encoding,errors,max_num_fields,separator)%%['str', 'int', 'int', 'str', 'str', 'int', 'str']</expr>
        <args>['qs:str', 'keep_blank_values:int', 'strict_parsing:int', 'encoding:str', 'errors:str', 'max_num_fields:int', 'separator:str']</args>
        <return>['parsed_result:dict']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parse_qsl">
        <expr>ret = urllib.parse.parse_qsl(qs,keep_blank_values,strict_parsing,encoding,errors,max_num_fields,separator)%%['str', 'int', 'int', 'str', 'str', 'int', 'str']</expr>
        <args>['qs:str', 'keep_blank_values:int', 'strict_parsing:int', 'encoding:str', 'errors:str', 'max_num_fields:int', 'separator:str']</args>
        <return>['r:list']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="unquote_plus">
        <expr>ret = urllib.parse.unquote_plus(string,encoding,errors)%%['str', 'str', 'str']</expr>
        <args>['string:str', 'encoding:str', 'errors:str']</args>
        <return>['unquote:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="quote">
        <expr>ret = urllib.parse.quote(string,safe,encoding,errors)%%['str', 'str', 'str', 'str']</expr>
        <args>['string:str', 'safe:str', 'encoding:str', 'errors:str']</args>
        <return>['ret:string', 'quote_from_bytes:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="quote_plus">
        <expr>ret = urllib.parse.quote_plus(string,safe,encoding,errors)%%['str', 'str', 'str', 'str']</expr>
        <args>['string:str', 'safe:str', 'encoding:str', 'errors:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="quote_from_bytes">
        <expr>ret = urllib.parse.quote_from_bytes(bs,safe)%%['bytes', 'str']</expr>
        <args>['bs:bytes', 'safe:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="urlencode">
        <expr>ret = urllib.parse.urlencode(query,doseq,safe,encoding,errors,quote_via)%%['dict', 'bool', 'str', 'str', 'str', 'function']</expr>
        <args>['query:dict', 'doseq:bool', 'safe:str', 'encoding:str', 'errors:str', 'quote_via:function']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None, 'quote_plus']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="to_bytes">
        <expr>ret = urllib.parse.to_bytes(url)%%['str']</expr>
        <args>['url:str']</args>
        <return>['url:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="unwrap">
        <expr>ret = urllib.parse.unwrap(url)%%['str']</expr>
        <args>['url:str']</args>
        <return>['url:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="splittype">
        <expr>urllib.parse.splittype(url)%%['str']</expr>
        <args>['url:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="splithost">
        <expr>urllib.parse.splithost(url)%%['str']</expr>
        <args>['url:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="splituser">
        <expr>urllib.parse.splituser(host)%%['str']</expr>
        <args>['host:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="splitpasswd">
        <expr>urllib.parse.splitpasswd(user)%%['str']</expr>
        <args>['user:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="splitport">
        <expr>urllib.parse.splitport(host)%%['str']</expr>
        <args>['host:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="splitnport">
        <expr>urllib.parse.splitnport(host,defport)%%['str', 'int']</expr>
        <args>['host:str', 'defport:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="splitquery">
        <expr>urllib.parse.splitquery(url)%%['str']</expr>
        <args>['url:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="splittag">
        <expr>urllib.parse.splittag(url)%%['str']</expr>
        <args>['url:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="splitattr">
        <expr>urllib.parse.splitattr(url)%%['str']</expr>
        <args>['url:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="splitvalue">
        <expr>urllib.parse.splitvalue(attr)%%['str']</expr>
        <args>['attr:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>IndexError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>UnicodeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
  </library>
  <library name="ensurepip"/>
  <library name="html">
    <module importfrom="[]" imports="['html', 'html.entities']" name="html.entities"/>
    <module importfrom="['html:unescape']" imports="['html', 'html.parser', 're', 'warnings']" name="html.parser">
      <class base="_markupbase.ParserBase" init="obj = html.parser.HTMLParser()%%[]" name="HTMLParser">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['convert_charrefs:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="feed">
          <expr>obj.feed(data)%%['str']</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="close">
          <expr>obj.close()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_starttag_text">
          <expr>ret = obj.get_starttag_text()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AssertionError</exception>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
  </library>
  <library name="ctypes">
    <module importfrom="[]" imports="['ctypes', 'ctypes.wintypes']" name="ctypes.wintypes">
      <class base="ctypes._SimpleCData" init="obj = ctypes.wintypes.VARIANT_BOOL()%%[]" name="VARIANT_BOOL"/>
      <class base="ctypes.Structure" init="obj = ctypes.wintypes.RECT()%%[]" name="RECT"/>
      <class base="ctypes.Structure" init="obj = ctypes.wintypes.POINT()%%[]" name="POINT"/>
      <class base="ctypes.Structure" init="obj = ctypes.wintypes.SIZE()%%[]" name="SIZE"/>
      <class base="ctypes.Structure" init="obj = ctypes.wintypes.FILETIME()%%[]" name="FILETIME"/>
      <class base="ctypes.Structure" init="obj = ctypes.wintypes.MSG()%%[]" name="MSG"/>
      <class base="ctypes.Structure" init="obj = ctypes.wintypes.WIN32_FIND_DATAA()%%[]" name="WIN32_FIND_DATAA"/>
      <class base="ctypes.Structure" init="obj = ctypes.wintypes.WIN32_FIND_DATAW()%%[]" name="WIN32_FIND_DATAW"/>
      <api name="RGB">
        <expr>ret = ctypes.wintypes.RGB(red,green,blue)%%['None', 'None', 'None']</expr>
        <args>['red:None', 'green:None', 'blue:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['ctypes._aix:find_library', 'ctypes.macholib.dyld:dyld_find']" imports="['ctypes', 'ctypes.util', 'importlib.machinery', 'os', 're', 'shutil', 'struct', 'subprocess', 'sys', 'tempfile']" name="ctypes.util">
      <api name="find_library">
        <expr>ret = ctypes.util.find_library(name)%%['str']</expr>
        <args>['name:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>Exception</exception>
        <exception>FileNotFoundError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>shutil.Error</exception>
        <exception>shutil.ExecError</exception>
        <exception>shutil.ReadError</exception>
        <exception>shutil.RegistryError</exception>
        <exception>shutil.SameFileError</exception>
        <exception>shutil.SpecialFileError</exception>
      </errors>
    </module>
    <module importfrom="['ctypes.macholib.dylib:dylib_info', 'ctypes.macholib.framework:framework_info', 'itertools:*']" imports="['ctypes', 'ctypes.macholib', 'ctypes.macholib.dyld', 'os']" name="ctypes.macholib.dyld">
      <api name="dyld_env">
        <expr>ret = ctypes.macholib.dyld.dyld_env(env,var)%%['None', 'None']</expr>
        <args>['env:None', 'var:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dyld_image_suffix">
        <expr>ret = ctypes.macholib.dyld.dyld_image_suffix(env)%%['None']</expr>
        <args>['env:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dyld_framework_path">
        <expr>ret = ctypes.macholib.dyld.dyld_framework_path(env)%%['None']</expr>
        <args>['env:None']</args>
        <return>['dyld_env:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dyld_library_path">
        <expr>ret = ctypes.macholib.dyld.dyld_library_path(env)%%['None']</expr>
        <args>['env:None']</args>
        <return>['dyld_env:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dyld_fallback_framework_path">
        <expr>ret = ctypes.macholib.dyld.dyld_fallback_framework_path(env)%%['None']</expr>
        <args>['env:None']</args>
        <return>['dyld_env:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dyld_fallback_library_path">
        <expr>ret = ctypes.macholib.dyld.dyld_fallback_library_path(env)%%['None']</expr>
        <args>['env:None']</args>
        <return>['dyld_env:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dyld_image_suffix_search">
        <expr>ret = ctypes.macholib.dyld.dyld_image_suffix_search(iterator,env)%%['None', 'None']</expr>
        <args>['iterator:None', 'env:None']</args>
        <return>['iterator:None', '_inject:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dyld_override_search">
        <expr>ctypes.macholib.dyld.dyld_override_search(name,env)%%['None', 'None']</expr>
        <args>['name:None', 'env:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dyld_executable_path_search">
        <expr>ctypes.macholib.dyld.dyld_executable_path_search(name,executable_path)%%['None', 'None']</expr>
        <args>['name:None', 'executable_path:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dyld_default_search">
        <expr>ctypes.macholib.dyld.dyld_default_search(name,env)%%['None', 'None']</expr>
        <args>['name:None', 'env:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dyld_find">
        <expr>ret = ctypes.macholib.dyld.dyld_find(name,executable_path,env)%%['None', 'None', 'None']</expr>
        <args>['name:None', 'executable_path:None', 'env:None']</args>
        <return>['path:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="framework_find">
        <expr>ret = ctypes.macholib.dyld.framework_find(fn,executable_path,env)%%['None', 'None', 'None']</expr>
        <args>['fn:None', 'executable_path:None', 'env:None']</args>
        <return>['dyld_find:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['ctypes', 'ctypes.macholib', 'ctypes.macholib.framework', 're']" name="ctypes.macholib.framework">
      <api name="framework_info">
        <expr>ret = ctypes.macholib.framework.framework_info(filename)%%['None']</expr>
        <args>['filename:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['ctypes', 'ctypes.macholib', 'ctypes.macholib.dylib', 're']" name="ctypes.macholib.dylib">
      <api name="dylib_info">
        <expr>ret = ctypes.macholib.dylib.dylib_info(filename)%%['None']</expr>
        <args>['filename:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
  </library>
  <library name="dbm">
    <module importfrom="[]" imports="['ast:_ast', 'collections.abc', 'dbm', 'dbm.dumb', 'io:_io', 'os:_os', 'warnings']" name="dbm.dumb">
      <api name="open">
        <expr>ret = dbm.dumb.open(file,flag,mode)%%['str', 'str', 'int']</expr>
        <args>['file:str', 'flag:str', 'mode:int']</args>
        <return>['_Database:ABCMeta']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
  </library>
  <library name="xml">
    <module importfrom="['io:StringIO']" imports="['xml', 'xml.dom', 'xml.dom.minidom', 'xml.dom.pulldom', 'xml.sax', 'xml.sax.handler']" name="xml.dom.pulldom">
      <class base="xml.sax.handler.ContentHandler" init="obj = xml.dom.pulldom.PullDOM()%%['NoneType']" name="PullDOM">
        <api name="__init__">
          <expr>None</expr>
          <args>['documentFactory:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setDocumentLocator">
          <expr>obj.setDocumentLocator(locator)%%['None']</expr>
          <args>['locator:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="startPrefixMapping">
          <expr>obj.startPrefixMapping(prefix,uri)%%['str', 'str']</expr>
          <args>['prefix:str', 'uri:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="endPrefixMapping">
          <expr>obj.endPrefixMapping(prefix)%%['str']</expr>
          <args>['prefix:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="startElementNS">
          <expr>obj.startElementNS(name,tagName,attrs)%%['tuple', 'NoneType', 'AttributesNSImpl']</expr>
          <args>['name:tuple', 'tagName:NoneType', 'attrs:AttributesNSImpl']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="endElementNS">
          <expr>obj.endElementNS(name,tagName)%%['tuple', 'NoneType']</expr>
          <args>['name:tuple', 'tagName:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="startElement">
          <expr>obj.startElement(name,attrs)%%['str', 'AttributesImpl']</expr>
          <args>['name:str', 'attrs:AttributesImpl']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="endElement">
          <expr>obj.endElement(name)%%['str']</expr>
          <args>['name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="comment">
          <expr>obj.comment(s)%%['str']</expr>
          <args>['s:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="processingInstruction">
          <expr>obj.processingInstruction(target,data)%%['str', 'str']</expr>
          <args>['target:str', 'data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ignorableWhitespace">
          <expr>obj.ignorableWhitespace(chars)%%['None']</expr>
          <args>['chars:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="characters">
          <expr>obj.characters(chars)%%['str']</expr>
          <args>['chars:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="startDocument">
          <expr>obj.startDocument()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="endDocument">
          <expr>obj.endDocument()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clear">
          <expr>obj.clear()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = xml.dom.pulldom.ErrorHandler()%%[]" name="ErrorHandler">
        <api name="warning">
          <expr>obj.warning(exception)%%['None']</expr>
          <args>['exception:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="error">
          <expr>obj.error(exception)%%['None']</expr>
          <args>['exception:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="fatalError">
          <expr>obj.fatalError(exception)%%['None']</expr>
          <args>['exception:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = xml.dom.pulldom.DOMEventStream(None,None,None)%%['NoneType', 'NoneType', 'NoneType']" name="DOMEventStream">
        <api name="__init__">
          <expr>None</expr>
          <args>['stream:NoneType', 'parser:NoneType', 'bufsize:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="reset">
          <expr>obj.reset()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="expandNode">
          <expr>obj.expandNode(node)%%['Element']</expr>
          <args>['node:Element']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="xml.dom.pulldom.PullDOM" init="obj = xml.dom.pulldom.SAX2DOM()%%['NoneType']" name="SAX2DOM"/>
      <api name="parse">
        <expr>ret = xml.dom.pulldom.parse(stream_or_string,parser,bufsize)%%['str', 'SAXExerciser', 'NoneType']</expr>
        <args>['stream_or_string:str', 'parser:SAXExerciser', 'bufsize:NoneType']</args>
        <return>['DOMEventStream:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parseString">
        <expr>ret = xml.dom.pulldom.parseString(string,parser)%%['str', 'NoneType']</expr>
        <args>['string:str', 'parser:NoneType']</args>
        <return>['DOMEventStream:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AssertionError</exception>
        <exception>AttributeError</exception>
        <exception>IndexError</exception>
        <exception>OSError</exception>
        <exception>StopIteration</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['xml.dom.NodeFilter:NodeFilter']" imports="['copy', 'posixpath', 'urllib.parse', 'urllib.request', 'warnings', 'xml', 'xml.dom', 'xml.dom.expatbuilder', 'xml.dom.xmlbuilder']" name="xml.dom.xmlbuilder">
      <class init="obj = xml.dom.xmlbuilder.Options()%%[]" name="Options"/>
      <class init="obj = xml.dom.xmlbuilder.DOMBuilder()%%[]" name="DOMBuilder">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setFeature">
          <expr>obj.setFeature(name,state)%%['None', 'None']</expr>
          <args>['name:None', 'state:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="supportsFeature">
          <expr>ret = obj.supportsFeature(name)%%['None']</expr>
          <args>['name:None']</args>
          <return>['hasattr:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="canSetFeature">
          <expr>ret = obj.canSetFeature(name,state)%%['None', 'None']</expr>
          <args>['name:None', 'state:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getFeature">
          <expr>ret = obj.getFeature(name)%%['None']</expr>
          <args>['name:None']</args>
          <return>['getattr:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parseURI">
          <expr>ret = obj.parseURI(uri)%%['None']</expr>
          <args>['uri:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parseWithContext">
          <expr>obj.parseWithContext(input,cnode,action)%%['None', 'None', 'None']</expr>
          <args>['input:None', 'cnode:None', 'action:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="builtins.object" init="obj = xml.dom.xmlbuilder.DOMEntityResolver()%%[]" name="DOMEntityResolver"/>
      <class base="builtins.object" init="obj = xml.dom.xmlbuilder.DOMInputSource()%%[]" name="DOMInputSource">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = xml.dom.xmlbuilder.DOMBuilderFilter()%%[]" name="DOMBuilderFilter">
        <api name="acceptNode">
          <expr>ret = obj.acceptNode(element)%%['None']</expr>
          <args>['element:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="startContainer">
          <expr>ret = obj.startContainer(element)%%['None']</expr>
          <args>['element:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = xml.dom.xmlbuilder.DocumentLS()%%[]" name="DocumentLS">
        <api name="abort">
          <expr>obj.abort()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="load">
          <expr>obj.load(uri)%%['None']</expr>
          <args>['uri:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="loadXML">
          <expr>obj.loadXML(source)%%['None']</expr>
          <args>['source:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="saveXML">
          <expr>ret = obj.saveXML(snode)%%['None']</expr>
          <args>['snode:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = xml.dom.xmlbuilder.DOMImplementationLS()%%[]" name="DOMImplementationLS">
        <api name="createDOMBuilder">
          <expr>ret = obj.createDOMBuilder(mode,schemaType)%%['None', 'None']</expr>
          <args>['mode:None', 'schemaType:None']</args>
          <return>['DOMBuilder:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="createDOMWriter">
          <expr>obj.createDOMWriter()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="createDOMInputSource">
          <expr>ret = obj.createDOMInputSource()%%[]</expr>
          <args>[]</args>
          <return>['DOMInputSource:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>KeyError</exception>
        <exception>NotImplementedError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>copy.Error</exception>
        <exception>xml.dom.NotFoundErr</exception>
        <exception>xml.dom.NotSupportedErr</exception>
        <exception>xml.dom.WrongDocumentErr</exception>
        <exception>xml.dom.expatbuilder.ParseEscape</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['os', 'sys', 'xml', 'xml.dom', 'xml.dom.domreg']" name="xml.dom.domreg">
      <api name="registerDOMImplementation">
        <expr>xml.dom.domreg.registerDOMImplementation(name,factory)%%['None', 'None']</expr>
        <args>['name:None', 'factory:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getDOMImplementation">
        <expr>ret = xml.dom.domreg.getDOMImplementation(name,features)%%['None', 'None']</expr>
        <args>['name:None', 'features:None']</args>
        <return>['ret:None', 'getDOMImplementation:None', 'dom:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>Exception</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['xml', 'xml.dom', 'xml.dom.minicompat']" name="xml.dom.minicompat">
      <class base="builtins.list" init="obj = xml.dom.minicompat.NodeList()%%[]" name="NodeList">
        <api name="item">
          <expr>ret = obj.item(index)%%['int']</expr>
          <args>['index:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="builtins.tuple" init="obj = xml.dom.minicompat.EmptyNodeList()%%[]" name="EmptyNodeList">
        <api name="item">
          <expr>ret = obj.item(index)%%['int']</expr>
          <args>['index:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="defproperty">
        <expr>xml.dom.minicompat.defproperty(klass,name,doc)%%['None', 'None', 'None']</expr>
        <args>['klass:None', 'name:None', 'doc:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>xml.dom.NoModificationAllowedErr</exception>
      </errors>
    </module>
    <module importfrom="['xml.dom.minicompat:*', 'xml.dom.xmlbuilder:DOMImplementationLS', 'xml.dom.xmlbuilder:DocumentLS', 'xml.dom:EMPTY_NAMESPACE', 'xml.dom:EMPTY_PREFIX', 'xml.dom:XMLNS_NAMESPACE', 'xml.dom:domreg', 'xml.dom:expatbuilder', 'xml.dom:pulldom']" imports="['io', 'xml', 'xml.dom', 'xml.dom.minidom']" name="xml.dom.minidom">
      <class base="xml.dom.Node" init="obj = xml.dom.minidom.Node()%%[]" name="Node">
        <api name="toxml">
          <expr>ret = obj.toxml(encoding)%%['None']</expr>
          <args>['encoding:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="hasChildNodes">
          <expr>ret = obj.hasChildNodes()%%[]</expr>
          <args>[]</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="replaceChild">
          <expr>ret = obj.replaceChild(newChild,oldChild)%%['None', 'None']</expr>
          <args>['newChild:None', 'oldChild:None']</args>
          <return>['ret:None', 'oldChild:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="cloneNode">
          <expr>ret = obj.cloneNode(deep)%%['None']</expr>
          <args>['deep:None']</args>
          <return>['_clone_node:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isSupported">
          <expr>ret = obj.isSupported(feature,version)%%['None', 'None']</expr>
          <args>['feature:None', 'version:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isSameNode">
          <expr>ret = obj.isSameNode(other)%%['None']</expr>
          <args>['other:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getInterface">
          <expr>ret = obj.getInterface(feature)%%['None']</expr>
          <args>['feature:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getUserData">
          <expr>ret = obj.getUserData(key)%%['None']</expr>
          <args>['key:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setUserData">
          <expr>ret = obj.setUserData(key,data,handler)%%['None', 'None', 'None']</expr>
          <args>['key:None', 'data:None', 'handler:None']</args>
          <return>['old:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="xml.dom.minidom.Node" init="obj = xml.dom.minidom.DocumentFragment()%%[]" name="DocumentFragment">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="xml.dom.minidom.Node" init="obj = xml.dom.minidom.Attr(None)%%['None', 'None', 'None', 'None']" name="Attr">
        <api name="__init__">
          <expr>None</expr>
          <args>['qName:None', 'namespaceURI:None', 'localName:None', 'prefix:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['EMPTY_NAMESPACE', None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="builtins.object" init="obj = xml.dom.minidom.NamedNodeMap(None,None,None)%%['None', 'None', 'None']" name="NamedNodeMap">
        <api name="__init__">
          <expr>None</expr>
          <args>['attrs:None', 'attrsNS:None', 'ownerElement:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="item">
          <expr>ret = obj.item(index)%%['int']</expr>
          <args>['index:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="items">
          <expr>ret = obj.items()%%[]</expr>
          <args>[]</args>
          <return>['L:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="itemsNS">
          <expr>ret = obj.itemsNS()%%[]</expr>
          <args>[]</args>
          <return>['L:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="keysNS">
          <expr>ret = obj.keysNS()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="removeNamedItem">
          <expr>ret = obj.removeNamedItem(name)%%['str']</expr>
          <args>['name:str']</args>
          <return>['n:Attr']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="removeNamedItemNS">
          <expr>ret = obj.removeNamedItemNS(namespaceURI,localName)%%['str', 'str']</expr>
          <args>['namespaceURI:str', 'localName:str']</args>
          <return>['n:Attr']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setNamedItemNS">
          <expr>ret = obj.setNamedItemNS(node)%%['Text']</expr>
          <args>['node:Text']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="builtins.object" init="obj = xml.dom.minidom.TypeInfo(None,None)%%['None', 'None']" name="TypeInfo">
        <api name="__init__">
          <expr>None</expr>
          <args>['namespace:None', 'name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="xml.dom.minidom.Node" init="obj = xml.dom.minidom.Element(None)%%['None', 'None', 'None', 'None']" name="Element">
        <api name="__init__">
          <expr>None</expr>
          <args>['tagName:None', 'namespaceURI:None', 'prefix:None', 'localName:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['EMPTY_NAMESPACE', None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getAttribute">
          <expr>ret = obj.getAttribute(attname)%%['str']</expr>
          <args>['attname:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getAttributeNS">
          <expr>ret = obj.getAttributeNS(namespaceURI,localName)%%['str', 'str']</expr>
          <args>['namespaceURI:str', 'localName:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setAttribute">
          <expr>obj.setAttribute(attname,value)%%['str', 'str']</expr>
          <args>['attname:str', 'value:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setAttributeNS">
          <expr>obj.setAttributeNS(namespaceURI,qualifiedName,value)%%['str', 'str', 'str']</expr>
          <args>['namespaceURI:str', 'qualifiedName:str', 'value:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="removeAttribute">
          <expr>obj.removeAttribute(name)%%['str']</expr>
          <args>['name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="removeAttributeNS">
          <expr>obj.removeAttributeNS(namespaceURI,localName)%%['str', 'str']</expr>
          <args>['namespaceURI:str', 'localName:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="hasAttribute">
          <expr>ret = obj.hasAttribute(name)%%['str']</expr>
          <args>['name:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="hasAttributeNS">
          <expr>ret = obj.hasAttributeNS(namespaceURI,localName)%%['None', 'None']</expr>
          <args>['namespaceURI:None', 'localName:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getElementsByTagName">
          <expr>ret = obj.getElementsByTagName(name)%%['str']</expr>
          <args>['name:str']</args>
          <return>['_get_elements_by_tagName_helper:function']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getElementsByTagNameNS">
          <expr>ret = obj.getElementsByTagNameNS(namespaceURI,localName)%%['None', 'None']</expr>
          <args>['namespaceURI:None', 'localName:None']</args>
          <return>['_get_elements_by_tagName_ns_helper:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="hasAttributes">
          <expr>ret = obj.hasAttributes()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setIdAttribute">
          <expr>obj.setIdAttribute(name)%%['str']</expr>
          <args>['name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setIdAttributeNS">
          <expr>obj.setIdAttributeNS(namespaceURI,localName)%%['str', 'str']</expr>
          <args>['namespaceURI:str', 'localName:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = xml.dom.minidom.Childless()%%[]" name="Childless">
        <api name="hasChildNodes">
          <expr>ret = obj.hasChildNodes()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="replaceChild">
          <expr>obj.replaceChild(newChild,oldChild)%%['None', 'None']</expr>
          <args>['newChild:None', 'oldChild:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="xml.dom.minidom.Childless" init="obj = xml.dom.minidom.ProcessingInstruction(None,None)%%['None', 'None']" name="ProcessingInstruction">
        <api name="__init__">
          <expr>None</expr>
          <args>['target:None', 'data:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="xml.dom.minidom.Childless" init="obj = xml.dom.minidom.CharacterData()%%[]" name="CharacterData">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="substringData">
          <expr>ret = obj.substringData(offset,count)%%['None', 'None']</expr>
          <args>['offset:None', 'count:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="appendData">
          <expr>obj.appendData(arg)%%['None']</expr>
          <args>['arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="insertData">
          <expr>obj.insertData(offset,arg)%%['None', 'None']</expr>
          <args>['offset:None', 'arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="deleteData">
          <expr>obj.deleteData(offset,count)%%['None', 'None']</expr>
          <args>['offset:None', 'count:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="replaceData">
          <expr>obj.replaceData(offset,count,arg)%%['None', 'None', 'None']</expr>
          <args>['offset:None', 'count:None', 'arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="xml.dom.minidom.CharacterData" init="obj = xml.dom.minidom.Text()%%[]" name="Text">
        <api name="splitText">
          <expr>ret = obj.splitText(offset)%%['None']</expr>
          <args>['offset:None']</args>
          <return>['newText:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="replaceWholeText">
          <expr>ret = obj.replaceWholeText(content)%%['str']</expr>
          <args>['content:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="xml.dom.minidom.CharacterData" init="obj = xml.dom.minidom.Comment(None)%%['None']" name="Comment">
        <api name="__init__">
          <expr>None</expr>
          <args>['data:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="xml.dom.minidom.Text" init="obj = xml.dom.minidom.CDATASection()%%[]" name="CDATASection"/>
      <class base="builtins.object" init="obj = xml.dom.minidom.ReadOnlySequentialNamedNodeMap()%%['None']" name="ReadOnlySequentialNamedNodeMap">
        <api name="__init__">
          <expr>None</expr>
          <args>['seq:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="item">
          <expr>ret = obj.item(index)%%['int']</expr>
          <args>['index:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="removeNamedItem">
          <expr>obj.removeNamedItem(name)%%['None']</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="removeNamedItemNS">
          <expr>obj.removeNamedItemNS(namespaceURI,localName)%%['None', 'None']</expr>
          <args>['namespaceURI:None', 'localName:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setNamedItemNS">
          <expr>obj.setNamedItemNS(node)%%['None']</expr>
          <args>['node:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = xml.dom.minidom.Identified()%%[]" name="Identified"/>
      <class base="xml.dom.minidom.Identified" init="obj = xml.dom.minidom.DocumentType(None)%%['None']" name="DocumentType">
        <api name="__init__">
          <expr>None</expr>
          <args>['qualifiedName:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="cloneNode">
          <expr>ret = obj.cloneNode(deep)%%['int']</expr>
          <args>['deep:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="xml.dom.minidom.Identified" init="obj = xml.dom.minidom.Entity(None,None,None,None)%%['None', 'None', 'None', 'None']" name="Entity">
        <api name="__init__">
          <expr>None</expr>
          <args>['name:None', 'publicId:None', 'systemId:None', 'notation:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="replaceChild">
          <expr>obj.replaceChild(newChild,oldChild)%%['None', 'None']</expr>
          <args>['newChild:None', 'oldChild:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="xml.dom.minidom.Identified" init="obj = xml.dom.minidom.Notation(None,None,None)%%['None', 'None', 'None']" name="Notation">
        <api name="__init__">
          <expr>None</expr>
          <args>['name:None', 'publicId:None', 'systemId:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="xml.dom.xmlbuilder.DOMImplementationLS" init="obj = xml.dom.minidom.DOMImplementation()%%[]" name="DOMImplementation">
        <api name="createDocument">
          <expr>ret = obj.createDocument(namespaceURI,qualifiedName,doctype)%%['str', 'str', 'DocumentType']</expr>
          <args>['namespaceURI:str', 'qualifiedName:str', 'doctype:DocumentType']</args>
          <return>['doc:Document']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="createDocumentType">
          <expr>ret = obj.createDocumentType(qualifiedName,publicId,systemId)%%['str', 'str', 'str']</expr>
          <args>['qualifiedName:str', 'publicId:str', 'systemId:str']</args>
          <return>['doctype:DocumentType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getInterface">
          <expr>ret = obj.getInterface(feature)%%['None']</expr>
          <args>['feature:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="builtins.object" init="obj = xml.dom.minidom.ElementInfo(None)%%['None']" name="ElementInfo">
        <api name="__init__">
          <expr>None</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isEmpty">
          <expr>ret = obj.isEmpty()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="xml.dom.minidom.Node" init="obj = xml.dom.minidom.Document()%%[]" name="Document">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="cloneNode">
          <expr>ret = obj.cloneNode(deep)%%['int']</expr>
          <args>['deep:int']</args>
          <return>['ret:NoneType', 'clone:Document']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="createDocumentFragment">
          <expr>ret = obj.createDocumentFragment()%%[]</expr>
          <args>[]</args>
          <return>['d:DocumentFragment']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="createElement">
          <expr>ret = obj.createElement(tagName)%%['str']</expr>
          <args>['tagName:str']</args>
          <return>['e:Element']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="createTextNode">
          <expr>ret = obj.createTextNode(data)%%['str']</expr>
          <args>['data:str']</args>
          <return>['t:Text']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="createCDATASection">
          <expr>ret = obj.createCDATASection(data)%%['str']</expr>
          <args>['data:str']</args>
          <return>['c:CDATASection']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="createComment">
          <expr>ret = obj.createComment(data)%%['str']</expr>
          <args>['data:str']</args>
          <return>['c:Comment']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="createProcessingInstruction">
          <expr>ret = obj.createProcessingInstruction(target,data)%%['str', 'str']</expr>
          <args>['target:str', 'data:str']</args>
          <return>['p:ProcessingInstruction']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="createAttribute">
          <expr>ret = obj.createAttribute(qName)%%['str']</expr>
          <args>['qName:str']</args>
          <return>['a:Attr']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="createAttributeNS">
          <expr>ret = obj.createAttributeNS(namespaceURI,qualifiedName)%%['str', 'str']</expr>
          <args>['namespaceURI:str', 'qualifiedName:str']</args>
          <return>['a:Attr']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getElementById">
          <expr>ret = obj.getElementById(id)%%['str']</expr>
          <args>['id:str']</args>
          <return>['ret:NoneType', 'result:Element']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getElementsByTagName">
          <expr>ret = obj.getElementsByTagName(name)%%['str']</expr>
          <args>['name:str']</args>
          <return>['_get_elements_by_tagName_helper:function']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getElementsByTagNameNS">
          <expr>ret = obj.getElementsByTagNameNS(namespaceURI,localName)%%['str', 'str']</expr>
          <args>['namespaceURI:str', 'localName:str']</args>
          <return>['_get_elements_by_tagName_ns_helper:function']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isSupported">
          <expr>ret = obj.isSupported(feature,version)%%['None', 'None']</expr>
          <args>['feature:None', 'version:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="importNode">
          <expr>ret = obj.importNode(node,deep)%%['Document', 'int']</expr>
          <args>['node:Document', 'deep:int']</args>
          <return>['_clone_node:function']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="renameNode">
          <expr>ret = obj.renameNode(n,namespaceURI,name)%%['Attr', 'str', 'str']</expr>
          <args>['n:Attr', 'namespaceURI:str', 'name:str']</args>
          <return>['n:Attr']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="parse">
        <expr>ret = xml.dom.minidom.parse(file,parser,bufsize)%%['str', 'NoneType', 'NoneType']</expr>
        <args>['file:str', 'parser:NoneType', 'bufsize:NoneType']</args>
        <return>['ret:NoneType', '_do_pulldom_parse:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parseString">
        <expr>ret = xml.dom.minidom.parseString(string,parser)%%['str', 'NoneType']</expr>
        <args>['string:str', 'parser:NoneType']</args>
        <return>['ret:NoneType', '_do_pulldom_parse:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getDOMImplementation">
        <expr>ret = xml.dom.minidom.getDOMImplementation(features)%%['NoneType']</expr>
        <args>['features:NoneType']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>IndexError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>xml.dom.HierarchyRequestErr</exception>
        <exception>xml.dom.IndexSizeErr</exception>
        <exception>xml.dom.InuseAttributeErr</exception>
        <exception>xml.dom.InvalidCharacterErr</exception>
        <exception>xml.dom.NamespaceErr</exception>
        <exception>xml.dom.NoModificationAllowedErr</exception>
        <exception>xml.dom.NotFoundErr</exception>
        <exception>xml.dom.NotSupportedErr</exception>
        <exception>xml.dom.WrongDocumentErr</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['xml', 'xml.dom', 'xml.dom.NodeFilter']" name="xml.dom.NodeFilter">
      <class init="obj = xml.dom.NodeFilter.NodeFilter()%%[]" name="NodeFilter">
        <api name="acceptNode">
          <expr>obj.acceptNode(node)%%['None']</expr>
          <args>['node:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>NotImplementedError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['xml.dom.NodeFilter:NodeFilter', 'xml.dom:EMPTY_NAMESPACE', 'xml.dom:EMPTY_PREFIX', 'xml.dom:Node', 'xml.dom:XMLNS_NAMESPACE', 'xml.dom:minidom', 'xml.dom:xmlbuilder', 'xml.parsers:expat']" imports="['xml', 'xml.dom', 'xml.dom.expatbuilder']" name="xml.dom.expatbuilder">
      <class base="builtins.object" init="obj = xml.dom.expatbuilder.ElementInfo(None)%%['None', 'None']" name="ElementInfo">
        <api name="__init__">
          <expr>None</expr>
          <args>['tagName:None', 'model:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getAttributeType">
          <expr>ret = obj.getAttributeType(aname)%%['str']</expr>
          <args>['aname:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getAttributeTypeNS">
          <expr>ret = obj.getAttributeTypeNS(namespaceURI,localName)%%['None', 'None']</expr>
          <args>['namespaceURI:None', 'localName:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isElementContent">
          <expr>ret = obj.isElementContent()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isEmpty">
          <expr>ret = obj.isEmpty()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isIdNS">
          <expr>ret = obj.isIdNS(euri,ename,auri,aname)%%['None', 'None', 'None', 'None']</expr>
          <args>['euri:None', 'ename:None', 'auri:None', 'aname:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = xml.dom.expatbuilder.ExpatBuilder()%%['None']" name="ExpatBuilder">
        <api name="__init__">
          <expr>None</expr>
          <args>['options:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parseFile">
          <expr>ret = obj.parseFile(file)%%['None']</expr>
          <args>['file:None']</args>
          <return>['doc:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="start_doctype_decl_handler">
          <expr>obj.start_doctype_decl_handler(doctypeName,systemId,publicId,has_internal_subset)%%['None', 'None', 'None', 'None']</expr>
          <args>['doctypeName:None', 'systemId:None', 'publicId:None', 'has_internal_subset:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_doctype_decl_handler">
          <expr>obj.end_doctype_decl_handler()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pi_handler">
          <expr>obj.pi_handler(target,data)%%['None', 'None']</expr>
          <args>['target:None', 'data:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="character_data_handler_cdata">
          <expr>obj.character_data_handler_cdata(data)%%['None']</expr>
          <args>['data:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="character_data_handler">
          <expr>obj.character_data_handler(data)%%['None']</expr>
          <args>['data:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="entity_decl_handler">
          <expr>obj.entity_decl_handler(entityName,is_parameter_entity,value,base,systemId,publicId,notationName)%%['None', 'None', 'None', 'None', 'None', 'None', 'None']</expr>
          <args>['entityName:None', 'is_parameter_entity:None', 'value:None', 'base:None', 'systemId:None', 'publicId:None', 'notationName:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="notation_decl_handler">
          <expr>obj.notation_decl_handler(notationName,base,systemId,publicId)%%['None', 'None', 'None', 'None']</expr>
          <args>['notationName:None', 'base:None', 'systemId:None', 'publicId:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="comment_handler">
          <expr>obj.comment_handler(data)%%['None']</expr>
          <args>['data:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="start_cdata_section_handler">
          <expr>obj.start_cdata_section_handler()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_cdata_section_handler">
          <expr>obj.end_cdata_section_handler()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="external_entity_ref_handler">
          <expr>ret = obj.external_entity_ref_handler(context,base,systemId,publicId)%%['None', 'None', 'None', 'None']</expr>
          <args>['context:None', 'base:None', 'systemId:None', 'publicId:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="first_element_handler">
          <expr>obj.first_element_handler(name,attributes)%%['None', 'None']</expr>
          <args>['name:None', 'attributes:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_element_handler">
          <expr>obj.end_element_handler(name)%%['None']</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="element_decl_handler">
          <expr>obj.element_decl_handler(name,model)%%['None', 'None']</expr>
          <args>['name:None', 'model:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="attlist_decl_handler">
          <expr>obj.attlist_decl_handler(elem,name,type,default,required)%%['None', 'None', 'None', 'None', 'None']</expr>
          <args>['elem:None', 'name:None', 'type:None', 'default:None', 'required:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="xml_decl_handler">
          <expr>obj.xml_decl_handler(version,encoding,standalone)%%['None', 'None', 'None']</expr>
          <args>['version:None', 'encoding:None', 'standalone:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="builtins.object" init="obj = xml.dom.expatbuilder.FilterVisibilityController(None)%%['None']" name="FilterVisibilityController">
        <api name="__init__">
          <expr>None</expr>
          <args>['filter:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="builtins.object" init="obj = xml.dom.expatbuilder.FilterCrutch(None)%%['None']" name="FilterCrutch">
        <api name="__init__">
          <expr>None</expr>
          <args>['builder:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="xml.dom.expatbuilder.FilterCrutch" init="obj = xml.dom.expatbuilder.Rejecter(None)%%['None']" name="Rejecter">
        <api name="__init__">
          <expr>None</expr>
          <args>['builder:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_element_handler">
          <expr>obj.end_element_handler()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="xml.dom.expatbuilder.FilterCrutch" init="obj = xml.dom.expatbuilder.Skipper(None)%%['None']" name="Skipper">
        <api name="end_element_handler">
          <expr>obj.end_element_handler()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="xml.dom.expatbuilder.ExpatBuilder" init="obj = xml.dom.expatbuilder.FragmentBuilder(None)%%['None', 'None']" name="FragmentBuilder">
        <api name="__init__">
          <expr>None</expr>
          <args>['context:None', 'options:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parseFile">
          <expr>ret = obj.parseFile(file)%%['None']</expr>
          <args>['file:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = xml.dom.expatbuilder.Namespaces()%%[]" name="Namespaces">
        <api name="start_namespace_decl_handler">
          <expr>obj.start_namespace_decl_handler(prefix,uri)%%['None', 'None']</expr>
          <args>['prefix:None', 'uri:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_element_handler">
          <expr>obj.end_element_handler(name)%%['None']</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="xml.dom.expatbuilder.Namespaces" init="obj = xml.dom.expatbuilder.ExpatBuilderNS()%%[]" name="ExpatBuilderNS"/>
      <class base="xml.dom.expatbuilder.Namespaces" init="obj = xml.dom.expatbuilder.FragmentBuilderNS()%%[]" name="FragmentBuilderNS"/>
      <class base="Exception" init="obj = xml.dom.expatbuilder.ParseEscape()%%[]" name="ParseEscape"/>
      <class base="xml.dom.expatbuilder.ExpatBuilder" init="obj = xml.dom.expatbuilder.InternalSubsetExtractor()%%['None']" name="InternalSubsetExtractor">
        <api name="start_doctype_decl_handler">
          <expr>obj.start_doctype_decl_handler(name,publicId,systemId,has_internal_subset)%%['str', 'str', 'str', 'int']</expr>
          <args>['name:str', 'publicId:str', 'systemId:str', 'has_internal_subset:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_doctype_decl_handler">
          <expr>obj.end_doctype_decl_handler()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="parse">
        <expr>ret = xml.dom.expatbuilder.parse(file,namespaces)%%['str', 'bool']</expr>
        <args>['file:str', 'namespaces:bool']</args>
        <return>['result:Document']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parseString">
        <expr>ret = xml.dom.expatbuilder.parseString(string,namespaces)%%['str', 'bool']</expr>
        <args>['string:str', 'namespaces:bool']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parseFragment">
        <expr>ret = xml.dom.expatbuilder.parseFragment(file,context,namespaces)%%['None', 'None', 'None']</expr>
        <args>['file:None', 'context:None', 'namespaces:None']</args>
        <return>['result:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parseFragmentString">
        <expr>ret = xml.dom.expatbuilder.parseFragmentString(string,context,namespaces)%%['None', 'None', 'None']</expr>
        <args>['string:None', 'context:None', 'namespaces:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="makeBuilder">
        <expr>ret = xml.dom.expatbuilder.makeBuilder(options)%%['None']</expr>
        <args>['options:None']</args>
        <return>['ExpatBuilderNS:None', 'ExpatBuilder:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>xml.dom.expatbuilder.ParseEscape</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['re', 'xml', 'xml.etree', 'xml.etree.ElementPath']" name="xml.etree.ElementPath">
      <api name="xpath_tokenizer">
        <expr>xml.etree.ElementPath.xpath_tokenizer(pattern,namespaces)%%['str', 'dict']</expr>
        <args>['pattern:str', 'namespaces:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_parent_map">
        <expr>ret = xml.etree.ElementPath.get_parent_map(context)%%['_SelectorContext']</expr>
        <args>['context:_SelectorContext']</args>
        <return>['parent_map:dict']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="prepare_child">
        <expr>ret = xml.etree.ElementPath.prepare_child(next,token)%%['method-wrapper', 'tuple']</expr>
        <args>['next:method-wrapper', 'token:tuple']</args>
        <return>['select:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="prepare_star">
        <expr>ret = xml.etree.ElementPath.prepare_star(next,token)%%['method-wrapper', 'tuple']</expr>
        <args>['next:method-wrapper', 'token:tuple']</args>
        <return>['select:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="prepare_self">
        <expr>ret = xml.etree.ElementPath.prepare_self(next,token)%%['method-wrapper', 'tuple']</expr>
        <args>['next:method-wrapper', 'token:tuple']</args>
        <return>['select:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="prepare_descendant">
        <expr>ret = xml.etree.ElementPath.prepare_descendant(next,token)%%['method-wrapper', 'tuple']</expr>
        <args>['next:method-wrapper', 'token:tuple']</args>
        <return>['select:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="prepare_parent">
        <expr>ret = xml.etree.ElementPath.prepare_parent(next,token)%%['method-wrapper', 'tuple']</expr>
        <args>['next:method-wrapper', 'token:tuple']</args>
        <return>['select:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="prepare_predicate">
        <expr>ret = xml.etree.ElementPath.prepare_predicate(next,token)%%['method-wrapper', 'tuple']</expr>
        <args>['next:method-wrapper', 'token:tuple']</args>
        <return>['select:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="iterfind">
        <expr>ret = xml.etree.ElementPath.iterfind(elem,path,namespaces)%%['Element', 'str', 'dict']</expr>
        <args>['elem:Element', 'path:str', 'namespaces:dict']</args>
        <return>['result:generator']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="find">
        <expr>ret = xml.etree.ElementPath.find(elem,path,namespaces)%%['Element', 'str', 'NoneType']</expr>
        <args>['elem:Element', 'path:str', 'namespaces:NoneType']</args>
        <return>['next:builtin_function_or_method']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="findall">
        <expr>ret = xml.etree.ElementPath.findall(elem,path,namespaces)%%['Element', 'str', 'dict']</expr>
        <args>['elem:Element', 'path:str', 'namespaces:dict']</args>
        <return>['list:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="findtext">
        <expr>ret = xml.etree.ElementPath.findtext(elem,path,default,namespaces)%%['Element', 'str', 'str', 'NoneType']</expr>
        <args>['elem:Element', 'path:str', 'default:str', 'namespaces:NoneType']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>StopIteration</exception>
        <exception>SyntaxError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['xml.etree.ElementTree:*']" imports="['xml', 'xml.etree', 'xml.etree.cElementTree']" name="xml.etree.cElementTree"/>
    <module importfrom="['xml.etree:ElementPath']" imports="['collections', 'collections.abc', 'contextlib', 'io', 'locale', 're', 'sys', 'warnings', 'xml', 'xml.etree', 'xml.etree.ElementTree']" name="xml.etree.ElementTree">
      <class base="SyntaxError" init="obj = xml.etree.ElementTree.ParseError()%%[]" name="ParseError"/>
      <class init="obj = xml.etree.ElementTree.Element(None)%%['NoneType', 'NoneType']" name="Element">
        <api name="__init__">
          <expr>None</expr>
          <args>['tag:NoneType', 'attrib:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getchildren">
          <expr>ret = obj.getchildren()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set">
          <expr>obj.set(key,value)%%['str', 'str']</expr>
          <args>['key:str', 'value:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getiterator">
          <expr>ret = obj.getiterator(tag)%%['None']</expr>
          <args>['tag:None']</args>
          <return>['list:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = xml.etree.ElementTree.QName(None)%%['NoneType', 'NoneType']" name="QName">
        <api name="__init__">
          <expr>None</expr>
          <args>['text_or_uri:NoneType', 'tag:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = xml.etree.ElementTree.ElementTree()%%['NoneType', 'NoneType']" name="ElementTree">
        <api name="__init__">
          <expr>None</expr>
          <args>['element:NoneType', 'file:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getroot">
          <expr>ret = obj.getroot()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parse">
          <expr>ret = obj.parse(source,parser)%%['BytesIO', 'NoneType']</expr>
          <args>['source:BytesIO', 'parser:NoneType']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getiterator">
          <expr>ret = obj.getiterator(tag)%%['NoneType']</expr>
          <args>['tag:NoneType']</args>
          <return>['list:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="write_c14n">
          <expr>ret = obj.write_c14n(file)%%['None']</expr>
          <args>['file:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = xml.etree.ElementTree.XMLPullParser()%%['NoneType']" name="XMLPullParser">
        <api name="__init__">
          <expr>None</expr>
          <args>['events:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['_parser:NoneType']</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="read_events">
          <expr>obj.read_events()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = xml.etree.ElementTree.TreeBuilder()%%['NoneType']" name="TreeBuilder">
        <api name="__init__">
          <expr>None</expr>
          <args>['element_factory:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="data">
          <expr>obj.data(data)%%['str']</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="start">
          <expr>ret = obj.start(tag,attrs)%%['str', 'dict']</expr>
          <args>['tag:str', 'attrs:dict']</args>
          <return>['elem:Element']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end">
          <expr>ret = obj.end(tag)%%['str']</expr>
          <args>['tag:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = xml.etree.ElementTree.XMLParser()%%['NoneType', 'NoneType', 'NoneType']" name="XMLParser">
        <api name="__init__">
          <expr>None</expr>
          <args>['html:NoneType', 'target:NoneType', 'encoding:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['_sentinel', None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="iselement">
        <expr>ret = xml.etree.ElementTree.iselement(element)%%['Element']</expr>
        <args>['element:Element']</args>
        <return>['hasattr:builtin_function_or_method']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="SubElement">
        <expr>ret = xml.etree.ElementTree.SubElement(parent,tag,attrib)%%['Element', 'str', 'dict']</expr>
        <args>['parent:Element', 'tag:str', 'attrib:dict']</args>
        <return>['element:Element']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="Comment">
        <expr>ret = xml.etree.ElementTree.Comment(text)%%['str']</expr>
        <args>['text:str']</args>
        <return>['element:Element']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ProcessingInstruction">
        <expr>ret = xml.etree.ElementTree.ProcessingInstruction(target,text)%%['str', 'str']</expr>
        <args>['target:str', 'text:str']</args>
        <return>['element:Element']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="register_namespace">
        <expr>xml.etree.ElementTree.register_namespace(prefix,uri)%%['str', 'str']</expr>
        <args>['prefix:str', 'uri:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="tostring">
        <expr>ret = xml.etree.ElementTree.tostring(element,encoding,method)%%['Element', 'str', 'NoneType']</expr>
        <args>['element:Element', 'encoding:str', 'method:NoneType']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['short_empty_elements:bool']</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <api name="tostringlist">
        <expr>ret = xml.etree.ElementTree.tostringlist(element,encoding,method)%%['Element', 'str', 'NoneType']</expr>
        <args>['element:Element', 'encoding:str', 'method:NoneType']</args>
        <return>['lst:list']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['short_empty_elements:bool']</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <api name="dump">
        <expr>xml.etree.ElementTree.dump(elem)%%['Element']</expr>
        <args>['elem:Element']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parse">
        <expr>ret = xml.etree.ElementTree.parse(source,parser)%%['BufferedReader', 'NoneType']</expr>
        <args>['source:BufferedReader', 'parser:NoneType']</args>
        <return>['tree:ElementTree']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="iterparse">
        <expr>ret = xml.etree.ElementTree.iterparse(source,events,parser)%%['StringIO', 'tuple', 'XMLParser']</expr>
        <args>['source:StringIO', 'events:tuple', 'parser:XMLParser']</args>
        <return>['it:IterParseIterator']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="XML">
        <expr>ret = xml.etree.ElementTree.XML(text,parser)%%['str', 'NoneType']</expr>
        <args>['text:str', 'parser:NoneType']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="XMLID">
        <expr>xml.etree.ElementTree.XMLID(text,parser)%%['str', 'NoneType']</expr>
        <args>['text:str', 'parser:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="fromstringlist">
        <expr>ret = xml.etree.ElementTree.fromstringlist(sequence,parser)%%['list', 'NoneType']</expr>
        <args>['sequence:list', 'parser:NoneType']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
        <exception>NameError</exception>
        <exception>OSError</exception>
        <exception>SyntaxError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>xml.etree.ElementTree.ParseError</exception>
      </errors>
    </module>
    <module importfrom="['xml.etree:ElementTree']" imports="['copy', 'xml', 'xml.etree', 'xml.etree.ElementInclude']" name="xml.etree.ElementInclude">
      <class base="SyntaxError" init="obj = xml.etree.ElementInclude.FatalIncludeError()%%[]" name="FatalIncludeError"/>
      <api name="default_loader">
        <expr>ret = xml.etree.ElementInclude.default_loader(href,parse,encoding)%%['None', 'None', 'None']</expr>
        <args>['href:None', 'parse:None', 'encoding:None']</args>
        <return>['data:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="include">
        <expr>xml.etree.ElementInclude.include(elem,loader)%%['Element', 'method']</expr>
        <args>['elem:Element', 'loader:method']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>copy.Error</exception>
        <exception>xml.etree.ElementInclude.FatalIncludeError</exception>
      </errors>
    </module>
    <module importfrom="['pyexpat:*']" imports="['sys', 'xml', 'xml.parsers', 'xml.parsers.expat']" name="xml.parsers.expat"/>
    <module importfrom="[]" imports="['xml', 'xml.sax', 'xml.sax.handler']" name="xml.sax.handler">
      <class init="obj = xml.sax.handler.ErrorHandler()%%[]" name="ErrorHandler">
        <api name="error">
          <expr>obj.error(exception)%%['None']</expr>
          <args>['exception:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="fatalError">
          <expr>obj.fatalError(exception)%%['SAXParseException']</expr>
          <args>['exception:SAXParseException']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="warning">
          <expr>obj.warning(exception)%%['None']</expr>
          <args>['exception:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = xml.sax.handler.ContentHandler()%%[]" name="ContentHandler">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setDocumentLocator">
          <expr>obj.setDocumentLocator(locator)%%['ExpatLocator']</expr>
          <args>['locator:ExpatLocator']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="startDocument">
          <expr>obj.startDocument()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="endDocument">
          <expr>obj.endDocument()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="startPrefixMapping">
          <expr>obj.startPrefixMapping(prefix,uri)%%['None', 'None']</expr>
          <args>['prefix:None', 'uri:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="endPrefixMapping">
          <expr>obj.endPrefixMapping(prefix)%%['None']</expr>
          <args>['prefix:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="startElement">
          <expr>obj.startElement(name,attrs)%%['str', 'AttributesImpl']</expr>
          <args>['name:str', 'attrs:AttributesImpl']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="endElement">
          <expr>obj.endElement(name)%%['str']</expr>
          <args>['name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="startElementNS">
          <expr>obj.startElementNS(name,qname,attrs)%%['None', 'None', 'None']</expr>
          <args>['name:None', 'qname:None', 'attrs:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="endElementNS">
          <expr>obj.endElementNS(name,qname)%%['None', 'None']</expr>
          <args>['name:None', 'qname:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="characters">
          <expr>obj.characters(content)%%['None']</expr>
          <args>['content:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ignorableWhitespace">
          <expr>obj.ignorableWhitespace(whitespace)%%['None']</expr>
          <args>['whitespace:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="processingInstruction">
          <expr>obj.processingInstruction(target,data)%%['None', 'None']</expr>
          <args>['target:None', 'data:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="skippedEntity">
          <expr>obj.skippedEntity(name)%%['None']</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = xml.sax.handler.DTDHandler()%%[]" name="DTDHandler">
        <api name="notationDecl">
          <expr>obj.notationDecl(name,publicId,systemId)%%['None', 'None', 'None']</expr>
          <args>['name:None', 'publicId:None', 'systemId:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unparsedEntityDecl">
          <expr>obj.unparsedEntityDecl(name,publicId,systemId,ndata)%%['None', 'None', 'None', 'None']</expr>
          <args>['name:None', 'publicId:None', 'systemId:None', 'ndata:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = xml.sax.handler.EntityResolver()%%[]" name="EntityResolver">
        <api name="resolveEntity">
          <expr>ret = obj.resolveEntity(publicId,systemId)%%['None', 'None']</expr>
          <args>['publicId:None', 'systemId:None']</args>
          <return>['systemId:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['xml.sax:handler', 'xml.sax:saxutils']" imports="['xml', 'xml.sax', 'xml.sax.xmlreader']" name="xml.sax.xmlreader">
      <class init="obj = xml.sax.xmlreader.XMLReader()%%[]" name="XMLReader">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parse">
          <expr>obj.parse(source)%%['None']</expr>
          <args>['source:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getContentHandler">
          <expr>ret = obj.getContentHandler()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setContentHandler">
          <expr>obj.setContentHandler(handler)%%['None']</expr>
          <args>['handler:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getDTDHandler">
          <expr>ret = obj.getDTDHandler()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setDTDHandler">
          <expr>obj.setDTDHandler(handler)%%['None']</expr>
          <args>['handler:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getEntityResolver">
          <expr>ret = obj.getEntityResolver()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setEntityResolver">
          <expr>obj.setEntityResolver(resolver)%%['None']</expr>
          <args>['resolver:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getErrorHandler">
          <expr>ret = obj.getErrorHandler()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setErrorHandler">
          <expr>obj.setErrorHandler(handler)%%['None']</expr>
          <args>['handler:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setLocale">
          <expr>obj.setLocale(locale)%%['None']</expr>
          <args>['locale:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getFeature">
          <expr>obj.getFeature(name)%%['None']</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setFeature">
          <expr>obj.setFeature(name,state)%%['None', 'None']</expr>
          <args>['name:None', 'state:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getProperty">
          <expr>obj.getProperty(name)%%['None']</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setProperty">
          <expr>obj.setProperty(name,value)%%['None', 'None']</expr>
          <args>['name:None', 'value:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="xml.sax.xmlreader.XMLReader" init="obj = xml.sax.xmlreader.IncrementalParser()%%['NoneType']" name="IncrementalParser">
        <api name="__init__">
          <expr>None</expr>
          <args>['bufsize:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parse">
          <expr>obj.parse(source)%%['None']</expr>
          <args>['source:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="reset">
          <expr>obj.reset()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = xml.sax.xmlreader.Locator()%%[]" name="Locator">
        <api name="getColumnNumber">
          <expr>ret = obj.getColumnNumber()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getLineNumber">
          <expr>ret = obj.getLineNumber()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getPublicId">
          <expr>ret = obj.getPublicId()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getSystemId">
          <expr>ret = obj.getSystemId()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = xml.sax.xmlreader.InputSource()%%['NoneType']" name="InputSource">
        <api name="__init__">
          <expr>None</expr>
          <args>['system_id:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setPublicId">
          <expr>obj.setPublicId(public_id)%%['NoneType']</expr>
          <args>['public_id:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getPublicId">
          <expr>ret = obj.getPublicId()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setSystemId">
          <expr>obj.setSystemId(system_id)%%['str']</expr>
          <args>['system_id:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getSystemId">
          <expr>ret = obj.getSystemId()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setEncoding">
          <expr>obj.setEncoding(encoding)%%['str']</expr>
          <args>['encoding:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getEncoding">
          <expr>ret = obj.getEncoding()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setByteStream">
          <expr>obj.setByteStream(bytefile)%%['BytesIO']</expr>
          <args>['bytefile:BytesIO']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setCharacterStream">
          <expr>obj.setCharacterStream(charfile)%%['StringIO']</expr>
          <args>['charfile:StringIO']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = xml.sax.xmlreader.AttributesImpl(None)%%['NoneType']" name="AttributesImpl">
        <api name="__init__">
          <expr>None</expr>
          <args>['attrs:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getLength">
          <expr>ret = obj.getLength()%%[]</expr>
          <args>[]</args>
          <return>['len:builtin_function_or_method']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getType">
          <expr>ret = obj.getType(name)%%['None']</expr>
          <args>['name:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getValue">
          <expr>ret = obj.getValue(name)%%['str']</expr>
          <args>['name:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getValueByQName">
          <expr>ret = obj.getValueByQName(name)%%['str']</expr>
          <args>['name:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getNameByQName">
          <expr>ret = obj.getNameByQName(name)%%['str']</expr>
          <args>['name:str']</args>
          <return>['name:str']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getQNameByName">
          <expr>ret = obj.getQNameByName(name)%%['str']</expr>
          <args>['name:str']</args>
          <return>['name:str']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getNames">
          <expr>ret = obj.getNames()%%[]</expr>
          <args>[]</args>
          <return>['list:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getQNames">
          <expr>ret = obj.getQNames()%%[]</expr>
          <args>[]</args>
          <return>['list:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="keys">
          <expr>ret = obj.keys()%%[]</expr>
          <args>[]</args>
          <return>['list:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="copy">
          <expr>ret = obj.copy()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="items">
          <expr>ret = obj.items()%%[]</expr>
          <args>[]</args>
          <return>['list:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="values">
          <expr>ret = obj.values()%%[]</expr>
          <args>[]</args>
          <return>['list:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="xml.sax.xmlreader.AttributesImpl" init="obj = xml.sax.xmlreader.AttributesNSImpl(None,None)%%['NoneType', 'NoneType']" name="AttributesNSImpl">
        <api name="__init__">
          <expr>None</expr>
          <args>['attrs:NoneType', 'qnames:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getValueByQName">
          <expr>ret = obj.getValueByQName(name)%%['str']</expr>
          <args>['name:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getNameByQName">
          <expr>ret = obj.getNameByQName(name)%%['str']</expr>
          <args>['name:str']</args>
          <return>['nsname:tuple']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getQNameByName">
          <expr>ret = obj.getQNameByName(name)%%['tuple']</expr>
          <args>['name:tuple']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getQNames">
          <expr>ret = obj.getQNames()%%[]</expr>
          <args>[]</args>
          <return>['list:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="copy">
          <expr>ret = obj.copy()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>KeyError</exception>
        <exception>NotImplementedError</exception>
        <exception>OSError</exception>
        <exception>SAXNotRecognizedException</exception>
        <exception>SAXNotSupportedException</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['xml.sax:handler', 'xml.sax:xmlreader']" imports="['codecs', 'io', 'os', 'sys', 'urllib.parse', 'urllib.request', 'xml', 'xml.sax', 'xml.sax.saxutils']" name="xml.sax.saxutils">
      <class base="xml.sax.handler.ContentHandler" init="obj = xml.sax.saxutils.XMLGenerator()%%['NoneType', 'NoneType', 'NoneType']" name="XMLGenerator">
        <api name="__init__">
          <expr>None</expr>
          <args>['out:NoneType', 'encoding:NoneType', 'short_empty_elements:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="startDocument">
          <expr>obj.startDocument()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="endDocument">
          <expr>obj.endDocument()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="startPrefixMapping">
          <expr>obj.startPrefixMapping(prefix,uri)%%['str', 'str']</expr>
          <args>['prefix:str', 'uri:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="endPrefixMapping">
          <expr>obj.endPrefixMapping(prefix)%%['str']</expr>
          <args>['prefix:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="startElement">
          <expr>obj.startElement(name,attrs)%%['str', 'AttributesImpl']</expr>
          <args>['name:str', 'attrs:AttributesImpl']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="endElement">
          <expr>obj.endElement(name)%%['str']</expr>
          <args>['name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="startElementNS">
          <expr>obj.startElementNS(name,qname,attrs)%%['tuple', 'str', 'dict']</expr>
          <args>['name:tuple', 'qname:str', 'attrs:dict']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="endElementNS">
          <expr>obj.endElementNS(name,qname)%%['tuple', 'str']</expr>
          <args>['name:tuple', 'qname:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="characters">
          <expr>obj.characters(content)%%['str']</expr>
          <args>['content:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ignorableWhitespace">
          <expr>obj.ignorableWhitespace(content)%%['bytes']</expr>
          <args>['content:bytes']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="processingInstruction">
          <expr>obj.processingInstruction(target,data)%%['str', 'str']</expr>
          <args>['target:str', 'data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="xml.sax.xmlreader.XMLReader" init="obj = xml.sax.saxutils.XMLFilterBase()%%['NoneType']" name="XMLFilterBase">
        <api name="__init__">
          <expr>None</expr>
          <args>['parent:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getParent">
          <expr>ret = obj.getParent()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setParent">
          <expr>obj.setParent(parent)%%['None']</expr>
          <args>['parent:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="escape">
        <expr>ret = xml.sax.saxutils.escape(data,entities)%%['str', 'dict']</expr>
        <args>['data:str', 'entities:dict']</args>
        <return>['data:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="unescape">
        <expr>ret = xml.sax.saxutils.unescape(data,entities)%%['str', 'dict']</expr>
        <args>['data:str', 'entities:dict']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="quoteattr">
        <expr>ret = xml.sax.saxutils.quoteattr(data,entities)%%['str', 'dict']</expr>
        <args>['data:str', 'entities:dict']</args>
        <return>['data:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="prepare_input_source">
        <expr>ret = xml.sax.saxutils.prepare_input_source(source,base)%%['InputSource', 'str']</expr>
        <args>['source:InputSource', 'base:str']</args>
        <return>['source:InputSource']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['xml.parsers:expat', 'xml.sax._exceptions:*', 'xml.sax.handler:feature_external_ges', 'xml.sax.handler:feature_external_pes', 'xml.sax.handler:feature_namespace_prefixes', 'xml.sax.handler:feature_namespaces', 'xml.sax.handler:feature_string_interning', 'xml.sax.handler:feature_validation', 'xml.sax.handler:property_interning_dict', 'xml.sax.handler:property_xml_string', 'xml.sax:handler', 'xml.sax:saxutils', 'xml.sax:xmlreader']" imports="['sys', 'weakref', 'xml', 'xml.sax', 'xml.sax.expatreader', 'xml.sax.saxutils']" name="xml.sax.expatreader">
      <class base="xml.sax.xmlreader.Locator" init="obj = xml.sax.expatreader.ExpatLocator(None)%%['NoneType']" name="ExpatLocator">
        <api name="__init__">
          <expr>None</expr>
          <args>['parser:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getColumnNumber">
          <expr>ret = obj.getColumnNumber()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getLineNumber">
          <expr>ret = obj.getLineNumber()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="xml.sax.xmlreader.IncrementalParser" init="obj = xml.sax.expatreader.ExpatParser()%%['NoneType', 'NoneType']" name="ExpatParser">
        <api name="__init__">
          <expr>None</expr>
          <args>['namespaceHandling:NoneType', 'bufsize:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="prepareParser">
          <expr>obj.prepareParser(source)%%['InputSource']</expr>
          <args>['source:InputSource']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getFeature">
          <expr>ret = obj.getFeature(name)%%['str']</expr>
          <args>['name:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setFeature">
          <expr>obj.setFeature(name,state)%%['str', 'int']</expr>
          <args>['name:str', 'state:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getProperty">
          <expr>ret = obj.getProperty(name)%%['None']</expr>
          <args>['name:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setProperty">
          <expr>obj.setProperty(name,value)%%['None', 'None']</expr>
          <args>['name:None', 'value:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getColumnNumber">
          <expr>ret = obj.getColumnNumber()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getLineNumber">
          <expr>ret = obj.getLineNumber()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="start_element">
          <expr>obj.start_element(name,attrs)%%['str', 'dict']</expr>
          <args>['name:str', 'attrs:dict']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_element">
          <expr>obj.end_element(name)%%['str']</expr>
          <args>['name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="start_element_ns">
          <expr>obj.start_element_ns(name,attrs)%%['str', 'dict']</expr>
          <args>['name:str', 'attrs:dict']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_element_ns">
          <expr>obj.end_element_ns(name)%%['str']</expr>
          <args>['name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="processing_instruction">
          <expr>obj.processing_instruction(target,data)%%['None', 'None']</expr>
          <args>['target:None', 'data:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="character_data">
          <expr>obj.character_data(data)%%['None']</expr>
          <args>['data:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="start_namespace_decl">
          <expr>obj.start_namespace_decl(prefix,uri)%%['str', 'str']</expr>
          <args>['prefix:str', 'uri:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_namespace_decl">
          <expr>obj.end_namespace_decl(prefix)%%['str']</expr>
          <args>['prefix:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="start_doctype_decl">
          <expr>obj.start_doctype_decl(name,sysid,pubid,has_internal_subset)%%['None', 'None', 'None', 'None']</expr>
          <args>['name:None', 'sysid:None', 'pubid:None', 'has_internal_subset:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unparsed_entity_decl">
          <expr>obj.unparsed_entity_decl(name,base,sysid,pubid,notation_name)%%['str', 'NoneType', 'str', 'NoneType', 'str']</expr>
          <args>['name:str', 'base:NoneType', 'sysid:str', 'pubid:NoneType', 'notation_name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="notation_decl">
          <expr>obj.notation_decl(name,base,sysid,pubid)%%['str', 'NoneType', 'NoneType', 'str']</expr>
          <args>['name:str', 'base:NoneType', 'sysid:NoneType', 'pubid:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="external_entity_ref">
          <expr>ret = obj.external_entity_ref(context,base,sysid,pubid)%%['str', 'NoneType', 'str', 'NoneType']</expr>
          <args>['context:str', 'base:NoneType', 'sysid:str', 'pubid:NoneType']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="skipped_entity_handler">
          <expr>obj.skipped_entity_handler(name,is_pe)%%['None', 'None']</expr>
          <args>['name:None', 'is_pe:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="create_parser">
        <expr>ret = xml.sax.expatreader.create_parser()%%[]</expr>
        <args>[]</args>
        <return>['ExpatParser:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>SAXNotRecognizedException</exception>
        <exception>SAXNotSupportedException</exception>
        <exception>SAXReaderNotAvailable</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>expat.error</exception>
      </errors>
    </module>
  </library>
  <library name="logging">
    <module importfrom="['socketserver:StreamRequestHandler', 'socketserver:ThreadingTCPServer']" imports="['configparser', 'errno', 'io', 'logging', 'logging.config', 'logging.handlers', 're', 'struct', 'sys', 'threading', 'traceback']" name="logging.config">
      <class base="builtins.object" init="obj = logging.config.ConvertingMixin()%%[]" name="ConvertingMixin">
        <api name="convert_with_key">
          <expr>ret = obj.convert_with_key(key,value,replace)%%['None', 'None', 'None']</expr>
          <args>['key:None', 'value:None', 'replace:None']</args>
          <return>['result:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="builtins.dict" init="obj = logging.config.ConvertingDict()%%[]" name="ConvertingDict"/>
      <class base="builtins.list" init="obj = logging.config.ConvertingList()%%[]" name="ConvertingList"/>
      <class base="builtins.tuple" init="obj = logging.config.ConvertingTuple()%%[]" name="ConvertingTuple"/>
      <class base="builtins.object" init="obj = logging.config.BaseConfigurator(None)%%['NoneType']" name="BaseConfigurator">
        <api name="__init__">
          <expr>None</expr>
          <args>['config:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ext_convert">
          <expr>ret = obj.ext_convert(value)%%['None']</expr>
          <args>['value:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="cfg_convert">
          <expr>ret = obj.cfg_convert(value)%%['str']</expr>
          <args>['value:str']</args>
          <return>['d:int']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="configure_custom">
          <expr>ret = obj.configure_custom(config)%%['None']</expr>
          <args>['config:None']</args>
          <return>['result:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="as_tuple">
          <expr>ret = obj.as_tuple(value)%%['None']</expr>
          <args>['value:None']</args>
          <return>['value:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="logging.config.BaseConfigurator" init="obj = logging.config.DictConfigurator(None)%%['NoneType']" name="DictConfigurator">
        <api name="configure">
          <expr>obj.configure()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="fileConfig">
        <expr>logging.config.fileConfig(fname,defaults,disable_existing_loggers)%%['StringIO', 'dict', 'bool']</expr>
        <args>['fname:StringIO', 'defaults:dict', 'disable_existing_loggers:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="valid_ident">
        <expr>ret = logging.config.valid_ident(s)%%['str']</expr>
        <args>['s:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dictConfig">
        <expr>logging.config.dictConfig(config)%%['dict']</expr>
        <args>['config:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="listen">
        <expr>ret = logging.config.listen(port,verify)%%['int', 'function']</expr>
        <args>['port:int', 'verify:function']</args>
        <return>['Server:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['DEFAULT_LOGGING_CONFIG_PORT', None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="stopListening">
        <expr>logging.config.stopListening()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>Exception</exception>
        <exception>ImportError</exception>
        <exception>NameError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>configparser.DuplicateOptionError</exception>
        <exception>configparser.DuplicateSectionError</exception>
        <exception>configparser.Error</exception>
        <exception>configparser.InterpolationDepthError</exception>
        <exception>configparser.InterpolationError</exception>
        <exception>configparser.InterpolationMissingOptionError</exception>
        <exception>configparser.InterpolationSyntaxError</exception>
        <exception>configparser.MissingSectionHeaderError</exception>
        <exception>configparser.NoOptionError</exception>
        <exception>configparser.NoSectionError</exception>
        <exception>configparser.ParsingError</exception>
        <exception>threading.BrokenBarrierError</exception>
      </errors>
    </module>
    <module importfrom="['email.message:EmailMessage', 'stat:ST_DEV', 'stat:ST_INO', 'stat:ST_MTIME']" imports="['base64', 'copy', 'email.utils', 'http.client', 'logging', 'logging.handlers', 'os', 'pickle', 'queue', 're', 'smtplib', 'socket', 'struct', 'threading', 'time', 'urllib.parse']" name="logging.handlers">
      <class base="logging.FileHandler" init="obj = logging.handlers.BaseRotatingHandler(None,None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType']" name="BaseRotatingHandler">
        <api name="__init__">
          <expr>None</expr>
          <args>['filename:NoneType', 'mode:NoneType', 'encoding:NoneType', 'delay:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="rotation_filename">
          <expr>ret = obj.rotation_filename(default_name)%%['None']</expr>
          <args>['default_name:None']</args>
          <return>['result:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="rotate">
          <expr>obj.rotate(source,dest)%%['None', 'None']</expr>
          <args>['source:None', 'dest:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="logging.handlers.BaseRotatingHandler" init="obj = logging.handlers.RotatingFileHandler(None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="RotatingFileHandler">
        <api name="__init__">
          <expr>None</expr>
          <args>['filename:NoneType', 'mode:NoneType', 'maxBytes:NoneType', 'backupCount:NoneType', 'encoding:NoneType', 'delay:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="shouldRollover">
          <expr>ret = obj.shouldRollover(record)%%['LogRecord']</expr>
          <args>['record:LogRecord']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="logging.handlers.BaseRotatingHandler" init="obj = logging.handlers.TimedRotatingFileHandler(None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="TimedRotatingFileHandler">
        <api name="__init__">
          <expr>None</expr>
          <args>['filename:NoneType', 'when:NoneType', 'interval:NoneType', 'backupCount:NoneType', 'encoding:NoneType', 'delay:NoneType', 'utc:NoneType', 'atTime:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="shouldRollover">
          <expr>ret = obj.shouldRollover(record)%%['LogRecord']</expr>
          <args>['record:LogRecord']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getFilesToDelete">
          <expr>ret = obj.getFilesToDelete()%%[]</expr>
          <args>[]</args>
          <return>['result:list']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="logging.FileHandler" init="obj = logging.handlers.WatchedFileHandler(None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType']" name="WatchedFileHandler">
        <api name="__init__">
          <expr>None</expr>
          <args>['filename:NoneType', 'mode:NoneType', 'encoding:NoneType', 'delay:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="logging.Handler" init="obj = logging.handlers.SocketHandler(None,None)%%['NoneType', 'NoneType']" name="SocketHandler">
        <api name="__init__">
          <expr>None</expr>
          <args>['host:NoneType', 'port:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="logging.handlers.SocketHandler" init="obj = logging.handlers.DatagramHandler(None,None)%%['NoneType', 'NoneType']" name="DatagramHandler">
        <api name="__init__">
          <expr>None</expr>
          <args>['host:NoneType', 'port:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="logging.Handler" init="obj = logging.handlers.SysLogHandler()%%['NoneType', 'NoneType', 'NoneType']" name="SysLogHandler">
        <api name="__init__">
          <expr>None</expr>
          <args>['address:NoneType', 'facility:NoneType', 'socktype:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, 'LOG_USER', None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="encodePriority">
          <expr>ret = obj.encodePriority(facility,priority)%%['int', 'str']</expr>
          <args>['facility:int', 'priority:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="mapPriority">
          <expr>ret = obj.mapPriority(levelName)%%['str']</expr>
          <args>['levelName:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="logging.Handler" init="obj = logging.handlers.SMTPHandler(None,None,None,None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="SMTPHandler">
        <api name="__init__">
          <expr>None</expr>
          <args>['mailhost:NoneType', 'fromaddr:NoneType', 'toaddrs:NoneType', 'subject:NoneType', 'credentials:NoneType', 'secure:NoneType', 'timeout:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="logging.Handler" init="obj = logging.handlers.NTEventLogHandler(None)%%['NoneType', 'NoneType', 'NoneType']" name="NTEventLogHandler">
        <api name="__init__">
          <expr>None</expr>
          <args>['appname:NoneType', 'dllname:NoneType', 'logtype:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="logging.Handler" init="obj = logging.handlers.HTTPHandler(None,None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="HTTPHandler">
        <api name="__init__">
          <expr>None</expr>
          <args>['host:NoneType', 'url:NoneType', 'method:NoneType', 'secure:NoneType', 'credentials:NoneType', 'context:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="mapLogRecord">
          <expr>ret = obj.mapLogRecord(record)%%['LogRecord']</expr>
          <args>['record:LogRecord']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="logging.Handler" init="obj = logging.handlers.BufferingHandler(None)%%['NoneType']" name="BufferingHandler">
        <api name="__init__">
          <expr>None</expr>
          <args>['capacity:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="shouldFlush">
          <expr>ret = obj.shouldFlush(record)%%['LogRecord']</expr>
          <args>['record:LogRecord']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="logging.handlers.BufferingHandler" init="obj = logging.handlers.MemoryHandler(None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType']" name="MemoryHandler">
        <api name="__init__">
          <expr>None</expr>
          <args>['capacity:NoneType', 'flushLevel:NoneType', 'target:NoneType', 'flushOnClose:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="shouldFlush">
          <expr>ret = obj.shouldFlush(record)%%['LogRecord']</expr>
          <args>['record:LogRecord']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setTarget">
          <expr>obj.setTarget(target)%%['None']</expr>
          <args>['target:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="logging.Handler" init="obj = logging.handlers.QueueHandler(None)%%['module']" name="QueueHandler">
        <api name="__init__">
          <expr>None</expr>
          <args>['queue:module']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="prepare">
          <expr>ret = obj.prepare(record)%%['LogRecord']</expr>
          <args>['record:LogRecord']</args>
          <return>['record:LogRecord']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="builtins.object" init="obj = logging.handlers.QueueListener(None)%%['module']" name="QueueListener">
        <api name="__init__">
          <expr>None</expr>
          <args>['queue:module']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['respect_handler_level:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="stop">
          <expr>obj.stop()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>Exception</exception>
        <exception>FileNotFoundError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>copy.Error</exception>
        <exception>http.client.BadStatusLine</exception>
        <exception>http.client.CannotSendHeader</exception>
        <exception>http.client.CannotSendRequest</exception>
        <exception>http.client.HTTPException</exception>
        <exception>http.client.ImproperConnectionState</exception>
        <exception>http.client.IncompleteRead</exception>
        <exception>http.client.InvalidURL</exception>
        <exception>http.client.LineTooLong</exception>
        <exception>http.client.NotConnected</exception>
        <exception>http.client.RemoteDisconnected</exception>
        <exception>http.client.ResponseNotReady</exception>
        <exception>http.client.UnimplementedFileMode</exception>
        <exception>http.client.UnknownProtocol</exception>
        <exception>http.client.UnknownTransferEncoding</exception>
        <exception>pickle.PickleError</exception>
        <exception>pickle.PicklingError</exception>
        <exception>pickle.UnpicklingError</exception>
        <exception>queue.Empty</exception>
        <exception>queue.Full</exception>
        <exception>smtplib.SMTPAuthenticationError</exception>
        <exception>smtplib.SMTPConnectError</exception>
        <exception>smtplib.SMTPDataError</exception>
        <exception>smtplib.SMTPException</exception>
        <exception>smtplib.SMTPHeloError</exception>
        <exception>smtplib.SMTPNotSupportedError</exception>
        <exception>smtplib.SMTPRecipientsRefused</exception>
        <exception>smtplib.SMTPResponseException</exception>
        <exception>smtplib.SMTPSenderRefused</exception>
        <exception>smtplib.SMTPServerDisconnected</exception>
        <exception>threading.BrokenBarrierError</exception>
      </errors>
    </module>
  </library>
  <library name=".">
    <module importfrom="[]" imports="['symbol', 'sys', 'token']" name="symbol"/>
    <module importfrom="[]" imports="['contextvars']" name="contextvars"/>
    <module importfrom="['itertools:repeat']" imports="['argparse', 'calendar', 'datetime', 'locale:_locale', 'sys']" name="calendar">
      <class base="ValueError" init="obj = calendar.IllegalMonthError()%%[]" name="IllegalMonthError"/>
      <class base="ValueError" init="obj = calendar.IllegalWeekdayError()%%[]" name="IllegalWeekdayError"/>
      <class base="builtins.object" init="obj = calendar.Calendar()%%['NoneType']" name="Calendar">
        <api name="__init__">
          <expr>None</expr>
          <args>['firstweekday:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getfirstweekday">
          <expr>ret = obj.getfirstweekday()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setfirstweekday">
          <expr>obj.setfirstweekday(firstweekday)%%['int']</expr>
          <args>['firstweekday:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="iterweekdays">
          <expr>obj.iterweekdays()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="itermonthdates">
          <expr>obj.itermonthdates(year,month)%%['int', 'int']</expr>
          <args>['year:int', 'month:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="itermonthdays">
          <expr>obj.itermonthdays(year,month)%%['int', 'int']</expr>
          <args>['year:int', 'month:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="itermonthdays2">
          <expr>obj.itermonthdays2(year,month)%%['int', 'int']</expr>
          <args>['year:int', 'month:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="itermonthdays3">
          <expr>obj.itermonthdays3(year,month)%%['int', 'int']</expr>
          <args>['year:int', 'month:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="itermonthdays4">
          <expr>obj.itermonthdays4(year,month)%%['int', 'int']</expr>
          <args>['year:int', 'month:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="yeardatescalendar">
          <expr>ret = obj.yeardatescalendar(year,width)%%['int', 'int']</expr>
          <args>['year:int', 'width:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="yeardays2calendar">
          <expr>ret = obj.yeardays2calendar(year,width)%%['None', 'None']</expr>
          <args>['year:None', 'width:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="yeardayscalendar">
          <expr>ret = obj.yeardayscalendar(year,width)%%['int', 'int']</expr>
          <args>['year:int', 'width:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="calendar.Calendar" init="obj = calendar.TextCalendar()%%['NoneType']" name="TextCalendar">
        <api name="prweek">
          <expr>obj.prweek(theweek,width)%%['list', 'int']</expr>
          <args>['theweek:list', 'width:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="formatday">
          <expr>ret = obj.formatday(day,weekday,width)%%['int', 'int', 'int']</expr>
          <args>['day:int', 'weekday:int', 'width:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="formatweek">
          <expr>ret = obj.formatweek(theweek,width)%%['list', 'int']</expr>
          <args>['theweek:list', 'width:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="formatweekday">
          <expr>ret = obj.formatweekday(day,width)%%['int', 'int']</expr>
          <args>['day:int', 'width:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="prmonth">
          <expr>obj.prmonth(theyear,themonth,w,l)%%['int', 'int', 'int', 'int']</expr>
          <args>['theyear:int', 'themonth:int', 'w:int', 'l:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="formatmonth">
          <expr>ret = obj.formatmonth(theyear,themonth,w,l)%%['int', 'int', 'int', 'int']</expr>
          <args>['theyear:int', 'themonth:int', 'w:int', 'l:int']</args>
          <return>['s:str']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="formatyear">
          <expr>ret = obj.formatyear(theyear,w,l,c,m)%%['int', 'int', 'int', 'int', 'int']</expr>
          <args>['theyear:int', 'w:int', 'l:int', 'c:int', 'm:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pryear">
          <expr>obj.pryear(theyear,w,l,c,m)%%['int', 'int', 'int', 'int', 'int']</expr>
          <args>['theyear:int', 'w:int', 'l:int', 'c:int', 'm:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="calendar.Calendar" init="obj = calendar.HTMLCalendar()%%['NoneType']" name="HTMLCalendar">
        <api name="formatday">
          <expr>ret = obj.formatday(day,weekday)%%['int', 'int']</expr>
          <args>['day:int', 'weekday:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="formatweek">
          <expr>ret = obj.formatweek(theweek)%%['list']</expr>
          <args>['theweek:list']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="formatweekday">
          <expr>ret = obj.formatweekday(day)%%['int']</expr>
          <args>['day:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="formatmonth">
          <expr>ret = obj.formatmonth(theyear,themonth,withyear)%%['int', 'int', 'bool']</expr>
          <args>['theyear:int', 'themonth:int', 'withyear:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="formatyear">
          <expr>ret = obj.formatyear(theyear,width)%%['int', 'int']</expr>
          <args>['theyear:int', 'width:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="formatyearpage">
          <expr>ret = obj.formatyearpage(theyear,width,css,encoding)%%['int', 'int', 'str', 'str']</expr>
          <args>['theyear:int', 'width:int', 'css:str', 'encoding:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = calendar.different_locale(None)%%['NoneType']" name="different_locale">
        <api name="__init__">
          <expr>None</expr>
          <args>['locale:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="calendar.TextCalendar" init="obj = calendar.LocaleTextCalendar()%%['NoneType', 'NoneType']" name="LocaleTextCalendar">
        <api name="__init__">
          <expr>None</expr>
          <args>['firstweekday:NoneType', 'locale:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="formatweekday">
          <expr>ret = obj.formatweekday(day,width)%%['int', 'int']</expr>
          <args>['day:int', 'width:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="calendar.HTMLCalendar" init="obj = calendar.LocaleHTMLCalendar()%%['NoneType', 'NoneType']" name="LocaleHTMLCalendar">
        <api name="__init__">
          <expr>None</expr>
          <args>['firstweekday:NoneType', 'locale:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="formatweekday">
          <expr>ret = obj.formatweekday(day)%%['int']</expr>
          <args>['day:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="isleap">
        <expr>ret = calendar.isleap(year)%%['int']</expr>
        <args>['year:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="leapdays">
        <expr>ret = calendar.leapdays(y1,y2)%%['int', 'int']</expr>
        <args>['y1:int', 'y2:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="weekday">
        <expr>ret = calendar.weekday(year,month,day)%%['int', 'int', 'int']</expr>
        <args>['year:int', 'month:int', 'day:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="monthrange">
        <expr>calendar.monthrange(year,month)%%['int', 'int']</expr>
        <args>['year:int', 'month:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="monthlen">
        <expr>ret = calendar.monthlen(year,month)%%['int', 'int']</expr>
        <args>['year:int', 'month:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="prevmonth">
        <expr>calendar.prevmonth(year,month)%%['int', 'int']</expr>
        <args>['year:int', 'month:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="nextmonth">
        <expr>calendar.nextmonth(year,month)%%['int', 'int']</expr>
        <args>['year:int', 'month:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="setfirstweekday">
        <expr>calendar.setfirstweekday(firstweekday)%%['int']</expr>
        <args>['firstweekday:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="format">
        <expr>calendar.format(cols,colwidth,spacing)%%['list', 'int', 'int']</expr>
        <args>['cols:list', 'colwidth:int', 'spacing:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['_colwidth', '_spacing']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="formatstring">
        <expr>ret = calendar.formatstring(cols,colwidth,spacing)%%['list', 'int', 'int']</expr>
        <args>['cols:list', 'colwidth:int', 'spacing:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['_colwidth', '_spacing']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="timegm">
        <expr>ret = calendar.timegm(tuple)%%['tuple']</expr>
        <args>['tuple:tuple']</args>
        <return>['seconds:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>calendar.main(args)%%['None']</expr>
        <args>['args:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>argparse.ArgumentError</exception>
        <exception>argparse.ArgumentTypeError</exception>
        <exception>calendar.IllegalMonthError</exception>
        <exception>calendar.IllegalWeekdayError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['builtins', 'os', 'site', 'sitecustomize', 'sys', 'textwrap', 'usercustomize']" name="site">
      <api name="makepath">
        <expr>site.makepath()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="abs_paths">
        <expr>site.abs_paths()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="removeduppaths">
        <expr>ret = site.removeduppaths()%%[]</expr>
        <args>[]</args>
        <return>['known_paths:set']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="addpackage">
        <expr>ret = site.addpackage(sitedir,name,known_paths)%%['str', 'str', 'set']</expr>
        <args>['sitedir:str', 'name:str', 'known_paths:set']</args>
        <return>['known_paths:set']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="addsitedir">
        <expr>ret = site.addsitedir(sitedir,known_paths)%%['str', 'set']</expr>
        <args>['sitedir:str', 'known_paths:set']</args>
        <return>['known_paths:set']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="check_enableusersite">
        <expr>ret = site.check_enableusersite()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getuserbase">
        <expr>ret = site.getuserbase()%%[]</expr>
        <args>[]</args>
        <return>['USER_BASE:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getusersitepackages">
        <expr>ret = site.getusersitepackages()%%[]</expr>
        <args>[]</args>
        <return>['USER_SITE:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="addusersitepackages">
        <expr>ret = site.addusersitepackages(known_paths)%%['set']</expr>
        <args>['known_paths:set']</args>
        <return>['known_paths:set']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getsitepackages">
        <expr>ret = site.getsitepackages(prefixes)%%['NoneType']</expr>
        <args>['prefixes:NoneType']</args>
        <return>['sitepackages:list']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="addsitepackages">
        <expr>ret = site.addsitepackages(known_paths,prefixes)%%['None', 'None']</expr>
        <args>['known_paths:None', 'prefixes:None']</args>
        <return>['known_paths:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="setquit">
        <expr>site.setquit()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="setcopyright">
        <expr>site.setcopyright()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="sethelper">
        <expr>site.sethelper()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="enablerlcompleter">
        <expr>site.enablerlcompleter()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="venv">
        <expr>ret = site.venv(known_paths)%%['None']</expr>
        <args>['known_paths:None']</args>
        <return>['known_paths:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="execsitecustomize">
        <expr>site.execsitecustomize()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="execusercustomize">
        <expr>site.execusercustomize()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>site.main()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>Exception</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['fnmatch', 'functools', 'os', 'posixpath', 're']" name="fnmatch">
      <api name="fnmatch">
        <expr>ret = fnmatch.fnmatch(name,pat)%%['str', 'str']</expr>
        <args>['name:str', 'pat:str']</args>
        <return>['fnmatchcase:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="filter">
        <expr>ret = fnmatch.filter(names,pat)%%['generator', 'str']</expr>
        <args>['names:generator', 'pat:str']</args>
        <return>['result:list']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="fnmatchcase">
        <expr>ret = fnmatch.fnmatchcase(name,pat)%%['str', 'str']</expr>
        <args>['name:str', 'pat:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="translate">
        <expr>ret = fnmatch.translate(pat)%%['str']</expr>
        <args>['pat:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['time:monotonic']" imports="['re', 'selectors', 'socket', 'sys', 'telnetlib']" name="telnetlib">
      <class init="obj = telnetlib.Telnet()%%['NoneType', 'NoneType', 'NoneType']" name="Telnet">
        <api name="__init__">
          <expr>None</expr>
          <args>['host:NoneType', 'port:NoneType', 'timeout:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="open">
          <expr>obj.open(host,port,timeout)%%['str', 'int', 'object']</expr>
          <args>['host:str', 'port:int', 'timeout:object']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_debuglevel">
          <expr>obj.set_debuglevel(debuglevel)%%['None']</expr>
          <args>['debuglevel:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_socket">
          <expr>ret = obj.get_socket()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read_until">
          <expr>ret = obj.read_until(match,timeout)%%['None', 'None']</expr>
          <args>['match:None', 'timeout:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read_all">
          <expr>ret = obj.read_all()%%[]</expr>
          <args>[]</args>
          <return>['buf:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read_some">
          <expr>ret = obj.read_some()%%[]</expr>
          <args>[]</args>
          <return>['buf:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read_very_eager">
          <expr>ret = obj.read_very_eager()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read_lazy">
          <expr>ret = obj.read_lazy()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read_sb_data">
          <expr>ret = obj.read_sb_data()%%[]</expr>
          <args>[]</args>
          <return>['buf:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_option_negotiation_callback">
          <expr>obj.set_option_negotiation_callback(callback)%%['None']</expr>
          <args>['callback:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sock_avail">
          <expr>ret = obj.sock_avail()%%[]</expr>
          <args>[]</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="interact">
          <expr>obj.interact()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="listener">
          <expr>obj.listener()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="expect">
          <expr>obj.expect(list,timeout)%%['None', 'None']</expr>
          <args>['list:None', 'timeout:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>EOFError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['functools', 'ipaddress']" name="ipaddress">
      <class base="ValueError" init="obj = ipaddress.AddressValueError()%%[]" name="AddressValueError"/>
      <class base="ValueError" init="obj = ipaddress.NetmaskValueError()%%[]" name="NetmaskValueError"/>
      <class base="ipaddress._BaseV4" init="obj = ipaddress.IPv4Address(None)%%['NoneType']" name="IPv4Address">
        <api name="__init__">
          <expr>None</expr>
          <args>['address:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="packed">
          <expr>ret = obj.packed()%%[]</expr>
          <args>[]</args>
          <return>['v4_int_to_packed:function']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_reserved">
          <expr>ret = obj.is_reserved()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_private">
          <expr>ret = obj.is_private()%%[]</expr>
          <args>[]</args>
          <return>['any:builtin_function_or_method']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_global">
          <expr>ret = obj.is_global()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_multicast">
          <expr>ret = obj.is_multicast()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_unspecified">
          <expr>ret = obj.is_unspecified()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_loopback">
          <expr>ret = obj.is_loopback()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_link_local">
          <expr>ret = obj.is_link_local()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="ipaddress.IPv4Address" init="obj = ipaddress.IPv4Interface(None)%%['NoneType']" name="IPv4Interface">
        <api name="__init__">
          <expr>None</expr>
          <args>['address:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="with_prefixlen">
          <expr>ret = obj.with_prefixlen()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="with_netmask">
          <expr>ret = obj.with_netmask()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="with_hostmask">
          <expr>ret = obj.with_hostmask()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="ipaddress._BaseV4" init="obj = ipaddress.IPv4Network(None)%%['NoneType', 'NoneType']" name="IPv4Network">
        <api name="__init__">
          <expr>None</expr>
          <args>['address:NoneType', 'strict:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_global">
          <expr>ret = obj.is_global()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="ipaddress._BaseV6" init="obj = ipaddress.IPv6Address(None)%%['NoneType']" name="IPv6Address">
        <api name="__init__">
          <expr>None</expr>
          <args>['address:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="packed">
          <expr>ret = obj.packed()%%[]</expr>
          <args>[]</args>
          <return>['v6_int_to_packed:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_multicast">
          <expr>ret = obj.is_multicast()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_reserved">
          <expr>ret = obj.is_reserved()%%[]</expr>
          <args>[]</args>
          <return>['any:builtin_function_or_method']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_link_local">
          <expr>ret = obj.is_link_local()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_site_local">
          <expr>ret = obj.is_site_local()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_private">
          <expr>ret = obj.is_private()%%[]</expr>
          <args>[]</args>
          <return>['any:builtin_function_or_method']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_global">
          <expr>ret = obj.is_global()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_unspecified">
          <expr>ret = obj.is_unspecified()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_loopback">
          <expr>ret = obj.is_loopback()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ipv4_mapped">
          <expr>ret = obj.ipv4_mapped()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType', 'IPv4Address:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="teredo">
          <expr>ret = obj.teredo()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sixtofour">
          <expr>ret = obj.sixtofour()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType', 'IPv4Address:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="ipaddress.IPv6Address" init="obj = ipaddress.IPv6Interface(None)%%['NoneType']" name="IPv6Interface">
        <api name="__init__">
          <expr>None</expr>
          <args>['address:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="with_prefixlen">
          <expr>ret = obj.with_prefixlen()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="with_netmask">
          <expr>ret = obj.with_netmask()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="with_hostmask">
          <expr>ret = obj.with_hostmask()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_unspecified">
          <expr>ret = obj.is_unspecified()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_loopback">
          <expr>ret = obj.is_loopback()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="ipaddress._BaseV6" init="obj = ipaddress.IPv6Network(None)%%['NoneType', 'NoneType']" name="IPv6Network">
        <api name="__init__">
          <expr>None</expr>
          <args>['address:NoneType', 'strict:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="hosts">
          <expr>obj.hosts()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_site_local">
          <expr>ret = obj.is_site_local()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="ip_address">
        <expr>ret = ipaddress.ip_address(address)%%['str']</expr>
        <args>['address:str']</args>
        <return>['IPv4Address:type', 'IPv6Address:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ip_network">
        <expr>ret = ipaddress.ip_network(address,strict)%%['str', 'bool']</expr>
        <args>['address:str', 'strict:bool']</args>
        <return>['IPv4Network:type', 'IPv6Network:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ip_interface">
        <expr>ret = ipaddress.ip_interface(address)%%['str']</expr>
        <args>['address:str']</args>
        <return>['IPv4Interface:type', 'IPv6Interface:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="v4_int_to_packed">
        <expr>ret = ipaddress.v4_int_to_packed(address)%%['int']</expr>
        <args>['address:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="v6_int_to_packed">
        <expr>ret = ipaddress.v6_int_to_packed(address)%%['int']</expr>
        <args>['address:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="summarize_address_range">
        <expr>ipaddress.summarize_address_range(first,last)%%['IPv4Address', 'IPv4Address']</expr>
        <args>['first:IPv4Address', 'last:IPv4Address']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="collapse_addresses">
        <expr>ret = ipaddress.collapse_addresses(addresses)%%['list']</expr>
        <args>['addresses:list']</args>
        <return>['_collapse_addresses_internal:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_mixed_type_key">
        <expr>ret = ipaddress.get_mixed_type_key(obj)%%['IPv4Address']</expr>
        <args>['obj:IPv4Address']</args>
        <return>['ret:NoneType', 'NotImplemented:NotImplementedType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AssertionError</exception>
        <exception>AttributeError</exception>
        <exception>IndexError</exception>
        <exception>NotImplementedError</exception>
        <exception>OSError</exception>
        <exception>OverflowError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>ipaddress.AddressValueError</exception>
        <exception>ipaddress.NetmaskValueError</exception>
      </errors>
    </module>
    <module importfrom="['builtins:str']" imports="['encodings', 'encodings.aliases', 'functools', 'locale', 'os', 're', 'sys', 'warnings']" name="locale">
      <api name="localeconv">
        <expr>ret = locale.localeconv()%%[]</expr>
        <args>[]</args>
        <return>['d:dict']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="format_string">
        <expr>ret = locale.format_string(f,val,grouping,monetary)%%['str', 'int', 'int', 'bool']</expr>
        <args>['f:str', 'val:int', 'grouping:int', 'monetary:bool']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="format">
        <expr>ret = locale.format(percent,value,grouping,monetary)%%['str', 'float', 'bool', 'bool']</expr>
        <args>['percent:str', 'value:float', 'grouping:bool', 'monetary:bool']</args>
        <return>['_format:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="currency">
        <expr>ret = locale.currency(val,symbol,grouping,international)%%['int', 'bool', 'bool', 'bool']</expr>
        <args>['val:int', 'symbol:bool', 'grouping:bool', 'international:bool']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="str">
        <expr>ret = locale.str(val)%%['None']</expr>
        <args>['val:None']</args>
        <return>['_format:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="delocalize">
        <expr>ret = locale.delocalize(string)%%['None']</expr>
        <args>['string:None']</args>
        <return>['ret:string']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="atof">
        <expr>ret = locale.atof(string,func)%%['None', 'None']</expr>
        <args>['string:None', 'func:None']</args>
        <return>['func:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['float']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="atoi">
        <expr>ret = locale.atoi(string)%%['None']</expr>
        <args>['string:None']</args>
        <return>['ret:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="normalize">
        <expr>ret = locale.normalize(localename)%%['str']</expr>
        <args>['localename:str']</args>
        <return>['ret:NoneType', 'localename:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getdefaultlocale">
        <expr>ret = locale.getdefaultlocale(envvars)%%['tuple']</expr>
        <args>['envvars:tuple']</args>
        <return>['_parse_localename:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getlocale">
        <expr>ret = locale.getlocale(category)%%['int']</expr>
        <args>['category:int']</args>
        <return>['_parse_localename:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['LC_CTYPE']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="setlocale">
        <expr>ret = locale.setlocale(category,locale)%%['int', 'str']</expr>
        <args>['category:int', 'locale:str']</args>
        <return>['_setlocale:builtin_function_or_method']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="resetlocale">
        <expr>locale.resetlocale(category)%%['None']</expr>
        <args>['category:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['LC_ALL']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getpreferredencoding">
        <expr>ret = locale.getpreferredencoding(do_setlocale)%%['bool']</expr>
        <args>['do_setlocale:bool']</args>
        <return>['ret:NoneType', 'result:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>Error</exception>
        <exception>ImportError</exception>
        <exception>NameError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['abc', 'io']" name="io">
      <class base="_io._IOBase" init="obj = io.IOBase()%%[]" name="IOBase"/>
      <class base="_io._RawIOBase" init="obj = io.RawIOBase()%%[]" name="RawIOBase"/>
      <class base="_io._BufferedIOBase" init="obj = io.BufferedIOBase()%%[]" name="BufferedIOBase"/>
      <class base="_io._TextIOBase" init="obj = io.TextIOBase()%%[]" name="TextIOBase"/>
      <errors>
        <exception>ImportError</exception>
      </errors>
    </module>
    <module importfrom="['pickle:decode_long', 'struct:unpack']" imports="['argparse', 'codecs', 'doctest', 'io', 'pickle', 'pickletools', 're', 'sys']" name="pickletools">
      <class base="builtins.object" init="obj = pickletools.ArgumentDescriptor(None,None,None,None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType']" name="ArgumentDescriptor">
        <api name="__init__">
          <expr>None</expr>
          <args>['name:NoneType', 'n:NoneType', 'reader:NoneType', 'doc:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="builtins.object" init="obj = pickletools.StackObject(None,None,None)%%['NoneType', 'NoneType', 'NoneType']" name="StackObject">
        <api name="__init__">
          <expr>None</expr>
          <args>['name:NoneType', 'obtype:NoneType', 'doc:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="builtins.object" init="obj = pickletools.OpcodeInfo(None,None,None,None,None,None,None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="OpcodeInfo">
        <api name="__init__">
          <expr>None</expr>
          <args>['name:NoneType', 'code:NoneType', 'arg:NoneType', 'stack_before:NoneType', 'stack_after:NoneType', 'proto:NoneType', 'doc:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="read_uint1">
        <expr>ret = pickletools.read_uint1(f)%%['BytesIO']</expr>
        <args>['f:BytesIO']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_uint2">
        <expr>ret = pickletools.read_uint2(f)%%['BytesIO']</expr>
        <args>['f:BytesIO']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_int4">
        <expr>ret = pickletools.read_int4(f)%%['BytesIO']</expr>
        <args>['f:BytesIO']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_uint4">
        <expr>ret = pickletools.read_uint4(f)%%['BytesIO']</expr>
        <args>['f:BytesIO']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_uint8">
        <expr>ret = pickletools.read_uint8(f)%%['BytesIO']</expr>
        <args>['f:BytesIO']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_stringnl">
        <expr>ret = pickletools.read_stringnl(f,decode,stripquotes)%%['BytesIO', 'bool', 'bool']</expr>
        <args>['f:BytesIO', 'decode:bool', 'stripquotes:bool']</args>
        <return>['data:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_stringnl_noescape">
        <expr>ret = pickletools.read_stringnl_noescape(f)%%['BytesIO']</expr>
        <args>['f:BytesIO']</args>
        <return>['read_stringnl:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_stringnl_noescape_pair">
        <expr>ret = pickletools.read_stringnl_noescape_pair(f)%%['BytesIO']</expr>
        <args>['f:BytesIO']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_string1">
        <expr>ret = pickletools.read_string1(f)%%['BytesIO']</expr>
        <args>['f:BytesIO']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_string4">
        <expr>ret = pickletools.read_string4(f)%%['BytesIO']</expr>
        <args>['f:BytesIO']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_bytes1">
        <expr>ret = pickletools.read_bytes1(f)%%['BytesIO']</expr>
        <args>['f:BytesIO']</args>
        <return>['data:bytes']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_bytes4">
        <expr>ret = pickletools.read_bytes4(f)%%['BytesIO']</expr>
        <args>['f:BytesIO']</args>
        <return>['data:bytes']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_bytes8">
        <expr>ret = pickletools.read_bytes8(f)%%['BytesIO']</expr>
        <args>['f:BytesIO']</args>
        <return>['data:bytes']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_unicodestringnl">
        <expr>ret = pickletools.read_unicodestringnl(f)%%['BytesIO']</expr>
        <args>['f:BytesIO']</args>
        <return>['str:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_unicodestring1">
        <expr>ret = pickletools.read_unicodestring1(f)%%['BytesIO']</expr>
        <args>['f:BytesIO']</args>
        <return>['str:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_unicodestring4">
        <expr>ret = pickletools.read_unicodestring4(f)%%['BytesIO']</expr>
        <args>['f:BytesIO']</args>
        <return>['str:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_unicodestring8">
        <expr>ret = pickletools.read_unicodestring8(f)%%['BytesIO']</expr>
        <args>['f:BytesIO']</args>
        <return>['str:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_decimalnl_short">
        <expr>ret = pickletools.read_decimalnl_short(f)%%['BytesIO']</expr>
        <args>['f:BytesIO']</args>
        <return>['ret:NoneType', 'ret:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_decimalnl_long">
        <expr>ret = pickletools.read_decimalnl_long(f)%%['BytesIO']</expr>
        <args>['f:BytesIO']</args>
        <return>['ret:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_floatnl">
        <expr>ret = pickletools.read_floatnl(f)%%['BytesIO']</expr>
        <args>['f:BytesIO']</args>
        <return>['ret:float']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_float8">
        <expr>ret = pickletools.read_float8(f)%%['BytesIO']</expr>
        <args>['f:BytesIO']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_long1">
        <expr>ret = pickletools.read_long1(f)%%['BytesIO']</expr>
        <args>['f:BytesIO']</args>
        <return>['decode_long:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_long4">
        <expr>ret = pickletools.read_long4(f)%%['BytesIO']</expr>
        <args>['f:BytesIO']</args>
        <return>['decode_long:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="genops">
        <expr>ret = pickletools.genops(pickle)%%['bytes']</expr>
        <args>['pickle:bytes']</args>
        <return>['_genops:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="optimize">
        <expr>ret = pickletools.optimize(p)%%['bytes']</expr>
        <args>['p:bytes']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dis">
        <expr>pickletools.dis(pickle,out,memo,indentlevel,annotate)%%['BytesIO', 'NoneType', 'dict', 'int', 'int']</expr>
        <args>['pickle:BytesIO', 'out:NoneType', 'memo:dict', 'indentlevel:int', 'annotate:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>argparse.ArgumentError</exception>
        <exception>argparse.ArgumentTypeError</exception>
        <exception>pickle.PickleError</exception>
        <exception>pickle.PicklingError</exception>
        <exception>pickle.UnpicklingError</exception>
      </errors>
    </module>
    <module importfrom="['email.base64mime:body_encode']" imports="['base64', 'copy', 'datetime', 'email.generator', 'email.message', 'email.utils', 'hmac', 'io', 're', 'smtplib', 'socket', 'ssl', 'sys', 'warnings']" name="smtplib">
      <class base="OSError" init="obj = smtplib.SMTPException()%%[]" name="SMTPException"/>
      <class base="SMTPException" init="obj = smtplib.SMTPNotSupportedError()%%[]" name="SMTPNotSupportedError"/>
      <class base="SMTPException" init="obj = smtplib.SMTPServerDisconnected()%%[]" name="SMTPServerDisconnected"/>
      <class base="SMTPException" init="obj = smtplib.SMTPResponseException()%%[]" name="SMTPResponseException"/>
      <class base="SMTPResponseException" init="obj = smtplib.SMTPSenderRefused()%%[]" name="SMTPSenderRefused"/>
      <class base="SMTPException" init="obj = smtplib.SMTPRecipientsRefused()%%[]" name="SMTPRecipientsRefused"/>
      <class base="SMTPResponseException" init="obj = smtplib.SMTPDataError()%%[]" name="SMTPDataError"/>
      <class base="SMTPResponseException" init="obj = smtplib.SMTPConnectError()%%[]" name="SMTPConnectError"/>
      <class base="SMTPResponseException" init="obj = smtplib.SMTPHeloError()%%[]" name="SMTPHeloError"/>
      <class base="SMTPResponseException" init="obj = smtplib.SMTPAuthenticationError()%%[]" name="SMTPAuthenticationError"/>
      <class init="obj = smtplib.SMTP()%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="SMTP">
        <api name="__init__">
          <expr>None</expr>
          <args>['host:NoneType', 'port:NoneType', 'local_hostname:NoneType', 'timeout:NoneType', 'source_address:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_debuglevel">
          <expr>obj.set_debuglevel(debuglevel)%%['int']</expr>
          <args>['debuglevel:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="connect">
          <expr>obj.connect(host,port,source_address)%%['str', 'int', 'NoneType']</expr>
          <args>['host:str', 'port:int', 'source_address:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ehlo">
          <expr>obj.ehlo(name)%%['str']</expr>
          <args>['name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_extn">
          <expr>ret = obj.has_extn(opt)%%['str']</expr>
          <args>['opt:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="help">
          <expr>ret = obj.help(args)%%['str']</expr>
          <args>['args:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="noop">
          <expr>ret = obj.noop()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="verify">
          <expr>ret = obj.verify(address)%%['str']</expr>
          <args>['address:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="expn">
          <expr>ret = obj.expn(address)%%['str']</expr>
          <args>['address:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="auth_cram_md5">
          <expr>ret = obj.auth_cram_md5(challenge)%%['bytes']</expr>
          <args>['challenge:bytes']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="auth_plain">
          <expr>ret = obj.auth_plain(challenge)%%['NoneType']</expr>
          <args>['challenge:NoneType']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="auth_login">
          <expr>ret = obj.auth_login(challenge)%%['bytes']</expr>
          <args>['challenge:bytes']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="login">
          <expr>obj.login(user,password)%%['str', 'str']</expr>
          <args>['user:str', 'password:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['initial_response_ok:bool']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="starttls">
          <expr>obj.starttls(keyfile,certfile,context)%%['NoneType', 'NoneType', 'SSLContext']</expr>
          <args>['keyfile:NoneType', 'certfile:NoneType', 'context:SSLContext']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="send_message">
          <expr>ret = obj.send_message(msg,from_addr,to_addrs,mail_options,rcpt_options)%%['EmailMessage', 'str', 'str', 'tuple', 'tuple']</expr>
          <args>['msg:EmailMessage', 'from_addr:str', 'to_addrs:str', 'mail_options:tuple', 'rcpt_options:tuple']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="quit">
          <expr>ret = obj.quit()%%[]</expr>
          <args>[]</args>
          <return>['res:tuple']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="smtplib.SMTP" init="obj = smtplib.SMTP_SSL()%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="SMTP_SSL">
        <api name="__init__">
          <expr>None</expr>
          <args>['host:NoneType', 'port:NoneType', 'local_hostname:NoneType', 'keyfile:NoneType', 'certfile:NoneType', 'timeout:NoneType', 'source_address:NoneType', 'context:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="smtplib.SMTP" init="obj = smtplib.LMTP()%%['NoneType', 'NoneType', 'NoneType', 'NoneType']" name="LMTP">
        <api name="__init__">
          <expr>None</expr>
          <args>['host:NoneType', 'port:NoneType', 'local_hostname:NoneType', 'source_address:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, 'LMTP_PORT', None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="quoteaddr">
        <expr>ret = smtplib.quoteaddr(addrstring)%%['str']</expr>
        <args>['addrstring:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="quotedata">
        <expr>ret = smtplib.quotedata(data)%%['str']</expr>
        <args>['data:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>RuntimeError</exception>
        <exception>TypeError</exception>
        <exception>UnicodeEncodeError</exception>
        <exception>ValueError</exception>
        <exception>copy.Error</exception>
        <exception>smtplib.SMTPAuthenticationError</exception>
        <exception>smtplib.SMTPConnectError</exception>
        <exception>smtplib.SMTPDataError</exception>
        <exception>smtplib.SMTPException</exception>
        <exception>smtplib.SMTPHeloError</exception>
        <exception>smtplib.SMTPNotSupportedError</exception>
        <exception>smtplib.SMTPRecipientsRefused</exception>
        <exception>smtplib.SMTPResponseException</exception>
        <exception>smtplib.SMTPSenderRefused</exception>
        <exception>smtplib.SMTPServerDisconnected</exception>
      </errors>
    </module>
    <module importfrom="['optparse:OptionParser']" imports="['cProfile', 'marshal', 'os', 'profile:_pyprofile', 'pstats', 'runpy', 'sys']" name="cProfile">
      <class base="_lsprof.Profiler" init="obj = cProfile.Profile()%%[]" name="Profile">
        <api name="dump_stats">
          <expr>obj.dump_stats(file)%%['str']</expr>
          <args>['file:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="runcall">
          <expr>ret = obj.runcall()%%[]</expr>
          <args>[]</args>
          <return>['func:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="run">
        <expr>ret = cProfile.run(statement,filename,sort)%%['str', 'str', 'int']</expr>
        <args>['statement:str', 'filename:str', 'sort:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="runctx">
        <expr>ret = cProfile.runctx(statement,globals,locals,filename,sort)%%['str', 'dict', 'dict', 'str', 'int']</expr>
        <args>['statement:str', 'globals:dict', 'locals:dict', 'filename:str', 'sort:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="label">
        <expr>cProfile.label(code)%%['str']</expr>
        <args>['code:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>ret = cProfile.main()%%[]</expr>
        <args>[]</args>
        <return>['parser:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['base64', 'binascii', 'getopt', 're', 'struct', 'sys', 'warnings']" name="base64">
      <api name="b64encode">
        <expr>ret = base64.b64encode(s,altchars)%%['bytes', 'bytes']</expr>
        <args>['s:bytes', 'altchars:bytes']</args>
        <return>['ret:NoneType', 'encoded:bytes']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="b64decode">
        <expr>ret = base64.b64decode(s,altchars,validate)%%['bytes', 'bytes', 'bool']</expr>
        <args>['s:bytes', 'altchars:bytes', 'validate:bool']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="standard_b64encode">
        <expr>ret = base64.standard_b64encode(s)%%['bytes']</expr>
        <args>['s:bytes']</args>
        <return>['b64encode:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="standard_b64decode">
        <expr>ret = base64.standard_b64decode(s)%%['bytes']</expr>
        <args>['s:bytes']</args>
        <return>['b64decode:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="urlsafe_b64encode">
        <expr>ret = base64.urlsafe_b64encode(s)%%['bytes']</expr>
        <args>['s:bytes']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="urlsafe_b64decode">
        <expr>ret = base64.urlsafe_b64decode(s)%%['bytes']</expr>
        <args>['s:bytes']</args>
        <return>['b64decode:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="b32encode">
        <expr>ret = base64.b32encode(s)%%['bytes']</expr>
        <args>['s:bytes']</args>
        <return>['bytes:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="b32decode">
        <expr>ret = base64.b32decode(s,casefold,map01)%%['bytes', 'bool', 'bytes']</expr>
        <args>['s:bytes', 'casefold:bool', 'map01:bytes']</args>
        <return>['bytes:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="b16encode">
        <expr>ret = base64.b16encode(s)%%['bytes']</expr>
        <args>['s:bytes']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="b16decode">
        <expr>ret = base64.b16decode(s,casefold)%%['bytes', 'bool']</expr>
        <args>['s:bytes', 'casefold:bool']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="a85encode">
        <expr>ret = base64.a85encode(b)%%['bytes']</expr>
        <args>['b:bytes']</args>
        <return>['result:bytes']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['foldspaces:bool', 'wrapcol:int', 'pad:bool', 'adobe:bool']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None, None, None, None]</kwodefa>
      </api>
      <api name="a85decode">
        <expr>ret = base64.a85decode(b)%%['bytes']</expr>
        <args>['b:bytes']</args>
        <return>['result:bytes']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['foldspaces:bool', 'adobe:bool', 'ignorechars:bytes']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None, None, None]</kwodefa>
      </api>
      <api name="b85encode">
        <expr>ret = base64.b85encode(b,pad)%%['bytes', 'bool']</expr>
        <args>['b:bytes', 'pad:bool']</args>
        <return>['_85encode:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="b85decode">
        <expr>ret = base64.b85decode(b)%%['bytes']</expr>
        <args>['b:bytes']</args>
        <return>['result:bytes']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="encode">
        <expr>base64.encode(input,output)%%['StringIO', 'BytesIO']</expr>
        <args>['input:StringIO', 'output:BytesIO']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="decode">
        <expr>base64.decode(input,output)%%['BytesIO', 'BytesIO']</expr>
        <args>['input:BytesIO', 'output:BytesIO']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="encodebytes">
        <expr>ret = base64.encodebytes(s)%%['bytes']</expr>
        <args>['s:bytes']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="encodestring">
        <expr>ret = base64.encodestring(s)%%['bytes']</expr>
        <args>['s:bytes']</args>
        <return>['encodebytes:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="decodebytes">
        <expr>ret = base64.decodebytes(s)%%['bytes']</expr>
        <args>['s:bytes']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="decodestring">
        <expr>ret = base64.decodestring(s)%%['bytes']</expr>
        <args>['s:bytes']</args>
        <return>['decodebytes:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>base64.main()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>UnicodeEncodeError</exception>
        <exception>ValueError</exception>
        <exception>binascii.Error</exception>
        <exception>getopt.GetoptError</exception>
        <exception>getopt.error</exception>
        <exception>struct.error</exception>
      </errors>
    </module>
    <module importfrom="['pkgutil:get_importer', 'pkgutil:read_code', 'warnings:warn']" imports="['importlib.machinery', 'importlib.util', 'runpy', 'sys', 'types']" name="runpy">
      <api name="run_module">
        <expr>ret = runpy.run_module(mod_name,init_globals,run_name,alter_sys)%%['None', 'None', 'None', 'None']</expr>
        <args>['mod_name:None', 'init_globals:None', 'run_name:None', 'alter_sys:None']</args>
        <return>['_run_module_code:None', '_run_code:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="run_path">
        <expr>ret = runpy.run_path(path_name,init_globals,run_name)%%['None', 'None', 'None']</expr>
        <args>['path_name:None', 'init_globals:None', 'run_name:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>RuntimeError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['os:PathLike']" imports="['imghdr']" name="imghdr">
      <api name="what">
        <expr>ret = imghdr.what(file,h)%%['str', 'bytes']</expr>
        <args>['file:str', 'h:bytes']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['argparse', 'binascii', 'bz2', 'importlib.util', 'io', 'lzma', 'os', 'shutil', 'stat', 'struct', 'sys', 'threading', 'time', 'warnings', 'zipfile', 'zlib']" name="zipfile">
      <class base="Exception" init="obj = zipfile.BadZipFile()%%[]" name="BadZipFile"/>
      <class base="Exception" init="obj = zipfile.LargeZipFile()%%[]" name="LargeZipFile"/>
      <class base="builtins.object" init="obj = zipfile.ZipInfo()%%['NoneType', 'NoneType']" name="ZipInfo">
        <api name="__init__">
          <expr>None</expr>
          <args>['filename:NoneType', 'date_time:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="FileHeader">
          <expr>ret = obj.FileHeader(zip64)%%['bool']</expr>
          <args>['zip64:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="from_file">
          <expr>ret = obj.from_file(cls,filename,arcname)%%['None', 'None', 'None']</expr>
          <args>['cls:None', 'filename:None', 'arcname:None']</args>
          <return>['zinfo:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = zipfile.LZMACompressor()%%[]" name="LZMACompressor">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = zipfile.LZMADecompressor()%%[]" name="LZMADecompressor">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="io.BufferedIOBase" init="obj = zipfile.ZipExtFile(None,None,None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="ZipExtFile">
        <api name="__init__">
          <expr>None</expr>
          <args>['fileobj:NoneType', 'mode:NoneType', 'zipinfo:NoneType', 'pwd:NoneType', 'close_fileobj:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="peek">
          <expr>ret = obj.peek(n)%%['int']</expr>
          <args>['n:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="readable">
          <expr>ret = obj.readable()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read1">
          <expr>ret = obj.read1(n)%%['int']</expr>
          <args>['n:int']</args>
          <return>['buf:bytes']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="seekable">
          <expr>ret = obj.seekable()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = zipfile.ZipFile(None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="ZipFile">
        <api name="__init__">
          <expr>None</expr>
          <args>['file:NoneType', 'mode:NoneType', 'compression:NoneType', 'allowZip64:NoneType', 'compresslevel:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, 'ZIP_STORED', None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="infolist">
          <expr>ret = obj.infolist()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="printdir">
          <expr>obj.printdir(file)%%['StringIO']</expr>
          <args>['file:StringIO']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setpassword">
          <expr>obj.setpassword(pwd)%%['bytes']</expr>
          <args>['pwd:bytes']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="comment">
          <expr>obj.comment(comment)%%['bytes']</expr>
          <args>['comment:bytes']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="open">
          <expr>ret = obj.open(name,mode,pwd)%%['ZipInfo', 'str', 'str']</expr>
          <args>['name:ZipInfo', 'mode:str', 'pwd:str']</args>
          <return>['ret:NoneType', 'ZipExtFile:ABCMeta']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['force_zip64:bool']</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="extract">
          <expr>ret = obj.extract(member,path,pwd)%%['str', 'str', 'str']</expr>
          <args>['member:str', 'path:str', 'pwd:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="extractall">
          <expr>obj.extractall(path,members,pwd)%%['str', 'NoneType', 'NoneType']</expr>
          <args>['path:str', 'members:NoneType', 'pwd:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="writestr">
          <expr>obj.writestr(zinfo_or_arcname,data,compress_type,compresslevel)%%['str', 'bytes', 'int', 'int']</expr>
          <args>['zinfo_or_arcname:str', 'data:bytes', 'compress_type:int', 'compresslevel:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="zipfile.ZipFile" init="obj = zipfile.PyZipFile(None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="PyZipFile">
        <api name="__init__">
          <expr>None</expr>
          <args>['file:NoneType', 'mode:NoneType', 'compression:NoneType', 'allowZip64:NoneType', 'optimize:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, 'ZIP_STORED', None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="is_zipfile">
        <expr>ret = zipfile.is_zipfile(filename)%%['str']</expr>
        <args>['filename:str']</args>
        <return>['result:bool']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>zipfile.main(args)%%['None']</expr>
        <args>['args:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>DeprecationWarning</exception>
        <exception>EOFError</exception>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
        <exception>NotImplementedError</exception>
        <exception>OSError</exception>
        <exception>RuntimeError</exception>
        <exception>TypeError</exception>
        <exception>UnicodeEncodeError</exception>
        <exception>ValueError</exception>
        <exception>argparse.ArgumentError</exception>
        <exception>argparse.ArgumentTypeError</exception>
        <exception>io.UnsupportedOperation</exception>
        <exception>shutil.Error</exception>
        <exception>shutil.ExecError</exception>
        <exception>shutil.ReadError</exception>
        <exception>shutil.RegistryError</exception>
        <exception>shutil.SameFileError</exception>
        <exception>shutil.SpecialFileError</exception>
        <exception>threading.BrokenBarrierError</exception>
        <exception>zipfile.BadZipFile</exception>
        <exception>zipfile.LargeZipFile</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['binascii', 'binhex', 'io', 'os', 'struct']" name="binhex">
      <class base="Exception" init="obj = binhex.Error()%%[]" name="Error"/>
      <class init="obj = binhex.FInfo()%%[]" name="FInfo">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = binhex.openrsrc()%%[]" name="openrsrc"/>
      <class init="obj = binhex.BinHex(None,None)%%['NoneType', 'NoneType']" name="BinHex">
        <api name="__init__">
          <expr>None</expr>
          <args>['name_finfo_dlen_rlen:NoneType', 'ofp:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="write_rsrc">
          <expr>obj.write_rsrc(data)%%['None']</expr>
          <args>['data:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = binhex.HexBin(None)%%['NoneType']" name="HexBin">
        <api name="__init__">
          <expr>None</expr>
          <args>['ifp:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="getfileinfo">
        <expr>binhex.getfileinfo(name)%%['str']</expr>
        <args>['name:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="binhex">
        <expr>binhex.binhex(inp,out)%%['str', 'str']</expr>
        <args>['inp:str', 'out:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="hexbin">
        <expr>binhex.hexbin(inp,out)%%['str', 'str']</expr>
        <args>['inp:str', 'out:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>binascii.Incomplete</exception>
        <exception>binhex.Error</exception>
      </errors>
    </module>
    <module importfrom="['binascii:a2b_qp', 'binascii:b2a_qp', 'io:BytesIO']" imports="['getopt', 'quopri', 'sys']" name="quopri">
      <api name="needsquoting">
        <expr>ret = quopri.needsquoting(c,quotetabs,header)%%['bytes', 'bool', 'bool']</expr>
        <args>['c:bytes', 'quotetabs:bool', 'header:bool']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="quote">
        <expr>ret = quopri.quote(c)%%['bytes']</expr>
        <args>['c:bytes']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="encode">
        <expr>quopri.encode(input,output,quotetabs,header)%%['BytesIO', 'BytesIO', 'bool', 'bool']</expr>
        <args>['input:BytesIO', 'output:BytesIO', 'quotetabs:bool', 'header:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="encodestring">
        <expr>ret = quopri.encodestring(s,quotetabs,header)%%['bytes', 'bool', 'bool']</expr>
        <args>['s:bytes', 'quotetabs:bool', 'header:bool']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="decode">
        <expr>quopri.decode(input,output,header)%%['BytesIO', 'BytesIO', 'bool']</expr>
        <args>['input:BytesIO', 'output:BytesIO', 'header:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="decodestring">
        <expr>ret = quopri.decodestring(s,header)%%['bytes', 'bool']</expr>
        <args>['s:bytes', 'header:bool']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ishex">
        <expr>ret = quopri.ishex(c)%%['bytes']</expr>
        <args>['c:bytes']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="unhex">
        <expr>ret = quopri.unhex(s)%%['bytes']</expr>
        <args>['s:bytes']</args>
        <return>['bits:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>quopri.main()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>getopt.GetoptError</exception>
        <exception>getopt.error</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['struct']" name="struct"/>
    <module importfrom="[]" imports="['builtins:m', 'linecache', 're', 'sys', 'traceback', 'tracemalloc', 'warnings']" name="warnings">
      <class base="builtins.object" init="obj = warnings.WarningMessage(None,None,None,None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="WarningMessage">
        <api name="__init__">
          <expr>None</expr>
          <args>['message:NoneType', 'category:NoneType', 'filename:NoneType', 'lineno:NoneType', 'file:NoneType', 'line:NoneType', 'source:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="builtins.object" init="obj = warnings.catch_warnings()%%[]" name="catch_warnings">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['record:NoneType', 'module:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None, None]</kwodefa>
        </api>
      </class>
      <api name="showwarning">
        <expr>warnings.showwarning(message,category,filename,lineno,file,line)%%['str', 'type', 'str', 'int', 'StringIO', 'str']</expr>
        <args>['message:str', 'category:type', 'filename:str', 'lineno:int', 'file:StringIO', 'line:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="formatwarning">
        <expr>ret = warnings.formatwarning(message,category,filename,lineno,line)%%['UserWarning', 'type', 'str', 'int', 'NoneType']</expr>
        <args>['message:UserWarning', 'category:type', 'filename:str', 'lineno:int', 'line:NoneType']</args>
        <return>['_formatwarnmsg_impl:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="filterwarnings">
        <expr>warnings.filterwarnings(action,message,category,module,lineno,append)%%['str', 'str', 'type', 'str', 'int', 'bool']</expr>
        <args>['action:str', 'message:str', 'category:type', 'module:str', 'lineno:int', 'append:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, 'Warning', None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="simplefilter">
        <expr>warnings.simplefilter(action,category,lineno,append)%%['str', 'type', 'int', 'bool']</expr>
        <args>['action:str', 'category:type', 'lineno:int', 'append:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['Warning', None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="resetwarnings">
        <expr>warnings.resetwarnings()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="warn">
        <expr>warnings.warn(message,category,stacklevel,source)%%['None', 'None', 'None', 'None']</expr>
        <args>['message:None', 'category:None', 'stacklevel:None', 'source:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="warn_explicit">
        <expr>warnings.warn_explicit(message,category,filename,lineno,module,registry,module_globals,source)%%['None', 'None', 'None', 'None', 'None', 'None', 'None', 'None']</expr>
        <args>['message:None', 'category:None', 'filename:None', 'lineno:None', 'module:None', 'registry:None', 'module_globals:None', 'source:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>Exception</exception>
        <exception>ImportError</exception>
        <exception>NameError</exception>
        <exception>OSError</exception>
        <exception>OverflowError</exception>
        <exception>RuntimeError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['email.header:decode_header']" imports="['argparse', 'collections', 'datetime', 'netrc', 'nntplib', 're', 'socket', 'ssl', 'warnings']" name="nntplib">
      <class base="Exception" init="obj = nntplib.NNTPError()%%[]" name="NNTPError"/>
      <class base="NNTPError" init="obj = nntplib.NNTPReplyError()%%[]" name="NNTPReplyError"/>
      <class base="NNTPError" init="obj = nntplib.NNTPTemporaryError()%%[]" name="NNTPTemporaryError"/>
      <class base="NNTPError" init="obj = nntplib.NNTPPermanentError()%%[]" name="NNTPPermanentError"/>
      <class base="NNTPError" init="obj = nntplib.NNTPProtocolError()%%[]" name="NNTPProtocolError"/>
      <class base="NNTPError" init="obj = nntplib.NNTPDataError()%%[]" name="NNTPDataError"/>
      <class base="nntplib._NNTPBase" init="obj = nntplib.NNTP(None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="NNTP">
        <api name="__init__">
          <expr>None</expr>
          <args>['host:NoneType', 'port:NoneType', 'user:NoneType', 'password:NoneType', 'readermode:NoneType', 'usenetrc:NoneType', 'timeout:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['NNTP_PORT', None, None, None, None, '_GLOBAL_DEFAULT_TIMEOUT']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="nntplib.NNTP" init="obj = nntplib.NNTP_SSL(None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="NNTP_SSL">
        <api name="__init__">
          <expr>None</expr>
          <args>['host:NoneType', 'port:NoneType', 'user:NoneType', 'password:NoneType', 'ssl_context:NoneType', 'readermode:NoneType', 'usenetrc:NoneType', 'timeout:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['NNTP_SSL_PORT', None, None, None, None, None, '_GLOBAL_DEFAULT_TIMEOUT']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="decode_header">
        <expr>ret = nntplib.decode_header(header_str)%%['str']</expr>
        <args>['header_str:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>EOFError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>argparse.ArgumentError</exception>
        <exception>argparse.ArgumentTypeError</exception>
        <exception>netrc.NetrcParseError</exception>
        <exception>nntplib.NNTPDataError</exception>
        <exception>nntplib.NNTPError</exception>
        <exception>nntplib.NNTPPermanentError</exception>
        <exception>nntplib.NNTPProtocolError</exception>
        <exception>nntplib.NNTPReplyError</exception>
        <exception>nntplib.NNTPTemporaryError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['getopt', 'mimetypes', 'os', 'posixpath', 'sys', 'urllib.parse', 'winreg:_winreg']" name="mimetypes">
      <class init="obj = mimetypes.MimeTypes()%%['NoneType', 'NoneType']" name="MimeTypes">
        <api name="__init__">
          <expr>None</expr>
          <args>['filenames:NoneType', 'strict:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="guess_type">
          <expr>obj.guess_type(url,strict)%%['str', 'bool']</expr>
          <args>['url:str', 'strict:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="guess_extension">
          <expr>ret = obj.guess_extension(type,strict)%%['str', 'bool']</expr>
          <args>['type:str', 'strict:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read">
          <expr>obj.read(filename,strict)%%['str', 'bool']</expr>
          <args>['filename:str', 'strict:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read_windows_registry">
          <expr>obj.read_windows_registry(strict)%%['None']</expr>
          <args>['strict:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="guess_type">
        <expr>ret = mimetypes.guess_type(url,strict)%%['str', 'bool']</expr>
        <args>['url:str', 'strict:bool']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="guess_all_extensions">
        <expr>ret = mimetypes.guess_all_extensions(type,strict)%%['None', 'None']</expr>
        <args>['type:None', 'strict:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="guess_extension">
        <expr>ret = mimetypes.guess_extension(type,strict)%%['str', 'bool']</expr>
        <args>['type:str', 'strict:bool']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="add_type">
        <expr>ret = mimetypes.add_type(type,ext,strict)%%['str', 'str', 'bool']</expr>
        <args>['type:str', 'ext:str', 'strict:bool']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="init">
        <expr>mimetypes.init(files)%%['NoneType']</expr>
        <args>['files:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_mime_types">
        <expr>ret = mimetypes.read_mime_types(file)%%['None']</expr>
        <args>['file:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>getopt.GetoptError</exception>
        <exception>getopt.error</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['builtins', 'errno', 'gzip', 'io', 'os', 'struct', 'sys', 'time', 'warnings', 'zlib']" name="gzip">
      <class base="_compression.BaseStream" init="obj = gzip.GzipFile()%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="GzipFile">
        <api name="__init__">
          <expr>None</expr>
          <args>['filename:NoneType', 'mode:NoneType', 'compresslevel:NoneType', 'fileobj:NoneType', 'mtime:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="filename">
          <expr>ret = obj.filename()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="mtime">
          <expr>ret = obj.mtime()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="closed">
          <expr>ret = obj.closed()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="rewind">
          <expr>obj.rewind()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="readable">
          <expr>ret = obj.readable()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="writable">
          <expr>ret = obj.writable()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="seekable">
          <expr>ret = obj.seekable()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="open">
        <expr>ret = gzip.open(filename,mode,compresslevel,encoding,errors,newline)%%['str', 'str', 'int', 'str', 'str', 'str']</expr>
        <args>['filename:str', 'mode:str', 'compresslevel:int', 'encoding:str', 'errors:str', 'newline:str']</args>
        <return>['ret:NoneType', 'binary_file:GzipFile']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="write32u">
        <expr>gzip.write32u(output,value)%%['BufferedWriter', 'int']</expr>
        <args>['output:BufferedWriter', 'value:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="compress">
        <expr>ret = gzip.compress(data,compresslevel)%%['bytes', 'int']</expr>
        <args>['data:bytes', 'compresslevel:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="decompress">
        <expr>ret = gzip.decompress(data)%%['bytes']</expr>
        <args>['data:bytes']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>EOFError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>UnicodeEncodeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['abc:ABCMeta', 'abc:abstractmethod']" imports="['numbers']" name="numbers">
      <class init="obj = numbers.Number()%%[]" name="Number"/>
      <class base="numbers.Number" init="obj = numbers.Complex()%%[]" name="Complex">
        <api name="real">
          <expr>obj.real()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="imag">
          <expr>obj.imag()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="conjugate">
          <expr>obj.conjugate()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="numbers.Complex" init="obj = numbers.Real()%%[]" name="Real">
        <api name="real">
          <expr>ret = obj.real()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="imag">
          <expr>ret = obj.imag()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="conjugate">
          <expr>ret = obj.conjugate()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="numbers.Real" init="obj = numbers.Rational()%%[]" name="Rational">
        <api name="numerator">
          <expr>obj.numerator()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="denominator">
          <expr>obj.denominator()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="numbers.Rational" init="obj = numbers.Integral()%%[]" name="Integral">
        <api name="numerator">
          <expr>ret = obj.numerator()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="denominator">
          <expr>ret = obj.denominator()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>NotImplementedError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['collections:namedtuple', 'time:monotonic']" imports="['heapq', 'sched', 'threading', 'time']" name="sched">
      <class init="obj = sched.Event()%%[]" name="Event"/>
      <class init="obj = sched.scheduler()%%['NoneType', 'NoneType']" name="scheduler">
        <api name="__init__">
          <expr>None</expr>
          <args>['timefunc:NoneType', 'delayfunc:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['_time', None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="enter">
          <expr>ret = obj.enter(delay,priority,action,argument,kwargs)%%['float', 'int', 'function', 'tuple', 'object']</expr>
          <args>['delay:float', 'priority:int', 'action:function', 'argument:tuple', 'kwargs:object']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, '_sentinel']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="cancel">
          <expr>obj.cancel(event)%%['Event']</expr>
          <args>['event:Event']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="empty">
          <expr>ret = obj.empty()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run">
          <expr>ret = obj.run(blocking)%%['bool']</expr>
          <args>['blocking:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="queue">
          <expr>ret = obj.queue()%%[]</expr>
          <args>[]</args>
          <return>['list:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>threading.BrokenBarrierError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['cgitb', 'inspect', 'keyword', 'linecache', 'os', 'pydoc', 'sys', 'tempfile', 'time', 'tokenize', 'traceback']" name="cgitb">
      <class init="obj = cgitb.Hook()%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'builtin_function_or_method']" name="Hook">
        <api name="__init__">
          <expr>None</expr>
          <args>['display:NoneType', 'logdir:NoneType', 'context:NoneType', 'file:NoneType', 'format:builtin_function_or_method']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="reset">
        <expr>ret = cgitb.reset()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="small">
        <expr>ret = cgitb.small(text)%%['str']</expr>
        <args>['text:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="strong">
        <expr>ret = cgitb.strong(text)%%['str']</expr>
        <args>['text:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="grey">
        <expr>ret = cgitb.grey(text)%%['str']</expr>
        <args>['text:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="lookup">
        <expr>cgitb.lookup(name,frame,locals)%%['str', 'frame', 'dict']</expr>
        <args>['name:str', 'frame:frame', 'locals:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="scanvars">
        <expr>ret = cgitb.scanvars(reader,frame,locals)%%['function', 'frame', 'dict']</expr>
        <args>['reader:function', 'frame:frame', 'locals:dict']</args>
        <return>['vars:list']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="html">
        <expr>ret = cgitb.html(einfo,context)%%['tuple', 'int']</expr>
        <args>['einfo:tuple', 'context:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="text">
        <expr>ret = cgitb.text(einfo,context)%%['tuple', 'int']</expr>
        <args>['einfo:tuple', 'context:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="enable">
        <expr>cgitb.enable(display,logdir,context,format)%%['None', 'None', 'None', 'None']</expr>
        <args>['display:None', 'logdir:None', 'context:None', 'format:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>pydoc.ErrorDuringImport</exception>
        <exception>tokenize.StopTokenizing</exception>
        <exception>tokenize.TokenError</exception>
      </errors>
    </module>
    <module importfrom="['decimal:Decimal']" imports="['fractions', 'math', 'numbers', 'operator', 're', 'sys', 'warnings']" name="fractions">
      <class base="numbers.Rational" init="obj = fractions.Fraction()%%[]" name="Fraction">
        <api name="from_decimal">
          <expr>ret = obj.from_decimal(cls,dec)%%['None', 'None']</expr>
          <args>['cls:None', 'dec:None']</args>
          <return>['cls:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="limit_denominator">
          <expr>ret = obj.limit_denominator(max_denominator)%%['int']</expr>
          <args>['max_denominator:int']</args>
          <return>['Fraction:ABCMeta', 'bound2:Fraction', 'bound1:Fraction']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="numerator">
          <expr>ret = obj.numerator(a)%%['None']</expr>
          <args>['a:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="denominator">
          <expr>ret = obj.denominator(a)%%['None']</expr>
          <args>['a:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="gcd">
        <expr>ret = fractions.gcd(a,b)%%['int', 'int']</expr>
        <args>['a:int', 'b:int']</args>
        <return>['ret:NoneType', '_gcd:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>ZeroDivisionError</exception>
      </errors>
    </module>
    <module importfrom="['concurrent.futures:ProcessPoolExecutor', 'functools:partial']" imports="['argparse', 'compileall', 'importlib.util', 'os', 'py_compile', 're', 'struct', 'sys']" name="compileall">
      <api name="compile_dir">
        <expr>ret = compileall.compile_dir(dir,maxlevels,ddir,force,rx,quiet,legacy,optimize,workers,invalidation_mode)%%['None', 'None', 'None', 'None', 'None', 'None', 'None', 'None', 'None', 'None']</expr>
        <args>['dir:None', 'maxlevels:None', 'ddir:None', 'force:None', 'rx:None', 'quiet:None', 'legacy:None', 'optimize:None', 'workers:None', 'invalidation_mode:None']</args>
        <return>['success:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None, None, None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="compile_file">
        <expr>ret = compileall.compile_file(fullname,ddir,force,rx,quiet,legacy,optimize,invalidation_mode)%%['None', 'None', 'None', 'None', 'None', 'None', 'None', 'None']</expr>
        <args>['fullname:None', 'ddir:None', 'force:None', 'rx:None', 'quiet:None', 'legacy:None', 'optimize:None', 'invalidation_mode:None']</args>
        <return>['success:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="compile_path">
        <expr>ret = compileall.compile_path(skip_curdir,maxlevels,force,quiet,legacy,optimize,invalidation_mode)%%['None', 'None', 'None', 'None', 'None', 'None', 'None']</expr>
        <args>['skip_curdir:None', 'maxlevels:None', 'force:None', 'quiet:None', 'legacy:None', 'optimize:None', 'invalidation_mode:None']</args>
        <return>['success:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>ret = compileall.main()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>OSError</exception>
        <exception>SyntaxError</exception>
        <exception>TypeError</exception>
        <exception>UnicodeError</exception>
        <exception>ValueError</exception>
        <exception>argparse.ArgumentError</exception>
        <exception>argparse.ArgumentTypeError</exception>
        <exception>py_compile.PyCompileError</exception>
      </errors>
    </module>
    <module importfrom="['collections:namedtuple']" imports="['audioop', 'sunau', 'warnings']" name="sunau">
      <class base="Exception" init="obj = sunau.Error()%%[]" name="Error"/>
      <class init="obj = sunau.Au_read(None)%%['NoneType']" name="Au_read">
        <api name="__init__">
          <expr>None</expr>
          <args>['f:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="initfp">
          <expr>obj.initfp(file)%%['BytesIO']</expr>
          <args>['file:BytesIO']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getfp">
          <expr>ret = obj.getfp()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getnchannels">
          <expr>ret = obj.getnchannels()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getsampwidth">
          <expr>ret = obj.getsampwidth()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getframerate">
          <expr>ret = obj.getframerate()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getnframes">
          <expr>ret = obj.getnframes()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getcomptype">
          <expr>ret = obj.getcomptype()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getcompname">
          <expr>ret = obj.getcompname()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getparams">
          <expr>ret = obj.getparams()%%[]</expr>
          <args>[]</args>
          <return>['_sunau_params:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getmarkers">
          <expr>ret = obj.getmarkers()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getmark">
          <expr>obj.getmark(id)%%['None']</expr>
          <args>['id:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="readframes">
          <expr>ret = obj.readframes(nframes)%%['int']</expr>
          <args>['nframes:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="rewind">
          <expr>obj.rewind()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setpos">
          <expr>obj.setpos(pos)%%['int']</expr>
          <args>['pos:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = sunau.Au_write(None)%%['NoneType']" name="Au_write">
        <api name="__init__">
          <expr>None</expr>
          <args>['f:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="initfp">
          <expr>obj.initfp(file)%%['BufferedWriter']</expr>
          <args>['file:BufferedWriter']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getnchannels">
          <expr>ret = obj.getnchannels()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getsampwidth">
          <expr>ret = obj.getsampwidth()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getframerate">
          <expr>ret = obj.getframerate()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getnframes">
          <expr>ret = obj.getnframes()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getcomptype">
          <expr>ret = obj.getcomptype()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getcompname">
          <expr>ret = obj.getcompname()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setparams">
          <expr>obj.setparams(params)%%['_sunau_params']</expr>
          <args>['params:_sunau_params']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getparams">
          <expr>ret = obj.getparams()%%[]</expr>
          <args>[]</args>
          <return>['_sunau_params:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="writeframes">
          <expr>obj.writeframes(data)%%['bytes']</expr>
          <args>['data:bytes']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="open">
        <expr>ret = sunau.open(f,mode)%%['BytesIO', 'str']</expr>
        <args>['f:BytesIO', 'mode:str']</args>
        <return>['Au_read:type', 'Au_write:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="openfp">
        <expr>ret = sunau.openfp(f,mode)%%['str', 'str']</expr>
        <args>['f:str', 'mode:str']</args>
        <return>['open:MagicMock']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>EOFError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>sunau.Error</exception>
      </errors>
    </module>
    <module importfrom="['builtins:open', 'threading:RLock']" imports="['bz2', 'io', 'os', 'warnings']" name="bz2">
      <class base="_compression.BaseStream" init="obj = bz2.BZ2File(None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType']" name="BZ2File">
        <api name="__init__">
          <expr>None</expr>
          <args>['filename:NoneType', 'mode:NoneType', 'buffering:NoneType', 'compresslevel:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="closed">
          <expr>ret = obj.closed()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="seekable">
          <expr>ret = obj.seekable()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="readable">
          <expr>ret = obj.readable()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="writable">
          <expr>ret = obj.writable()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="open">
        <expr>ret = bz2.open(filename,mode,compresslevel,encoding,errors,newline)%%['str', 'str', 'int', 'str', 'str', 'str']</expr>
        <args>['filename:str', 'mode:str', 'compresslevel:int', 'encoding:str', 'errors:str', 'newline:str']</args>
        <return>['ret:NoneType', 'binary_file:BZ2File']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="compress">
        <expr>ret = bz2.compress(data,compresslevel)%%['bytes', 'int']</expr>
        <args>['data:bytes', 'compresslevel:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="decompress">
        <expr>ret = bz2.decompress(data)%%['bytes']</expr>
        <args>['data:bytes']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['enum:Enum', 'functools:cmp_to_key']" imports="['cmd', 'marshal', 'os', 'pstats', 're', 'readline', 'sys', 'time']" name="pstats">
      <class base="builtins.str" init="obj = pstats.SortKey()%%[]" name="SortKey"/>
      <class init="obj = pstats.Stats()%%[]" name="Stats">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['stream:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="init">
          <expr>obj.init(arg)%%['str']</expr>
          <args>['arg:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dump_stats">
          <expr>obj.dump_stats(filename)%%['None']</expr>
          <args>['filename:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sort_stats">
          <expr>ret = obj.sort_stats()%%[]</expr>
          <args>[]</args>
          <return>['self:Stats']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="reverse_order">
          <expr>ret = obj.reverse_order()%%[]</expr>
          <args>[]</args>
          <return>['self:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="strip_dirs">
          <expr>ret = obj.strip_dirs()%%[]</expr>
          <args>[]</args>
          <return>['self:Stats']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="print_stats">
          <expr>ret = obj.print_stats()%%[]</expr>
          <args>[]</args>
          <return>['self:Stats']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="print_callees">
          <expr>ret = obj.print_callees()%%[]</expr>
          <args>[]</args>
          <return>['self:Stats']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="print_callers">
          <expr>ret = obj.print_callers()%%[]</expr>
          <args>[]</args>
          <return>['self:Stats']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = pstats.TupleComp(None)%%['NoneType']" name="TupleComp">
        <api name="__init__">
          <expr>None</expr>
          <args>['comp_select_list:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="compare">
          <expr>ret = obj.compare(left,right)%%['tuple', 'tuple']</expr>
          <args>['left:tuple', 'right:tuple']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="func_strip_path">
        <expr>pstats.func_strip_path(func_name)%%['tuple']</expr>
        <args>['func_name:tuple']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="func_get_function_name">
        <expr>ret = pstats.func_get_function_name(func)%%['None']</expr>
        <args>['func:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="func_std_string">
        <expr>ret = pstats.func_std_string(func_name)%%['tuple']</expr>
        <args>['func_name:tuple']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="add_func_stats">
        <expr>pstats.add_func_stats(target,source)%%['tuple', 'tuple']</expr>
        <args>['target:tuple', 'source:tuple']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="add_callers">
        <expr>ret = pstats.add_callers(target,source)%%['dict', 'dict']</expr>
        <args>['target:dict', 'source:dict']</args>
        <return>['new_callers:dict']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="count_calls">
        <expr>ret = pstats.count_calls(callers)%%['None']</expr>
        <args>['callers:None']</args>
        <return>['nc:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="f8">
        <expr>ret = pstats.f8(x)%%['int']</expr>
        <args>['x:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>Exception</exception>
        <exception>ImportError</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>re.error</exception>
      </errors>
    </module>
    <module importfrom="['collections:deque', 'io:StringIO']" imports="['os', 're', 'shlex', 'sys']" name="shlex">
      <class init="obj = shlex.shlex()%%['NoneType', 'NoneType', 'NoneType', 'NoneType']" name="shlex">
        <api name="__init__">
          <expr>None</expr>
          <args>['instream:NoneType', 'infile:NoneType', 'posix:NoneType', 'punctuation_chars:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="punctuation_chars">
          <expr>ret = obj.punctuation_chars()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="push_token">
          <expr>obj.push_token(tok)%%['str']</expr>
          <args>['tok:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="error_leader">
          <expr>ret = obj.error_leader(infile,lineno)%%['None', 'None']</expr>
          <args>['infile:None', 'lineno:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="split">
        <expr>ret = shlex.split(s,comments,posix)%%['str', 'bool', 'bool']</expr>
        <args>['s:str', 'comments:bool', 'posix:bool']</args>
        <return>['list:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="quote">
        <expr>ret = shlex.quote(s)%%['str']</expr>
        <args>['s:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>StopIteration</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['collections:ChainMap']" imports="['re:_re', 'string']" name="string">
      <class init="obj = string.Template(None)%%['NoneType']" name="Template">
        <api name="__init__">
          <expr>None</expr>
          <args>['template:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="substitute">
          <expr>ret = obj.substitute()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="safe_substitute">
          <expr>ret = obj.safe_substitute()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = string.Formatter()%%[]" name="Formatter">
        <api name="format_field">
          <expr>ret = obj.format_field(value,format_spec)%%['str', 'str']</expr>
          <args>['value:str', 'format_spec:str']</args>
          <return>['format:builtin_function_or_method']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parse">
          <expr>ret = obj.parse(format_string)%%['str']</expr>
          <args>['format_string:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="capwords">
        <expr>ret = string.capwords(s,sep)%%['str', 'str']</expr>
        <args>['s:str', 'sep:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['codeop:CommandCompiler', 'codeop:compile_command']" imports="['argparse', 'code', 'readline', 'sys', 'traceback']" name="code">
      <class init="obj = code.InteractiveInterpreter()%%['builtin_function_or_method']" name="InteractiveInterpreter">
        <api name="__init__">
          <expr>None</expr>
          <args>['locals:builtin_function_or_method']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="runsource">
          <expr>ret = obj.runsource(source,filename,symbol)%%['None', 'None', 'None']</expr>
          <args>['source:None', 'filename:None', 'symbol:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="showsyntaxerror">
          <expr>obj.showsyntaxerror(filename)%%['None']</expr>
          <args>['filename:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="showtraceback">
          <expr>obj.showtraceback()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="code.InteractiveInterpreter" init="obj = code.InteractiveConsole()%%['builtin_function_or_method', 'NoneType']" name="InteractiveConsole">
        <api name="__init__">
          <expr>None</expr>
          <args>['locals:builtin_function_or_method', 'filename:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="interact">
          <expr>obj.interact(banner,exitmsg)%%['str', 'str']</expr>
          <args>['banner:str', 'exitmsg:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="interact">
        <expr>code.interact(banner,readfunc,local,exitmsg)%%['None', 'None', 'None', 'None']</expr>
        <args>['banner:None', 'readfunc:None', 'local:None', 'exitmsg:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>EOFError</exception>
        <exception>ImportError</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>OSError</exception>
        <exception>OverflowError</exception>
        <exception>SyntaxError</exception>
        <exception>SystemExit</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>argparse.ArgumentError</exception>
        <exception>argparse.ArgumentTypeError</exception>
      </errors>
    </module>
    <module importfrom="['datetime:datetime', 'datetime:timedelta', 'datetime:timezone', 'io:DEFAULT_BUFFER_SIZE']" imports="['binascii', 'calendar', 'errno', 'getopt', 'getpass', 'hmac', 'imaplib', 'random', 're', 'socket', 'ssl', 'subprocess', 'sys', 'time']" name="imaplib">
      <class init="obj = imaplib.IMAP4()%%['NoneType', 'NoneType']" name="IMAP4">
        <api name="__init__">
          <expr>None</expr>
          <args>['host:NoneType', 'port:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, 'IMAP4_PORT']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="open">
          <expr>obj.open(host,port)%%['str', 'int']</expr>
          <args>['host:str', 'port:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, 'IMAP4_PORT']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="socket">
          <expr>ret = obj.socket()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="recent">
          <expr>ret = obj.recent()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="response">
          <expr>ret = obj.response(code)%%['str']</expr>
          <args>['code:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="check">
          <expr>ret = obj.check()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="copy">
          <expr>ret = obj.copy(message_set,new_mailbox)%%['None', 'None']</expr>
          <args>['message_set:None', 'new_mailbox:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="create">
          <expr>ret = obj.create(mailbox)%%['None']</expr>
          <args>['mailbox:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="delete">
          <expr>ret = obj.delete(mailbox)%%['None']</expr>
          <args>['mailbox:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="deleteacl">
          <expr>ret = obj.deleteacl(mailbox,who)%%['None', 'None']</expr>
          <args>['mailbox:None', 'who:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="enable">
          <expr>obj.enable(capability)%%['str']</expr>
          <args>['capability:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="expunge">
          <expr>ret = obj.expunge()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="fetch">
          <expr>ret = obj.fetch(message_set,message_parts)%%['None', 'None']</expr>
          <args>['message_set:None', 'message_parts:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getacl">
          <expr>ret = obj.getacl(mailbox)%%['None']</expr>
          <args>['mailbox:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getannotation">
          <expr>ret = obj.getannotation(mailbox,entry,attribute)%%['None', 'None', 'None']</expr>
          <args>['mailbox:None', 'entry:None', 'attribute:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getquota">
          <expr>ret = obj.getquota(root)%%['None']</expr>
          <args>['root:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getquotaroot">
          <expr>obj.getquotaroot(mailbox)%%['None']</expr>
          <args>['mailbox:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="list">
          <expr>ret = obj.list(directory,pattern)%%['None', 'None']</expr>
          <args>['directory:None', 'pattern:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="login">
          <expr>obj.login(user,password)%%['str', 'str']</expr>
          <args>['user:str', 'password:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="login_cram_md5">
          <expr>ret = obj.login_cram_md5(user,password)%%['str', 'bytes']</expr>
          <args>['user:str', 'password:bytes']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="lsub">
          <expr>ret = obj.lsub(directory,pattern)%%['str', 'str']</expr>
          <args>['directory:str', 'pattern:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="myrights">
          <expr>ret = obj.myrights(mailbox)%%['None']</expr>
          <args>['mailbox:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="namespace">
          <expr>ret = obj.namespace()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="partial">
          <expr>ret = obj.partial(message_num,message_part,start,length)%%['None', 'None', 'None', 'None']</expr>
          <args>['message_num:None', 'message_part:None', 'start:None', 'length:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="proxyauth">
          <expr>ret = obj.proxyauth(user)%%['None']</expr>
          <args>['user:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="rename">
          <expr>ret = obj.rename(oldmailbox,newmailbox)%%['None', 'None']</expr>
          <args>['oldmailbox:None', 'newmailbox:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="search">
          <expr>ret = obj.search(charset)%%['str']</expr>
          <args>['charset:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="select">
          <expr>obj.select(mailbox,readonly)%%['str', 'bool']</expr>
          <args>['mailbox:str', 'readonly:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setacl">
          <expr>ret = obj.setacl(mailbox,who,what)%%['None', 'None', 'None']</expr>
          <args>['mailbox:None', 'who:None', 'what:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setannotation">
          <expr>ret = obj.setannotation()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setquota">
          <expr>ret = obj.setquota(root,limits)%%['None', 'None']</expr>
          <args>['root:None', 'limits:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sort">
          <expr>ret = obj.sort(sort_criteria,charset)%%['None', 'None']</expr>
          <args>['sort_criteria:None', 'charset:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="starttls">
          <expr>ret = obj.starttls(ssl_context)%%['None']</expr>
          <args>['ssl_context:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="status">
          <expr>ret = obj.status(mailbox,names)%%['None', 'None']</expr>
          <args>['mailbox:None', 'names:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="store">
          <expr>ret = obj.store(message_set,command,flags)%%['bytes', 'str', 'str']</expr>
          <args>['message_set:bytes', 'command:str', 'flags:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="subscribe">
          <expr>ret = obj.subscribe(mailbox)%%['None']</expr>
          <args>['mailbox:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="thread">
          <expr>ret = obj.thread(threading_algorithm,charset)%%['None', 'None']</expr>
          <args>['threading_algorithm:None', 'charset:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="uid">
          <expr>ret = obj.uid(command)%%['None']</expr>
          <args>['command:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unsubscribe">
          <expr>ret = obj.unsubscribe(mailbox)%%['None']</expr>
          <args>['mailbox:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="xatom">
          <expr>ret = obj.xatom(name)%%['None']</expr>
          <args>['name:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="print_log">
          <expr>obj.print_log()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="imaplib.IMAP4" init="obj = imaplib.IMAP4_SSL()%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="IMAP4_SSL">
        <api name="__init__">
          <expr>None</expr>
          <args>['host:NoneType', 'port:NoneType', 'keyfile:NoneType', 'certfile:NoneType', 'ssl_context:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, 'IMAP4_SSL_PORT', None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="imaplib.IMAP4" init="obj = imaplib.IMAP4_stream(None)%%['NoneType']" name="IMAP4_stream">
        <api name="__init__">
          <expr>None</expr>
          <args>['command:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="Internaldate2tuple">
        <expr>ret = imaplib.Internaldate2tuple(resp)%%['bytes']</expr>
        <args>['resp:bytes']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="Int2AP">
        <expr>ret = imaplib.Int2AP(num)%%['int']</expr>
        <args>['num:int']</args>
        <return>['val:bytes']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ParseFlags">
        <expr>ret = imaplib.ParseFlags(resp)%%['None']</expr>
        <args>['resp:None']</args>
        <return>['tuple:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="Time2Internaldate">
        <expr>ret = imaplib.Time2Internaldate(date_time)%%['int']</expr>
        <args>['date_time:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>IMAP4.error</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>calendar.IllegalMonthError</exception>
        <exception>calendar.IllegalWeekdayError</exception>
        <exception>getopt.GetoptError</exception>
        <exception>getopt.error</exception>
        <exception>getpass.GetPassWarning</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['mailcap', 'os', 'warnings']" name="mailcap">
      <api name="lineno_sort_key">
        <expr>mailcap.lineno_sort_key(entry)%%['dict']</expr>
        <args>['entry:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getcaps">
        <expr>ret = mailcap.getcaps()%%[]</expr>
        <args>[]</args>
        <return>['caps:dict']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="listmailcapfiles">
        <expr>ret = mailcap.listmailcapfiles()%%[]</expr>
        <args>[]</args>
        <return>['mailcaps:list']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="readmailcapfile">
        <expr>ret = mailcap.readmailcapfile(fp)%%['TextIOWrapper']</expr>
        <args>['fp:TextIOWrapper']</args>
        <return>['caps:dict']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parseline">
        <expr>mailcap.parseline(line)%%['str']</expr>
        <args>['line:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parsefield">
        <expr>mailcap.parsefield(line,i,n)%%['str', 'int', 'int']</expr>
        <args>['line:str', 'i:int', 'n:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="findmatch">
        <expr>mailcap.findmatch(caps,MIMEtype,key,filename,plist)%%['dict', 'str', 'str', 'str', 'list']</expr>
        <args>['caps:dict', 'MIMEtype:str', 'key:str', 'filename:str', 'plist:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="lookup">
        <expr>ret = mailcap.lookup(caps,MIMEtype,key)%%['dict', 'str', 'str']</expr>
        <args>['caps:dict', 'MIMEtype:str', 'key:str']</args>
        <return>['entries:list']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="subst">
        <expr>ret = mailcap.subst(field,MIMEtype,filename,plist)%%['str', 'str', 'str', 'list']</expr>
        <args>['field:str', 'MIMEtype:str', 'filename:str', 'plist:list']</args>
        <return>['res:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="findparam">
        <expr>ret = mailcap.findparam(name,plist)%%['str', 'list']</expr>
        <args>['name:str', 'plist:list']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="show">
        <expr>mailcap.show(caps)%%['None']</expr>
        <args>['caps:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['doctest', 'heapq']" name="heapq">
      <api name="heappush">
        <expr>heapq.heappush(heap,item)%%['list', 'EvilClass']</expr>
        <args>['heap:list', 'item:EvilClass']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="heappop">
        <expr>ret = heapq.heappop(heap)%%['int']</expr>
        <args>['heap:int']</args>
        <return>['returnitem:CmpErr', 'lastelt:CmpErr']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="heapreplace">
        <expr>ret = heapq.heapreplace(heap,item)%%['list', 'int']</expr>
        <args>['heap:list', 'item:int']</args>
        <return>['returnitem:CmpErr']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="heappushpop">
        <expr>ret = heapq.heappushpop(heap,item)%%['list', 'int']</expr>
        <args>['heap:list', 'item:int']</args>
        <return>['item:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="heapify">
        <expr>heapq.heapify(x)%%['int']</expr>
        <args>['x:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="merge">
        <expr>heapq.merge()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['key:itemgetter', 'reverse:bool']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None, None]</kwodefa>
      </api>
      <api name="nsmallest">
        <expr>ret = heapq.nsmallest(n,iterable,key)%%['int', 'list', 'function']</expr>
        <args>['n:int', 'iterable:list', 'key:function']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="nlargest">
        <expr>ret = heapq.nlargest(n,iterable,key)%%['int', 'list', 'function']</expr>
        <args>['n:int', 'iterable:list', 'key:function']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>StopIteration</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['builtins', 'io', 'lzma', 'os']" name="lzma">
      <class base="_compression.BaseStream" init="obj = lzma.LZMAFile()%%['NoneType', 'NoneType']" name="LZMAFile">
        <api name="__init__">
          <expr>None</expr>
          <args>['filename:NoneType', 'mode:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['format:builtin_function_or_method', 'check:NoneType', 'preset:NoneType', 'filters:NoneType']</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[None, None, None, None]</kwodefa>
        </api>
        <api name="closed">
          <expr>ret = obj.closed()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="seekable">
          <expr>ret = obj.seekable()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="readable">
          <expr>ret = obj.readable()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="writable">
          <expr>ret = obj.writable()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="open">
        <expr>ret = lzma.open(filename,mode)%%['str', 'str']</expr>
        <args>['filename:str', 'mode:str']</args>
        <return>['ret:NoneType', 'binary_file:LZMAFile']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['format:int', 'check:int', 'preset:NoneType', 'filters:list', 'encoding:str', 'errors:str', 'newline:str']</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[None, None, None, None, None, None, None]</kwodefa>
      </api>
      <api name="compress">
        <expr>ret = lzma.compress(data,format,check,preset,filters)%%['bytes', 'int', 'int', 'str', 'int']</expr>
        <args>['data:bytes', 'format:int', 'check:int', 'preset:str', 'filters:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['FORMAT_XZ', None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="decompress">
        <expr>ret = lzma.decompress(data,format,memlimit,filters)%%['bytes', 'int', 'float', 'dict']</expr>
        <args>['data:bytes', 'format:int', 'memlimit:float', 'filters:dict']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['FORMAT_AUTO', None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>LZMAError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['bz2', 'fileinput', 'getopt', 'gzip', 'os', 'sys']" name="fileinput">
      <class init="obj = fileinput.FileInput()%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="FileInput">
        <api name="__init__">
          <expr>None</expr>
          <args>['files:NoneType', 'inplace:NoneType', 'backup:NoneType', 'bufsize:NoneType', 'mode:NoneType', 'openhook:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="readline">
          <expr>ret = obj.readline()%%[]</expr>
          <args>[]</args>
          <return>['line:str']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="input">
        <expr>ret = fileinput.input(files,inplace,backup,bufsize,mode,openhook)%%['object', 'object', 'object', 'object', 'object', 'object']</expr>
        <args>['files:object', 'inplace:object', 'backup:object', 'bufsize:object', 'mode:object', 'openhook:object']</args>
        <return>['_state:MockFileInput']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="close">
        <expr>fileinput.close()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="nextfile">
        <expr>ret = fileinput.nextfile()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="filename">
        <expr>ret = fileinput.filename()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="lineno">
        <expr>ret = fileinput.lineno()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="filelineno">
        <expr>ret = fileinput.filelineno()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="fileno">
        <expr>ret = fileinput.fileno()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isfirstline">
        <expr>ret = fileinput.isfirstline()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isstdin">
        <expr>ret = fileinput.isstdin()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="hook_compressed">
        <expr>ret = fileinput.hook_compressed(filename,mode)%%['str', 'int']</expr>
        <args>['filename:str', 'mode:int']</args>
        <return>['ret:NoneType', 'open:InvocationRecorder']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="hook_encoded">
        <expr>ret = fileinput.hook_encoded(encoding,errors)%%['str', 'object']</expr>
        <args>['encoding:str', 'errors:object']</args>
        <return>['openhook:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>RuntimeError</exception>
        <exception>StopIteration</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>getopt.GetoptError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['stat']" name="stat">
      <api name="S_IMODE">
        <expr>ret = stat.S_IMODE(mode)%%['int']</expr>
        <args>['mode:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="S_IFMT">
        <expr>ret = stat.S_IFMT(mode)%%['int']</expr>
        <args>['mode:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="S_ISDIR">
        <expr>ret = stat.S_ISDIR(mode)%%['int']</expr>
        <args>['mode:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="S_ISCHR">
        <expr>ret = stat.S_ISCHR(mode)%%['int']</expr>
        <args>['mode:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="S_ISBLK">
        <expr>ret = stat.S_ISBLK(mode)%%['int']</expr>
        <args>['mode:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="S_ISREG">
        <expr>ret = stat.S_ISREG(mode)%%['int']</expr>
        <args>['mode:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="S_ISFIFO">
        <expr>ret = stat.S_ISFIFO(mode)%%['int']</expr>
        <args>['mode:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="S_ISLNK">
        <expr>ret = stat.S_ISLNK(mode)%%['int']</expr>
        <args>['mode:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="S_ISSOCK">
        <expr>ret = stat.S_ISSOCK(mode)%%['int']</expr>
        <args>['mode:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="S_ISDOOR">
        <expr>ret = stat.S_ISDOOR(mode)%%['int']</expr>
        <args>['mode:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="S_ISPORT">
        <expr>ret = stat.S_ISPORT(mode)%%['int']</expr>
        <args>['mode:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="S_ISWHT">
        <expr>ret = stat.S_ISWHT(mode)%%['int']</expr>
        <args>['mode:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="filemode">
        <expr>ret = stat.filemode(mode)%%['int']</expr>
        <args>['mode:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['colorsys']" name="colorsys">
      <api name="rgb_to_yiq">
        <expr>colorsys.rgb_to_yiq(r,g,b)%%['float', 'float', 'float']</expr>
        <args>['r:float', 'g:float', 'b:float']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="yiq_to_rgb">
        <expr>colorsys.yiq_to_rgb(y,i,q)%%['float', 'float', 'float']</expr>
        <args>['y:float', 'i:float', 'q:float']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="rgb_to_hls">
        <expr>colorsys.rgb_to_hls(r,g,b)%%['float', 'float', 'float']</expr>
        <args>['r:float', 'g:float', 'b:float']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="hls_to_rgb">
        <expr>colorsys.hls_to_rgb(h,l,s)%%['float', 'float', 'float']</expr>
        <args>['h:float', 'l:float', 's:float']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="rgb_to_hsv">
        <expr>colorsys.rgb_to_hsv(r,g,b)%%['float', 'float', 'float']</expr>
        <args>['r:float', 'g:float', 'b:float']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="hsv_to_rgb">
        <expr>colorsys.hsv_to_rgb(h,s,v)%%['float', 'float', 'float']</expr>
        <args>['h:float', 's:float', 'v:float']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['Mailman:MailList', 'Mailman:Message', 'Mailman:Utils', 'email._header_value_parser:get_addr_spec', 'email._header_value_parser:get_angle_addr', 'io:StringIO', 'warnings:warn']" imports="['asynchat', 'asyncore', 'collections', 'errno', 'getopt', 'os', 'pwd', 'smtpd', 'smtplib', 'socket', 'sys', 'time']" name="smtpd">
      <class init="obj = smtpd.Devnull()%%[]" name="Devnull"/>
      <class base="asynchat.async_chat" init="obj = smtpd.SMTPChannel(None,None,None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'type', 'NoneType', 'NoneType']" name="SMTPChannel">
        <api name="max_command_size_limit">
          <expr>ret = obj.max_command_size_limit()%%[]</expr>
          <args>[]</args>
          <return>['max:builtin_function_or_method']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="__init__">
          <expr>None</expr>
          <args>['server:NoneType', 'conn:NoneType', 'addr:NoneType', 'data_size_limit:NoneType', 'map:type', 'enable_SMTPUTF8:NoneType', 'decode_data:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['DATA_SIZE_DEFAULT', None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="collect_incoming_data">
          <expr>obj.collect_incoming_data(data)%%['bytes']</expr>
          <args>['data:bytes']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="found_terminator">
          <expr>obj.found_terminator()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="smtp_HELO">
          <expr>obj.smtp_HELO(arg)%%['str']</expr>
          <args>['arg:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="smtp_EHLO">
          <expr>obj.smtp_EHLO(arg)%%['str']</expr>
          <args>['arg:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="smtp_NOOP">
          <expr>obj.smtp_NOOP(arg)%%['str']</expr>
          <args>['arg:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="smtp_QUIT">
          <expr>obj.smtp_QUIT(arg)%%['str']</expr>
          <args>['arg:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="smtp_HELP">
          <expr>obj.smtp_HELP(arg)%%['str']</expr>
          <args>['arg:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="smtp_VRFY">
          <expr>obj.smtp_VRFY(arg)%%['str']</expr>
          <args>['arg:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="smtp_MAIL">
          <expr>obj.smtp_MAIL(arg)%%['str']</expr>
          <args>['arg:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="smtp_RCPT">
          <expr>obj.smtp_RCPT(arg)%%['str']</expr>
          <args>['arg:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="smtp_RSET">
          <expr>obj.smtp_RSET(arg)%%['str']</expr>
          <args>['arg:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="smtp_DATA">
          <expr>obj.smtp_DATA(arg)%%['str']</expr>
          <args>['arg:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="smtp_EXPN">
          <expr>obj.smtp_EXPN(arg)%%['NoneType']</expr>
          <args>['arg:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="asyncore.dispatcher" init="obj = smtpd.SMTPServer(None,None)%%['NoneType', 'NoneType', 'NoneType', 'type', 'NoneType', 'NoneType']" name="SMTPServer">
        <api name="__init__">
          <expr>None</expr>
          <args>['localaddr:NoneType', 'remoteaddr:NoneType', 'data_size_limit:NoneType', 'map:type', 'enable_SMTPUTF8:NoneType', 'decode_data:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['DATA_SIZE_DEFAULT', None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="handle_accepted">
          <expr>obj.handle_accepted(conn,addr)%%['None', 'None']</expr>
          <args>['conn:None', 'addr:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="smtpd.SMTPServer" init="obj = smtpd.DebuggingServer(None,None)%%['NoneType', 'NoneType', 'NoneType', 'type', 'NoneType', 'NoneType']" name="DebuggingServer"/>
      <class base="smtpd.SMTPServer" init="obj = smtpd.PureProxy()%%[]" name="PureProxy">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="smtpd.PureProxy" init="obj = smtpd.MailmanProxy()%%[]" name="MailmanProxy">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = smtpd.Options()%%[]" name="Options"/>
      <api name="usage">
        <expr>smtpd.usage(code,msg)%%['None', 'None']</expr>
        <args>['code:None', 'msg:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parseargs">
        <expr>ret = smtpd.parseargs()%%[]</expr>
        <args>[]</args>
        <return>['options:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>NotImplementedError</exception>
        <exception>OSError</exception>
        <exception>PermissionError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>asyncore.ExitNow</exception>
        <exception>getopt.GetoptError</exception>
        <exception>getopt.error</exception>
        <exception>smtplib.SMTPAuthenticationError</exception>
        <exception>smtplib.SMTPConnectError</exception>
        <exception>smtplib.SMTPDataError</exception>
        <exception>smtplib.SMTPException</exception>
        <exception>smtplib.SMTPHeloError</exception>
        <exception>smtplib.SMTPNotSupportedError</exception>
        <exception>smtplib.SMTPRecipientsRefused</exception>
        <exception>smtplib.SMTPResponseException</exception>
        <exception>smtplib.SMTPSenderRefused</exception>
        <exception>smtplib.SMTPServerDisconnected</exception>
      </errors>
    </module>
    <module importfrom="['gettext:gettext']" imports="['getopt', 'os', 'sys']" name="getopt">
      <class base="Exception" init="obj = getopt.GetoptError()%%[]" name="GetoptError"/>
      <api name="getopt">
        <expr>getopt.getopt(args,shortopts,longopts)%%['list', 'str', 'list']</expr>
        <args>['args:list', 'shortopts:str', 'longopts:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="gnu_getopt">
        <expr>getopt.gnu_getopt(args,shortopts,longopts)%%['list', 'str', 'list']</expr>
        <args>['args:list', 'shortopts:str', 'longopts:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="do_longs">
        <expr>getopt.do_longs(opts,opt,longopts,args)%%['list', 'str', 'list', 'list']</expr>
        <args>['opts:list', 'opt:str', 'longopts:list', 'args:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="long_has_args">
        <expr>getopt.long_has_args(opt,longopts)%%['str', 'list']</expr>
        <args>['opt:str', 'longopts:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="do_shorts">
        <expr>getopt.do_shorts(opts,optstring,shortopts,args)%%['list', 'str', 'str', 'list']</expr>
        <args>['opts:list', 'optstring:str', 'shortopts:str', 'args:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="short_has_arg">
        <expr>ret = getopt.short_has_arg(opt,shortopts)%%['str', 'str']</expr>
        <args>['opt:str', 'shortopts:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>getopt.GetoptError</exception>
      </errors>
    </module>
    <module importfrom="['os.path:pardir', 'os.path:realpath']" imports="['os', 'pprint', 're', 'sys', 'sysconfig', 'types', 'warnings']" name="sysconfig">
      <api name="is_python_build">
        <expr>ret = sysconfig.is_python_build(check_home)%%['bool']</expr>
        <args>['check_home:bool']</args>
        <return>['_is_python_source_dir:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_makefile_filename">
        <expr>ret = sysconfig.get_makefile_filename()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parse_config_h">
        <expr>ret = sysconfig.parse_config_h(fp,vars)%%['None', 'None']</expr>
        <args>['fp:None', 'vars:None']</args>
        <return>['vars:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_config_h_filename">
        <expr>ret = sysconfig.get_config_h_filename()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_scheme_names">
        <expr>ret = sysconfig.get_scheme_names()%%[]</expr>
        <args>[]</args>
        <return>['tuple:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_path_names">
        <expr>ret = sysconfig.get_path_names()%%[]</expr>
        <args>[]</args>
        <return>['_SCHEME_KEYS:tuple']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_paths">
        <expr>ret = sysconfig.get_paths(scheme,vars,expand)%%['str', 'NoneType', 'bool']</expr>
        <args>['scheme:str', 'vars:NoneType', 'expand:bool']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['_get_default_scheme', None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_path">
        <expr>ret = sysconfig.get_path(name,scheme,vars,expand)%%['str', 'str', 'NoneType', 'bool']</expr>
        <args>['name:str', 'scheme:str', 'vars:NoneType', 'expand:bool']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['_get_default_scheme', None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_config_vars">
        <expr>ret = sysconfig.get_config_vars()%%[]</expr>
        <args>[]</args>
        <return>['vals:NoneType', '_CONFIG_VARS:dict']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_config_var">
        <expr>ret = sysconfig.get_config_var(name)%%['str']</expr>
        <args>['name:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_platform">
        <expr>ret = sysconfig.get_platform()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_python_version">
        <expr>ret = sysconfig.get_python_version()%%[]</expr>
        <args>[]</args>
        <return>['_PY_VERSION_SHORT:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['re', 'sys', 'token']" name="token">
      <api name="ISTERMINAL">
        <expr>ret = token.ISTERMINAL(x)%%['None']</expr>
        <args>['x:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ISNONTERMINAL">
        <expr>ret = token.ISNONTERMINAL(x)%%['None']</expr>
        <args>['x:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ISEOF">
        <expr>ret = token.ISEOF(x)%%['None']</expr>
        <args>['x:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['functools', 'sys', 'types']" name="types">
      <class init="obj = types.DynamicClassAttribute()%%['None', 'None', 'None', 'None']" name="DynamicClassAttribute">
        <api name="__init__">
          <expr>None</expr>
          <args>['fget:None', 'fset:None', 'fdel:None', 'doc:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getter">
          <expr>ret = obj.getter(fget)%%['function']</expr>
          <args>['fget:function']</args>
          <return>['result:DynamicClassAttribute']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setter">
          <expr>ret = obj.setter(fset)%%['function']</expr>
          <args>['fset:function']</args>
          <return>['result:DynamicClassAttribute']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="deleter">
          <expr>ret = obj.deleter(fdel)%%['function']</expr>
          <args>['fdel:function']</args>
          <return>['result:DynamicClassAttribute']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="new_class">
        <expr>ret = types.new_class(name,bases,kwds,exec_body)%%['str', 'tuple', 'dict', 'function']</expr>
        <args>['name:str', 'bases:tuple', 'kwds:dict', 'exec_body:function']</args>
        <return>['meta:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="resolve_bases">
        <expr>ret = types.resolve_bases(bases)%%['tuple']</expr>
        <args>['bases:tuple']</args>
        <return>['bases:tuple', 'tuple:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="prepare_class">
        <expr>types.prepare_class(name,bases,kwds)%%['str', 'tuple', 'dict']</expr>
        <args>['name:str', 'bases:tuple', 'kwds:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="coroutine">
        <expr>ret = types.coroutine(func)%%['function']</expr>
        <args>['func:function']</args>
        <return>['func:function', 'wrapped:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['copyreg']" name="copyreg">
      <api name="pickle">
        <expr>copyreg.pickle(ob_type,pickle_function,constructor_ob)%%['type', 'builtin_function_or_method', 'builtin_function_or_method']</expr>
        <args>['ob_type:type', 'pickle_function:builtin_function_or_method', 'constructor_ob:builtin_function_or_method']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="constructor">
        <expr>copyreg.constructor(object)%%['builtin_function_or_method']</expr>
        <args>['object:builtin_function_or_method']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="pickle_complex">
        <expr>copyreg.pickle_complex(c)%%['complex']</expr>
        <args>['c:complex']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="add_extension">
        <expr>copyreg.add_extension(module,name,code)%%['str', 'str', 'int']</expr>
        <args>['module:str', 'name:str', 'code:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="remove_extension">
        <expr>copyreg.remove_extension(module,name,code)%%['str', 'str', 'int']</expr>
        <args>['module:str', 'name:str', 'code:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="clear_extension_cache">
        <expr>copyreg.clear_extension_cache()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>NameError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['itertools:count', 'itertools:islice', 'time:monotonic', 'traceback:format_exc']" imports="['os:_os', 'sys:_sys', 'threading', 'warnings']" name="threading">
      <class init="obj = threading.Condition()%%['NoneType']" name="Condition">
        <api name="__init__">
          <expr>None</expr>
          <args>['lock:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="wait_for">
          <expr>ret = obj.wait_for(predicate,timeout)%%['function', 'float']</expr>
          <args>['predicate:function', 'timeout:float']</args>
          <return>['result:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="notify_all">
          <expr>obj.notify_all()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = threading.Semaphore()%%['NoneType']" name="Semaphore">
        <api name="__init__">
          <expr>None</expr>
          <args>['value:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="threading.Semaphore" init="obj = threading.BoundedSemaphore()%%['NoneType']" name="BoundedSemaphore">
        <api name="__init__">
          <expr>None</expr>
          <args>['value:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = threading.Event()%%[]" name="Event">
        <api name="is_set">
          <expr>ret = obj.is_set()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set">
          <expr>obj.set()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clear">
          <expr>obj.clear()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = threading.Barrier()%%[]" name="Barrier">
        <api name="reset">
          <expr>obj.reset()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="abort">
          <expr>obj.abort()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parties">
          <expr>ret = obj.parties()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="n_waiting">
          <expr>ret = obj.n_waiting()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="broken">
          <expr>ret = obj.broken()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="RuntimeError" init="obj = threading.BrokenBarrierError()%%[]" name="BrokenBarrierError"/>
      <class init="obj = threading.Thread()%%[]" name="Thread">
        <api name="start">
          <expr>obj.start()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="join">
          <expr>obj.join(timeout)%%['float']</expr>
          <args>['timeout:float']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="name">
          <expr>obj.name(name)%%['str']</expr>
          <args>['name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ident">
          <expr>ret = obj.ident()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isAlive">
          <expr>ret = obj.isAlive()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="daemon">
          <expr>obj.daemon(daemonic)%%['bool']</expr>
          <args>['daemonic:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isDaemon">
          <expr>ret = obj.isDaemon()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setDaemon">
          <expr>obj.setDaemon(daemonic)%%['bool']</expr>
          <args>['daemonic:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getName">
          <expr>ret = obj.getName()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setName">
          <expr>obj.setName(name)%%['str']</expr>
          <args>['name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="threading.Thread" init="obj = threading.Timer()%%[]" name="Timer">
        <api name="cancel">
          <expr>obj.cancel()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="setprofile">
        <expr>threading.setprofile(func)%%['None']</expr>
        <args>['func:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="settrace">
        <expr>threading.settrace(func)%%['method']</expr>
        <args>['func:method']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="RLock">
        <expr>ret = threading.RLock()%%[]</expr>
        <args>[]</args>
        <return>['_PyRLock:type', '_CRLock:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="current_thread">
        <expr>ret = threading.current_thread()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="active_count">
        <expr>ret = threading.active_count()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="enumerate">
        <expr>ret = threading.enumerate()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main_thread">
        <expr>ret = threading.main_thread()%%[]</expr>
        <args>[]</args>
        <return>['_main_thread:_MainThread']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>Exception</exception>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>RuntimeError</exception>
        <exception>SystemExit</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>threading.BrokenBarrierError</exception>
      </errors>
    </module>
    <module importfrom="['io:BufferedIOBase', 'io:BytesIO', 'time:monotonic']" imports="['os', 'selectors', 'socket', 'socketserver', 'sys', 'threading', 'traceback']" name="socketserver">
      <class init="obj = socketserver.BaseServer(None,None)%%['NoneType', 'NoneType']" name="BaseServer">
        <api name="__init__">
          <expr>None</expr>
          <args>['server_address:NoneType', 'RequestHandlerClass:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="server_activate">
          <expr>obj.server_activate()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="serve_forever">
          <expr>obj.serve_forever(poll_interval)%%['None']</expr>
          <args>['poll_interval:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="shutdown">
          <expr>obj.shutdown()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="handle_request">
          <expr>ret = obj.handle_request()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="verify_request">
          <expr>ret = obj.verify_request(request,client_address)%%['None', 'None']</expr>
          <args>['request:None', 'client_address:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="handle_error">
          <expr>obj.handle_error(request,client_address)%%['None', 'None']</expr>
          <args>['request:None', 'client_address:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="socketserver.BaseServer" init="obj = socketserver.TCPServer(None,None)%%['NoneType', 'NoneType', 'NoneType']" name="TCPServer">
        <api name="__init__">
          <expr>None</expr>
          <args>['server_address:NoneType', 'RequestHandlerClass:NoneType', 'bind_and_activate:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="server_bind">
          <expr>obj.server_bind()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="server_activate">
          <expr>obj.server_activate()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="socketserver.TCPServer" init="obj = socketserver.UDPServer(None,None)%%['NoneType', 'NoneType', 'NoneType']" name="UDPServer"/>
      <class init="obj = socketserver.ForkingMixIn()%%[]" name="ForkingMixIn"/>
      <class init="obj = socketserver.ThreadingMixIn()%%[]" name="ThreadingMixIn">
        <api name="process_request_thread">
          <expr>obj.process_request_thread(request,client_address)%%['None', 'None']</expr>
          <args>['request:None', 'client_address:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="socketserver.ForkingMixIn" init="obj = socketserver.ForkingUDPServer()%%[]" name="ForkingUDPServer"/>
      <class base="socketserver.ForkingMixIn" init="obj = socketserver.ForkingTCPServer()%%[]" name="ForkingTCPServer"/>
      <class base="socketserver.ThreadingMixIn" init="obj = socketserver.ThreadingUDPServer()%%[]" name="ThreadingUDPServer"/>
      <class base="socketserver.ThreadingMixIn" init="obj = socketserver.ThreadingTCPServer()%%[]" name="ThreadingTCPServer"/>
      <class base="socketserver.TCPServer" init="obj = socketserver.UnixStreamServer(None,None)%%['NoneType', 'NoneType', 'NoneType']" name="UnixStreamServer"/>
      <class base="socketserver.UDPServer" init="obj = socketserver.UnixDatagramServer()%%[]" name="UnixDatagramServer"/>
      <class base="socketserver.ThreadingMixIn" init="obj = socketserver.ThreadingUnixStreamServer()%%[]" name="ThreadingUnixStreamServer"/>
      <class base="socketserver.ThreadingMixIn" init="obj = socketserver.ThreadingUnixDatagramServer()%%[]" name="ThreadingUnixDatagramServer"/>
      <class init="obj = socketserver.BaseRequestHandler(None,None,None)%%['NoneType', 'NoneType', 'NoneType']" name="BaseRequestHandler">
        <api name="__init__">
          <expr>None</expr>
          <args>['request:NoneType', 'client_address:NoneType', 'server:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="socketserver.BaseRequestHandler" init="obj = socketserver.StreamRequestHandler(None,None,None)%%['NoneType', 'NoneType', 'NoneType']" name="StreamRequestHandler">
        <api name="setup">
          <expr>obj.setup()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finish">
          <expr>obj.finish()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="socketserver.BaseRequestHandler" init="obj = socketserver.DatagramRequestHandler(None,None,None)%%['NoneType', 'NoneType', 'NoneType']" name="DatagramRequestHandler">
        <api name="setup">
          <expr>obj.setup()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finish">
          <expr>obj.finish()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>ChildProcessError</exception>
        <exception>Exception</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>socket.error</exception>
        <exception>threading.BrokenBarrierError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['contextlib', 'getpass', 'io', 'os', 'pwd', 'sys', 'termios', 'warnings']" name="getpass">
      <class base="UserWarning" init="obj = getpass.GetPassWarning()%%[]" name="GetPassWarning"/>
      <api name="unix_getpass">
        <expr>ret = getpass.unix_getpass(prompt,stream)%%['str', 'Mock']</expr>
        <args>['prompt:str', 'stream:Mock']</args>
        <return>['passwd:MagicMock']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="win_getpass">
        <expr>ret = getpass.win_getpass(prompt,stream)%%['None', 'None']</expr>
        <args>['prompt:None', 'stream:None']</args>
        <return>['fallback_getpass:None', 'pw:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="fallback_getpass">
        <expr>ret = getpass.fallback_getpass(prompt,stream)%%['str', 'NoneType']</expr>
        <args>['prompt:str', 'stream:NoneType']</args>
        <return>['_raw_input:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getuser">
        <expr>ret = getpass.getuser()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>EOFError</exception>
        <exception>ImportError</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>UnicodeEncodeError</exception>
        <exception>ValueError</exception>
        <exception>getpass.GetPassWarning</exception>
        <exception>termios.error</exception>
      </errors>
    </module>
    <module importfrom="['copy:deepcopy']" imports="['gc', 'itertools', 'sys', 'weakref']" name="weakref">
      <class base="builtins.weakref" init="obj = weakref.WeakMethod()%%[]" name="WeakMethod"/>
      <class base="collections.abc.MutableMapping" init="obj = weakref.WeakValueDictionary()%%[]" name="WeakValueDictionary">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="copy">
          <expr>ret = obj.copy()%%[]</expr>
          <args>[]</args>
          <return>['new:WeakValueDictionary']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get">
          <expr>ret = obj.get(key,default)%%['tuple', 'int']</expr>
          <args>['key:tuple', 'default:int']</args>
          <return>['default:int', 'o:Class']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="items">
          <expr>obj.items()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="keys">
          <expr>obj.keys()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="itervaluerefs">
          <expr>obj.itervaluerefs()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setdefault">
          <expr>ret = obj.setdefault(key,default)%%['int', 'RefCycle']</expr>
          <args>['key:int', 'default:RefCycle']</args>
          <return>['default:RefCycle', 'o:RefCycle']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="valuerefs">
          <expr>ret = obj.valuerefs()%%[]</expr>
          <args>[]</args>
          <return>['list:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="builtins.weakref" init="obj = weakref.KeyedRef(None,None,None)%%['None', 'None', 'None']" name="KeyedRef">
        <api name="__init__">
          <expr>None</expr>
          <args>['ob:None', 'callback:None', 'key:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="collections.abc.MutableMapping" init="obj = weakref.WeakKeyDictionary()%%['None']" name="WeakKeyDictionary">
        <api name="__init__">
          <expr>None</expr>
          <args>['dict:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="copy">
          <expr>ret = obj.copy()%%[]</expr>
          <args>[]</args>
          <return>['new:WeakKeyDictionary']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="items">
          <expr>obj.items()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="keys">
          <expr>obj.keys()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="keyrefs">
          <expr>ret = obj.keyrefs()%%[]</expr>
          <args>[]</args>
          <return>['list:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = weakref.finalize()%%[]" name="finalize">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="detach">
          <expr>obj.detach()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="peek">
          <expr>obj.peek()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="alive">
          <expr>ret = obj.alive()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="atexit">
          <expr>obj.atexit(value)%%['None']</expr>
          <args>['value:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>Exception</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['collections.abc:MutableMapping', 'collections:ChainMap', 'collections:OrderedDict']" imports="['configparser', 'functools', 'io', 'itertools', 'os', 're', 'sys', 'warnings']" name="configparser">
      <class base="Exception" init="obj = configparser.Error()%%[]" name="Error"/>
      <class base="Error" init="obj = configparser.NoSectionError()%%[]" name="NoSectionError"/>
      <class base="Error" init="obj = configparser.DuplicateSectionError()%%[]" name="DuplicateSectionError"/>
      <class base="Error" init="obj = configparser.DuplicateOptionError()%%[]" name="DuplicateOptionError"/>
      <class base="Error" init="obj = configparser.NoOptionError()%%[]" name="NoOptionError"/>
      <class base="Error" init="obj = configparser.InterpolationError()%%[]" name="InterpolationError"/>
      <class base="InterpolationError" init="obj = configparser.InterpolationMissingOptionError()%%[]" name="InterpolationMissingOptionError"/>
      <class base="InterpolationError" init="obj = configparser.InterpolationSyntaxError()%%[]" name="InterpolationSyntaxError"/>
      <class base="InterpolationError" init="obj = configparser.InterpolationDepthError()%%[]" name="InterpolationDepthError"/>
      <class base="Error" init="obj = configparser.ParsingError()%%[]" name="ParsingError"/>
      <class base="ParsingError" init="obj = configparser.MissingSectionHeaderError()%%[]" name="MissingSectionHeaderError"/>
      <class init="obj = configparser.Interpolation()%%[]" name="Interpolation">
        <api name="before_get">
          <expr>ret = obj.before_get(parser,section,option,value,defaults)%%['RawConfigParser', 'str', 'str', 'str', 'ChainMap']</expr>
          <args>['parser:RawConfigParser', 'section:str', 'option:str', 'value:str', 'defaults:ChainMap']</args>
          <return>['value:str']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="before_set">
          <expr>ret = obj.before_set(parser,section,option,value)%%['ConfigParser', 'str', 'str', 'str']</expr>
          <args>['parser:ConfigParser', 'section:str', 'option:str', 'value:str']</args>
          <return>['value:str']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="before_read">
          <expr>ret = obj.before_read(parser,section,option,value)%%['RawConfigParser', 'str', 'str', 'str']</expr>
          <args>['parser:RawConfigParser', 'section:str', 'option:str', 'value:str']</args>
          <return>['value:str']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="before_write">
          <expr>ret = obj.before_write(parser,section,option,value)%%['ConfigParser', 'str', 'str', 'str']</expr>
          <args>['parser:ConfigParser', 'section:str', 'option:str', 'value:str']</args>
          <return>['value:str']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="configparser.Interpolation" init="obj = configparser.BasicInterpolation()%%[]" name="BasicInterpolation">
        <api name="before_get">
          <expr>ret = obj.before_get(parser,section,option,value,defaults)%%['ConfigParser', 'str', 'str', 'str', 'ChainMap']</expr>
          <args>['parser:ConfigParser', 'section:str', 'option:str', 'value:str', 'defaults:ChainMap']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="before_set">
          <expr>ret = obj.before_set(parser,section,option,value)%%['ConfigParser', 'str', 'str', 'str']</expr>
          <args>['parser:ConfigParser', 'section:str', 'option:str', 'value:str']</args>
          <return>['value:str']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="configparser.Interpolation" init="obj = configparser.ExtendedInterpolation()%%[]" name="ExtendedInterpolation">
        <api name="before_get">
          <expr>ret = obj.before_get(parser,section,option,value,defaults)%%['ConfigParser', 'str', 'str', 'str', 'OrderedDict']</expr>
          <args>['parser:ConfigParser', 'section:str', 'option:str', 'value:str', 'defaults:OrderedDict']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="before_set">
          <expr>ret = obj.before_set(parser,section,option,value)%%['ConfigParser', 'str', 'str', 'str']</expr>
          <args>['parser:ConfigParser', 'section:str', 'option:str', 'value:str']</args>
          <return>['value:str']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="configparser.Interpolation" init="obj = configparser.LegacyInterpolation()%%[]" name="LegacyInterpolation">
        <api name="before_get">
          <expr>ret = obj.before_get(parser,section,option,value,vars)%%['ConfigParser', 'str', 'str', 'str', 'OrderedDict']</expr>
          <args>['parser:ConfigParser', 'section:str', 'option:str', 'value:str', 'vars:OrderedDict']</args>
          <return>['value:str']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="before_set">
          <expr>ret = obj.before_set(parser,section,option,value)%%['ConfigParser', 'str', 'str', 'str']</expr>
          <args>['parser:ConfigParser', 'section:str', 'option:str', 'value:str']</args>
          <return>['value:str']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="collections.abc.MutableMapping" init="obj = configparser.RawConfigParser()%%['NoneType', 'NoneType', 'NoneType']" name="RawConfigParser">
        <api name="__init__">
          <expr>None</expr>
          <args>['defaults:NoneType', 'dict_type:NoneType', 'allow_no_value:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['delimiters:NoneType', 'comment_prefixes:NoneType', 'inline_comment_prefixes:NoneType', 'strict:NoneType', 'empty_lines_in_values:NoneType', 'default_section:NoneType', 'interpolation:NoneType', 'converters:NoneType']</kwoargs>
          <defa>[None, '_default_dict', None]</defa>
          <kwodefa>[None, None, None, None, None, 'DEFAULTSECT', '_UNSET', '_UNSET']</kwodefa>
        </api>
        <api name="defaults">
          <expr>ret = obj.defaults()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sections">
          <expr>ret = obj.sections()%%[]</expr>
          <args>[]</args>
          <return>['list:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_section">
          <expr>ret = obj.has_section(section)%%['str']</expr>
          <args>['section:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="options">
          <expr>ret = obj.options(section)%%['str']</expr>
          <args>['section:str']</args>
          <return>['list:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read">
          <expr>ret = obj.read(filenames,encoding)%%['str', 'str']</expr>
          <args>['filenames:str', 'encoding:str']</args>
          <return>['read_ok:list']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read_string">
          <expr>obj.read_string(string,source)%%['str', 'str']</expr>
          <args>['string:str', 'source:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="readfp">
          <expr>obj.readfp(fp,filename)%%['None', 'None']</expr>
          <args>['fp:None', 'filename:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getint">
          <expr>ret = obj.getint(section,option)%%['str', 'str']</expr>
          <args>['section:str', 'option:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['raw:bool', 'vars:NoneType', 'fallback:object']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None, None, '_UNSET']</kwodefa>
        </api>
        <api name="getfloat">
          <expr>ret = obj.getfloat(section,option)%%['str', 'str']</expr>
          <args>['section:str', 'option:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['raw:bool', 'vars:NoneType', 'fallback:object']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None, None, '_UNSET']</kwodefa>
        </api>
        <api name="getboolean">
          <expr>ret = obj.getboolean(section,option)%%['str', 'str']</expr>
          <args>['section:str', 'option:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['raw:bool', 'vars:NoneType', 'fallback:object']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None, None, '_UNSET']</kwodefa>
        </api>
        <api name="popitem">
          <expr>obj.popitem()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_option">
          <expr>ret = obj.has_option(section,option)%%['str', 'str']</expr>
          <args>['section:str', 'option:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="remove_option">
          <expr>ret = obj.remove_option(section,option)%%['str', 'str']</expr>
          <args>['section:str', 'option:str']</args>
          <return>['existed:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="converters">
          <expr>ret = obj.converters()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="configparser.RawConfigParser" init="obj = configparser.ConfigParser()%%['NoneType', 'NoneType', 'NoneType']" name="ConfigParser"/>
      <class base="configparser.ConfigParser" init="obj = configparser.SafeConfigParser()%%[]" name="SafeConfigParser">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="collections.abc.MutableMapping" init="obj = configparser.SectionProxy(None,None)%%['NoneType', 'NoneType']" name="SectionProxy">
        <api name="__init__">
          <expr>None</expr>
          <args>['parser:NoneType', 'name:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parser">
          <expr>ret = obj.parser()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="name">
          <expr>ret = obj.name()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="collections.abc.MutableMapping" init="obj = configparser.ConverterMapping(None)%%['NoneType']" name="ConverterMapping">
        <api name="__init__">
          <expr>None</expr>
          <args>['parser:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>configparser.DuplicateOptionError</exception>
        <exception>configparser.DuplicateSectionError</exception>
        <exception>configparser.Error</exception>
        <exception>configparser.InterpolationDepthError</exception>
        <exception>configparser.InterpolationError</exception>
        <exception>configparser.InterpolationMissingOptionError</exception>
        <exception>configparser.InterpolationSyntaxError</exception>
        <exception>configparser.MissingSectionHeaderError</exception>
        <exception>configparser.NoOptionError</exception>
        <exception>configparser.NoSectionError</exception>
        <exception>configparser.ParsingError</exception>
      </errors>
    </module>
    <module importfrom="['collections:deque']" imports="['asynchat', 'asyncore']" name="asynchat">
      <class base="asyncore.dispatcher" init="obj = asynchat.async_chat()%%['NoneType', 'type']" name="async_chat">
        <api name="__init__">
          <expr>None</expr>
          <args>['sock:NoneType', 'map:type']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_terminator">
          <expr>obj.set_terminator(term)%%['int']</expr>
          <args>['term:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="handle_read">
          <expr>obj.handle_read()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="handle_write">
          <expr>obj.handle_write()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="push">
          <expr>obj.push(data)%%['None']</expr>
          <args>['data:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="push_with_producer">
          <expr>obj.push_with_producer(producer)%%['None']</expr>
          <args>['producer:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="readable">
          <expr>ret = obj.readable()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="writable">
          <expr>ret = obj.writable()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="close_when_done">
          <expr>obj.close_when_done()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="discard_buffers">
          <expr>obj.discard_buffers()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = asynchat.simple_producer(None)%%['NoneType', 'NoneType']" name="simple_producer">
        <api name="__init__">
          <expr>None</expr>
          <args>['data:NoneType', 'buffer_size:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="more">
          <expr>ret = obj.more()%%[]</expr>
          <args>[]</args>
          <return>['result:bytes']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="find_prefix_at_end">
        <expr>ret = asynchat.find_prefix_at_end(haystack,needle)%%['bytes', 'bytes']</expr>
        <args>['haystack:bytes', 'needle:bytes']</args>
        <return>['l:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>BlockingIOError</exception>
        <exception>NotImplementedError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>asyncore.ExitNow</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['copy', 'getopt', 'glob', 'os', 'pwd', 'shlex', 'shutil', 'socket', 'subprocess', 'sys', 'tempfile', 'threading', 'webbrowser']" name="webbrowser">
      <class base="Exception" init="obj = webbrowser.Error()%%[]" name="Error"/>
      <class base="builtins.object" init="obj = webbrowser.BaseBrowser()%%['NoneType']" name="BaseBrowser">
        <api name="__init__">
          <expr>None</expr>
          <args>['name:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="open_new">
          <expr>ret = obj.open_new(url)%%['None']</expr>
          <args>['url:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="open_new_tab">
          <expr>ret = obj.open_new_tab(url)%%['None']</expr>
          <args>['url:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="webbrowser.BaseBrowser" init="obj = webbrowser.GenericBrowser(None)%%['NoneType']" name="GenericBrowser">
        <api name="__init__">
          <expr>None</expr>
          <args>['name:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="webbrowser.GenericBrowser" init="obj = webbrowser.BackgroundBrowser(None)%%['NoneType']" name="BackgroundBrowser"/>
      <class base="webbrowser.BaseBrowser" init="obj = webbrowser.UnixBrowser()%%['NoneType']" name="UnixBrowser"/>
      <class base="webbrowser.UnixBrowser" init="obj = webbrowser.Mozilla()%%[]" name="Mozilla"/>
      <class base="webbrowser.UnixBrowser" init="obj = webbrowser.Netscape()%%[]" name="Netscape"/>
      <class base="webbrowser.UnixBrowser" init="obj = webbrowser.Galeon()%%[]" name="Galeon"/>
      <class base="webbrowser.UnixBrowser" init="obj = webbrowser.Chrome()%%[]" name="Chrome"/>
      <class base="webbrowser.UnixBrowser" init="obj = webbrowser.Opera()%%[]" name="Opera"/>
      <class base="webbrowser.UnixBrowser" init="obj = webbrowser.Elinks()%%[]" name="Elinks"/>
      <class base="webbrowser.BaseBrowser" init="obj = webbrowser.Konqueror()%%['NoneType']" name="Konqueror"/>
      <class base="webbrowser.BaseBrowser" init="obj = webbrowser.Grail()%%['NoneType']" name="Grail"/>
      <api name="register">
        <expr>webbrowser.register(name,klass,instance)%%['str', 'type', 'ExampleBrowser']</expr>
        <args>['name:str', 'klass:type', 'instance:ExampleBrowser']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['preferred:bool']</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <api name="get">
        <expr>ret = webbrowser.get(using)%%['str']</expr>
        <args>['using:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="open">
        <expr>ret = webbrowser.open(url,new,autoraise)%%['None', 'None', 'None']</expr>
        <args>['url:None', 'new:None', 'autoraise:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="open_new">
        <expr>ret = webbrowser.open_new(url)%%['None']</expr>
        <args>['url:None']</args>
        <return>['open:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="open_new_tab">
        <expr>ret = webbrowser.open_new_tab(url)%%['None']</expr>
        <args>['url:None']</args>
        <return>['open:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="register_X_browsers">
        <expr>webbrowser.register_X_browsers()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="register_standard_browsers">
        <expr>webbrowser.register_standard_browsers()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>webbrowser.main()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>FileNotFoundError</exception>
        <exception>KeyError</exception>
        <exception>NotImplementedError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>copy.Error</exception>
        <exception>getopt.GetoptError</exception>
        <exception>getopt.error</exception>
        <exception>shutil.Error</exception>
        <exception>shutil.ExecError</exception>
        <exception>shutil.ReadError</exception>
        <exception>shutil.RegistryError</exception>
        <exception>shutil.SameFileError</exception>
        <exception>shutil.SpecialFileError</exception>
        <exception>subprocess.TimeoutExpired</exception>
        <exception>threading.BrokenBarrierError</exception>
        <exception>webbrowser.Error</exception>
      </errors>
    </module>
    <module importfrom="['gettext:gettext', 'gettext:ngettext', 'warnings:warn']" imports="['argparse', 'copy', 'os:_os', 're:_re', 'sys:_sys', 'textwrap']" name="argparse">
      <class base="builtins.object" init="obj = argparse.HelpFormatter(None)%%['None', 'None', 'None', 'None']" name="HelpFormatter">
        <api name="__init__">
          <expr>None</expr>
          <args>['prog:None', 'indent_increment:None', 'max_help_position:None', 'width:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="start_section">
          <expr>obj.start_section(heading)%%['None']</expr>
          <args>['heading:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_section">
          <expr>obj.end_section()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_text">
          <expr>obj.add_text(text)%%['str']</expr>
          <args>['text:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_usage">
          <expr>obj.add_usage(usage,actions,groups,prefix)%%['NoneType', 'list', 'list', 'NoneType']</expr>
          <args>['usage:NoneType', 'actions:list', 'groups:list', 'prefix:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_arguments">
          <expr>obj.add_arguments(actions)%%['None']</expr>
          <args>['actions:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="argparse.HelpFormatter" init="obj = argparse.RawDescriptionHelpFormatter(None)%%['None', 'None', 'None', 'None']" name="RawDescriptionHelpFormatter"/>
      <class base="argparse.RawDescriptionHelpFormatter" init="obj = argparse.RawTextHelpFormatter()%%[]" name="RawTextHelpFormatter"/>
      <class base="argparse.HelpFormatter" init="obj = argparse.ArgumentDefaultsHelpFormatter(None)%%['None', 'None', 'None', 'None']" name="ArgumentDefaultsHelpFormatter"/>
      <class base="argparse.HelpFormatter" init="obj = argparse.MetavarTypeHelpFormatter(None)%%['None', 'None', 'None', 'None']" name="MetavarTypeHelpFormatter"/>
      <class base="Exception" init="obj = argparse.ArgumentError()%%[]" name="ArgumentError"/>
      <class base="Exception" init="obj = argparse.ArgumentTypeError()%%[]" name="ArgumentTypeError"/>
      <class base="argparse._AttributeHolder" init="obj = argparse.Action(None,None)%%['None', 'None', 'None', 'None', 'None', 'None', 'None', 'None', 'None', 'None']" name="Action">
        <api name="__init__">
          <expr>None</expr>
          <args>['option_strings:None', 'dest:None', 'nargs:None', 'const:None', 'default:None', 'type:None', 'choices:None', 'required:None', 'help:None', 'metavar:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="builtins.object" init="obj = argparse.FileType()%%['None', 'None', 'None', 'None']" name="FileType">
        <api name="__init__">
          <expr>None</expr>
          <args>['mode:None', 'bufsize:None', 'encoding:None', 'errors:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="argparse._AttributeHolder" init="obj = argparse.Namespace()%%[]" name="Namespace">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="argparse._AttributeHolder" init="obj = argparse.ArgumentParser()%%['None', 'None', 'None', 'None', 'None', 'None', 'None', 'None', 'None', 'None', 'None', 'None']" name="ArgumentParser">
        <api name="__init__">
          <expr>None</expr>
          <args>['prog:None', 'usage:None', 'description:None', 'epilog:None', 'parents:None', 'formatter_class:None', 'prefix_chars:None', 'fromfile_prefix_chars:None', 'argument_default:None', 'conflict_handler:None', 'add_help:None', 'allow_abbrev:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None, 'HelpFormatter', None, None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_subparsers">
          <expr>ret = obj.add_subparsers()%%[]</expr>
          <args>[]</args>
          <return>['action:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parse_args">
          <expr>ret = obj.parse_args(args,namespace)%%['list', 'TestProgram']</expr>
          <args>['args:list', 'namespace:TestProgram']</args>
          <return>['args:TestProgram']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="convert_arg_line_to_args">
          <expr>ret = obj.convert_arg_line_to_args(arg_line)%%['None']</expr>
          <args>['arg_line:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parse_intermixed_args">
          <expr>ret = obj.parse_intermixed_args(args,namespace)%%['None', 'None']</expr>
          <args>['args:None', 'namespace:None']</args>
          <return>['args:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="format_usage">
          <expr>ret = obj.format_usage()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>KeyError</exception>
        <exception>NotImplementedError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>argparse.ArgumentError</exception>
        <exception>argparse.ArgumentTypeError</exception>
        <exception>copy.Error</exception>
      </errors>
    </module>
    <module importfrom="['io:BytesIO', 'pickle:Pickler', 'pickle:Unpickler']" imports="['collections.abc', 'shelve']" name="shelve">
      <class base="collections.abc.MutableMapping" init="obj = shelve.Shelf(None)%%['type', 'NoneType', 'NoneType', 'NoneType']" name="Shelf">
        <api name="__init__">
          <expr>None</expr>
          <args>['dict:type', 'protocol:NoneType', 'writeback:NoneType', 'keyencoding:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get">
          <expr>ret = obj.get(key,default)%%['str', 'int']</expr>
          <args>['key:str', 'default:int']</args>
          <return>['ret:NoneType', 'default:int']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="shelve.Shelf" init="obj = shelve.BsdDbShelf(None)%%['type', 'NoneType', 'NoneType', 'NoneType']" name="BsdDbShelf">
        <api name="__init__">
          <expr>None</expr>
          <args>['dict:type', 'protocol:NoneType', 'writeback:NoneType', 'keyencoding:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="shelve.Shelf" init="obj = shelve.DbfilenameShelf(None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType']" name="DbfilenameShelf">
        <api name="__init__">
          <expr>None</expr>
          <args>['filename:NoneType', 'flag:NoneType', 'protocol:NoneType', 'writeback:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="open">
        <expr>ret = shelve.open(filename,flag,protocol,writeback)%%['str', 'str', 'int', 'bool']</expr>
        <args>['filename:str', 'flag:str', 'protocol:int', 'writeback:bool']</args>
        <return>['DbfilenameShelf:ABCMeta']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['genericpath', 'os', 'stat']" name="genericpath">
      <api name="exists">
        <expr>ret = genericpath.exists(path)%%['str']</expr>
        <args>['path:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isfile">
        <expr>ret = genericpath.isfile(path)%%['str']</expr>
        <args>['path:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isdir">
        <expr>ret = genericpath.isdir(s)%%['str']</expr>
        <args>['s:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getsize">
        <expr>ret = genericpath.getsize(filename)%%['str']</expr>
        <args>['filename:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getmtime">
        <expr>ret = genericpath.getmtime(filename)%%['str']</expr>
        <args>['filename:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getatime">
        <expr>ret = genericpath.getatime(filename)%%['FakePath']</expr>
        <args>['filename:FakePath']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getctime">
        <expr>ret = genericpath.getctime(filename)%%['FakePath']</expr>
        <args>['filename:FakePath']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="commonprefix">
        <expr>ret = genericpath.commonprefix(m)%%['tuple']</expr>
        <args>['m:tuple']</args>
        <return>['ret:NoneType', 's1:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="samestat">
        <expr>ret = genericpath.samestat(s1,s2)%%['stat_result', 'stat_result']</expr>
        <args>['s1:stat_result', 's2:stat_result']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="samefile">
        <expr>ret = genericpath.samefile(f1,f2)%%['str', 'str']</expr>
        <args>['f1:str', 'f2:str']</args>
        <return>['samestat:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="sameopenfile">
        <expr>ret = genericpath.sameopenfile(fp1,fp2)%%['int', 'int']</expr>
        <args>['fp1:int', 'fp2:int']</args>
        <return>['samestat:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['abc:abstractmethod', 'abc:abstractproperty', 'types:MethodDescriptorType', 'types:MethodWrapperType', 'types:WrapperDescriptorType']" imports="['abc', 'collections', 'collections.abc', 'contextlib', 'functools', 'operator', 're:stdlib_re', 'sys', 'types', 'typing']" name="typing">
      <class base="typing._Final" init="obj = typing.ForwardRef(None)%%['NoneType', 'NoneType']" name="ForwardRef">
        <api name="__init__">
          <expr>None</expr>
          <args>['arg:NoneType', 'is_argument:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="typing._Final" init="obj = typing.TypeVar(None)%%['NoneType']" name="TypeVar">
        <api name="__init__">
          <expr>None</expr>
          <args>['name:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['bound:NoneType', 'covariant:NoneType', 'contravariant:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None, None, None]</kwodefa>
        </api>
      </class>
      <class init="obj = typing.Generic()%%[]" name="Generic"/>
      <class base="typing.Protocol" init="obj = typing.SupportsInt()%%[]" name="SupportsInt"/>
      <class base="typing.Protocol" init="obj = typing.SupportsFloat()%%[]" name="SupportsFloat"/>
      <class base="typing.Protocol" init="obj = typing.SupportsComplex()%%[]" name="SupportsComplex"/>
      <class base="typing.Protocol" init="obj = typing.SupportsBytes()%%[]" name="SupportsBytes"/>
      <class base="typing.Protocol" init="obj = typing.SupportsAbs()%%[]" name="SupportsAbs"/>
      <class base="typing.Protocol" init="obj = typing.SupportsRound()%%[]" name="SupportsRound"/>
      <class base="builtins.type" init="obj = typing.NamedTupleMeta()%%[]" name="NamedTupleMeta"/>
      <class init="obj = typing.NamedTuple()%%[]" name="NamedTuple"/>
      <class base="typing.Generic" init="obj = typing.IO()%%[]" name="IO"/>
      <class base="typing.IO" init="obj = typing.BinaryIO()%%[]" name="BinaryIO"/>
      <class base="typing.IO" init="obj = typing.TextIO()%%[]" name="TextIO"/>
      <class init="obj = typing.io()%%[]" name="io"/>
      <class init="obj = typing.re()%%[]" name="re"/>
      <api name="cast">
        <expr>ret = typing.cast(typ,val)%%['type', 'int']</expr>
        <args>['typ:type', 'val:int']</args>
        <return>['val:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_type_hints">
        <expr>ret = typing.get_type_hints(obj,globalns,localns)%%['function', 'dict', 'dict']</expr>
        <args>['obj:function', 'globalns:dict', 'localns:dict']</args>
        <return>['ret:NoneType', 'hints:dict']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="no_type_check">
        <expr>ret = typing.no_type_check(arg)%%['type']</expr>
        <args>['arg:type']</args>
        <return>['arg:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="no_type_check_decorator">
        <expr>ret = typing.no_type_check_decorator(decorator)%%['None']</expr>
        <args>['decorator:None']</args>
        <return>['wrapped_decorator:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="overload">
        <expr>ret = typing.overload(func)%%['None']</expr>
        <args>['func:None']</args>
        <return>['_overload_dummy:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="NewType">
        <expr>ret = typing.NewType(name,tp)%%['None', 'None']</expr>
        <args>['name:None', 'tp:None']</args>
        <return>['new_type:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>NotImplementedError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['termios:*']" imports="['tty']" name="tty">
      <api name="setraw">
        <expr>tty.setraw(fd,when)%%['int', 'int']</expr>
        <args>['fd:int', 'when:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['TCSAFLUSH']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="setcbreak">
        <expr>tty.setcbreak(fd,when)%%['None', 'None']</expr>
        <args>['fd:None', 'when:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['TCSAFLUSH']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['sys:modules']" imports="['dummy_threading', 'threading']" name="dummy_threading"/>
    <module importfrom="[]" imports="['chunk']" name="chunk">
      <class init="obj = chunk.Chunk(None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType']" name="Chunk">
        <api name="__init__">
          <expr>None</expr>
          <args>['file:NoneType', 'align:NoneType', 'bigendian:NoneType', 'inclheader:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getname">
          <expr>ret = obj.getname()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getsize">
          <expr>ret = obj.getsize()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="close">
          <expr>obj.close()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isatty">
          <expr>ret = obj.isatty()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tell">
          <expr>ret = obj.tell()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>EOFError</exception>
        <exception>OSError</exception>
        <exception>RuntimeError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['chunk:Chunk', 'collections:namedtuple']" imports="['aifc', 'audioop', 'builtins', 'math', 'struct', 'sys', 'warnings']" name="aifc">
      <class base="Exception" init="obj = aifc.Error()%%[]" name="Error"/>
      <class init="obj = aifc.Aifc_read(None)%%['NoneType']" name="Aifc_read">
        <api name="initfp">
          <expr>obj.initfp(file)%%['BytesIO']</expr>
          <args>['file:BytesIO']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="__init__">
          <expr>None</expr>
          <args>['f:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getfp">
          <expr>ret = obj.getfp()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="rewind">
          <expr>obj.rewind()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tell">
          <expr>ret = obj.tell()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getnchannels">
          <expr>ret = obj.getnchannels()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getnframes">
          <expr>ret = obj.getnframes()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getsampwidth">
          <expr>ret = obj.getsampwidth()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getframerate">
          <expr>ret = obj.getframerate()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getcomptype">
          <expr>ret = obj.getcomptype()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getcompname">
          <expr>ret = obj.getcompname()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getparams">
          <expr>ret = obj.getparams()%%[]</expr>
          <args>[]</args>
          <return>['_aifc_params:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getmarkers">
          <expr>ret = obj.getmarkers()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getmark">
          <expr>ret = obj.getmark(id)%%['int']</expr>
          <args>['id:int']</args>
          <return>['marker:tuple']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setpos">
          <expr>obj.setpos(pos)%%['int']</expr>
          <args>['pos:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="readframes">
          <expr>ret = obj.readframes(nframes)%%['int']</expr>
          <args>['nframes:int']</args>
          <return>['ret:NoneType', 'data:bytes']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = aifc.Aifc_write(None)%%['NoneType']" name="Aifc_write">
        <api name="__init__">
          <expr>None</expr>
          <args>['f:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="initfp">
          <expr>obj.initfp(file)%%['BufferedWriter']</expr>
          <args>['file:BufferedWriter']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="aiff">
          <expr>obj.aiff()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="aifc">
          <expr>obj.aifc()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getnchannels">
          <expr>ret = obj.getnchannels()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getsampwidth">
          <expr>ret = obj.getsampwidth()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getframerate">
          <expr>ret = obj.getframerate()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getnframes">
          <expr>ret = obj.getnframes()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getcomptype">
          <expr>ret = obj.getcomptype()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getcompname">
          <expr>ret = obj.getcompname()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setparams">
          <expr>obj.setparams(params)%%['tuple']</expr>
          <args>['params:tuple']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getparams">
          <expr>ret = obj.getparams()%%[]</expr>
          <args>[]</args>
          <return>['_aifc_params:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setmark">
          <expr>obj.setmark(id,pos,name)%%['int', 'int', 'bytes']</expr>
          <args>['id:int', 'pos:int', 'name:bytes']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getmark">
          <expr>ret = obj.getmark(id)%%['int']</expr>
          <args>['id:int']</args>
          <return>['marker:tuple']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getmarkers">
          <expr>ret = obj.getmarkers()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="writeframes">
          <expr>obj.writeframes(data)%%['bytes']</expr>
          <args>['data:bytes']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="open">
        <expr>ret = aifc.open(f,mode)%%['BytesIO', 'str']</expr>
        <args>['f:BytesIO', 'mode:str']</args>
        <return>['Aifc_read:type', 'Aifc_write:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="openfp">
        <expr>ret = aifc.openfp(f,mode)%%['str', 'str']</expr>
        <args>['f:str', 'mode:str']</args>
        <return>['open:MagicMock']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>EOFError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>aifc.Error</exception>
        <exception>struct.error</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['atexit', 'builtins', 'keyword', 're', 'readline', 'rlcompleter']" name="rlcompleter">
      <class init="obj = rlcompleter.Completer()%%['NoneType']" name="Completer">
        <api name="__init__">
          <expr>None</expr>
          <args>['namespace:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="complete">
          <expr>ret = obj.complete(text,state)%%['str', 'int']</expr>
          <args>['text:str', 'state:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="get_class_members">
        <expr>ret = rlcompleter.get_class_members(klass)%%['type']</expr>
        <args>['klass:type']</args>
        <return>['ret:list']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>Exception</exception>
        <exception>ImportError</exception>
        <exception>IndexError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['collections:deque', 'heapq:heappop', 'heapq:heappush', 'time:monotonic']" imports="['queue', 'threading']" name="queue">
      <class base="Exception" init="obj = queue.Full()%%[]" name="Full"/>
      <class init="obj = queue.Queue()%%['NoneType']" name="Queue">
        <api name="__init__">
          <expr>None</expr>
          <args>['maxsize:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="task_done">
          <expr>obj.task_done()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="join">
          <expr>obj.join()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="qsize">
          <expr>ret = obj.qsize()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="empty">
          <expr>ret = obj.empty()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="full">
          <expr>ret = obj.full()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="put_nowait">
          <expr>ret = obj.put_nowait(item)%%['LogRecord']</expr>
          <args>['item:LogRecord']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_nowait">
          <expr>ret = obj.get_nowait()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="queue.Queue" init="obj = queue.PriorityQueue()%%['NoneType']" name="PriorityQueue"/>
      <class base="queue.Queue" init="obj = queue.LifoQueue()%%['NoneType']" name="LifoQueue"/>
      <errors>
        <exception>AttributeError</exception>
        <exception>Empty</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>queue.Full</exception>
        <exception>threading.BrokenBarrierError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['netrc', 'os', 'pwd', 'shlex', 'stat']" name="netrc">
      <class base="Exception" init="obj = netrc.NetrcParseError()%%[]" name="NetrcParseError"/>
      <class init="obj = netrc.netrc()%%['NoneType']" name="netrc">
        <api name="__init__">
          <expr>None</expr>
          <args>['file:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="authenticators">
          <expr>ret = obj.authenticators(host)%%['str']</expr>
          <args>['host:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>netrc.NetrcParseError</exception>
      </errors>
    </module>
    <module importfrom="['collections:deque']" imports="['ast', 'inspect']" name="ast">
      <class base="builtins.object" init="obj = ast.NodeVisitor()%%[]" name="NodeVisitor">
        <api name="generic_visit">
          <expr>obj.generic_visit(node)%%['None']</expr>
          <args>['node:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="ast.NodeVisitor" init="obj = ast.NodeTransformer()%%[]" name="NodeTransformer">
        <api name="generic_visit">
          <expr>ret = obj.generic_visit(node)%%['None']</expr>
          <args>['node:None']</args>
          <return>['node:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="parse">
        <expr>ret = ast.parse(source,filename,mode)%%['str', 'str', 'str']</expr>
        <args>['source:str', 'filename:str', 'mode:str']</args>
        <return>['compile:builtin_function_or_method']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="literal_eval">
        <expr>ret = ast.literal_eval(node_or_string)%%['NameConstant']</expr>
        <args>['node_or_string:NameConstant']</args>
        <return>['_convert:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dump">
        <expr>ret = ast.dump(node,annotate_fields,include_attributes)%%['Expression', 'bool', 'bool']</expr>
        <args>['node:Expression', 'annotate_fields:bool', 'include_attributes:bool']</args>
        <return>['_format:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="copy_location">
        <expr>ret = ast.copy_location(new_node,old_node)%%['Num', 'Num']</expr>
        <args>['new_node:Num', 'old_node:Num']</args>
        <return>['new_node:Num']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="fix_missing_locations">
        <expr>ret = ast.fix_missing_locations(node)%%['Module']</expr>
        <args>['node:Module']</args>
        <return>['node:Module']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="increment_lineno">
        <expr>ret = ast.increment_lineno(node,n)%%['Expression', 'int']</expr>
        <args>['node:Expression', 'n:int']</args>
        <return>['node:Expression']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="iter_fields">
        <expr>ast.iter_fields(node)%%['Module']</expr>
        <args>['node:Module']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="iter_child_nodes">
        <expr>ast.iter_child_nodes(node)%%['Module']</expr>
        <args>['node:Module']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_docstring">
        <expr>ret = ast.get_docstring(node,clean)%%['Module', 'bool']</expr>
        <args>['node:Module', 'clean:bool']</args>
        <return>['ret:NoneType', 'text:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="walk">
        <expr>ast.walk(node)%%['Expression']</expr>
        <args>['node:Expression']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['this']" name="this"/>
    <module importfrom="['errno:EBADF', 'errno:EINVAL', 'errno:ELOOP', 'errno:ENOENT', 'errno:ENOTDIR', 'operator:attrgetter', 'stat:S_ISBLK', 'stat:S_ISCHR', 'stat:S_ISDIR', 'stat:S_ISFIFO', 'stat:S_ISLNK', 'stat:S_ISREG', 'stat:S_ISSOCK', 'urllib.parse:quote_from_bytes']" imports="['fnmatch', 'functools', 'grp', 'io', 'nt', 'ntpath', 'os', 'pathlib', 'posixpath', 'pwd', 're', 'sys']" name="pathlib">
      <class base="builtins.object" init="obj = pathlib.PurePath()%%[]" name="PurePath">
        <api name="as_posix">
          <expr>ret = obj.as_posix()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="as_uri">
          <expr>ret = obj.as_uri()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="anchor">
          <expr>ret = obj.anchor()%%[]</expr>
          <args>[]</args>
          <return>['anchor:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="name">
          <expr>ret = obj.name()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="suffix">
          <expr>ret = obj.suffix()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="suffixes">
          <expr>ret = obj.suffixes()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="stem">
          <expr>ret = obj.stem()%%[]</expr>
          <args>[]</args>
          <return>['ret:None', 'name:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="with_name">
          <expr>ret = obj.with_name(name)%%['None']</expr>
          <args>['name:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="with_suffix">
          <expr>ret = obj.with_suffix(suffix)%%['None']</expr>
          <args>['suffix:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="relative_to">
          <expr>ret = obj.relative_to()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parts">
          <expr>ret = obj.parts()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="joinpath">
          <expr>ret = obj.joinpath()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parent">
          <expr>ret = obj.parent()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parents">
          <expr>ret = obj.parents()%%[]</expr>
          <args>[]</args>
          <return>['_PathParents:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="match">
          <expr>ret = obj.match(path_pattern)%%['None']</expr>
          <args>['path_pattern:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="pathlib.PurePath" init="obj = pathlib.PurePosixPath()%%[]" name="PurePosixPath"/>
      <class base="pathlib.PurePath" init="obj = pathlib.PureWindowsPath()%%[]" name="PureWindowsPath"/>
      <class base="pathlib.PurePath" init="obj = pathlib.Path()%%[]" name="Path">
        <api name="cwd">
          <expr>ret = obj.cwd(cls)%%['None']</expr>
          <args>['cls:None']</args>
          <return>['cls:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="home">
          <expr>ret = obj.home(cls)%%['None']</expr>
          <args>['cls:None']</args>
          <return>['cls:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="samefile">
          <expr>ret = obj.samefile(other_path)%%['None']</expr>
          <args>['other_path:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="iterdir">
          <expr>obj.iterdir()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="glob">
          <expr>obj.glob(pattern)%%['None']</expr>
          <args>['pattern:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="rglob">
          <expr>obj.rglob(pattern)%%['None']</expr>
          <args>['pattern:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="absolute">
          <expr>ret = obj.absolute()%%[]</expr>
          <args>[]</args>
          <return>['self:None', 'obj:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="owner">
          <expr>ret = obj.owner()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="group">
          <expr>ret = obj.group()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read_bytes">
          <expr>ret = obj.read_bytes()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read_text">
          <expr>ret = obj.read_text(encoding,errors)%%['None', 'None']</expr>
          <args>['encoding:None', 'errors:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="write_bytes">
          <expr>ret = obj.write_bytes(data)%%['None']</expr>
          <args>['data:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="write_text">
          <expr>ret = obj.write_text(data,encoding,errors)%%['None', 'None', 'None']</expr>
          <args>['data:None', 'encoding:None', 'errors:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="touch">
          <expr>obj.touch(mode,exist_ok)%%['None', 'None']</expr>
          <args>['mode:None', 'exist_ok:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="symlink_to">
          <expr>obj.symlink_to(target,target_is_directory)%%['None', 'None']</expr>
          <args>['target:None', 'target_is_directory:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="exists">
          <expr>ret = obj.exists()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_file">
          <expr>ret = obj.is_file()%%[]</expr>
          <args>[]</args>
          <return>['S_ISREG:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_mount">
          <expr>ret = obj.is_mount()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_symlink">
          <expr>ret = obj.is_symlink()%%[]</expr>
          <args>[]</args>
          <return>['S_ISLNK:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_block_device">
          <expr>ret = obj.is_block_device()%%[]</expr>
          <args>[]</args>
          <return>['S_ISBLK:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_char_device">
          <expr>ret = obj.is_char_device()%%[]</expr>
          <args>[]</args>
          <return>['S_ISCHR:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_fifo">
          <expr>ret = obj.is_fifo()%%[]</expr>
          <args>[]</args>
          <return>['S_ISFIFO:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_socket">
          <expr>ret = obj.is_socket()%%[]</expr>
          <args>[]</args>
          <return>['S_ISSOCK:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="expanduser">
          <expr>ret = obj.expanduser()%%[]</expr>
          <args>[]</args>
          <return>['ret:None', 'self:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="pathlib.Path" init="obj = pathlib.PosixPath()%%[]" name="PosixPath"/>
      <class base="pathlib.Path" init="obj = pathlib.WindowsPath()%%[]" name="WindowsPath">
        <api name="owner">
          <expr>obj.owner()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="group">
          <expr>obj.group()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_mount">
          <expr>obj.is_mount()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>FileNotFoundError</exception>
        <exception>IndexError</exception>
        <exception>KeyError</exception>
        <exception>NotImplementedError</exception>
        <exception>OSError</exception>
        <exception>PermissionError</exception>
        <exception>RuntimeError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['collections:namedtuple', 'random:SystemRandom']" imports="['', 'string:_string']" name="crypt">
      <errors>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['genericpath:*', 'stat:*']" imports="['', 'Carbon.File', 'genericpath', 'os', 'warnings']" name="macpath">
      <errors>
        <exception>AttributeError</exception>
        <exception>BytesWarning</exception>
        <exception>Carbon.File.Error</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>macpath.norm_error</exception>
      </errors>
    </module>
    <module importfrom="['builtins:abs', 'functools:partial']" imports="['operator']" name="operator">
      <class init="obj = operator.attrgetter(None)%%['NoneType']" name="attrgetter">
        <api name="__init__">
          <expr>None</expr>
          <args>['attr:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = operator.itemgetter(None)%%['NoneType']" name="itemgetter">
        <api name="__init__">
          <expr>None</expr>
          <args>['item:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = operator.methodcaller()%%[]" name="methodcaller">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="lt">
        <expr>ret = operator.lt(a,b)%%['complex', 'complex']</expr>
        <args>['a:complex', 'b:complex']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="le">
        <expr>ret = operator.le(a,b)%%['complex', 'complex']</expr>
        <args>['a:complex', 'b:complex']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="eq">
        <expr>ret = operator.eq(a,b)%%['C', 'C']</expr>
        <args>['a:C', 'b:C']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ne">
        <expr>ret = operator.ne(a,b)%%['C', 'C']</expr>
        <args>['a:C', 'b:C']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ge">
        <expr>ret = operator.ge(a,b)%%['complex', 'complex']</expr>
        <args>['a:complex', 'b:complex']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="gt">
        <expr>ret = operator.gt(a,b)%%['complex', 'complex']</expr>
        <args>['a:complex', 'b:complex']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="not_">
        <expr>ret = operator.not_(a)%%['None']</expr>
        <args>['a:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="truth">
        <expr>ret = operator.truth(a)%%['C']</expr>
        <args>['a:C']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="is_">
        <expr>ret = operator.is_(a,b)%%['str', 'str']</expr>
        <args>['a:str', 'b:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="is_not">
        <expr>ret = operator.is_not(a,b)%%['str', 'str']</expr>
        <args>['a:str', 'b:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="abs">
        <expr>ret = operator.abs(a)%%['int']</expr>
        <args>['a:int']</args>
        <return>['_abs:builtin_function_or_method']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="add">
        <expr>ret = operator.add(a,b)%%['int', 'int']</expr>
        <args>['a:int', 'b:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="and_">
        <expr>ret = operator.and_(a,b)%%['int', 'int']</expr>
        <args>['a:int', 'b:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="floordiv">
        <expr>ret = operator.floordiv(a,b)%%['int', 'int']</expr>
        <args>['a:int', 'b:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="index">
        <expr>ret = operator.index(a)%%['None']</expr>
        <args>['a:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="inv">
        <expr>ret = operator.inv(a)%%['int']</expr>
        <args>['a:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="lshift">
        <expr>ret = operator.lshift(a,b)%%['int', 'int']</expr>
        <args>['a:int', 'b:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="mod">
        <expr>ret = operator.mod(a,b)%%['int', 'int']</expr>
        <args>['a:int', 'b:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="mul">
        <expr>ret = operator.mul(a,b)%%['int', 'int']</expr>
        <args>['a:int', 'b:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="matmul">
        <expr>ret = operator.matmul(a,b)%%['int', 'int']</expr>
        <args>['a:int', 'b:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="neg">
        <expr>ret = operator.neg(a)%%['int']</expr>
        <args>['a:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="or_">
        <expr>ret = operator.or_(a,b)%%['int', 'int']</expr>
        <args>['a:int', 'b:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="pos">
        <expr>ret = operator.pos(a)%%['int']</expr>
        <args>['a:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="pow">
        <expr>ret = operator.pow(a,b)%%['int', 'int']</expr>
        <args>['a:int', 'b:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="rshift">
        <expr>ret = operator.rshift(a,b)%%['int', 'int']</expr>
        <args>['a:int', 'b:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="sub">
        <expr>ret = operator.sub(a,b)%%['int', 'int']</expr>
        <args>['a:int', 'b:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="truediv">
        <expr>ret = operator.truediv(a,b)%%['int', 'int']</expr>
        <args>['a:int', 'b:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="xor">
        <expr>ret = operator.xor(a,b)%%['int', 'int']</expr>
        <args>['a:int', 'b:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="concat">
        <expr>ret = operator.concat(a,b)%%['str', 'str']</expr>
        <args>['a:str', 'b:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="contains">
        <expr>ret = operator.contains(a,b)%%['range', 'int']</expr>
        <args>['a:range', 'b:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="countOf">
        <expr>ret = operator.countOf(a,b)%%['list', 'int']</expr>
        <args>['a:list', 'b:int']</args>
        <return>['count:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="delitem">
        <expr>operator.delitem(a,b)%%['list', 'int']</expr>
        <args>['a:list', 'b:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getitem">
        <expr>ret = operator.getitem(a,b)%%['range', 'int']</expr>
        <args>['a:range', 'b:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="indexOf">
        <expr>ret = operator.indexOf(a,b)%%['list', 'int']</expr>
        <args>['a:list', 'b:int']</args>
        <return>['i:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="setitem">
        <expr>operator.setitem(a,b,c)%%['list', 'int', 'int']</expr>
        <args>['a:list', 'b:int', 'c:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="length_hint">
        <expr>ret = operator.length_hint(obj,default)%%['list', 'int']</expr>
        <args>['obj:list', 'default:int']</args>
        <return>['len:builtin_function_or_method', 'default:int', 'val:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="iadd">
        <expr>ret = operator.iadd(a,b)%%['C', 'int']</expr>
        <args>['a:C', 'b:int']</args>
        <return>['a:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="iand">
        <expr>ret = operator.iand(a,b)%%['C', 'int']</expr>
        <args>['a:C', 'b:int']</args>
        <return>['a:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="iconcat">
        <expr>ret = operator.iconcat(a,b)%%['C', 'C']</expr>
        <args>['a:C', 'b:C']</args>
        <return>['a:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ifloordiv">
        <expr>ret = operator.ifloordiv(a,b)%%['C', 'int']</expr>
        <args>['a:C', 'b:int']</args>
        <return>['a:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ilshift">
        <expr>ret = operator.ilshift(a,b)%%['C', 'int']</expr>
        <args>['a:C', 'b:int']</args>
        <return>['a:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="imod">
        <expr>ret = operator.imod(a,b)%%['C', 'int']</expr>
        <args>['a:C', 'b:int']</args>
        <return>['a:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="imul">
        <expr>ret = operator.imul(a,b)%%['C', 'int']</expr>
        <args>['a:C', 'b:int']</args>
        <return>['a:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="imatmul">
        <expr>ret = operator.imatmul(a,b)%%['C', 'int']</expr>
        <args>['a:C', 'b:int']</args>
        <return>['a:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ior">
        <expr>ret = operator.ior(a,b)%%['C', 'int']</expr>
        <args>['a:C', 'b:int']</args>
        <return>['a:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ipow">
        <expr>ret = operator.ipow(a,b)%%['C', 'int']</expr>
        <args>['a:C', 'b:int']</args>
        <return>['a:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="irshift">
        <expr>ret = operator.irshift(a,b)%%['C', 'int']</expr>
        <args>['a:C', 'b:int']</args>
        <return>['a:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isub">
        <expr>ret = operator.isub(a,b)%%['C', 'int']</expr>
        <args>['a:C', 'b:int']</args>
        <return>['a:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="itruediv">
        <expr>ret = operator.itruediv(a,b)%%['C', 'int']</expr>
        <args>['a:C', 'b:int']</args>
        <return>['a:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ixor">
        <expr>ret = operator.ixor(a,b)%%['C', 'int']</expr>
        <args>['a:C', 'b:int']</args>
        <return>['a:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['copy:deepcopy', 'os.path:isfile', 'os.path:join', 'os.path:split', 'tkinter:simpledialog']" imports="['inspect', 'math', 're', 'sys', 'time', 'tkinter:TK', 'turtle', 'types']" name="turtle">
      <class base="builtins.tuple" init="obj = turtle.Vec2D()%%[]" name="Vec2D">
        <api name="rotate">
          <expr>ret = obj.rotate(angle)%%['None']</expr>
          <args>['angle:None']</args>
          <return>['Vec2D:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="tkinter.Frame" init="obj = turtle.ScrolledCanvas(None)%%['None', 'None', 'None', 'None', 'None']" name="ScrolledCanvas">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:None', 'width:None', 'height:None', 'canvwidth:None', 'canvheight:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="reset">
          <expr>obj.reset(canvwidth,canvheight,bg)%%['None', 'None', 'None']</expr>
          <args>['canvwidth:None', 'canvheight:None', 'bg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="onResize">
          <expr>obj.onResize(event)%%['None']</expr>
          <args>['event:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="builtins.object" init="obj = turtle.TurtleScreenBase(None)%%['None']" name="TurtleScreenBase">
        <api name="__init__">
          <expr>None</expr>
          <args>['cv:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="textinput">
          <expr>ret = obj.textinput(title,prompt)%%['None', 'None']</expr>
          <args>['title:None', 'prompt:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="numinput">
          <expr>ret = obj.numinput(title,prompt,default,minval,maxval)%%['None', 'None', 'None', 'None', 'None']</expr>
          <args>['title:None', 'prompt:None', 'default:None', 'minval:None', 'maxval:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="Exception" init="obj = turtle.Terminator()%%[]" name="Terminator"/>
      <class base="Exception" init="obj = turtle.TurtleGraphicsError()%%[]" name="TurtleGraphicsError"/>
      <class base="builtins.object" init="obj = turtle.Shape(None)%%['None', 'None']" name="Shape">
        <api name="__init__">
          <expr>None</expr>
          <args>['type_:None', 'data:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="addcomponent">
          <expr>obj.addcomponent(poly,fill,outline)%%['None', 'None', 'None']</expr>
          <args>['poly:None', 'fill:None', 'outline:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="builtins.object" init="obj = turtle.Tbuffer()%%['None']" name="Tbuffer">
        <api name="__init__">
          <expr>None</expr>
          <args>['bufsize:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="push">
          <expr>obj.push(item)%%['None']</expr>
          <args>['item:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pop">
          <expr>ret = obj.pop()%%[]</expr>
          <args>[]</args>
          <return>['ret:None', 'item:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="nr_of_items">
          <expr>ret = obj.nr_of_items()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="turtle.TurtleScreenBase" init="obj = turtle.TurtleScreen(None)%%['None', 'None', 'None', 'None']" name="TurtleScreen">
        <api name="__init__">
          <expr>None</expr>
          <args>['cv:None', 'mode:None', 'colormode:None', 'delay:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clear">
          <expr>obj.clear()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setworldcoordinates">
          <expr>obj.setworldcoordinates(llx,lly,urx,ury)%%['None', 'None', 'None', 'None']</expr>
          <args>['llx:None', 'lly:None', 'urx:None', 'ury:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="register_shape">
          <expr>obj.register_shape(name,shape)%%['None', 'None']</expr>
          <args>['name:None', 'shape:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="colormode">
          <expr>ret = obj.colormode(cmode)%%['None']</expr>
          <args>['cmode:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="turtles">
          <expr>ret = obj.turtles()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tracer">
          <expr>ret = obj.tracer(n,delay)%%['None', 'None']</expr>
          <args>['n:None', 'delay:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="delay">
          <expr>ret = obj.delay(delay)%%['None']</expr>
          <args>['delay:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="window_width">
          <expr>ret = obj.window_width()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="window_height">
          <expr>ret = obj.window_height()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getcanvas">
          <expr>ret = obj.getcanvas()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getshapes">
          <expr>ret = obj.getshapes()%%[]</expr>
          <args>[]</args>
          <return>['sorted:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="listen">
          <expr>obj.listen(xdummy,ydummy)%%['None', 'None']</expr>
          <args>['xdummy:None', 'ydummy:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ontimer">
          <expr>obj.ontimer(fun,t)%%['None', 'None']</expr>
          <args>['fun:None', 't:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="bgpic">
          <expr>ret = obj.bgpic(picname)%%['None']</expr>
          <args>['picname:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="builtins.object" init="obj = turtle.TNavigator()%%['None']" name="TNavigator">
        <api name="__init__">
          <expr>None</expr>
          <args>['mode:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['DEFAULT_MODE']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="degrees">
          <expr>obj.degrees(fullcircle)%%['None']</expr>
          <args>['fullcircle:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="radians">
          <expr>obj.radians()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="forward">
          <expr>obj.forward(distance)%%['None']</expr>
          <args>['distance:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="back">
          <expr>obj.back(distance)%%['None']</expr>
          <args>['distance:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="right">
          <expr>obj.right(angle)%%['None']</expr>
          <args>['angle:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="left">
          <expr>obj.left(angle)%%['None']</expr>
          <args>['angle:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pos">
          <expr>ret = obj.pos()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="xcor">
          <expr>ret = obj.xcor()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ycor">
          <expr>ret = obj.ycor()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="home">
          <expr>obj.home()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setx">
          <expr>obj.setx(x)%%['None']</expr>
          <args>['x:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sety">
          <expr>obj.sety(y)%%['None']</expr>
          <args>['y:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="distance">
          <expr>ret = obj.distance(x,y)%%['None', 'None']</expr>
          <args>['x:None', 'y:None']</args>
          <return>['abs:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="towards">
          <expr>ret = obj.towards(x,y)%%['None', 'None']</expr>
          <args>['x:None', 'y:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="heading">
          <expr>ret = obj.heading()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="circle">
          <expr>obj.circle(radius,extent,steps)%%['None', 'None', 'None']</expr>
          <args>['radius:None', 'extent:None', 'steps:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="builtins.object" init="obj = turtle.TPen()%%['None']" name="TPen">
        <api name="__init__">
          <expr>None</expr>
          <args>['resizemode:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="resizemode">
          <expr>ret = obj.resizemode(rmode)%%['None']</expr>
          <args>['rmode:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pensize">
          <expr>ret = obj.pensize(width)%%['None']</expr>
          <args>['width:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="penup">
          <expr>obj.penup()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pendown">
          <expr>obj.pendown()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isdown">
          <expr>ret = obj.isdown()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="color">
          <expr>obj.color()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pencolor">
          <expr>ret = obj.pencolor()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="fillcolor">
          <expr>ret = obj.fillcolor()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="showturtle">
          <expr>obj.showturtle()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="hideturtle">
          <expr>obj.hideturtle()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isvisible">
          <expr>ret = obj.isvisible()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="turtle.TPen" init="obj = turtle.RawTurtle()%%['None', 'None', 'None', 'None']" name="RawTurtle">
        <api name="__init__">
          <expr>None</expr>
          <args>['canvas:None', 'shape:None', 'undobuffersize:None', 'visible:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="undobufferentries">
          <expr>ret = obj.undobufferentries()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clear">
          <expr>obj.clear()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clone">
          <expr>ret = obj.clone()%%[]</expr>
          <args>[]</args>
          <return>['q:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="shape">
          <expr>ret = obj.shape(name)%%['None']</expr>
          <args>['name:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="shapesize">
          <expr>obj.shapesize(stretch_wid,stretch_len,outline)%%['None', 'None', 'None']</expr>
          <args>['stretch_wid:None', 'stretch_len:None', 'outline:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="shearfactor">
          <expr>ret = obj.shearfactor(shear)%%['None']</expr>
          <args>['shear:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tiltangle">
          <expr>ret = obj.tiltangle(angle)%%['None']</expr>
          <args>['angle:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tilt">
          <expr>obj.tilt(angle)%%['None']</expr>
          <args>['angle:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="shapetransform">
          <expr>ret = obj.shapetransform(t11,t12,t21,t22)%%['None', 'None', 'None', 'None']</expr>
          <args>['t11:None', 't12:None', 't21:None', 't22:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_shapepoly">
          <expr>ret = obj.get_shapepoly()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="stamp">
          <expr>ret = obj.stamp()%%[]</expr>
          <args>[]</args>
          <return>['stitem:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="filling">
          <expr>ret = obj.filling()%%[]</expr>
          <args>[]</args>
          <return>['isinstance:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="begin_fill">
          <expr>obj.begin_fill()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_fill">
          <expr>obj.end_fill()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dot">
          <expr>obj.dot(size)%%['None']</expr>
          <args>['size:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="write">
          <expr>obj.write(arg,move,align,font)%%['None', 'None', 'None', 'None']</expr>
          <args>['arg:None', 'move:None', 'align:None', 'font:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="begin_poly">
          <expr>obj.begin_poly()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_poly">
          <expr>obj.end_poly()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_poly">
          <expr>ret = obj.get_poly()%%[]</expr>
          <args>[]</args>
          <return>['tuple:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getscreen">
          <expr>ret = obj.getscreen()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getturtle">
          <expr>ret = obj.getturtle()%%[]</expr>
          <args>[]</args>
          <return>['self:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="onrelease">
          <expr>obj.onrelease(fun,btn,add)%%['None', 'None', 'None']</expr>
          <args>['fun:None', 'btn:None', 'add:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ondrag">
          <expr>obj.ondrag(fun,btn,add)%%['None', 'None', 'None']</expr>
          <args>['fun:None', 'btn:None', 'add:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="undo">
          <expr>obj.undo()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="turtle.RawTurtle" init="obj = turtle.Turtle()%%['None', 'None', 'None']" name="Turtle">
        <api name="__init__">
          <expr>None</expr>
          <args>['shape:None', 'undobuffersize:None', 'visible:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="config_dict">
        <expr>ret = turtle.config_dict(filename)%%['None']</expr>
        <args>['filename:None']</args>
        <return>['cfgdict:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="readconfig">
        <expr>turtle.readconfig(cfgdict)%%['None']</expr>
        <args>['cfgdict:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="Screen">
        <expr>ret = turtle.Screen()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="write_docstringdict">
        <expr>turtle.write_docstringdict(filename)%%['None']</expr>
        <args>['filename:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_docstrings">
        <expr>turtle.read_docstrings(lang)%%['None']</expr>
        <args>['lang:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getmethparlist">
        <expr>turtle.getmethparlist(ob)%%['None']</expr>
        <args>['ob:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>Exception</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>TK.TclError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>turtle.Terminator</exception>
        <exception>turtle.TurtleGraphicsError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['getopt', 'os', 'sys', 'tabnanny', 'tokenize']" name="tabnanny">
      <class base="Exception" init="obj = tabnanny.NannyNag()%%[]" name="NannyNag"/>
      <class init="obj = tabnanny.Whitespace(None)%%['NoneType']" name="Whitespace">
        <api name="__init__">
          <expr>None</expr>
          <args>['ws:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="longest_run_of_spaces">
          <expr>ret = obj.longest_run_of_spaces()%%[]</expr>
          <args>[]</args>
          <return>['max:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="indent_level">
          <expr>ret = obj.indent_level(tabsize)%%['None']</expr>
          <args>['tabsize:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="equal">
          <expr>ret = obj.equal(other)%%['None']</expr>
          <args>['other:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="not_equal_witness">
          <expr>ret = obj.not_equal_witness(other)%%['None']</expr>
          <args>['other:None']</args>
          <return>['a:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="less">
          <expr>ret = obj.less(other)%%['None']</expr>
          <args>['other:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="not_less_witness">
          <expr>ret = obj.not_less_witness(other)%%['None']</expr>
          <args>['other:None']</args>
          <return>['a:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="errprint">
        <expr>tabnanny.errprint()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>tabnanny.main()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="check">
        <expr>tabnanny.check(file)%%['None']</expr>
        <args>['file:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="format_witnesses">
        <expr>ret = tabnanny.format_witnesses(w)%%['None']</expr>
        <args>['w:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="process_tokens">
        <expr>tabnanny.process_tokens(tokens)%%['None']</expr>
        <args>['tokens:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>IndentationError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>getopt.GetoptError</exception>
        <exception>getopt.error</exception>
        <exception>tabnanny.NannyNag</exception>
        <exception>tokenize.StopTokenizing</exception>
        <exception>tokenize.TokenError</exception>
      </errors>
    </module>
    <module importfrom="['io:BytesIO', 'warnings:warn', 'xml.parsers.expat:ParserCreate']" imports="['binascii', 'codecs', 'contextlib', 'datetime', 'enum', 'itertools', 'os', 'plistlib', 're', 'struct']" name="plistlib">
      <class init="obj = plistlib.Data(None)%%['NoneType']" name="Data">
        <api name="__init__">
          <expr>None</expr>
          <args>['data:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="fromBase64">
          <expr>ret = obj.fromBase64(cls,data)%%['None', 'None']</expr>
          <args>['cls:None', 'data:None']</args>
          <return>['cls:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="asBase64">
          <expr>ret = obj.asBase64(maxlinelength)%%['None']</expr>
          <args>['maxlinelength:None']</args>
          <return>['_encode_base64:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="ValueError" init="obj = plistlib.InvalidFileException()%%[]" name="InvalidFileException"/>
      <api name="readPlist">
        <expr>ret = plistlib.readPlist(pathOrFile)%%['None']</expr>
        <args>['pathOrFile:None']</args>
        <return>['load:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="writePlist">
        <expr>plistlib.writePlist(value,pathOrFile)%%['None', 'None']</expr>
        <args>['value:None', 'pathOrFile:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="readPlistFromBytes">
        <expr>ret = plistlib.readPlistFromBytes(data)%%['None']</expr>
        <args>['data:None']</args>
        <return>['load:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="writePlistToBytes">
        <expr>ret = plistlib.writePlistToBytes(value)%%['None']</expr>
        <args>['value:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="load">
        <expr>ret = plistlib.load(fp)%%['BytesIO']</expr>
        <args>['fp:BytesIO']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['fmt:PlistFormat', 'use_builtin_types:bool', 'dict_type:type']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None, None, 'dict']</kwodefa>
      </api>
      <api name="loads">
        <expr>ret = plistlib.loads(value)%%['bytes']</expr>
        <args>['value:bytes']</args>
        <return>['load:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['fmt:PlistFormat', 'use_builtin_types:bool', 'dict_type:type']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None, None, 'dict']</kwodefa>
      </api>
      <api name="dump">
        <expr>plistlib.dump(value,fp)%%['list', 'BytesIO']</expr>
        <args>['value:list', 'fp:BytesIO']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['fmt:PlistFormat', 'sort_keys:bool', 'skipkeys:bool']</kwoargs>
        <defa>[]</defa>
        <kwodefa>['FMT_XML', None, None]</kwodefa>
      </api>
      <api name="dumps">
        <expr>ret = plistlib.dumps(value)%%['list']</expr>
        <args>['value:list']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['fmt:PlistFormat', 'skipkeys:bool', 'sort_keys:bool']</kwoargs>
        <defa>[]</defa>
        <kwodefa>['FMT_XML', None, None]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>IndexError</exception>
        <exception>OSError</exception>
        <exception>OverflowError</exception>
        <exception>TypeError</exception>
        <exception>UnicodeEncodeError</exception>
        <exception>ValueError</exception>
        <exception>plistlib.InvalidFileException</exception>
        <exception>struct.error</exception>
      </errors>
    </module>
    <module importfrom="['collections:deque', 'functools:wraps']" imports="['abc', 'contextlib', 'sys']" name="contextlib">
      <class base="abc.ABC" init="obj = contextlib.AbstractContextManager()%%[]" name="AbstractContextManager"/>
      <class base="abc.ABC" init="obj = contextlib.AbstractAsyncContextManager()%%[]" name="AbstractAsyncContextManager"/>
      <class base="builtins.object" init="obj = contextlib.ContextDecorator()%%[]" name="ContextDecorator"/>
      <class base="contextlib.AbstractContextManager" init="obj = contextlib.closing(None)%%['None']" name="closing">
        <api name="__init__">
          <expr>None</expr>
          <args>['thing:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="contextlib._RedirectStream" init="obj = contextlib.redirect_stdout()%%[]" name="redirect_stdout"/>
      <class base="contextlib._RedirectStream" init="obj = contextlib.redirect_stderr()%%[]" name="redirect_stderr"/>
      <class base="contextlib.AbstractContextManager" init="obj = contextlib.suppress()%%[]" name="suppress">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="contextlib._BaseExitStack" init="obj = contextlib.ExitStack()%%[]" name="ExitStack"/>
      <class base="contextlib._BaseExitStack" init="obj = contextlib.AsyncExitStack()%%[]" name="AsyncExitStack">
        <api name="enter_async_context">
          <expr>ret = obj.enter_async_context(cm)%%['TestCM']</expr>
          <args>['cm:TestCM']</args>
          <return>['result:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="push_async_exit">
          <expr>ret = obj.push_async_exit(exit)%%['None']</expr>
          <args>['exit:None']</args>
          <return>['exit:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="push_async_callback">
          <expr>ret = obj.push_async_callback()%%[]</expr>
          <args>[]</args>
          <return>['callback:function']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="aclose">
          <expr>obj.aclose()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="contextlib.AbstractContextManager" init="obj = contextlib.nullcontext()%%['None']" name="nullcontext">
        <api name="__init__">
          <expr>None</expr>
          <args>['enter_result:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="contextmanager">
        <expr>ret = contextlib.contextmanager(func)%%['function']</expr>
        <args>['func:function']</args>
        <return>['helper:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="asynccontextmanager">
        <expr>ret = contextlib.asynccontextmanager(func)%%['function']</expr>
        <args>['func:function']</args>
        <return>['helper:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>BaseException</exception>
        <exception>OSError</exception>
        <exception>RuntimeError</exception>
        <exception>StopAsyncIteration</exception>
        <exception>StopIteration</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['token:DEDENT', 'token:NAME', 'token:OP']" imports="['importlib.util', 'io', 'os', 'pyclbr', 'sys', 'tokenize']" name="pyclbr">
      <class base="pyclbr._Object" init="obj = pyclbr.Function(None,None,None,None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="Function">
        <api name="__init__">
          <expr>None</expr>
          <args>['module:NoneType', 'name:NoneType', 'file:NoneType', 'lineno:NoneType', 'parent:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="pyclbr._Object" init="obj = pyclbr.Class(None,None,None,None,None)%%['NoneType', 'NoneType', 'type', 'NoneType', 'NoneType', 'NoneType']" name="Class">
        <api name="__init__">
          <expr>None</expr>
          <args>['module:NoneType', 'name:NoneType', 'super:type', 'file:NoneType', 'lineno:NoneType', 'parent:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="readmodule">
        <expr>ret = pyclbr.readmodule(module,path)%%['None', 'None']</expr>
        <args>['module:None', 'path:None']</args>
        <return>['res:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="readmodule_ex">
        <expr>ret = pyclbr.readmodule_ex(module,path)%%['str', 'NoneType']</expr>
        <args>['module:str', 'path:NoneType']</args>
        <return>['_readmodule:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>StopIteration</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>tokenize.StopTokenizing</exception>
        <exception>tokenize.TokenError</exception>
      </errors>
    </module>
    <module importfrom="['builtins:open', 'codecs:BOM_UTF8', 'codecs:lookup', 'io:TextIOWrapper', 'itertools:chain', 'itertools:repeat', 'token:*']" imports="['argparse', 'collections', 'itertools:_itertools', 're', 'sys', 'token', 'tokenize']" name="tokenize">
      <class init="obj = tokenize.TokenInfo()%%[]" name="TokenInfo">
        <api name="exact_type">
          <expr>ret = obj.exact_type()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="Exception" init="obj = tokenize.TokenError()%%[]" name="TokenError"/>
      <class base="Exception" init="obj = tokenize.StopTokenizing()%%[]" name="StopTokenizing"/>
      <class init="obj = tokenize.Untokenizer()%%[]" name="Untokenizer">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="untokenize">
          <expr>ret = obj.untokenize(iterable)%%['list']</expr>
          <args>['iterable:list']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="group">
        <expr>ret = tokenize.group()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="any">
        <expr>ret = tokenize.any()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="maybe">
        <expr>ret = tokenize.maybe()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="untokenize">
        <expr>ret = tokenize.untokenize(iterable)%%['list']</expr>
        <args>['iterable:list']</args>
        <return>['out:bytes']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="detect_encoding">
        <expr>tokenize.detect_encoding(readline)%%['builtin_function_or_method']</expr>
        <args>['readline:builtin_function_or_method']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="open">
        <expr>ret = tokenize.open(filename)%%['str']</expr>
        <args>['filename:str']</args>
        <return>['text:TextIOWrapper']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="tokenize">
        <expr>ret = tokenize.tokenize(readline)%%['method-wrapper']</expr>
        <args>['readline:method-wrapper']</args>
        <return>['_tokenize:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="generate_tokens">
        <expr>ret = tokenize.generate_tokens(readline)%%['builtin_function_or_method']</expr>
        <args>['readline:builtin_function_or_method']</args>
        <return>['_tokenize:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>tokenize.main()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>Exception</exception>
        <exception>IndentationError</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>OSError</exception>
        <exception>StopIteration</exception>
        <exception>SyntaxError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>argparse.ArgumentError</exception>
        <exception>argparse.ArgumentTypeError</exception>
        <exception>tokenize.StopTokenizing</exception>
        <exception>tokenize.TokenError</exception>
      </errors>
    </module>
    <module importfrom="['abc:ABCMeta', 'abc:abstractmethod', 'collections.abc:Mapping', 'collections:namedtuple']" imports="['math', 'select', 'selectors', 'sys']" name="selectors">
      <class init="obj = selectors.BaseSelector()%%[]" name="BaseSelector">
        <api name="modify">
          <expr>ret = obj.modify(fileobj,events,data)%%['None', 'None', 'None']</expr>
          <args>['fileobj:None', 'events:None', 'data:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="select">
          <expr>obj.select(timeout)%%['None']</expr>
          <args>['timeout:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_key">
          <expr>ret = obj.get_key(fileobj)%%['None']</expr>
          <args>['fileobj:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="selectors._BaseSelectorImpl" init="obj = selectors.SelectSelector()%%[]" name="SelectSelector">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="selectors._PollLikeSelector" init="obj = selectors.PollSelector()%%[]" name="PollSelector"/>
      <class base="selectors._PollLikeSelector" init="obj = selectors.EpollSelector()%%[]" name="EpollSelector"/>
      <errors>
        <exception>AttributeError</exception>
        <exception>InterruptedError</exception>
        <exception>KeyError</exception>
        <exception>NotImplementedError</exception>
        <exception>OSError</exception>
        <exception>RuntimeError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['formatter', 'sys', 'warnings']" name="formatter">
      <class init="obj = formatter.NullFormatter()%%['NoneType']" name="NullFormatter">
        <api name="__init__">
          <expr>None</expr>
          <args>['writer:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = formatter.AbstractFormatter(None)%%['NoneType']" name="AbstractFormatter">
        <api name="__init__">
          <expr>None</expr>
          <args>['writer:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_paragraph">
          <expr>obj.end_paragraph(blankline)%%['None']</expr>
          <args>['blankline:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_line_break">
          <expr>obj.add_line_break()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_hor_rule">
          <expr>obj.add_hor_rule()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_label_data">
          <expr>obj.add_label_data(format,counter,blankline)%%['None', 'None', 'None']</expr>
          <args>['format:None', 'counter:None', 'blankline:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="format_counter">
          <expr>ret = obj.format_counter(format,counter)%%['None', 'None']</expr>
          <args>['format:None', 'counter:None']</args>
          <return>['label:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="format_letter">
          <expr>ret = obj.format_letter(case,counter)%%['None', 'None']</expr>
          <args>['case:None', 'counter:None']</args>
          <return>['label:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="format_roman">
          <expr>ret = obj.format_roman(case,counter)%%['None', 'None']</expr>
          <args>['case:None', 'counter:None']</args>
          <return>['ret:None', 'label:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_flowing_data">
          <expr>obj.add_flowing_data(data)%%['None']</expr>
          <args>['data:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_literal_data">
          <expr>obj.add_literal_data(data)%%['None']</expr>
          <args>['data:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="flush_softspace">
          <expr>obj.flush_softspace()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="push_alignment">
          <expr>obj.push_alignment(align)%%['None']</expr>
          <args>['align:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pop_alignment">
          <expr>obj.pop_alignment()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="push_font">
          <expr>obj.push_font(font)%%['None']</expr>
          <args>['font:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pop_font">
          <expr>obj.pop_font()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="push_margin">
          <expr>obj.push_margin(margin)%%['None']</expr>
          <args>['margin:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pop_margin">
          <expr>obj.pop_margin()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_spacing">
          <expr>obj.set_spacing(spacing)%%['None']</expr>
          <args>['spacing:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="push_style">
          <expr>obj.push_style()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pop_style">
          <expr>obj.pop_style(n)%%['None']</expr>
          <args>['n:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="assert_line_data">
          <expr>obj.assert_line_data(flag)%%['None']</expr>
          <args>['flag:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = formatter.NullWriter()%%[]" name="NullWriter"/>
      <class base="formatter.NullWriter" init="obj = formatter.AbstractWriter()%%[]" name="AbstractWriter"/>
      <class base="formatter.NullWriter" init="obj = formatter.DumbWriter()%%['NoneType', 'NoneType']" name="DumbWriter">
        <api name="__init__">
          <expr>None</expr>
          <args>['file:NoneType', 'maxcol:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="reset">
          <expr>obj.reset()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['datetime', 'math:_math', 'sys', 'time:_time']" name="datetime">
      <class init="obj = datetime.timedelta()%%[]" name="timedelta">
        <api name="total_seconds">
          <expr>ret = obj.total_seconds()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="days">
          <expr>ret = obj.days()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="seconds">
          <expr>ret = obj.seconds()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="microseconds">
          <expr>ret = obj.microseconds()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = datetime.date()%%[]" name="date">
        <api name="today">
          <expr>ret = obj.today(cls)%%['None']</expr>
          <args>['cls:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="fromisoformat">
          <expr>ret = obj.fromisoformat(cls,date_string)%%['None', 'None']</expr>
          <args>['cls:None', 'date_string:None']</args>
          <return>['cls:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ctime">
          <expr>ret = obj.ctime()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isoformat">
          <expr>ret = obj.isoformat()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="year">
          <expr>ret = obj.year()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="month">
          <expr>ret = obj.month()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="day">
          <expr>ret = obj.day()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="timetuple">
          <expr>ret = obj.timetuple()%%[]</expr>
          <args>[]</args>
          <return>['_build_struct_time:function']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="weekday">
          <expr>ret = obj.weekday()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isoweekday">
          <expr>ret = obj.isoweekday()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isocalendar">
          <expr>obj.isocalendar()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = datetime.tzinfo()%%[]" name="tzinfo">
        <api name="fromutc">
          <expr>ret = obj.fromutc(dt)%%['None']</expr>
          <args>['dt:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = datetime.time()%%[]" name="time">
        <api name="hour">
          <expr>ret = obj.hour()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="minute">
          <expr>ret = obj.minute()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="second">
          <expr>ret = obj.second()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="microsecond">
          <expr>ret = obj.microsecond()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tzinfo">
          <expr>ret = obj.tzinfo()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="fold">
          <expr>ret = obj.fold()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isoformat">
          <expr>ret = obj.isoformat(timespec)%%['str']</expr>
          <args>['timespec:str']</args>
          <return>['s:str']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="fromisoformat">
          <expr>ret = obj.fromisoformat(cls,time_string)%%['None', 'None']</expr>
          <args>['cls:None', 'time_string:None']</args>
          <return>['cls:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="datetime.date" init="obj = datetime.datetime()%%[]" name="datetime">
        <api name="hour">
          <expr>ret = obj.hour()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="minute">
          <expr>ret = obj.minute()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="second">
          <expr>ret = obj.second()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="microsecond">
          <expr>ret = obj.microsecond()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tzinfo">
          <expr>ret = obj.tzinfo()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="fold">
          <expr>ret = obj.fold()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="now">
          <expr>ret = obj.now(cls,tz)%%['None', 'None']</expr>
          <args>['cls:None', 'tz:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="utcnow">
          <expr>ret = obj.utcnow(cls)%%['None']</expr>
          <args>['cls:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="fromisoformat">
          <expr>ret = obj.fromisoformat(cls,date_string)%%['None', 'None']</expr>
          <args>['cls:None', 'date_string:None']</args>
          <return>['cls:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="timetuple">
          <expr>ret = obj.timetuple()%%[]</expr>
          <args>[]</args>
          <return>['_build_struct_time:function']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="timestamp">
          <expr>ret = obj.timestamp()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="utctimetuple">
          <expr>ret = obj.utctimetuple()%%[]</expr>
          <args>[]</args>
          <return>['_build_struct_time:function']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="timetz">
          <expr>ret = obj.timetz()%%[]</expr>
          <args>[]</args>
          <return>['time:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="astimezone">
          <expr>ret = obj.astimezone(tz)%%['datetime']</expr>
          <args>['tz:datetime']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ctime">
          <expr>ret = obj.ctime()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="strptime">
          <expr>ret = obj.strptime(cls,date_string,format)%%['None', 'None', 'None']</expr>
          <args>['cls:None', 'date_string:None', 'format:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="datetime.tzinfo" init="obj = datetime.timezone()%%[]" name="timezone"/>
      <errors>
        <exception>AttributeError</exception>
        <exception>Exception</exception>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
        <exception>NotImplementedError</exception>
        <exception>OSError</exception>
        <exception>OverflowError</exception>
        <exception>TypeError</exception>
        <exception>UnicodeEncodeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['optparse:OptionParser']" imports="['marshal', 'os', 'profile', 'pstats', 'sys', 'time']" name="profile">
      <class init="obj = profile.Profile()%%['NoneType', 'NoneType']" name="Profile">
        <api name="__init__">
          <expr>None</expr>
          <args>['timer:NoneType', 'bias:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="trace_dispatch">
          <expr>obj.trace_dispatch(frame,event,arg)%%['None', 'None', 'None']</expr>
          <args>['frame:None', 'event:None', 'arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="trace_dispatch_i">
          <expr>obj.trace_dispatch_i(frame,event,arg)%%['None', 'None', 'None']</expr>
          <args>['frame:None', 'event:None', 'arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="trace_dispatch_mac">
          <expr>obj.trace_dispatch_mac(frame,event,arg)%%['None', 'None', 'None']</expr>
          <args>['frame:None', 'event:None', 'arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="trace_dispatch_l">
          <expr>obj.trace_dispatch_l(frame,event,arg)%%['None', 'None', 'None']</expr>
          <args>['frame:None', 'event:None', 'arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="trace_dispatch_exception">
          <expr>ret = obj.trace_dispatch_exception(frame,t)%%['None', 'None']</expr>
          <args>['frame:None', 't:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="trace_dispatch_call">
          <expr>ret = obj.trace_dispatch_call(frame,t)%%['fake_frame', 'int']</expr>
          <args>['frame:fake_frame', 't:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="trace_dispatch_c_call">
          <expr>ret = obj.trace_dispatch_c_call(frame,t)%%['None', 'None']</expr>
          <args>['frame:None', 't:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="runcall">
          <expr>ret = obj.runcall()%%[]</expr>
          <args>[]</args>
          <return>['func:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="calibrate">
          <expr>ret = obj.calibrate(m,verbose)%%['None', 'None']</expr>
          <args>['m:None', 'verbose:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="run">
        <expr>ret = profile.run(statement,filename,sort)%%['str', 'str', 'int']</expr>
        <args>['statement:str', 'filename:str', 'sort:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="runctx">
        <expr>ret = profile.runctx(statement,globals,locals,filename,sort)%%['str', 'dict', 'dict', 'str', 'int']</expr>
        <args>['statement:str', 'globals:dict', 'locals:dict', 'filename:str', 'sort:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>ret = profile.main()%%[]</expr>
        <args>[]</args>
        <return>['parser:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>SystemExit</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['shlex:quote']" imports="['os', 'pipes', 're', 'tempfile']" name="pipes">
      <class init="obj = pipes.Template()%%[]" name="Template">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="reset">
          <expr>obj.reset()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clone">
          <expr>ret = obj.clone()%%[]</expr>
          <args>[]</args>
          <return>['t:Template']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="debug">
          <expr>obj.debug(flag)%%['bool']</expr>
          <args>['flag:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="prepend">
          <expr>obj.prepend(cmd,kind)%%['int', 'str']</expr>
          <args>['cmd:int', 'kind:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="copy">
          <expr>ret = obj.copy(infile,outfile)%%['str', 'str']</expr>
          <args>['infile:str', 'outfile:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="makepipeline">
        <expr>ret = pipes.makepipeline(infile,steps,outfile)%%['str', 'list', 'str']</expr>
        <args>['infile:str', 'steps:list', 'outfile:str']</args>
        <return>['cmdlist:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['itertools:islice']" imports="['builtins', 'reprlib']" name="reprlib">
      <class init="obj = reprlib.Repr()%%[]" name="Repr">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="repr_tuple">
          <expr>ret = obj.repr_tuple(x,level)%%['tuple', 'int']</expr>
          <args>['x:tuple', 'level:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="repr_list">
          <expr>ret = obj.repr_list(x,level)%%['list', 'int']</expr>
          <args>['x:list', 'level:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="repr_array">
          <expr>ret = obj.repr_array(x,level)%%['array', 'int']</expr>
          <args>['x:array', 'level:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="repr_set">
          <expr>ret = obj.repr_set(x,level)%%['set', 'int']</expr>
          <args>['x:set', 'level:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="repr_frozenset">
          <expr>ret = obj.repr_frozenset(x,level)%%['frozenset', 'int']</expr>
          <args>['x:frozenset', 'level:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="repr_deque">
          <expr>ret = obj.repr_deque(x,level)%%['deque', 'int']</expr>
          <args>['x:deque', 'level:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="repr_dict">
          <expr>ret = obj.repr_dict(x,level)%%['dict', 'int']</expr>
          <args>['x:dict', 'level:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="repr_str">
          <expr>ret = obj.repr_str(x,level)%%['str', 'int']</expr>
          <args>['x:str', 'level:int']</args>
          <return>['s:str']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="repr_int">
          <expr>ret = obj.repr_int(x,level)%%['int', 'int']</expr>
          <args>['x:int', 'level:int']</args>
          <return>['s:str']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="recursive_repr">
        <expr>ret = reprlib.recursive_repr(fillvalue)%%['str']</expr>
        <args>['fillvalue:str']</args>
        <return>['decorating_function:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>Exception</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['sre_constants:*']" imports="['sre_parse', 'warnings']" name="sre_parse">
      <class base="Exception" init="obj = sre_parse.Verbose()%%[]" name="Verbose"/>
      <class init="obj = sre_parse.Pattern()%%[]" name="Pattern">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="groups">
          <expr>ret = obj.groups()%%[]</expr>
          <args>[]</args>
          <return>['len:builtin_function_or_method']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="opengroup">
          <expr>ret = obj.opengroup(name)%%['str']</expr>
          <args>['name:str']</args>
          <return>['gid:int']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="closegroup">
          <expr>obj.closegroup(gid,p)%%['int', 'SubPattern']</expr>
          <args>['gid:int', 'p:SubPattern']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="checkgroup">
          <expr>ret = obj.checkgroup(gid)%%['int']</expr>
          <args>['gid:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="checklookbehindgroup">
          <expr>obj.checklookbehindgroup(gid,source)%%['int', 'Tokenizer']</expr>
          <args>['gid:int', 'source:Tokenizer']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = sre_parse.SubPattern(None)%%['None', 'None']" name="SubPattern">
        <api name="__init__">
          <expr>None</expr>
          <args>['pattern:None', 'data:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = sre_parse.Tokenizer(None)%%['None']" name="Tokenizer">
        <api name="__init__">
          <expr>None</expr>
          <args>['string:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="match">
          <expr>ret = obj.match(char)%%['str']</expr>
          <args>['char:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getwhile">
          <expr>ret = obj.getwhile(n,charset)%%['int', 'frozenset']</expr>
          <args>['n:int', 'charset:frozenset']</args>
          <return>['result:str']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getuntil">
          <expr>ret = obj.getuntil(terminator)%%['str']</expr>
          <args>['terminator:str']</args>
          <return>['result:str']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pos">
          <expr>ret = obj.pos()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tell">
          <expr>ret = obj.tell()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="seek">
          <expr>obj.seek(index)%%['int']</expr>
          <args>['index:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="fix_flags">
        <expr>ret = sre_parse.fix_flags(src,flags)%%['str', 'int']</expr>
        <args>['src:str', 'flags:int']</args>
        <return>['flags:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parse">
        <expr>ret = sre_parse.parse(str,flags,pattern)%%['str', 'int', 'NoneType']</expr>
        <args>['str:str', 'flags:int', 'pattern:NoneType']</args>
        <return>['p:SubPattern']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parse_template">
        <expr>sre_parse.parse_template(source,pattern)%%['str', 'Pattern']</expr>
        <args>['source:str', 'pattern:Pattern']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="expand_template">
        <expr>ret = sre_parse.expand_template(template,match)%%['tuple', 'Match']</expr>
        <args>['template:tuple', 'match:Match']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AssertionError</exception>
        <exception>AttributeError</exception>
        <exception>IndexError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>OverflowError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>sre_parse.Verbose</exception>
      </errors>
    </module>
    <module importfrom="['sre_constants:*']" imports="['sre_compile', 'sre_parse', 'sys']" name="sre_compile">
      <api name="isstring">
        <expr>ret = sre_compile.isstring(obj)%%['str']</expr>
        <args>['obj:str']</args>
        <return>['isinstance:builtin_function_or_method']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dis">
        <expr>sre_compile.dis(code)%%['list']</expr>
        <args>['code:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="compile">
        <expr>ret = sre_compile.compile(p,flags)%%['str', 'int']</expr>
        <args>['p:str', 'flags:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>IndexError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>sre_parse.Verbose</exception>
      </errors>
    </module>
    <module importfrom="['genericpath:*']" imports="['genericpath', 'ntpath', 'os', 'stat', 'string', 'sys']" name="ntpath">
      <api name="normcase">
        <expr>ret = ntpath.normcase(s)%%['str']</expr>
        <args>['s:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isabs">
        <expr>ret = ntpath.isabs(s)%%['str']</expr>
        <args>['s:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="join">
        <expr>ret = ntpath.join(path)%%['str']</expr>
        <args>['path:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="splitdrive">
        <expr>ntpath.splitdrive(p)%%['str']</expr>
        <args>['p:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="split">
        <expr>ntpath.split(p)%%['str']</expr>
        <args>['p:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="splitext">
        <expr>ret = ntpath.splitext(p)%%['FakePath']</expr>
        <args>['p:FakePath']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="basename">
        <expr>ret = ntpath.basename(p)%%['FakePath']</expr>
        <args>['p:FakePath']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dirname">
        <expr>ret = ntpath.dirname(p)%%['str']</expr>
        <args>['p:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="islink">
        <expr>ret = ntpath.islink(path)%%['FakePath']</expr>
        <args>['path:FakePath']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="lexists">
        <expr>ret = ntpath.lexists(path)%%['str']</expr>
        <args>['path:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ismount">
        <expr>ret = ntpath.ismount(path)%%['FakePath']</expr>
        <args>['path:FakePath']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="expanduser">
        <expr>ret = ntpath.expanduser(path)%%['FakePath']</expr>
        <args>['path:FakePath']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="expandvars">
        <expr>ret = ntpath.expandvars(path)%%['str']</expr>
        <args>['path:str']</args>
        <return>['path:str', 'res:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="normpath">
        <expr>ret = ntpath.normpath(path)%%['str']</expr>
        <args>['path:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="abspath">
        <expr>ret = ntpath.abspath(path)%%['None']</expr>
        <args>['path:None']</args>
        <return>['normpath:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="relpath">
        <expr>ret = ntpath.relpath(path,start)%%['bytes', 'str']</expr>
        <args>['path:bytes', 'start:str']</args>
        <return>['curdir:bytes', 'join:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="commonpath">
        <expr>ret = ntpath.commonpath(paths)%%['list']</expr>
        <args>['paths:list']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>BytesWarning</exception>
        <exception>DeprecationWarning</exception>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['unicodedata:ucd_3_2_0']" imports="['stringprep']" name="stringprep">
      <api name="in_table_a1">
        <expr>ret = stringprep.in_table_a1(code)%%['str']</expr>
        <args>['code:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="in_table_b1">
        <expr>ret = stringprep.in_table_b1(code)%%['str']</expr>
        <args>['code:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="map_table_b3">
        <expr>ret = stringprep.map_table_b3(code)%%['str']</expr>
        <args>['code:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="map_table_b2">
        <expr>ret = stringprep.map_table_b2(a)%%['str']</expr>
        <args>['a:str']</args>
        <return>['c:str', 'al:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="in_table_c11">
        <expr>ret = stringprep.in_table_c11(code)%%['str']</expr>
        <args>['code:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="in_table_c12">
        <expr>ret = stringprep.in_table_c12(code)%%['str']</expr>
        <args>['code:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="in_table_c11_c12">
        <expr>ret = stringprep.in_table_c11_c12(code)%%['str']</expr>
        <args>['code:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="in_table_c21">
        <expr>ret = stringprep.in_table_c21(code)%%['str']</expr>
        <args>['code:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="in_table_c22">
        <expr>ret = stringprep.in_table_c22(code)%%['str']</expr>
        <args>['code:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="in_table_c21_c22">
        <expr>ret = stringprep.in_table_c21_c22(code)%%['str']</expr>
        <args>['code:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="in_table_c3">
        <expr>ret = stringprep.in_table_c3(code)%%['str']</expr>
        <args>['code:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="in_table_c4">
        <expr>ret = stringprep.in_table_c4(code)%%['str']</expr>
        <args>['code:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="in_table_c5">
        <expr>ret = stringprep.in_table_c5(code)%%['str']</expr>
        <args>['code:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="in_table_c6">
        <expr>ret = stringprep.in_table_c6(code)%%['str']</expr>
        <args>['code:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="in_table_c7">
        <expr>ret = stringprep.in_table_c7(code)%%['str']</expr>
        <args>['code:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="in_table_c8">
        <expr>ret = stringprep.in_table_c8(code)%%['str']</expr>
        <args>['code:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="in_table_c9">
        <expr>ret = stringprep.in_table_c9(code)%%['str']</expr>
        <args>['code:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="in_table_d1">
        <expr>ret = stringprep.in_table_d1(code)%%['str']</expr>
        <args>['code:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="in_table_d2">
        <expr>ret = stringprep.in_table_d2(code)%%['str']</expr>
        <args>['code:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['opcode:*']" imports="['argparse', 'collections', 'dis', 'io', 'sys', 'types']" name="dis">
      <class base="dis._Instruction" init="obj = dis.Instruction()%%[]" name="Instruction"/>
      <class init="obj = dis.Bytecode(None)%%['None']" name="Bytecode">
        <api name="__init__">
          <expr>None</expr>
          <args>['x:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['first_line:None', 'current_offset:None']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None, None]</kwodefa>
        </api>
        <api name="from_traceback">
          <expr>ret = obj.from_traceback(cls,tb)%%['None', 'None']</expr>
          <args>['cls:None', 'tb:None']</args>
          <return>['cls:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info">
          <expr>ret = obj.info()%%[]</expr>
          <args>[]</args>
          <return>['_format_code_info:function']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="dis">
        <expr>dis.dis(x)%%['function']</expr>
        <args>['x:function']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['file:StringIO', 'depth:int']</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[None, None]</kwodefa>
      </api>
      <api name="distb">
        <expr>dis.distb(tb)%%['NoneType']</expr>
        <args>['tb:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['file:StringIO']</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <api name="pretty_flags">
        <expr>ret = dis.pretty_flags(flags)%%['int']</expr>
        <args>['flags:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="code_info">
        <expr>ret = dis.code_info(x)%%['function']</expr>
        <args>['x:function']</args>
        <return>['_format_code_info:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="show_code">
        <expr>dis.show_code(co)%%['function']</expr>
        <args>['co:function']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['file:StringIO']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <api name="get_instructions">
        <expr>ret = dis.get_instructions(x)%%['code']</expr>
        <args>['x:code']</args>
        <return>['_get_instructions_bytes:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['first_line:int']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <api name="disassemble">
        <expr>dis.disassemble(co,lasti)%%['code', 'int']</expr>
        <args>['co:code', 'lasti:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['file:StringIO']</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <api name="findlabels">
        <expr>ret = dis.findlabels(code)%%['bytes']</expr>
        <args>['code:bytes']</args>
        <return>['labels:list']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="findlinestarts">
        <expr>dis.findlinestarts(code)%%['code']</expr>
        <args>['code:code']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>SyntaxError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>argparse.ArgumentError</exception>
        <exception>argparse.ArgumentTypeError</exception>
      </errors>
    </module>
    <module importfrom="['hashlib:sha512', 'math:acos', 'math:ceil', 'math:cos', 'math:e', 'math:exp', 'math:log', 'math:pi', 'math:sin', 'math:sqrt', 'os:urandom', 'types:BuiltinMethodType', 'types:MethodType', 'warnings:warn']" imports="['bisect:_bisect', 'itertools:_itertools', 'os:_os', 'random', 'time']" name="random">
      <class base="_random.Random" init="obj = random.Random()%%['NoneType']" name="Random">
        <api name="__init__">
          <expr>None</expr>
          <args>['x:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="randint">
          <expr>ret = obj.randint(a,b)%%['int', 'int']</expr>
          <args>['a:int', 'b:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="choice">
          <expr>ret = obj.choice(seq)%%['str']</expr>
          <args>['seq:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="shuffle">
          <expr>obj.shuffle(x,random)%%['list', 'Mock']</expr>
          <args>['x:list', 'random:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sample">
          <expr>ret = obj.sample(population,k)%%['str', 'int']</expr>
          <args>['population:str', 'k:int']</args>
          <return>['result:list']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="choices">
          <expr>ret = obj.choices(population,weights)%%['list', 'range']</expr>
          <args>['population:list', 'weights:range']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['cum_weights:range', 'k:int']</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[None, None]</kwodefa>
        </api>
        <api name="uniform">
          <expr>ret = obj.uniform(a,b)%%['float', 'float']</expr>
          <args>['a:float', 'b:float']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="triangular">
          <expr>ret = obj.triangular(low,high,mode)%%['float', 'float', 'float']</expr>
          <args>['low:float', 'high:float', 'mode:float']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="normalvariate">
          <expr>ret = obj.normalvariate(mu,sigma)%%['int', 'int']</expr>
          <args>['mu:int', 'sigma:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="lognormvariate">
          <expr>ret = obj.lognormvariate(mu,sigma)%%['int', 'int']</expr>
          <args>['mu:int', 'sigma:int']</args>
          <return>['_exp:builtin_function_or_method']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="expovariate">
          <expr>ret = obj.expovariate(lambd)%%['float']</expr>
          <args>['lambd:float']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="vonmisesvariate">
          <expr>ret = obj.vonmisesvariate(mu,kappa)%%['float', 'int']</expr>
          <args>['mu:float', 'kappa:int']</args>
          <return>['ret:NoneType', 'theta:float']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="gauss">
          <expr>ret = obj.gauss(mu,sigma)%%['int', 'int']</expr>
          <args>['mu:int', 'sigma:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="betavariate">
          <expr>ret = obj.betavariate(alpha,beta)%%['float', 'float']</expr>
          <args>['alpha:float', 'beta:float']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="paretovariate">
          <expr>ret = obj.paretovariate(alpha)%%['float']</expr>
          <args>['alpha:float']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="weibullvariate">
          <expr>ret = obj.weibullvariate(alpha,beta)%%['float', 'float']</expr>
          <args>['alpha:float', 'beta:float']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="random.Random" init="obj = random.SystemRandom()%%['NoneType']" name="SystemRandom"/>
      <errors>
        <exception>AttributeError</exception>
        <exception>NotImplementedError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>ZeroDivisionError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['argparse', 'contextlib', 'os', 'pathlib', 'shutil', 'stat', 'sys', 'zipapp', 'zipfile']" name="zipapp">
      <class base="ValueError" init="obj = zipapp.ZipAppError()%%[]" name="ZipAppError"/>
      <api name="create_archive">
        <expr>zipapp.create_archive(source,target,interpreter,main,filter,compressed)%%['PosixPath', 'PosixPath', 'str', 'str', 'function', 'bool']</expr>
        <args>['source:PosixPath', 'target:PosixPath', 'interpreter:str', 'main:str', 'filter:function', 'compressed:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_interpreter">
        <expr>ret = zipapp.get_interpreter(archive)%%['str']</expr>
        <args>['archive:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>zipapp.main(args)%%['list']</expr>
        <args>['args:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>SystemExit</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>argparse.ArgumentError</exception>
        <exception>argparse.ArgumentTypeError</exception>
        <exception>shutil.Error</exception>
        <exception>shutil.ExecError</exception>
        <exception>shutil.ReadError</exception>
        <exception>shutil.RegistryError</exception>
        <exception>shutil.SameFileError</exception>
        <exception>shutil.SpecialFileError</exception>
        <exception>zipapp.ZipAppError</exception>
        <exception>zipfile.BadZipFile</exception>
        <exception>zipfile.LargeZipFile</exception>
      </errors>
    </module>
    <module importfrom="['collections:OrderedDict', 'io:StringIO']" imports="['csv', 're']" name="csv">
      <class init="obj = csv.Dialect()%%[]" name="Dialect">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="csv.Dialect" init="obj = csv.excel()%%[]" name="excel"/>
      <class base="csv.excel" init="obj = csv.excel_tab()%%[]" name="excel_tab"/>
      <class base="csv.Dialect" init="obj = csv.unix_dialect()%%[]" name="unix_dialect"/>
      <class init="obj = csv.DictReader(None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="DictReader">
        <api name="__init__">
          <expr>None</expr>
          <args>['f:NoneType', 'fieldnames:NoneType', 'restkey:NoneType', 'restval:NoneType', 'dialect:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="fieldnames">
          <expr>obj.fieldnames(value)%%['NoneType']</expr>
          <args>['value:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = csv.DictWriter(None,None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="DictWriter">
        <api name="__init__">
          <expr>None</expr>
          <args>['f:NoneType', 'fieldnames:NoneType', 'restval:NoneType', 'extrasaction:NoneType', 'dialect:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="writeheader">
          <expr>obj.writeheader()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = csv.Sniffer()%%[]" name="Sniffer">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sniff">
          <expr>ret = obj.sniff(sample,delimiters)%%['str', 'str']</expr>
          <args>['sample:str', 'delimiters:str']</args>
          <return>['dialect:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_header">
          <expr>ret = obj.has_header(sample)%%['str']</expr>
          <args>['sample:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>Error</exception>
        <exception>KeyError</exception>
        <exception>NameError</exception>
        <exception>OSError</exception>
        <exception>OverflowError</exception>
        <exception>StopIteration</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['dis', 'imp', 'importlib._bootstrap_external', 'importlib.machinery', 'marshal', 'modulefinder', 'os', 'sys', 'types', 'warnings']" name="modulefinder">
      <class init="obj = modulefinder.Module(None)%%['NoneType', 'NoneType', 'NoneType']" name="Module">
        <api name="__init__">
          <expr>None</expr>
          <args>['name:NoneType', 'file:NoneType', 'path:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = modulefinder.ModuleFinder()%%['NoneType', 'NoneType', 'NoneType', 'NoneType']" name="ModuleFinder">
        <api name="__init__">
          <expr>None</expr>
          <args>['path:NoneType', 'debug:NoneType', 'excludes:NoneType', 'replace_paths:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run_script">
          <expr>obj.run_script(pathname)%%['None']</expr>
          <args>['pathname:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="load_file">
          <expr>obj.load_file(pathname)%%['None']</expr>
          <args>['pathname:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="scan_opcodes">
          <expr>obj.scan_opcodes(co)%%['code']</expr>
          <args>['co:code']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="report">
          <expr>obj.report()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="any_missing">
          <expr>ret = obj.any_missing()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="AddPackagePath">
        <expr>modulefinder.AddPackagePath(packagename,path)%%['None', 'None']</expr>
        <args>['packagename:None', 'path:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ReplacePackage">
        <expr>modulefinder.ReplacePackage(oldname,newname)%%['None', 'None']</expr>
        <args>['oldname:None', 'newname:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>OSError</exception>
        <exception>RuntimeError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['enum:Enum', 'hashlib:md5', 'hashlib:sha1']" imports="['ctypes', 'ctypes.util', 'netbios', 'os', 'random', 're', 'shutil', 'socket', 'subprocess', 'sys', 'time', 'uuid', 'win32wnet']" name="uuid">
      <class base="enum.Enum" init="obj = uuid.SafeUUID()%%[]" name="SafeUUID"/>
      <class init="obj = uuid.UUID()%%['builtin_function_or_method', 'type', 'NoneType', 'NoneType', 'type', 'NoneType']" name="UUID">
        <api name="__init__">
          <expr>None</expr>
          <args>['hex:builtin_function_or_method', 'bytes:type', 'bytes_le:NoneType', 'fields:NoneType', 'int:type', 'version:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['is_safe:NoneType']</kwoargs>
          <defa>[None, None, None, None, None, None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="bytes">
          <expr>ret = obj.bytes()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="bytes_le">
          <expr>ret = obj.bytes_le()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="fields">
          <expr>obj.fields()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="time_low">
          <expr>ret = obj.time_low()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="time_mid">
          <expr>ret = obj.time_mid()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="time_hi_version">
          <expr>ret = obj.time_hi_version()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clock_seq_hi_variant">
          <expr>ret = obj.clock_seq_hi_variant()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clock_seq_low">
          <expr>ret = obj.clock_seq_low()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="time">
          <expr>ret = obj.time()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clock_seq">
          <expr>ret = obj.clock_seq()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="node">
          <expr>ret = obj.node()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="hex">
          <expr>ret = obj.hex()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="urn">
          <expr>ret = obj.urn()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="variant">
          <expr>ret = obj.variant()%%[]</expr>
          <args>[]</args>
          <return>['RESERVED_NCS:str', 'RFC_4122:str', 'RESERVED_MICROSOFT:str', 'RESERVED_FUTURE:str']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="version">
          <expr>ret = obj.version()%%[]</expr>
          <args>[]</args>
          <return>['ret:int']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="getnode">
        <expr>ret = uuid.getnode()%%[]</expr>
        <args>[]</args>
        <return>['_node:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['getters:NoneType']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <api name="uuid1">
        <expr>ret = uuid.uuid1(node,clock_seq)%%['int', 'int']</expr>
        <args>['node:int', 'clock_seq:int']</args>
        <return>['UUID:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="uuid3">
        <expr>ret = uuid.uuid3(namespace,name)%%['UUID', 'str']</expr>
        <args>['namespace:UUID', 'name:str']</args>
        <return>['UUID:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="uuid4">
        <expr>ret = uuid.uuid4()%%[]</expr>
        <args>[]</args>
        <return>['UUID:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="uuid5">
        <expr>ret = uuid.uuid5(namespace,name)%%['UUID', 'str']</expr>
        <args>['namespace:UUID', 'name:str']</args>
        <return>['UUID:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>Exception</exception>
        <exception>ImportError</exception>
        <exception>IndexError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>shutil.Error</exception>
        <exception>shutil.ExecError</exception>
        <exception>shutil.ReadError</exception>
        <exception>shutil.RegistryError</exception>
        <exception>shutil.SameFileError</exception>
        <exception>shutil.SpecialFileError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['hashlib']" name="hashlib">
      <errors>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['random:Random']" imports="['errno:_errno', 'functools:_functools', 'io:_io', 'os:_os', 'shutil:_shutil', 'tempfile', 'warnings:_warnings', 'weakref:_weakref']" name="tempfile">
      <class init="obj = tempfile.SpooledTemporaryFile()%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'builtin_function_or_method']" name="SpooledTemporaryFile">
        <api name="__init__">
          <expr>None</expr>
          <args>['max_size:NoneType', 'mode:NoneType', 'buffering:NoneType', 'encoding:NoneType', 'newline:NoneType', 'suffix:NoneType', 'prefix:NoneType', 'dir:builtin_function_or_method']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="closed">
          <expr>ret = obj.closed()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="encoding">
          <expr>ret = obj.encoding()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="mode">
          <expr>ret = obj.mode()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="name">
          <expr>ret = obj.name()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="newlines">
          <expr>ret = obj.newlines()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="softspace">
          <expr>ret = obj.softspace()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="builtins.object" init="obj = tempfile.TemporaryDirectory()%%['NoneType', 'NoneType', 'builtin_function_or_method']" name="TemporaryDirectory">
        <api name="__init__">
          <expr>None</expr>
          <args>['suffix:NoneType', 'prefix:NoneType', 'dir:builtin_function_or_method']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="gettempprefix">
        <expr>ret = tempfile.gettempprefix()%%[]</expr>
        <args>[]</args>
        <return>['template:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="gettempprefixb">
        <expr>ret = tempfile.gettempprefixb()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="gettempdir">
        <expr>ret = tempfile.gettempdir()%%[]</expr>
        <args>[]</args>
        <return>['tempdir:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="gettempdirb">
        <expr>ret = tempfile.gettempdirb()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="mkstemp">
        <expr>ret = tempfile.mkstemp(suffix,prefix,dir,text)%%['str', 'str', 'str', 'bool']</expr>
        <args>['suffix:str', 'prefix:str', 'dir:str', 'text:bool']</args>
        <return>['_mkstemp_inner:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="mkdtemp">
        <expr>ret = tempfile.mkdtemp(suffix,prefix,dir)%%['str', 'str', 'str']</expr>
        <args>['suffix:str', 'prefix:str', 'dir:str']</args>
        <return>['file:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="mktemp">
        <expr>ret = tempfile.mktemp(suffix,prefix,dir)%%['str', 'str', 'str']</expr>
        <args>['suffix:str', 'prefix:str', 'dir:str']</args>
        <return>['file:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, 'template', None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="NamedTemporaryFile">
        <expr>ret = tempfile.NamedTemporaryFile(mode,buffering,encoding,newline,suffix,prefix,dir,delete)%%['str', 'int', 'NoneType', 'NoneType', 'str', 'str', 'str', 'bool']</expr>
        <args>['mode:str', 'buffering:int', 'encoding:NoneType', 'newline:NoneType', 'suffix:str', 'prefix:str', 'dir:str', 'delete:bool']</args>
        <return>['_TemporaryFileWrapper:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None, None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="TemporaryFile">
        <expr>ret = tempfile.TemporaryFile(mode,buffering,encoding,newline,suffix,prefix,dir)%%['str', 'int', 'str', 'str', 'str', 'str', 'str']</expr>
        <args>['mode:str', 'buffering:int', 'encoding:str', 'newline:str', 'suffix:str', 'prefix:str', 'dir:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>BaseException</exception>
        <exception>FileExistsError</exception>
        <exception>FileNotFoundError</exception>
        <exception>IsADirectoryError</exception>
        <exception>OSError</exception>
        <exception>PermissionError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>shutil.Error</exception>
        <exception>shutil.ExecError</exception>
        <exception>shutil.ReadError</exception>
        <exception>shutil.RegistryError</exception>
        <exception>shutil.SameFileError</exception>
        <exception>shutil.SpecialFileError</exception>
      </errors>
    </module>
    <module importfrom="['types:DynamicClassAttribute', 'types:MappingProxyType']" imports="['enum', 'sys', 'warnings']" name="enum">
      <class init="obj = enum.auto()%%[]" name="auto"/>
      <class base="builtins.type" init="obj = enum.EnumMeta()%%[]" name="EnumMeta"/>
      <class init="obj = enum.Enum()%%[]" name="Enum"/>
      <class base="builtins.int" init="obj = enum.IntEnum()%%[]" name="IntEnum"/>
      <class base="enum.Enum" init="obj = enum.Flag()%%[]" name="Flag"/>
      <class base="builtins.int" init="obj = enum.IntFlag()%%[]" name="IntFlag"/>
      <api name="unique">
        <expr>ret = enum.unique(enumeration)%%['EnumMeta']</expr>
        <args>['enumeration:EnumMeta']</args>
        <return>['enumeration:EnumMeta']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>Exception</exception>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['collections:namedtuple']" imports="['sndhdr']" name="sndhdr">
      <api name="what">
        <expr>ret = sndhdr.what(filename)%%['str']</expr>
        <args>['filename:str']</args>
        <return>['res:SndHeaders']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="whathdr">
        <expr>ret = sndhdr.whathdr(filename)%%['str']</expr>
        <args>['filename:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_long_be">
        <expr>ret = sndhdr.get_long_be(b)%%['bytes']</expr>
        <args>['b:bytes']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_long_le">
        <expr>ret = sndhdr.get_long_le(b)%%['bytes']</expr>
        <args>['b:bytes']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_short_be">
        <expr>ret = sndhdr.get_short_be(b)%%['None']</expr>
        <args>['b:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_short_le">
        <expr>ret = sndhdr.get_short_le(b)%%['bytes']</expr>
        <args>['b:bytes']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['ftplib', 're', 'socket', 'ssl', 'sys']" name="ftplib">
      <class base="Exception" init="obj = ftplib.Error()%%[]" name="Error"/>
      <class base="Error" init="obj = ftplib.error_reply()%%[]" name="error_reply"/>
      <class base="Error" init="obj = ftplib.error_temp()%%[]" name="error_temp"/>
      <class base="Error" init="obj = ftplib.error_perm()%%[]" name="error_perm"/>
      <class base="Error" init="obj = ftplib.error_proto()%%[]" name="error_proto"/>
      <class init="obj = ftplib.FTP()%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="FTP">
        <api name="__init__">
          <expr>None</expr>
          <args>['host:NoneType', 'user:NoneType', 'passwd:NoneType', 'acct:NoneType', 'timeout:NoneType', 'source_address:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, '_GLOBAL_DEFAULT_TIMEOUT', None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="connect">
          <expr>ret = obj.connect(host,port,timeout,source_address)%%['str', 'int', 'int', 'tuple']</expr>
          <args>['host:str', 'port:int', 'timeout:int', 'source_address:tuple']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getwelcome">
          <expr>ret = obj.getwelcome()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_debuglevel">
          <expr>obj.set_debuglevel(level)%%['None']</expr>
          <args>['level:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_pasv">
          <expr>obj.set_pasv(val)%%['bool']</expr>
          <args>['val:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sanitize">
          <expr>ret = obj.sanitize(s)%%['str']</expr>
          <args>['s:str']</args>
          <return>['repr:builtin_function_or_method']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="abort">
          <expr>ret = obj.abort()%%[]</expr>
          <args>[]</args>
          <return>['resp:str']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="makeport">
          <expr>ret = obj.makeport()%%[]</expr>
          <args>[]</args>
          <return>['sock:socket']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ntransfercmd">
          <expr>obj.ntransfercmd(cmd,rest)%%['str', 'int']</expr>
          <args>['cmd:str', 'rest:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="transfercmd">
          <expr>ret = obj.transfercmd(cmd,rest)%%['str', 'int']</expr>
          <args>['cmd:str', 'rest:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="login">
          <expr>ret = obj.login(user,passwd,acct)%%['str', 'str', 'str']</expr>
          <args>['user:str', 'passwd:str', 'acct:str']</args>
          <return>['resp:str']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="retrbinary">
          <expr>ret = obj.retrbinary(cmd,callback,blocksize,rest)%%['str', 'function', 'int', 'int']</expr>
          <args>['cmd:str', 'callback:function', 'blocksize:int', 'rest:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="storbinary">
          <expr>ret = obj.storbinary(cmd,fp,blocksize,callback,rest)%%['str', 'BytesIO', 'int', 'function', 'int']</expr>
          <args>['cmd:str', 'fp:BytesIO', 'blocksize:int', 'callback:function', 'rest:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="storlines">
          <expr>ret = obj.storlines(cmd,fp,callback)%%['str', 'BytesIO', 'function']</expr>
          <args>['cmd:str', 'fp:BytesIO', 'callback:function']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="acct">
          <expr>ret = obj.acct(password)%%['str']</expr>
          <args>['password:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="nlst">
          <expr>ret = obj.nlst()%%[]</expr>
          <args>[]</args>
          <return>['files:list']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dir">
          <expr>obj.dir()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="mlsd">
          <expr>obj.mlsd(path,facts)%%['str', 'list']</expr>
          <args>['path:str', 'facts:list']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="rename">
          <expr>ret = obj.rename(fromname,toname)%%['str', 'str']</expr>
          <args>['fromname:str', 'toname:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="delete">
          <expr>ret = obj.delete(filename)%%['str']</expr>
          <args>['filename:str']</args>
          <return>['resp:str']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="cwd">
          <expr>ret = obj.cwd(dirname)%%['str']</expr>
          <args>['dirname:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="size">
          <expr>ret = obj.size(filename)%%['str']</expr>
          <args>['filename:str']</args>
          <return>['ret:int']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="mkd">
          <expr>ret = obj.mkd(dirname)%%['str']</expr>
          <args>['dirname:str']</args>
          <return>['ret:NoneType', 'parse257:function']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="rmd">
          <expr>ret = obj.rmd(dirname)%%['str']</expr>
          <args>['dirname:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pwd">
          <expr>ret = obj.pwd()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType', 'parse257:function']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="ftplib.FTP" init="obj = ftplib.FTP_TLS()%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="FTP_TLS">
        <api name="__init__">
          <expr>None</expr>
          <args>['host:NoneType', 'user:NoneType', 'passwd:NoneType', 'acct:NoneType', 'keyfile:NoneType', 'certfile:NoneType', 'context:NoneType', 'timeout:NoneType', 'source_address:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None, None, None, '_GLOBAL_DEFAULT_TIMEOUT', None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ccc">
          <expr>ret = obj.ccc()%%[]</expr>
          <args>[]</args>
          <return>['resp:str']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="prot_p">
          <expr>ret = obj.prot_p()%%[]</expr>
          <args>[]</args>
          <return>['resp:str']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="prot_c">
          <expr>ret = obj.prot_c()%%[]</expr>
          <args>[]</args>
          <return>['resp:str']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="abort">
          <expr>ret = obj.abort()%%[]</expr>
          <args>[]</args>
          <return>['resp:str']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="parse150">
        <expr>ret = ftplib.parse150(resp)%%['str']</expr>
        <args>['resp:str']</args>
        <return>['ret:NoneType', 'ret:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parse227">
        <expr>ftplib.parse227(resp)%%['str']</expr>
        <args>['resp:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parse229">
        <expr>ftplib.parse229(resp,peer)%%['None', 'None']</expr>
        <args>['resp:None', 'peer:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parse257">
        <expr>ret = ftplib.parse257(resp)%%['str']</expr>
        <args>['resp:str']</args>
        <return>['ret:NoneType', 'dirname:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="print_line">
        <expr>ftplib.print_line(line)%%['None']</expr>
        <args>['line:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ftpcp">
        <expr>ftplib.ftpcp(source,sourcename,target,targetname,type)%%['None', 'None', 'None', 'None', 'None']</expr>
        <args>['source:None', 'sourcename:None', 'target:None', 'targetname:None', 'type:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>EOFError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>ftplib.Error</exception>
        <exception>ftplib.error_perm</exception>
        <exception>ftplib.error_proto</exception>
        <exception>ftplib.error_reply</exception>
        <exception>ftplib.error_temp</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['gc', 'getopt', 'itertools', 'linecache', 'os', 'sys', 'time', 'timeit', 'traceback', 'warnings']" name="timeit">
      <class init="obj = timeit.Timer()%%['NoneType', 'NoneType', 'NoneType', 'builtin_function_or_method']" name="Timer">
        <api name="__init__">
          <expr>None</expr>
          <args>['stmt:NoneType', 'setup:NoneType', 'timer:NoneType', 'globals:builtin_function_or_method']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, 'default_timer', None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="autorange">
          <expr>obj.autorange(callback)%%['function']</expr>
          <args>['callback:function']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="reindent">
        <expr>ret = timeit.reindent(src,indent)%%['str', 'int']</expr>
        <args>['src:str', 'indent:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="timeit">
        <expr>ret = timeit.timeit(stmt,setup,timer,number,globals)%%['str', 'str', 'FakeTimer', 'int', 'dict']</expr>
        <args>['stmt:str', 'setup:str', 'timer:FakeTimer', 'number:int', 'globals:dict']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, 'default_timer', 'default_number', None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="repeat">
        <expr>ret = timeit.repeat(stmt,setup,timer,repeat,number,globals)%%['str', 'str', 'FakeTimer', 'int', 'int', 'NoneType']</expr>
        <args>['stmt:str', 'setup:str', 'timer:FakeTimer', 'repeat:int', 'number:int', 'globals:NoneType']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, 'default_timer', 'default_repeat', 'default_number', None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>ret = timeit.main(args)%%['list']</expr>
        <args>['args:list']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['_wrap_timer:method']</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>getopt.GetoptError</exception>
        <exception>getopt.error</exception>
      </errors>
    </module>
    <module importfrom="['collections.abc:Mapping', 'email.message:Message', 'email.parser:FeedParser', 'io:BytesIO', 'io:StringIO', 'io:TextIOWrapper', 'warnings:warn']" imports="['cgi', 'html', 'locale', 'os', 're', 'sys', 'tempfile', 'traceback', 'urllib.parse']" name="cgi">
      <class init="obj = cgi.MiniFieldStorage(None,None)%%['NoneType', 'NoneType']" name="MiniFieldStorage">
        <api name="__init__">
          <expr>None</expr>
          <args>['name:NoneType', 'value:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = cgi.FieldStorage()%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="FieldStorage">
        <api name="__init__">
          <expr>None</expr>
          <args>['fp:NoneType', 'headers:NoneType', 'outerboundary:NoneType', 'environ:NoneType', 'keep_blank_values:NoneType', 'strict_parsing:NoneType', 'limit:NoneType', 'encoding:NoneType', 'errors:NoneType', 'max_num_fields:NoneType', 'separator:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None, None, None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getfirst">
          <expr>ret = obj.getfirst(key,default)%%['None', 'None']</expr>
          <args>['key:None', 'default:None']</args>
          <return>['ret:None', 'default:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="keys">
          <expr>ret = obj.keys()%%[]</expr>
          <args>[]</args>
          <return>['list:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read_urlencoded">
          <expr>obj.read_urlencoded()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read_multi">
          <expr>obj.read_multi(environ,keep_blank_values,strict_parsing)%%['dict', 'int', 'int']</expr>
          <args>['environ:dict', 'keep_blank_values:int', 'strict_parsing:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read_single">
          <expr>obj.read_single()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="initlog">
        <expr>cgi.initlog()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dolog">
        <expr>cgi.dolog(fmt)%%['str']</expr>
        <args>['fmt:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="nolog">
        <expr>cgi.nolog()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="closelog">
        <expr>cgi.closelog()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parse">
        <expr>ret = cgi.parse(fp,environ,keep_blank_values,strict_parsing,separator)%%['BytesIO', 'dict', 'int', 'int', 'str']</expr>
        <args>['fp:BytesIO', 'environ:dict', 'keep_blank_values:int', 'strict_parsing:int', 'separator:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parse_qs">
        <expr>ret = cgi.parse_qs(qs,keep_blank_values,strict_parsing)%%['str', 'int', 'int']</expr>
        <args>['qs:str', 'keep_blank_values:int', 'strict_parsing:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parse_qsl">
        <expr>ret = cgi.parse_qsl(qs,keep_blank_values,strict_parsing)%%['str', 'int', 'int']</expr>
        <args>['qs:str', 'keep_blank_values:int', 'strict_parsing:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parse_multipart">
        <expr>ret = cgi.parse_multipart(fp,pdict,encoding,errors,separator)%%['BytesIO', 'dict', 'str', 'str', 'str']</expr>
        <args>['fp:BytesIO', 'pdict:dict', 'encoding:str', 'errors:str', 'separator:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parse_header">
        <expr>cgi.parse_header(line)%%['str']</expr>
        <args>['line:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="print_exception">
        <expr>cgi.print_exception(type,value,tb,limit)%%['None', 'None', 'None', 'None']</expr>
        <args>['type:None', 'value:None', 'tb:None', 'limit:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="print_environ">
        <expr>cgi.print_environ(environ)%%['None']</expr>
        <args>['environ:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="print_form">
        <expr>cgi.print_form(form)%%['None']</expr>
        <args>['form:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="print_directory">
        <expr>cgi.print_directory()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="print_arguments">
        <expr>cgi.print_arguments()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="print_environ_usage">
        <expr>cgi.print_environ_usage()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="escape">
        <expr>ret = cgi.escape(s,quote)%%['str', 'bool']</expr>
        <args>['s:str', 'quote:bool']</args>
        <return>['s:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="valid_boundary">
        <expr>ret = cgi.valid_boundary(s)%%['bytes']</expr>
        <args>['s:bytes']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['copyreg:dispatch_table', 'functools:partial', 'itertools:islice', 'org.python.core:PyStringMap', 'struct:pack', 'struct:unpack', 'sys:maxsize', 'types:FunctionType']" imports="['argparse', 'codecs', 'doctest', 'io', 'pickle', 'pprint', 're', 'sys']" name="pickle">
      <class base="Exception" init="obj = pickle.PickleError()%%[]" name="PickleError"/>
      <class base="PickleError" init="obj = pickle.PicklingError()%%[]" name="PicklingError"/>
      <class base="PickleError" init="obj = pickle.UnpicklingError()%%[]" name="UnpicklingError"/>
      <api name="whichmodule">
        <expr>ret = pickle.whichmodule(obj,name)%%['function', 'str']</expr>
        <args>['obj:function', 'name:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="encode_long">
        <expr>ret = pickle.encode_long(x)%%['int']</expr>
        <args>['x:int']</args>
        <return>['ret:NoneType', 'result:bytes']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="decode_long">
        <expr>ret = pickle.decode_long(data)%%['bytes']</expr>
        <args>['data:bytes']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>EOFError</exception>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>UnicodeDecodeError</exception>
        <exception>UnicodeEncodeError</exception>
        <exception>ValueError</exception>
        <exception>argparse.ArgumentError</exception>
        <exception>argparse.ArgumentTypeError</exception>
        <exception>pickle.PickleError</exception>
        <exception>pickle.PicklingError</exception>
        <exception>pickle.UnpicklingError</exception>
      </errors>
    </module>
    <module importfrom="['calendar:timegm', 'collections:namedtuple', 'enum:Enum', 'enum:IntEnum', 'enum:IntFlag', 'socket:AF_INET', 'socket:SOCK_STREAM', 'socket:SOL_SOCKET', 'socket:SO_TYPE', 'socket:create_connection', 'socket:socket', 'time:strptime']" imports="['base64', 'errno', 'os', 'socket:_socket', 'ssl', 'sys', 'warnings']" name="ssl">
      <class base="enum.IntEnum" init="obj = ssl.TLSVersion()%%[]" name="TLSVersion"/>
      <class base="ssl._ASN1Object" init="obj = ssl.Purpose()%%[]" name="Purpose"/>
      <class base="_SSLContext" init="obj = ssl.SSLContext()%%[]" name="SSLContext">
        <api name="wrap_socket">
          <expr>ret = obj.wrap_socket(sock,server_side,do_handshake_on_connect,suppress_ragged_eofs,server_hostname,session)%%['socket', 'bool', 'bool', 'bool', 'str', 'Session']</expr>
          <args>['sock:socket', 'server_side:bool', 'do_handshake_on_connect:bool', 'suppress_ragged_eofs:bool', 'server_hostname:str', 'session:Session']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="wrap_bio">
          <expr>ret = obj.wrap_bio(incoming,outgoing,server_side,server_hostname,session)%%['MemoryBIO', 'MemoryBIO', 'bool', 'str', 'NoneType']</expr>
          <args>['incoming:MemoryBIO', 'outgoing:MemoryBIO', 'server_side:bool', 'server_hostname:str', 'session:NoneType']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_npn_protocols">
          <expr>obj.set_npn_protocols(npn_protocols)%%['None']</expr>
          <args>['npn_protocols:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_servername_callback">
          <expr>obj.set_servername_callback(server_name_callback)%%['function']</expr>
          <args>['server_name_callback:function']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_alpn_protocols">
          <expr>obj.set_alpn_protocols(alpn_protocols)%%['list']</expr>
          <args>['alpn_protocols:list']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="load_default_certs">
          <expr>obj.load_default_certs(purpose)%%['Purpose']</expr>
          <args>['purpose:Purpose']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="minimum_version">
          <expr>obj.minimum_version(value)%%['TLSVersion']</expr>
          <args>['value:TLSVersion']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="maximum_version">
          <expr>obj.maximum_version(value)%%['TLSVersion']</expr>
          <args>['value:TLSVersion']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="options">
          <expr>obj.options(value)%%['Options']</expr>
          <args>['value:Options']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="hostname_checks_common_name">
          <expr>ret = obj.hostname_checks_common_name()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="protocol">
          <expr>ret = obj.protocol()%%[]</expr>
          <args>[]</args>
          <return>['_SSLMethod:EnumMeta']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="verify_flags">
          <expr>obj.verify_flags(value)%%['VerifyFlags']</expr>
          <args>['value:VerifyFlags']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="verify_mode">
          <expr>obj.verify_mode(value)%%['VerifyMode']</expr>
          <args>['value:VerifyMode']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = ssl.SSLObject()%%[]" name="SSLObject">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="context">
          <expr>obj.context(ctx)%%['None']</expr>
          <args>['ctx:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="session">
          <expr>obj.session(session)%%['None']</expr>
          <args>['session:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="session_reused">
          <expr>ret = obj.session_reused()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="server_side">
          <expr>ret = obj.server_side()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="server_hostname">
          <expr>ret = obj.server_hostname()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unwrap">
          <expr>ret = obj.unwrap()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="socket.socket" init="obj = ssl.SSLSocket()%%['None', 'None', 'None', 'None']" name="SSLSocket">
        <api name="context">
          <expr>obj.context(ctx)%%['SSLContext']</expr>
          <args>['ctx:SSLContext']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="session">
          <expr>obj.session(session)%%['type']</expr>
          <args>['session:type']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="session_reused">
          <expr>ret = obj.session_reused()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dup">
          <expr>obj.dup()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sendmsg">
          <expr>obj.sendmsg()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="recvmsg">
          <expr>obj.recvmsg()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="recvmsg_into">
          <expr>obj.recvmsg_into()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unwrap">
          <expr>ret = obj.unwrap()%%[]</expr>
          <args>[]</args>
          <return>['s:SSLSocket']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="match_hostname">
        <expr>ssl.match_hostname(cert,hostname)%%['dict', 'str']</expr>
        <args>['cert:dict', 'hostname:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_default_verify_paths">
        <expr>ret = ssl.get_default_verify_paths()%%[]</expr>
        <args>[]</args>
        <return>['DefaultVerifyPaths:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="create_default_context">
        <expr>ret = ssl.create_default_context(purpose)%%['Purpose']</expr>
        <args>['purpose:Purpose']</args>
        <return>['context:SSLContext']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['cafile:str', 'capath:str', 'cadata:str']</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[None, None, None]</kwodefa>
      </api>
      <api name="wrap_socket">
        <expr>ret = ssl.wrap_socket(sock,keyfile,certfile,server_side,cert_reqs,ssl_version,ca_certs,do_handshake_on_connect,suppress_ragged_eofs,ciphers)%%['socket', 'str', 'str', 'bool', 'VerifyMode', '_SSLMethod', 'NoneType', 'bool', 'bool', 'NoneType']</expr>
        <args>['sock:socket', 'keyfile:str', 'certfile:str', 'server_side:bool', 'cert_reqs:VerifyMode', 'ssl_version:_SSLMethod', 'ca_certs:NoneType', 'do_handshake_on_connect:bool', 'suppress_ragged_eofs:bool', 'ciphers:NoneType']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, 'CERT_NONE', 'PROTOCOL_TLS', None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="cert_time_to_seconds">
        <expr>ret = ssl.cert_time_to_seconds(cert_time)%%['str']</expr>
        <args>['cert_time:str']</args>
        <return>['timegm:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="DER_cert_to_PEM_cert">
        <expr>ret = ssl.DER_cert_to_PEM_cert(der_cert_bytes)%%['bytes']</expr>
        <args>['der_cert_bytes:bytes']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="PEM_cert_to_DER_cert">
        <expr>ret = ssl.PEM_cert_to_DER_cert(pem_cert_string)%%['str']</expr>
        <args>['pem_cert_string:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_server_certificate">
        <expr>ret = ssl.get_server_certificate(addr,ssl_version,ca_certs)%%['tuple', '_SSLMethod', 'str']</expr>
        <args>['addr:tuple', 'ssl_version:_SSLMethod', 'ca_certs:str']</args>
        <return>['DER_cert_to_PEM_cert:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['PROTOCOL_TLS', None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_protocol_name">
        <expr>ret = ssl.get_protocol_name(protocol_code)%%['_SSLMethod']</expr>
        <args>['protocol_code:_SSLMethod']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>CertificateError</exception>
        <exception>ImportError</exception>
        <exception>NotImplementedError</exception>
        <exception>OSError</exception>
        <exception>PermissionError</exception>
        <exception>SSLError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['errno:ENOENT', 'struct:unpack']" imports="['builtins', 'copy', 'gettext', 'locale', 'os', 're', 'sys', 'warnings']" name="gettext">
      <class init="obj = gettext.NullTranslations()%%['None']" name="NullTranslations">
        <api name="__init__">
          <expr>None</expr>
          <args>['fp:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info">
          <expr>ret = obj.info()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="charset">
          <expr>ret = obj.charset()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="output_charset">
          <expr>ret = obj.output_charset()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_output_charset">
          <expr>obj.set_output_charset(charset)%%['None']</expr>
          <args>['charset:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="install">
          <expr>obj.install(names)%%['None']</expr>
          <args>['names:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="gettext.NullTranslations" init="obj = gettext.GNUTranslations()%%['None']" name="GNUTranslations"/>
      <api name="c2py">
        <expr>ret = gettext.c2py(plural)%%['None']</expr>
        <args>['plural:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="find">
        <expr>ret = gettext.find(domain,localedir,languages,all)%%['str', 'NoneType', 'NoneType', 'bool']</expr>
        <args>['domain:str', 'localedir:NoneType', 'languages:NoneType', 'all:bool']</args>
        <return>['mofile:NoneType', 'result:list']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="translation">
        <expr>ret = gettext.translation(domain,localedir,languages,class_,fallback,codeset)%%['str', 'NoneType', 'NoneType', 'NoneType', 'bool', 'NoneType']</expr>
        <args>['domain:str', 'localedir:NoneType', 'languages:NoneType', 'class_:NoneType', 'fallback:bool', 'codeset:NoneType']</args>
        <return>['NullTranslations:type', 'result:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="install">
        <expr>gettext.install(domain,localedir,codeset,names)%%['None', 'None', 'None', 'None']</expr>
        <args>['domain:None', 'localedir:None', 'codeset:None', 'names:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="textdomain">
        <expr>ret = gettext.textdomain(domain)%%['None']</expr>
        <args>['domain:None']</args>
        <return>['_current_domain:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="bindtextdomain">
        <expr>ret = gettext.bindtextdomain(domain,localedir)%%['None', 'None']</expr>
        <args>['domain:None', 'localedir:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="bind_textdomain_codeset">
        <expr>ret = gettext.bind_textdomain_codeset(domain,codeset)%%['None', 'None']</expr>
        <args>['domain:None', 'codeset:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dgettext">
        <expr>ret = gettext.dgettext(domain,message)%%['str', 'str']</expr>
        <args>['domain:str', 'message:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ldgettext">
        <expr>ret = gettext.ldgettext(domain,message)%%['None', 'None']</expr>
        <args>['domain:None', 'message:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dngettext">
        <expr>ret = gettext.dngettext(domain,msgid1,msgid2,n)%%['None', 'None', 'None', 'None']</expr>
        <args>['domain:None', 'msgid1:None', 'msgid2:None', 'n:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ldngettext">
        <expr>ret = gettext.ldngettext(domain,msgid1,msgid2,n)%%['None', 'None', 'None', 'None']</expr>
        <args>['domain:None', 'msgid1:None', 'msgid2:None', 'n:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="gettext">
        <expr>ret = gettext.gettext(message)%%['str']</expr>
        <args>['message:str']</args>
        <return>['dgettext:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="lgettext">
        <expr>ret = gettext.lgettext(message)%%['None']</expr>
        <args>['message:None']</args>
        <return>['ldgettext:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ngettext">
        <expr>ret = gettext.ngettext(msgid1,msgid2,n)%%['None', 'None', 'None']</expr>
        <args>['msgid1:None', 'msgid2:None', 'n:None']</args>
        <return>['dngettext:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="lngettext">
        <expr>ret = gettext.lngettext(msgid1,msgid2,n)%%['None', 'None', 'None']</expr>
        <args>['msgid1:None', 'msgid2:None', 'n:None']</args>
        <return>['ldngettext:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>FileNotFoundError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>RecursionError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>copy.Error</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['bisect']" name="bisect">
      <api name="insort_right">
        <expr>bisect.insort_right(a,x,lo,hi)%%['list', 'int', 'int', 'int']</expr>
        <args>['a:list', 'x:int', 'lo:int', 'hi:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="bisect_right">
        <expr>ret = bisect.bisect_right(a,x,lo,hi)%%['list', 'int', 'int', 'int']</expr>
        <args>['a:list', 'x:int', 'lo:int', 'hi:int']</args>
        <return>['lo:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="insort_left">
        <expr>bisect.insort_left(a,x,lo,hi)%%['list', 'int', 'int', 'int']</expr>
        <args>['a:list', 'x:int', 'lo:int', 'hi:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="bisect_left">
        <expr>ret = bisect.bisect_left(a,x,lo,hi)%%['list', 'int', 'int', 'int']</expr>
        <args>['a:list', 'x:int', 'lo:int', 'hi:int']</args>
        <return>['lo:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['nt:*', 'os.path:altsep', 'os.path:curdir', 'os.path:defpath', 'os.path:devnull', 'os.path:extsep', 'os.path:pardir', 'os.path:pathsep', 'os.path:sep', 'posix:*']" imports="['abc', 'io', 'nt', 'ntpath:path', 'os', 'posix', 'posixpath:path', 'stat:st', 'subprocess', 'sys', 'warnings']" name="os">
      <class base="abc.ABC" init="obj = os.PathLike()%%[]" name="PathLike"/>
      <api name="makedirs">
        <expr>os.makedirs(name,mode,exist_ok)%%['str', 'int', 'bool']</expr>
        <args>['name:str', 'mode:int', 'exist_ok:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="removedirs">
        <expr>os.removedirs(name)%%['str']</expr>
        <args>['name:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="renames">
        <expr>os.renames(old,new)%%['None', 'None']</expr>
        <args>['old:None', 'new:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="walk">
        <expr>os.walk(top,topdown,onerror,followlinks)%%['str', 'bool', 'builtin_function_or_method', 'bool']</expr>
        <args>['top:str', 'topdown:bool', 'onerror:builtin_function_or_method', 'followlinks:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="fwalk">
        <expr>os.fwalk(top,topdown,onerror)%%['bytes', 'bool', 'builtin_function_or_method']</expr>
        <args>['top:bytes', 'topdown:bool', 'onerror:builtin_function_or_method']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['follow_symlinks:bool', 'dir_fd:int']</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[None, None]</kwodefa>
      </api>
      <api name="execl">
        <expr>os.execl(file)%%['None']</expr>
        <args>['file:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="execle">
        <expr>os.execle(file)%%['None']</expr>
        <args>['file:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="execlp">
        <expr>os.execlp(file)%%['None']</expr>
        <args>['file:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="execlpe">
        <expr>os.execlpe(file)%%['None']</expr>
        <args>['file:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="execvp">
        <expr>os.execvp(file,args)%%['None', 'None']</expr>
        <args>['file:None', 'args:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="execvpe">
        <expr>os.execvpe(file,args,env)%%['str', 'list', 'dict']</expr>
        <args>['file:str', 'args:list', 'env:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_exec_path">
        <expr>ret = os.get_exec_path(env)%%['dict']</expr>
        <args>['env:dict']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getenv">
        <expr>ret = os.getenv(key,default)%%['str', 'NoneType']</expr>
        <args>['key:str', 'default:NoneType']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getenvb">
        <expr>ret = os.getenvb(key,default)%%['None', 'None']</expr>
        <args>['key:None', 'default:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="spawnv">
        <expr>ret = os.spawnv(mode,file,args)%%['int', 'str', 'tuple']</expr>
        <args>['mode:int', 'file:str', 'args:tuple']</args>
        <return>['_spawnvef:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="spawnve">
        <expr>ret = os.spawnve(mode,file,args,env)%%['int', 'str', 'tuple', 'dict']</expr>
        <args>['mode:int', 'file:str', 'args:tuple', 'env:dict']</args>
        <return>['_spawnvef:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="spawnvp">
        <expr>ret = os.spawnvp(mode,file,args)%%['int', 'str', 'tuple']</expr>
        <args>['mode:int', 'file:str', 'args:tuple']</args>
        <return>['_spawnvef:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="spawnvpe">
        <expr>ret = os.spawnvpe(mode,file,args,env)%%['int', 'str', 'tuple', 'dict']</expr>
        <args>['mode:int', 'file:str', 'args:tuple', 'env:dict']</args>
        <return>['_spawnvef:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="spawnl">
        <expr>ret = os.spawnl(mode,file)%%['int', 'str']</expr>
        <args>['mode:int', 'file:str']</args>
        <return>['spawnv:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="spawnle">
        <expr>ret = os.spawnle(mode,file)%%['int', 'str']</expr>
        <args>['mode:int', 'file:str']</args>
        <return>['spawnve:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="spawnlp">
        <expr>ret = os.spawnlp(mode,file)%%['int', 'str']</expr>
        <args>['mode:int', 'file:str']</args>
        <return>['spawnvp:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="spawnlpe">
        <expr>ret = os.spawnlpe(mode,file)%%['int', 'str']</expr>
        <args>['mode:int', 'file:str']</args>
        <return>['spawnvpe:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="popen">
        <expr>ret = os.popen(cmd,mode,buffering)%%['str', 'str', 'int']</expr>
        <args>['cmd:str', 'mode:str', 'buffering:int']</args>
        <return>['_wrap_close:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="fdopen">
        <expr>ret = os.fdopen(fd)%%['int']</expr>
        <args>['fd:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>FileExistsError</exception>
        <exception>FileNotFoundError</exception>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
        <exception>NameError</exception>
        <exception>NotADirectoryError</exception>
        <exception>NotImplementedError</exception>
        <exception>OSError</exception>
        <exception>StopIteration</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['abc:get_cache_token', 'collections:namedtuple', 'reprlib:recursive_repr']" imports="['functools', 'types', 'weakref']" name="functools">
      <class init="obj = functools.partial()%%[]" name="partial"/>
      <class base="builtins.object" init="obj = functools.partialmethod()%%[]" name="partialmethod">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="update_wrapper">
        <expr>ret = functools.update_wrapper(wrapper,wrapped,assigned,updated)%%['_lru_cache_wrapper', 'function', 'tuple', 'tuple']</expr>
        <args>['wrapper:_lru_cache_wrapper', 'wrapped:function', 'assigned:tuple', 'updated:tuple']</args>
        <return>['wrapper:_lru_cache_wrapper']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['WRAPPER_ASSIGNMENTS', 'WRAPPER_UPDATES']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="wraps">
        <expr>ret = functools.wraps(wrapped,assigned,updated)%%['function', 'tuple', 'tuple']</expr>
        <args>['wrapped:function', 'assigned:tuple', 'updated:tuple']</args>
        <return>['partial:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['WRAPPER_ASSIGNMENTS', 'WRAPPER_UPDATES']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="total_ordering">
        <expr>ret = functools.total_ordering(cls)%%['type']</expr>
        <args>['cls:type']</args>
        <return>['cls:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="cmp_to_key">
        <expr>ret = functools.cmp_to_key(mycmp)%%['function']</expr>
        <args>['mycmp:function']</args>
        <return>['K:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="lru_cache">
        <expr>ret = functools.lru_cache(maxsize,typed)%%['int', 'bool']</expr>
        <args>['maxsize:int', 'typed:bool']</args>
        <return>['decorating_function:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="singledispatch">
        <expr>ret = functools.singledispatch(func)%%['None']</expr>
        <args>['func:None']</args>
        <return>['wrapper:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>RuntimeError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['genericpath:*']" imports="['genericpath', 'os', 'posixpath', 'pwd', 're', 'stat', 'sys']" name="posixpath">
      <api name="normcase">
        <expr>ret = posixpath.normcase(s)%%['str']</expr>
        <args>['s:str']</args>
        <return>['s:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isabs">
        <expr>ret = posixpath.isabs(s)%%['str']</expr>
        <args>['s:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="join">
        <expr>ret = posixpath.join(a)%%['str']</expr>
        <args>['a:str']</args>
        <return>['path:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="split">
        <expr>posixpath.split(p)%%['str']</expr>
        <args>['p:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="splitext">
        <expr>ret = posixpath.splitext(p)%%['str']</expr>
        <args>['p:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="splitdrive">
        <expr>posixpath.splitdrive(p)%%['str']</expr>
        <args>['p:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="basename">
        <expr>ret = posixpath.basename(p)%%['str']</expr>
        <args>['p:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dirname">
        <expr>ret = posixpath.dirname(p)%%['str']</expr>
        <args>['p:str']</args>
        <return>['head:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="islink">
        <expr>ret = posixpath.islink(path)%%['str']</expr>
        <args>['path:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="lexists">
        <expr>ret = posixpath.lexists(path)%%['str']</expr>
        <args>['path:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ismount">
        <expr>ret = posixpath.ismount(path)%%['FakePath']</expr>
        <args>['path:FakePath']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="expanduser">
        <expr>ret = posixpath.expanduser(path)%%['str']</expr>
        <args>['path:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="expandvars">
        <expr>ret = posixpath.expandvars(path)%%['FakePath']</expr>
        <args>['path:FakePath']</args>
        <return>['path:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="normpath">
        <expr>ret = posixpath.normpath(path)%%['str']</expr>
        <args>['path:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="abspath">
        <expr>ret = posixpath.abspath(path)%%['str']</expr>
        <args>['path:str']</args>
        <return>['normpath:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="realpath">
        <expr>ret = posixpath.realpath(filename)%%['str']</expr>
        <args>['filename:str']</args>
        <return>['abspath:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="relpath">
        <expr>ret = posixpath.relpath(path,start)%%['str', 'str']</expr>
        <args>['path:str', 'start:str']</args>
        <return>['curdir:str', 'join:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="commonpath">
        <expr>ret = posixpath.commonpath(paths)%%['list']</expr>
        <args>['paths:list']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>BytesWarning</exception>
        <exception>DeprecationWarning</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['hashlib:_hashlib', 'hmac', 'warnings:_warnings']" name="hmac">
      <class init="obj = hmac.HMAC(None)%%['NoneType', 'NoneType', 'NoneType']" name="HMAC">
        <api name="__init__">
          <expr>None</expr>
          <args>['key:NoneType', 'msg:NoneType', 'digestmod:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="name">
          <expr>ret = obj.name()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="new">
        <expr>ret = hmac.new(key,msg,digestmod)%%['bytes', 'bytes', 'str']</expr>
        <args>['key:bytes', 'msg:bytes', 'digestmod:str']</args>
        <return>['HMAC:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="digest">
        <expr>ret = hmac.digest(key,msg,digest)%%['bytes', 'bytes', 'str']</expr>
        <args>['key:bytes', 'msg:bytes', 'digest:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['importlib._bootstrap_external:SourcelessFileLoader', 'importlib:machinery', 'importlib:util']" imports="['imp', 'importlib', 'importlib.machinery', 'os', 'sys', 'tokenize', 'types', 'warnings']" name="imp">
      <class init="obj = imp.NullImporter(None)%%['NoneType']" name="NullImporter">
        <api name="__init__">
          <expr>None</expr>
          <args>['path:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="find_module">
          <expr>ret = obj.find_module(fullname)%%['None']</expr>
          <args>['fullname:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="new_module">
        <expr>ret = imp.new_module(name)%%['None']</expr>
        <args>['name:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_magic">
        <expr>ret = imp.get_magic()%%[]</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_tag">
        <expr>ret = imp.get_tag()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="cache_from_source">
        <expr>ret = imp.cache_from_source(path,debug_override)%%['str', 'bool']</expr>
        <args>['path:str', 'debug_override:bool']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="source_from_cache">
        <expr>ret = imp.source_from_cache(path)%%['str']</expr>
        <args>['path:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_suffixes">
        <expr>ret = imp.get_suffixes()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="load_source">
        <expr>ret = imp.load_source(name,pathname,file)%%['str', 'str', 'TextIOWrapper']</expr>
        <args>['name:str', 'pathname:str', 'file:TextIOWrapper']</args>
        <return>['module:module']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="load_compiled">
        <expr>ret = imp.load_compiled(name,pathname,file)%%['str', 'str', 'NoneType']</expr>
        <args>['name:str', 'pathname:str', 'file:NoneType']</args>
        <return>['module:module']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="load_package">
        <expr>ret = imp.load_package(name,path)%%['str', 'str']</expr>
        <args>['name:str', 'path:str']</args>
        <return>['_exec:function', '_load:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="load_module">
        <expr>ret = imp.load_module(name,file,filename,details)%%['str', 'TextIOWrapper', 'str', 'tuple']</expr>
        <args>['name:str', 'file:TextIOWrapper', 'filename:str', 'details:tuple']</args>
        <return>['load_source:function', 'load_compiled:function', 'load_dynamic:function', 'load_package:function', 'init_builtin:function', 'init_frozen:builtin_function_or_method']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="find_module">
        <expr>imp.find_module(name,path)%%['str', 'list']</expr>
        <args>['name:str', 'path:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="reload">
        <expr>ret = imp.reload(module)%%['module']</expr>
        <args>['module:module']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="init_builtin">
        <expr>ret = imp.init_builtin(name)%%['None']</expr>
        <args>['name:None']</args>
        <return>['_builtin_from_name:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="load_dynamic">
        <expr>ret = imp.load_dynamic(name,path,file)%%['str', 'str', 'BufferedReader']</expr>
        <args>['name:str', 'path:str', 'file:BufferedReader']</args>
        <return>['_load:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>RuntimeError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>tokenize.StopTokenizing</exception>
        <exception>tokenize.TokenError</exception>
      </errors>
    </module>
    <module importfrom="['collections:namedtuple', 'functools:singledispatch', 'types:ModuleType', 'zipimport:zipimporter']" imports="['importlib', 'importlib.machinery', 'importlib.util', 'inspect', 'marshal', 'os', 'os.path', 'pkgutil', 'sys', 'warnings', 'zipimport']" name="pkgutil">
      <class init="obj = pkgutil.ImpImporter()%%['None']" name="ImpImporter">
        <api name="__init__">
          <expr>None</expr>
          <args>['path:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = pkgutil.ImpLoader(None,None,None,None)%%['None', 'None', 'None', 'None']" name="ImpLoader">
        <api name="__init__">
          <expr>None</expr>
          <args>['fullname:None', 'file:None', 'filename:None', 'etc:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_data">
          <expr>ret = obj.get_data(pathname)%%['None']</expr>
          <args>['pathname:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_package">
          <expr>ret = obj.is_package(fullname)%%['None']</expr>
          <args>['fullname:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="read_code">
        <expr>ret = pkgutil.read_code(stream)%%['None']</expr>
        <args>['stream:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="walk_packages">
        <expr>pkgutil.walk_packages(path,prefix,onerror)%%['list', 'str', 'function']</expr>
        <args>['path:list', 'prefix:str', 'onerror:function']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="iter_modules">
        <expr>pkgutil.iter_modules(path,prefix)%%['list', 'str']</expr>
        <args>['path:list', 'prefix:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="iter_importer_modules">
        <expr>ret = pkgutil.iter_importer_modules(importer,prefix)%%['NoneType', 'str']</expr>
        <args>['importer:NoneType', 'prefix:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="iter_zipimport_modules">
        <expr>pkgutil.iter_zipimport_modules(importer,prefix)%%['zipimporter', 'str']</expr>
        <args>['importer:zipimporter', 'prefix:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_importer">
        <expr>ret = pkgutil.get_importer(path_item)%%['str']</expr>
        <args>['path_item:str']</args>
        <return>['importer:FileFinder']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="iter_importers">
        <expr>pkgutil.iter_importers(fullname)%%['str']</expr>
        <args>['fullname:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_loader">
        <expr>ret = pkgutil.get_loader(module_or_name)%%['str']</expr>
        <args>['module_or_name:str']</args>
        <return>['ret:NoneType', 'find_loader:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="find_loader">
        <expr>ret = pkgutil.find_loader(fullname)%%['str']</expr>
        <args>['fullname:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="extend_path">
        <expr>ret = pkgutil.extend_path(path,name)%%['list', 'str']</expr>
        <args>['path:list', 'name:str']</args>
        <return>['path:list']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_data">
        <expr>ret = pkgutil.get_data(package,resource)%%['str', 'str']</expr>
        <args>['package:str', 'resource:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>Exception</exception>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['os', 'symtable', 'sys', 'weakref']" name="symtable">
      <class init="obj = symtable.SymbolTableFactory()%%[]" name="SymbolTableFactory">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="builtins.object" init="obj = symtable.SymbolTable(None,None)%%['NoneType', 'NoneType']" name="SymbolTable">
        <api name="__init__">
          <expr>None</expr>
          <args>['raw_table:NoneType', 'filename:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_type">
          <expr>ret = obj.get_type()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_id">
          <expr>ret = obj.get_id()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_name">
          <expr>ret = obj.get_name()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_lineno">
          <expr>ret = obj.get_lineno()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_optimized">
          <expr>ret = obj.is_optimized()%%[]</expr>
          <args>[]</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_nested">
          <expr>ret = obj.is_nested()%%[]</expr>
          <args>[]</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_children">
          <expr>ret = obj.has_children()%%[]</expr>
          <args>[]</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_exec">
          <expr>ret = obj.has_exec()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_symbols">
          <expr>ret = obj.get_symbols()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_children">
          <expr>ret = obj.get_children()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="symtable.SymbolTable" init="obj = symtable.Function(None,None)%%['NoneType', 'NoneType']" name="Function">
        <api name="get_parameters">
          <expr>ret = obj.get_parameters()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_locals">
          <expr>ret = obj.get_locals()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_globals">
          <expr>ret = obj.get_globals()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_frees">
          <expr>ret = obj.get_frees()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="symtable.SymbolTable" init="obj = symtable.Class(None,None)%%['NoneType', 'NoneType']" name="Class">
        <api name="get_methods">
          <expr>ret = obj.get_methods()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="builtins.object" init="obj = symtable.Symbol(None,None)%%['NoneType', 'NoneType', 'NoneType']" name="Symbol">
        <api name="__init__">
          <expr>None</expr>
          <args>['name:NoneType', 'flags:NoneType', 'namespaces:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_name">
          <expr>ret = obj.get_name()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_referenced">
          <expr>ret = obj.is_referenced()%%[]</expr>
          <args>[]</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_parameter">
          <expr>ret = obj.is_parameter()%%[]</expr>
          <args>[]</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_global">
          <expr>ret = obj.is_global()%%[]</expr>
          <args>[]</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_declared_global">
          <expr>ret = obj.is_declared_global()%%[]</expr>
          <args>[]</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_local">
          <expr>ret = obj.is_local()%%[]</expr>
          <args>[]</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_annotated">
          <expr>ret = obj.is_annotated()%%[]</expr>
          <args>[]</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_free">
          <expr>ret = obj.is_free()%%[]</expr>
          <args>[]</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_imported">
          <expr>ret = obj.is_imported()%%[]</expr>
          <args>[]</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_assigned">
          <expr>ret = obj.is_assigned()%%[]</expr>
          <args>[]</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_namespace">
          <expr>ret = obj.is_namespace()%%[]</expr>
          <args>[]</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_namespaces">
          <expr>ret = obj.get_namespaces()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_namespace">
          <expr>ret = obj.get_namespace()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="symtable">
        <expr>ret = symtable.symtable(code,filename,compile_type)%%['str', 'str', 'str']</expr>
        <args>['code:str', 'filename:str', 'compile_type:str']</args>
        <return>['_newSymbolTable:SymbolTableFactory']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['collections:namedtuple', 'heapq:nlargest']" imports="['difflib', 'doctest', 're']" name="difflib">
      <class init="obj = difflib.SequenceMatcher()%%['NoneType', 'NoneType', 'NoneType', 'NoneType']" name="SequenceMatcher">
        <api name="__init__">
          <expr>None</expr>
          <args>['isjunk:NoneType', 'a:NoneType', 'b:NoneType', 'autojunk:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_seqs">
          <expr>obj.set_seqs(a,b)%%['list', 'list']</expr>
          <args>['a:list', 'b:list']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_matching_blocks">
          <expr>ret = obj.get_matching_blocks()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_grouped_opcodes">
          <expr>obj.get_grouped_opcodes(n)%%['int']</expr>
          <args>['n:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ratio">
          <expr>ret = obj.ratio()%%[]</expr>
          <args>[]</args>
          <return>['_calculate_ratio:function']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="quick_ratio">
          <expr>ret = obj.quick_ratio()%%[]</expr>
          <args>[]</args>
          <return>['_calculate_ratio:function']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="real_quick_ratio">
          <expr>ret = obj.real_quick_ratio()%%[]</expr>
          <args>[]</args>
          <return>['_calculate_ratio:function']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = difflib.Differ()%%['NoneType', 'NoneType']" name="Differ">
        <api name="__init__">
          <expr>None</expr>
          <args>['linejunk:NoneType', 'charjunk:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="compare">
          <expr>obj.compare(a,b)%%['list', 'list']</expr>
          <args>['a:list', 'b:list']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="builtins.object" init="obj = difflib.HtmlDiff()%%['NoneType', 'NoneType', 'NoneType', 'NoneType']" name="HtmlDiff">
        <api name="__init__">
          <expr>None</expr>
          <args>['tabsize:NoneType', 'wrapcolumn:NoneType', 'linejunk:NoneType', 'charjunk:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, 'IS_CHARACTER_JUNK']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="make_file">
          <expr>ret = obj.make_file(fromlines,tolines,fromdesc,todesc,context,numlines)%%['list', 'list', 'str', 'str', 'bool', 'int']</expr>
          <args>['fromlines:list', 'tolines:list', 'fromdesc:str', 'todesc:str', 'context:bool', 'numlines:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['charset:str']</kwoargs>
          <defa>[None, None, None, None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="make_table">
          <expr>ret = obj.make_table(fromlines,tolines,fromdesc,todesc,context,numlines)%%['list', 'list', 'str', 'str', 'bool', 'int']</expr>
          <args>['fromlines:list', 'tolines:list', 'fromdesc:str', 'todesc:str', 'context:bool', 'numlines:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="get_close_matches">
        <expr>ret = difflib.get_close_matches(word,possibilities,n,cutoff)%%['str', 'list', 'int', 'float']</expr>
        <args>['word:str', 'possibilities:list', 'n:int', 'cutoff:float']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="IS_LINE_JUNK">
        <expr>ret = difflib.IS_LINE_JUNK(line,pat)%%['str', 'builtin_function_or_method']</expr>
        <args>['line:str', 'pat:builtin_function_or_method']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="IS_CHARACTER_JUNK">
        <expr>ret = difflib.IS_CHARACTER_JUNK(ch,ws)%%['str', 'str']</expr>
        <args>['ch:str', 'ws:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="unified_diff">
        <expr>difflib.unified_diff(a,b,fromfile,tofile,fromfiledate,tofiledate,n,lineterm)%%['list', 'list', 'str', 'str', 'str', 'str', 'int', 'str']</expr>
        <args>['a:list', 'b:list', 'fromfile:str', 'tofile:str', 'fromfiledate:str', 'tofiledate:str', 'n:int', 'lineterm:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="context_diff">
        <expr>difflib.context_diff(a,b,fromfile,tofile,fromfiledate,tofiledate,n,lineterm)%%['str', 'str', 'str', 'str', 'str', 'str', 'int', 'str']</expr>
        <args>['a:str', 'b:str', 'fromfile:str', 'tofile:str', 'fromfiledate:str', 'tofiledate:str', 'n:int', 'lineterm:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="diff_bytes">
        <expr>difflib.diff_bytes(dfunc,a,b,fromfile,tofile,fromfiledate,tofiledate,n,lineterm)%%['function', 'list', 'list', 'bytes', 'bytes', 'bytes', 'bytes', 'int', 'bytes']</expr>
        <args>['dfunc:function', 'a:list', 'b:list', 'fromfile:bytes', 'tofile:bytes', 'fromfiledate:bytes', 'tofiledate:bytes', 'n:int', 'lineterm:bytes']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ndiff">
        <expr>ret = difflib.ndiff(a,b,linejunk,charjunk)%%['list', 'list', 'NoneType', 'function']</expr>
        <args>['a:list', 'b:list', 'linejunk:NoneType', 'charjunk:function']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, 'IS_CHARACTER_JUNK']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="restore">
        <expr>difflib.restore(delta,which)%%['list', 'int']</expr>
        <args>['delta:list', 'which:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>StopIteration</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['hmac:compare_digest', 'random:SystemRandom']" imports="['base64', 'binascii', 'os', 'secrets']" name="secrets">
      <api name="randbelow">
        <expr>ret = secrets.randbelow(exclusive_upper_bound)%%['int']</expr>
        <args>['exclusive_upper_bound:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="token_bytes">
        <expr>ret = secrets.token_bytes(nbytes)%%['int']</expr>
        <args>['nbytes:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="token_hex">
        <expr>ret = secrets.token_hex(nbytes)%%['int']</expr>
        <args>['nbytes:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="token_urlsafe">
        <expr>ret = secrets.token_urlsafe(nbytes)%%['int']</expr>
        <args>['nbytes:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['nturl2path', 'string', 'urllib.parse']" name="nturl2path">
      <api name="url2pathname">
        <expr>ret = nturl2path.url2pathname(url)%%['str']</expr>
        <args>['url:str']</args>
        <return>['ret:NoneType', 'path:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="pathname2url">
        <expr>ret = nturl2path.pathname2url(p)%%['str']</expr>
        <args>['p:str']</args>
        <return>['ret:NoneType', 'path:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['cmd', 'readline', 'string', 'sys']" name="cmd">
      <class init="obj = cmd.Cmd()%%['NoneType', 'NoneType', 'NoneType']" name="Cmd">
        <api name="__init__">
          <expr>None</expr>
          <args>['completekey:NoneType', 'stdin:NoneType', 'stdout:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="cmdloop">
          <expr>obj.cmdloop(intro)%%['None']</expr>
          <args>['intro:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="completedefault">
          <expr>ret = obj.completedefault()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="completenames">
          <expr>ret = obj.completenames(text)%%['None']</expr>
          <args>['text:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="complete">
          <expr>ret = obj.complete(text,state)%%['None', 'None']</expr>
          <args>['text:None', 'state:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="complete_help">
          <expr>ret = obj.complete_help()%%[]</expr>
          <args>[]</args>
          <return>['list:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_help">
          <expr>obj.do_help(arg)%%['None']</expr>
          <args>['arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>EOFError</exception>
        <exception>ImportError</exception>
        <exception>IndexError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['copyreg:dispatch_table', 'org.python.core:PyStringMap']" imports="['copy', 'types', 'weakref']" name="copy">
      <class base="Exception" init="obj = copy.Error()%%[]" name="Error"/>
      <api name="copy">
        <expr>ret = copy.copy(x)%%['st']</expr>
        <args>['x:st']</args>
        <return>['copier:method_descriptor', '_copy_immutable:function', 'x:st', '_reconstruct:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="deepcopy">
        <expr>ret = copy.deepcopy(x,memo,_nil)%%['st', 'dict', 'list']</expr>
        <args>['x:st', 'memo:dict', '_nil:list']</args>
        <return>['y:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>copy.Error</exception>
      </errors>
    </module>
    <module importfrom="['gettext:gettext', 'gettext:ngettext']" imports="['optparse', 'os', 'sys', 'textwrap']" name="optparse">
      <class base="Exception" init="obj = optparse.OptParseError()%%[]" name="OptParseError"/>
      <class base="OptParseError" init="obj = optparse.OptionError()%%[]" name="OptionError"/>
      <class base="OptionError" init="obj = optparse.OptionConflictError()%%[]" name="OptionConflictError"/>
      <class base="OptParseError" init="obj = optparse.OptionValueError()%%[]" name="OptionValueError"/>
      <class base="OptParseError" init="obj = optparse.BadOptionError()%%[]" name="BadOptionError"/>
      <class base="BadOptionError" init="obj = optparse.AmbiguousOptionError()%%[]" name="AmbiguousOptionError"/>
      <class init="obj = optparse.HelpFormatter(None,None,None,None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType']" name="HelpFormatter">
        <api name="__init__">
          <expr>None</expr>
          <args>['indent_increment:NoneType', 'max_help_position:NoneType', 'width:NoneType', 'short_first:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_parser">
          <expr>obj.set_parser(parser)%%['None']</expr>
          <args>['parser:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_short_opt_delimiter">
          <expr>obj.set_short_opt_delimiter(delim)%%['None']</expr>
          <args>['delim:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_long_opt_delimiter">
          <expr>obj.set_long_opt_delimiter(delim)%%['None']</expr>
          <args>['delim:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="format_usage">
          <expr>obj.format_usage(usage)%%['None']</expr>
          <args>['usage:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="format_heading">
          <expr>obj.format_heading(heading)%%['None']</expr>
          <args>['heading:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="format_description">
          <expr>ret = obj.format_description(description)%%['None']</expr>
          <args>['description:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="format_epilog">
          <expr>ret = obj.format_epilog(epilog)%%['None']</expr>
          <args>['epilog:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="format_option">
          <expr>ret = obj.format_option(option)%%['None']</expr>
          <args>['option:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="store_option_strings">
          <expr>obj.store_option_strings(parser)%%['None']</expr>
          <args>['parser:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="optparse.HelpFormatter" init="obj = optparse.IndentedHelpFormatter()%%['NoneType', 'NoneType', 'NoneType', 'NoneType']" name="IndentedHelpFormatter">
        <api name="__init__">
          <expr>None</expr>
          <args>['indent_increment:NoneType', 'max_help_position:NoneType', 'width:NoneType', 'short_first:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="format_usage">
          <expr>ret = obj.format_usage(usage)%%['None']</expr>
          <args>['usage:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="format_heading">
          <expr>ret = obj.format_heading(heading)%%['None']</expr>
          <args>['heading:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="optparse.HelpFormatter" init="obj = optparse.TitledHelpFormatter()%%['NoneType', 'NoneType', 'NoneType', 'NoneType']" name="TitledHelpFormatter">
        <api name="__init__">
          <expr>None</expr>
          <args>['indent_increment:NoneType', 'max_help_position:NoneType', 'width:NoneType', 'short_first:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="format_usage">
          <expr>ret = obj.format_usage(usage)%%['None']</expr>
          <args>['usage:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="format_heading">
          <expr>ret = obj.format_heading(heading)%%['None']</expr>
          <args>['heading:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = optparse.Option()%%[]" name="Option">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="takes_value">
          <expr>ret = obj.takes_value()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_opt_string">
          <expr>ret = obj.get_opt_string()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="process">
          <expr>ret = obj.process(opt,value,values,parser)%%['None', 'None', 'None', 'None']</expr>
          <args>['opt:None', 'value:None', 'values:None', 'parser:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = optparse.Values()%%['NoneType']" name="Values">
        <api name="__init__">
          <expr>None</expr>
          <args>['defaults:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read_module">
          <expr>obj.read_module(modname,mode)%%['None', 'None']</expr>
          <args>['modname:None', 'mode:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read_file">
          <expr>obj.read_file(filename,mode)%%['None', 'None']</expr>
          <args>['filename:None', 'mode:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ensure_value">
          <expr>ret = obj.ensure_value(attr,value)%%['None', 'None']</expr>
          <args>['attr:None', 'value:None']</args>
          <return>['getattr:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = optparse.OptionContainer(None,None,None)%%['NoneType', 'NoneType', 'NoneType']" name="OptionContainer">
        <api name="__init__">
          <expr>None</expr>
          <args>['option_class:NoneType', 'conflict_handler:NoneType', 'description:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_conflict_handler">
          <expr>obj.set_conflict_handler(handler)%%['None']</expr>
          <args>['handler:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_description">
          <expr>obj.set_description(description)%%['None']</expr>
          <args>['description:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_description">
          <expr>ret = obj.get_description()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="destroy">
          <expr>obj.destroy()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_options">
          <expr>obj.add_options(option_list)%%['None']</expr>
          <args>['option_list:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_option">
          <expr>ret = obj.get_option(opt_str)%%['None']</expr>
          <args>['opt_str:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_option">
          <expr>ret = obj.has_option(opt_str)%%['None']</expr>
          <args>['opt_str:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="remove_option">
          <expr>obj.remove_option(opt_str)%%['None']</expr>
          <args>['opt_str:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="format_option_help">
          <expr>ret = obj.format_option_help(formatter)%%['None']</expr>
          <args>['formatter:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="format_help">
          <expr>ret = obj.format_help(formatter)%%['None']</expr>
          <args>['formatter:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="optparse.OptionContainer" init="obj = optparse.OptionGroup(None,None)%%['NoneType', 'NoneType', 'NoneType']" name="OptionGroup">
        <api name="__init__">
          <expr>None</expr>
          <args>['parser:NoneType', 'title:NoneType', 'description:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_title">
          <expr>obj.set_title(title)%%['None']</expr>
          <args>['title:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="optparse.OptionContainer" init="obj = optparse.OptionParser()%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="OptionParser">
        <api name="__init__">
          <expr>None</expr>
          <args>['usage:NoneType', 'option_list:NoneType', 'option_class:NoneType', 'version:NoneType', 'conflict_handler:NoneType', 'description:NoneType', 'formatter:NoneType', 'add_help_option:NoneType', 'prog:NoneType', 'epilog:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, 'Option', None, None, None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_usage">
          <expr>obj.set_usage(usage)%%['str']</expr>
          <args>['usage:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="enable_interspersed_args">
          <expr>obj.enable_interspersed_args()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="disable_interspersed_args">
          <expr>obj.disable_interspersed_args()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_process_default_values">
          <expr>obj.set_process_default_values(process)%%['None']</expr>
          <args>['process:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_default">
          <expr>obj.set_default(dest,value)%%['None', 'None']</expr>
          <args>['dest:None', 'value:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_defaults">
          <expr>obj.set_defaults()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_option_group">
          <expr>ret = obj.add_option_group()%%[]</expr>
          <args>[]</args>
          <return>['group:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_option_group">
          <expr>ret = obj.get_option_group(opt_str)%%['None']</expr>
          <args>['opt_str:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parse_args">
          <expr>ret = obj.parse_args(args,values)%%['NoneType', 'NoneType']</expr>
          <args>['args:NoneType', 'values:NoneType']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_prog_name">
          <expr>ret = obj.get_prog_name()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_description">
          <expr>ret = obj.get_description()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_usage">
          <expr>ret = obj.get_usage()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_version">
          <expr>ret = obj.get_version()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="format_option_help">
          <expr>ret = obj.format_option_help(formatter)%%['None']</expr>
          <args>['formatter:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="check_builtin">
        <expr>ret = optparse.check_builtin(option,opt,value)%%['None', 'None', 'None']</expr>
        <args>['option:None', 'opt:None', 'value:None']</args>
        <return>['cvt:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="check_choice">
        <expr>ret = optparse.check_choice(option,opt,value)%%['None', 'None', 'None']</expr>
        <args>['option:None', 'opt:None', 'value:None']</args>
        <return>['value:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>NotImplementedError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>optparse.AmbiguousOptionError</exception>
        <exception>optparse.BadOptionError</exception>
        <exception>optparse.OptParseError</exception>
        <exception>optparse.OptionConflictError</exception>
        <exception>optparse.OptionError</exception>
        <exception>optparse.OptionValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['calendar', 'contextlib', 'copy', 'email', 'email.generator', 'email.message', 'errno', 'fcntl', 'io', 'mailbox', 'os', 'socket', 'time', 'warnings']" name="mailbox">
      <class init="obj = mailbox.Mailbox(None)%%['NoneType', 'NoneType', 'NoneType']" name="Mailbox">
        <api name="__init__">
          <expr>None</expr>
          <args>['path:NoneType', 'factory:NoneType', 'create:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add">
          <expr>obj.add(message)%%['str']</expr>
          <args>['message:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get">
          <expr>ret = obj.get(key,default)%%['str', 'NoneType']</expr>
          <args>['key:str', 'default:NoneType']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_string">
          <expr>ret = obj.get_string(key)%%['str']</expr>
          <args>['key:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_bytes">
          <expr>obj.get_bytes(key)%%['str']</expr>
          <args>['key:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_file">
          <expr>obj.get_file(key)%%['str']</expr>
          <args>['key:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="iterkeys">
          <expr>obj.iterkeys()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="keys">
          <expr>ret = obj.keys()%%[]</expr>
          <args>[]</args>
          <return>['list:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="values">
          <expr>ret = obj.values()%%[]</expr>
          <args>[]</args>
          <return>['list:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clear">
          <expr>obj.clear()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pop">
          <expr>ret = obj.pop(key,default)%%['str', 'NoneType']</expr>
          <args>['key:str', 'default:NoneType']</args>
          <return>['result:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="popitem">
          <expr>obj.popitem()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="update">
          <expr>obj.update(arg)%%['tuple']</expr>
          <args>['arg:tuple']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="flush">
          <expr>obj.flush()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="lock">
          <expr>obj.lock()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unlock">
          <expr>obj.unlock()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="close">
          <expr>obj.close()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="mailbox.Mailbox" init="obj = mailbox.Maildir(None)%%['NoneType', 'NoneType', 'NoneType']" name="Maildir">
        <api name="__init__">
          <expr>None</expr>
          <args>['dirname:NoneType', 'factory:NoneType', 'create:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_bytes">
          <expr>ret = obj.get_bytes(key)%%['str']</expr>
          <args>['key:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_file">
          <expr>ret = obj.get_file(key)%%['str']</expr>
          <args>['key:str']</args>
          <return>['_ProxyFile:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="flush">
          <expr>obj.flush()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="lock">
          <expr>obj.lock()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unlock">
          <expr>obj.unlock()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="list_folders">
          <expr>ret = obj.list_folders()%%[]</expr>
          <args>[]</args>
          <return>['result:list']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_folder">
          <expr>ret = obj.get_folder(folder)%%['str']</expr>
          <args>['folder:str']</args>
          <return>['Maildir:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_folder">
          <expr>ret = obj.add_folder(folder)%%['str']</expr>
          <args>['folder:str']</args>
          <return>['result:Maildir']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="remove_folder">
          <expr>obj.remove_folder(folder)%%['str']</expr>
          <args>['folder:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clean">
          <expr>obj.clean()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="next">
          <expr>ret = obj.next()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="mailbox._mboxMMDF" init="obj = mailbox.mbox(None)%%['NoneType', 'NoneType', 'NoneType']" name="mbox">
        <api name="__init__">
          <expr>None</expr>
          <args>['path:NoneType', 'factory:NoneType', 'create:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="mailbox._mboxMMDF" init="obj = mailbox.MMDF(None)%%['NoneType', 'NoneType', 'NoneType']" name="MMDF">
        <api name="__init__">
          <expr>None</expr>
          <args>['path:NoneType', 'factory:NoneType', 'create:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="mailbox.Mailbox" init="obj = mailbox.MH(None)%%['NoneType', 'NoneType', 'NoneType']" name="MH">
        <api name="__init__">
          <expr>None</expr>
          <args>['path:NoneType', 'factory:NoneType', 'create:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_bytes">
          <expr>ret = obj.get_bytes(key)%%['int']</expr>
          <args>['key:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_file">
          <expr>ret = obj.get_file(key)%%['int']</expr>
          <args>['key:int']</args>
          <return>['_ProxyFile:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="lock">
          <expr>obj.lock()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="list_folders">
          <expr>ret = obj.list_folders()%%[]</expr>
          <args>[]</args>
          <return>['result:list']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_folder">
          <expr>ret = obj.get_folder(folder)%%['str']</expr>
          <args>['folder:str']</args>
          <return>['MH:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_folder">
          <expr>ret = obj.add_folder(folder)%%['str']</expr>
          <args>['folder:str']</args>
          <return>['MH:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="remove_folder">
          <expr>obj.remove_folder(folder)%%['str']</expr>
          <args>['folder:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pack">
          <expr>obj.pack()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="mailbox._singlefileMailbox" init="obj = mailbox.Babyl(None)%%['NoneType', 'NoneType', 'NoneType']" name="Babyl">
        <api name="__init__">
          <expr>None</expr>
          <args>['path:NoneType', 'factory:NoneType', 'create:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_bytes">
          <expr>ret = obj.get_bytes(key)%%['int']</expr>
          <args>['key:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_file">
          <expr>ret = obj.get_file(key)%%['int']</expr>
          <args>['key:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="email.message.Message" init="obj = mailbox.Message()%%['NoneType']" name="Message">
        <api name="__init__">
          <expr>None</expr>
          <args>['message:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="mailbox.Message" init="obj = mailbox.MaildirMessage()%%['NoneType']" name="MaildirMessage">
        <api name="__init__">
          <expr>None</expr>
          <args>['message:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_flags">
          <expr>ret = obj.get_flags()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="remove_flag">
          <expr>obj.remove_flag(flag)%%['str']</expr>
          <args>['flag:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_date">
          <expr>ret = obj.get_date()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_info">
          <expr>ret = obj.get_info()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="mailbox._mboxMMDFMessage" init="obj = mailbox.mboxMessage()%%[]" name="mboxMessage"/>
      <class base="mailbox.Message" init="obj = mailbox.MHMessage()%%['NoneType']" name="MHMessage">
        <api name="__init__">
          <expr>None</expr>
          <args>['message:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="remove_sequence">
          <expr>obj.remove_sequence(sequence)%%['str']</expr>
          <args>['sequence:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="mailbox.Message" init="obj = mailbox.BabylMessage()%%['NoneType']" name="BabylMessage">
        <api name="__init__">
          <expr>None</expr>
          <args>['message:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="remove_label">
          <expr>obj.remove_label(label)%%['str']</expr>
          <args>['label:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_visible">
          <expr>ret = obj.get_visible()%%[]</expr>
          <args>[]</args>
          <return>['Message:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="update_visible">
          <expr>obj.update_visible()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="mailbox._mboxMMDFMessage" init="obj = mailbox.MMDFMessage()%%[]" name="MMDFMessage"/>
      <class base="Exception" init="obj = mailbox.Error()%%[]" name="Error"/>
      <class base="Error" init="obj = mailbox.NoSuchMailboxError()%%[]" name="NoSuchMailboxError"/>
      <class base="Error" init="obj = mailbox.NotEmptyError()%%[]" name="NotEmptyError"/>
      <class base="Error" init="obj = mailbox.ExternalClashError()%%[]" name="ExternalClashError"/>
      <class base="Error" init="obj = mailbox.FormatError()%%[]" name="FormatError"/>
      <errors>
        <exception>AttributeError</exception>
        <exception>BaseException</exception>
        <exception>FileExistsError</exception>
        <exception>FileNotFoundError</exception>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
        <exception>NotImplementedError</exception>
        <exception>OSError</exception>
        <exception>OverflowError</exception>
        <exception>PermissionError</exception>
        <exception>StopIteration</exception>
        <exception>TypeError</exception>
        <exception>UnicodeError</exception>
        <exception>ValueError</exception>
        <exception>calendar.IllegalMonthError</exception>
        <exception>calendar.IllegalWeekdayError</exception>
        <exception>copy.Error</exception>
        <exception>mailbox.Error</exception>
        <exception>mailbox.ExternalClashError</exception>
        <exception>mailbox.FormatError</exception>
        <exception>mailbox.NoSuchMailboxError</exception>
        <exception>mailbox.NotEmptyError</exception>
      </errors>
    </module>
    <module importfrom="['java.lang:System', 'sys:getwindowsversion']" imports="['collections', 'java.lang', 'os', 'platform', 'plistlib', 're', 'socket', 'struct', 'subprocess', 'sys', 'vms_lib', 'warnings', 'winreg']" name="platform">
      <api name="libc_ver">
        <expr>platform.libc_ver(executable,lib,version,chunksize)%%['str', 'str', 'str', 'int']</expr>
        <args>['executable:str', 'lib:str', 'version:str', 'chunksize:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="linux_distribution">
        <expr>ret = platform.linux_distribution(distname,version,id,supported_dists,full_distribution_name)%%['str', 'str', 'str', 'tuple', 'int']</expr>
        <args>['distname:str', 'version:str', 'id:str', 'supported_dists:tuple', 'full_distribution_name:int']</args>
        <return>['_linux_distribution:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, '_supported_dists', None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dist">
        <expr>ret = platform.dist(distname,version,id,supported_dists)%%['str', 'str', 'str', 'tuple']</expr>
        <args>['distname:str', 'version:str', 'id:str', 'supported_dists:tuple']</args>
        <return>['_linux_distribution:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, '_supported_dists']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="popen">
        <expr>ret = platform.popen(cmd,mode,bufsize)%%['str', 'str', 'int']</expr>
        <args>['cmd:str', 'mode:str', 'bufsize:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="win32_ver">
        <expr>platform.win32_ver(release,version,csd,ptype)%%['str', 'str', 'str', 'str']</expr>
        <args>['release:str', 'version:str', 'csd:str', 'ptype:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="mac_ver">
        <expr>ret = platform.mac_ver(release,versioninfo,machine)%%['str', 'tuple', 'str']</expr>
        <args>['release:str', 'versioninfo:tuple', 'machine:str']</args>
        <return>['info:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="java_ver">
        <expr>platform.java_ver(release,vendor,vminfo,osinfo)%%['str', 'str', 'tuple', 'tuple']</expr>
        <args>['release:str', 'vendor:str', 'vminfo:tuple', 'osinfo:tuple']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="system_alias">
        <expr>platform.system_alias(system,release,version)%%['str', 'str', 'str']</expr>
        <args>['system:str', 'release:str', 'version:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="architecture">
        <expr>platform.architecture(executable,bits,linkage)%%['str', 'str', 'str']</expr>
        <args>['executable:str', 'bits:str', 'linkage:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="uname">
        <expr>ret = platform.uname()%%[]</expr>
        <args>[]</args>
        <return>['_uname_cache:uname_result']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="system">
        <expr>ret = platform.system()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="node">
        <expr>ret = platform.node()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="release">
        <expr>ret = platform.release()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="version">
        <expr>ret = platform.version()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="machine">
        <expr>ret = platform.machine()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="processor">
        <expr>ret = platform.processor()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="python_implementation">
        <expr>ret = platform.python_implementation()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="python_version">
        <expr>ret = platform.python_version()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="python_version_tuple">
        <expr>ret = platform.python_version_tuple()%%[]</expr>
        <args>[]</args>
        <return>['tuple:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="python_branch">
        <expr>ret = platform.python_branch()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="python_revision">
        <expr>ret = platform.python_revision()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="python_build">
        <expr>ret = platform.python_build()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="python_compiler">
        <expr>ret = platform.python_compiler()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="platform">
        <expr>ret = platform.platform(aliased,terse)%%['int', 'bool']</expr>
        <args>['aliased:int', 'terse:bool']</args>
        <return>['result:str', 'platform:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>plistlib.InvalidFileException</exception>
        <exception>struct.error</exception>
      </errors>
    </module>
    <module importfrom="['itertools:filterfalse']" imports="['filecmp', 'getopt', 'os', 'stat', 'sys']" name="filecmp">
      <class init="obj = filecmp.dircmp(None,None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType']" name="dircmp">
        <api name="__init__">
          <expr>None</expr>
          <args>['a:NoneType', 'b:NoneType', 'ignore:NoneType', 'hide:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="phase0">
          <expr>obj.phase0()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="phase1">
          <expr>obj.phase1()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="phase2">
          <expr>obj.phase2()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="phase3">
          <expr>obj.phase3()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="report_partial_closure">
          <expr>obj.report_partial_closure()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="clear_cache">
        <expr>filecmp.clear_cache()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="cmp">
        <expr>ret = filecmp.cmp(f1,f2,shallow)%%['str', 'str', 'bool']</expr>
        <args>['f1:str', 'f2:str', 'shallow:bool']</args>
        <return>['ret:NoneType', 'outcome:bool']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="cmpfiles">
        <expr>ret = filecmp.cmpfiles(a,b,common,shallow)%%['str', 'str', 'list', 'bool']</expr>
        <args>['a:str', 'b:str', 'common:list', 'shallow:bool']</args>
        <return>['res:tuple']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="demo">
        <expr>filecmp.demo()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>getopt.GetoptError</exception>
      </errors>
    </module>
    <module importfrom="['enum:IntEnum', 'enum:IntFlag']" imports="['errno', 'io', 'os', 'selectors', 'socket', 'sys']" name="socket">
      <class base="_socket.socket" init="obj = socket.socket()%%['None', 'None', 'None', 'None']" name="socket">
        <api name="__init__">
          <expr>None</expr>
          <args>['family:None', 'type:None', 'proto:None', 'fileno:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="accept">
          <expr>obj.accept()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="makefile">
          <expr>ret = obj.makefile(mode,buffering)%%['str', 'int']</expr>
          <args>['mode:str', 'buffering:int']</args>
          <return>['raw:SocketIO', 'buffer:BufferedReader', 'text:TextIOWrapper']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['encoding:str', 'errors:str', 'newline:str']</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[None, None, None]</kwodefa>
        </api>
        <api name="sendfile">
          <expr>ret = obj.sendfile(file,offset,count)%%['None', 'None', 'None']</expr>
          <args>['file:None', 'offset:None', 'count:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="family">
          <expr>ret = obj.family()%%[]</expr>
          <args>[]</args>
          <return>['_intenum_converter:function']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="type">
          <expr>ret = obj.type()%%[]</expr>
          <args>[]</args>
          <return>['_intenum_converter:function']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="io.RawIOBase" init="obj = socket.SocketIO(None,None)%%['None', 'None']" name="SocketIO">
        <api name="__init__">
          <expr>None</expr>
          <args>['sock:None', 'mode:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="readinto">
          <expr>ret = obj.readinto(b)%%['memoryview']</expr>
          <args>['b:memoryview']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="write">
          <expr>ret = obj.write(b)%%['memoryview']</expr>
          <args>['b:memoryview']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="readable">
          <expr>ret = obj.readable()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="writable">
          <expr>ret = obj.writable()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="name">
          <expr>ret = obj.name()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="mode">
          <expr>ret = obj.mode()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="fromfd">
        <expr>ret = socket.fromfd(fd,family,type,proto)%%['int', 'AddressFamily', 'SocketKind', 'int']</expr>
        <args>['fd:int', 'family:AddressFamily', 'type:SocketKind', 'proto:int']</args>
        <return>['socket:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="socketpair">
        <expr>socket.socketpair(family,type,proto)%%['NoneType', 'SocketKind', 'int']</expr>
        <args>['family:NoneType', 'type:SocketKind', 'proto:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['AF_INET', 'SOCK_STREAM', None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getfqdn">
        <expr>ret = socket.getfqdn(name)%%['str']</expr>
        <args>['name:str']</args>
        <return>['name:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="create_connection">
        <expr>ret = socket.create_connection(address,timeout,source_address)%%['tuple', 'int', 'tuple']</expr>
        <args>['address:tuple', 'timeout:int', 'source_address:tuple']</args>
        <return>['sock:socket']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['_GLOBAL_DEFAULT_TIMEOUT', None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getaddrinfo">
        <expr>ret = socket.getaddrinfo(host,port,family,type,proto,flags)%%['str', 'int', 'int', 'SocketKind', 'int', 'int']</expr>
        <args>['host:str', 'port:int', 'family:int', 'type:SocketKind', 'proto:int', 'flags:int']</args>
        <return>['addrlist:list']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>BlockingIOError</exception>
        <exception>ImportError</exception>
        <exception>InterruptedError</exception>
        <exception>NameError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['enum', 'importlib._bootstrap_external', 'importlib.machinery', 'importlib.util', 'os', 'os.path', 'py_compile', 'sys', 'traceback']" name="py_compile">
      <class base="Exception" init="obj = py_compile.PyCompileError()%%[]" name="PyCompileError"/>
      <class base="enum.Enum" init="obj = py_compile.PycInvalidationMode()%%[]" name="PycInvalidationMode"/>
      <api name="compile">
        <expr>ret = py_compile.compile(file,cfile,dfile,doraise,optimize,invalidation_mode)%%['str', 'str', 'str', 'bool', 'int', 'PycInvalidationMode']</expr>
        <args>['file:str', 'cfile:str', 'dfile:str', 'doraise:bool', 'optimize:int', 'invalidation_mode:PycInvalidationMode']</args>
        <return>['cfile:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>ret = py_compile.main(args)%%['None']</expr>
        <args>['args:None']</args>
        <return>['rv:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>Exception</exception>
        <exception>FileExistsError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>py_compile.PyCompileError</exception>
      </errors>
    </module>
    <module importfrom="['errno:EAGAIN', 'errno:EALREADY', 'errno:EBADF', 'errno:ECONNABORTED', 'errno:ECONNRESET', 'errno:EINPROGRESS', 'errno:EINVAL', 'errno:EISCONN', 'errno:ENOTCONN', 'errno:EPIPE', 'errno:ESHUTDOWN', 'errno:EWOULDBLOCK', 'errno:errorcode']" imports="['asyncore', 'os', 'select', 'socket', 'sys', 'time', 'warnings']" name="asyncore">
      <class base="Exception" init="obj = asyncore.ExitNow()%%[]" name="ExitNow"/>
      <class init="obj = asyncore.dispatcher()%%['NoneType', 'type']" name="dispatcher">
        <api name="__init__">
          <expr>None</expr>
          <args>['sock:NoneType', 'map:type']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="create_socket">
          <expr>obj.create_socket(family,type)%%['AddressFamily', 'SocketKind']</expr>
          <args>['family:AddressFamily', 'type:SocketKind']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_reuse_addr">
          <expr>obj.set_reuse_addr()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="connect">
          <expr>obj.connect(address)%%['None']</expr>
          <args>['address:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="log">
          <expr>obj.log(message)%%['str']</expr>
          <args>['message:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="handle_error">
          <expr>obj.handle_error()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="asyncore.dispatcher" init="obj = asyncore.dispatcher_with_send()%%['NoneType', 'type']" name="dispatcher_with_send">
        <api name="__init__">
          <expr>None</expr>
          <args>['sock:NoneType', 'map:type']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = asyncore.file_wrapper(None)%%['NoneType']" name="file_wrapper">
        <api name="__init__">
          <expr>None</expr>
          <args>['fd:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="asyncore.dispatcher" init="obj = asyncore.file_dispatcher(None)%%['NoneType', 'type']" name="file_dispatcher">
        <api name="__init__">
          <expr>None</expr>
          <args>['fd:NoneType', 'map:type']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_file">
          <expr>obj.set_file(fd)%%['None']</expr>
          <args>['fd:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="read">
        <expr>asyncore.read(obj)%%['TestSMTPServer']</expr>
        <args>['obj:TestSMTPServer']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="write">
        <expr>asyncore.write(obj)%%['SMTPChannel']</expr>
        <args>['obj:SMTPChannel']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="readwrite">
        <expr>asyncore.readwrite(obj,flags)%%['FileDispatcher', 'int']</expr>
        <args>['obj:FileDispatcher', 'flags:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="poll">
        <expr>asyncore.poll(timeout,map)%%['float', 'dict']</expr>
        <args>['timeout:float', 'map:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="poll2">
        <expr>asyncore.poll2(timeout,map)%%['float', 'dict']</expr>
        <args>['timeout:float', 'map:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="loop">
        <expr>asyncore.loop(timeout,use_poll,map,count)%%['float', 'bool', 'dict', 'int']</expr>
        <args>['timeout:float', 'use_poll:bool', 'map:dict', 'count:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="compact_traceback">
        <expr>asyncore.compact_traceback()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="close_all">
        <expr>asyncore.close_all(map,ignore_all)%%['dict', 'bool']</expr>
        <args>['map:dict', 'ignore_all:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AssertionError</exception>
        <exception>AttributeError</exception>
        <exception>NameError</exception>
        <exception>NotImplementedError</exception>
        <exception>OSError</exception>
        <exception>OverflowError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>asyncore.ExitNow</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['builtins', 'codecs', 'encodings', 'sys']" name="codecs">
      <class base="builtins.tuple" init="obj = codecs.CodecInfo()%%[]" name="CodecInfo"/>
      <class init="obj = codecs.Codec()%%[]" name="Codec">
        <api name="encode">
          <expr>obj.encode(input,errors)%%['None', 'None']</expr>
          <args>['input:None', 'errors:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)%%['None', 'None']</expr>
          <args>['input:None', 'errors:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="builtins.object" init="obj = codecs.IncrementalEncoder()%%['None']" name="IncrementalEncoder">
        <api name="__init__">
          <expr>None</expr>
          <args>['errors:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="encode">
          <expr>obj.encode(input,final)%%['str', 'bool']</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="reset">
          <expr>obj.reset()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getstate">
          <expr>ret = obj.getstate()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setstate">
          <expr>obj.setstate(state)%%['int']</expr>
          <args>['state:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalEncoder" init="obj = codecs.BufferedIncrementalEncoder()%%['None']" name="BufferedIncrementalEncoder">
        <api name="__init__">
          <expr>None</expr>
          <args>['errors:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="encode">
          <expr>ret = obj.encode(input,final)%%['None', 'None']</expr>
          <args>['input:None', 'final:None']</args>
          <return>['result:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getstate">
          <expr>ret = obj.getstate()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setstate">
          <expr>obj.setstate(state)%%['None']</expr>
          <args>['state:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="builtins.object" init="obj = codecs.IncrementalDecoder()%%['None']" name="IncrementalDecoder">
        <api name="__init__">
          <expr>None</expr>
          <args>['errors:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,final)%%['bytes', 'bool']</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getstate">
          <expr>obj.getstate()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setstate">
          <expr>obj.setstate(state)%%['tuple']</expr>
          <args>['state:tuple']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.IncrementalDecoder" init="obj = codecs.BufferedIncrementalDecoder()%%['None']" name="BufferedIncrementalDecoder">
        <api name="__init__">
          <expr>None</expr>
          <args>['errors:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>ret = obj.decode(input,final)%%['None', 'None']</expr>
          <args>['input:None', 'final:None']</args>
          <return>['result:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getstate">
          <expr>obj.getstate()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setstate">
          <expr>obj.setstate(state)%%['None']</expr>
          <args>['state:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.Codec" init="obj = codecs.StreamWriter(None)%%['None', 'None']" name="StreamWriter">
        <api name="__init__">
          <expr>None</expr>
          <args>['stream:None', 'errors:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="writelines">
          <expr>obj.writelines(list)%%['list']</expr>
          <args>['list:list']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="codecs.Codec" init="obj = codecs.StreamReader(None)%%['None', 'None']" name="StreamReader">
        <api name="__init__">
          <expr>None</expr>
          <args>['stream:None', 'errors:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="readlines">
          <expr>ret = obj.readlines(sizehint,keepends)%%['int', 'bool']</expr>
          <args>['sizehint:int', 'keepends:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = codecs.StreamReaderWriter(None,None,None)%%['None', 'None', 'None', 'None']" name="StreamReaderWriter">
        <api name="__init__">
          <expr>None</expr>
          <args>['stream:None', 'Reader:None', 'Writer:None', 'errors:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = codecs.StreamRecoder(None,None,None,None,None)%%['None', 'None', 'None', 'None', 'None', 'None']" name="StreamRecoder">
        <api name="__init__">
          <expr>None</expr>
          <args>['stream:None', 'encode:None', 'decode:None', 'Reader:None', 'Writer:None', 'errors:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="open">
        <expr>ret = codecs.open(filename,mode,encoding,errors,buffering)%%['str', 'str', 'str', 'str', 'int']</expr>
        <args>['filename:str', 'mode:str', 'encoding:str', 'errors:str', 'buffering:int']</args>
        <return>['file:BufferedRandom', 'srw:StreamReaderWriter']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="EncodedFile">
        <expr>ret = codecs.EncodedFile(file,data_encoding,file_encoding,errors)%%['BytesIO', 'str', 'str', 'str']</expr>
        <args>['file:BytesIO', 'data_encoding:str', 'file_encoding:str', 'errors:str']</args>
        <return>['sr:StreamRecoder']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getencoder">
        <expr>ret = codecs.getencoder(encoding)%%['str']</expr>
        <args>['encoding:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getdecoder">
        <expr>ret = codecs.getdecoder(encoding)%%['str']</expr>
        <args>['encoding:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getincrementalencoder">
        <expr>ret = codecs.getincrementalencoder(encoding)%%['str']</expr>
        <args>['encoding:str']</args>
        <return>['encoder:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getincrementaldecoder">
        <expr>ret = codecs.getincrementaldecoder(encoding)%%['str']</expr>
        <args>['encoding:str']</args>
        <return>['decoder:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getreader">
        <expr>ret = codecs.getreader(encoding)%%['str']</expr>
        <args>['encoding:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getwriter">
        <expr>ret = codecs.getwriter(encoding)%%['str']</expr>
        <args>['encoding:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="iterencode">
        <expr>codecs.iterencode(iterator,encoding,errors)%%['str', 'str', 'str']</expr>
        <args>['iterator:str', 'encoding:str', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="iterdecode">
        <expr>codecs.iterdecode(iterator,encoding,errors)%%['generator', 'str', 'str']</expr>
        <args>['iterator:generator', 'encoding:str', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="make_identity_dict">
        <expr>ret = codecs.make_identity_dict(rng)%%['range']</expr>
        <args>['rng:range']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="make_encoding_map">
        <expr>ret = codecs.make_encoding_map(decoding_map)%%['None']</expr>
        <args>['decoding_map:None']</args>
        <return>['m:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>LookupError</exception>
        <exception>NotImplementedError</exception>
        <exception>OSError</exception>
        <exception>StopIteration</exception>
        <exception>TypeError</exception>
        <exception>UnicodeDecodeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['copyreg', 'enum', 'functools', 're', 'sre_compile', 'sre_parse']" name="re">
      <class base="enum.IntFlag" init="obj = re.RegexFlag()%%[]" name="RegexFlag"/>
      <class init="obj = re.Scanner(None)%%['None', 'None']" name="Scanner">
        <api name="__init__">
          <expr>None</expr>
          <args>['lexicon:None', 'flags:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="scan">
          <expr>obj.scan(string)%%['str']</expr>
          <args>['string:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="match">
        <expr>ret = re.match(pattern,string,flags)%%['str', 'str', 'int']</expr>
        <args>['pattern:str', 'string:str', 'flags:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="fullmatch">
        <expr>ret = re.fullmatch(pattern,string,flags)%%['bytes', 'bytes', 'int']</expr>
        <args>['pattern:bytes', 'string:bytes', 'flags:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="search">
        <expr>ret = re.search(pattern,string,flags)%%['bytes', 'bytes', 'int']</expr>
        <args>['pattern:bytes', 'string:bytes', 'flags:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="sub">
        <expr>ret = re.sub(pattern,repl,string,count,flags)%%['str', 'str', 'str', 'int', 'int']</expr>
        <args>['pattern:str', 'repl:str', 'string:str', 'count:int', 'flags:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="subn">
        <expr>ret = re.subn(pattern,repl,string,count,flags)%%['str', 'str', 'str', 'int', 'int']</expr>
        <args>['pattern:str', 'repl:str', 'string:str', 'count:int', 'flags:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="split">
        <expr>ret = re.split(pattern,string,maxsplit,flags)%%['str', 'str', 'int', 'int']</expr>
        <args>['pattern:str', 'string:str', 'maxsplit:int', 'flags:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="findall">
        <expr>ret = re.findall(pattern,string,flags)%%['str', 'str', 'int']</expr>
        <args>['pattern:str', 'string:str', 'flags:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="finditer">
        <expr>ret = re.finditer(pattern,string,flags)%%['bytes', 'bytes', 'int']</expr>
        <args>['pattern:bytes', 'string:bytes', 'flags:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="compile">
        <expr>ret = re.compile(pattern,flags)%%['str', 'RegexFlag']</expr>
        <args>['pattern:str', 'flags:RegexFlag']</args>
        <return>['_compile:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="purge">
        <expr>re.purge()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="template">
        <expr>ret = re.template(pattern,flags)%%['None', 'None']</expr>
        <args>['pattern:None', 'flags:None']</args>
        <return>['_compile:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="escape">
        <expr>ret = re.escape(pattern)%%['str']</expr>
        <args>['pattern:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>RuntimeError</exception>
        <exception>StopIteration</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>sre_parse.Verbose</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['fnmatch', 'glob', 'os', 're']" name="glob">
      <api name="glob">
        <expr>ret = glob.glob(pathname)%%['str']</expr>
        <args>['pathname:str']</args>
        <return>['list:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['recursive:bool']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <api name="iglob">
        <expr>ret = glob.iglob(pathname)%%['str']</expr>
        <args>['pathname:str']</args>
        <return>['it:generator']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['recursive:bool']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <api name="glob0">
        <expr>ret = glob.glob0(dirname,pattern)%%['None', 'None']</expr>
        <args>['dirname:None', 'pattern:None']</args>
        <return>['_glob0:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="glob1">
        <expr>ret = glob.glob1(dirname,pattern)%%['None', 'None']</expr>
        <args>['dirname:None', 'pattern:None']</args>
        <return>['_glob1:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="has_magic">
        <expr>ret = glob.has_magic(s)%%['str']</expr>
        <args>['s:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="escape">
        <expr>ret = glob.escape(pathname)%%['str']</expr>
        <args>['pathname:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['codeop', 'warnings']" name="codeop">
      <class init="obj = codeop.Compile()%%[]" name="Compile">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = codeop.CommandCompiler()%%[]" name="CommandCompiler">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="compile_command">
        <expr>ret = codeop.compile_command(source,filename,symbol)%%['str', 'str', 'str']</expr>
        <args>['source:str', 'filename:str', 'symbol:str']</args>
        <return>['_maybe_compile:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>SyntaxError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['decimal']" name="decimal">
      <errors>
        <exception>ImportError</exception>
      </errors>
    </module>
    <module importfrom="['collections:deque', 'reprlib:Repr', 'traceback:format_exception_only']" imports="['builtins', 'email.message', 'getopt', 'http.server', 'importlib._bootstrap', 'importlib._bootstrap_external', 'importlib.machinery', 'importlib.util', 'inspect', 'io', 'os', 'pkgutil', 'platform', 'pydoc', 'pydoc_data.topics', 're', 'select', 'subprocess', 'sys', 'sysconfig', 'tempfile', 'textwrap', 'threading', 'time', 'tokenize', 'tty', 'urllib.parse', 'warnings', 'webbrowser']" name="pydoc">
      <class base="Exception" init="obj = pydoc.ErrorDuringImport()%%[]" name="ErrorDuringImport"/>
      <class init="obj = pydoc.Doc()%%[]" name="Doc">
        <api name="document">
          <expr>ret = obj.document(object,name)%%['None', 'None']</expr>
          <args>['object:None', 'name:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="fail">
          <expr>obj.fail(object,name)%%['None', 'None']</expr>
          <args>['object:None', 'name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getdocloc">
          <expr>ret = obj.getdocloc(object,basedir)%%['None', 'None']</expr>
          <args>['object:None', 'basedir:None']</args>
          <return>['docloc:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="reprlib.Repr" init="obj = pydoc.HTMLRepr()%%[]" name="HTMLRepr">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="repr1">
          <expr>ret = obj.repr1(x,level)%%['list', 'int']</expr>
          <args>['x:list', 'level:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="repr_string">
          <expr>ret = obj.repr_string(x,level)%%['str', 'int']</expr>
          <args>['x:str', 'level:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="repr_instance">
          <expr>ret = obj.repr_instance(x,level)%%['None', 'None']</expr>
          <args>['x:None', 'level:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="pydoc.Doc" init="obj = pydoc.HTMLDoc()%%[]" name="HTMLDoc">
        <api name="page">
          <expr>ret = obj.page(title,contents)%%['None', 'None']</expr>
          <args>['title:None', 'contents:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="preformat">
          <expr>ret = obj.preformat(text)%%['str']</expr>
          <args>['text:str']</args>
          <return>['replace:function']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="namelink">
          <expr>ret = obj.namelink(name)%%['str']</expr>
          <args>['name:str']</args>
          <return>['ret:NoneType', 'name:str']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="classlink">
          <expr>ret = obj.classlink(object,modname)%%['type', 'str']</expr>
          <args>['object:type', 'modname:str']</args>
          <return>['ret:NoneType', 'classname:function']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="modulelink">
          <expr>ret = obj.modulelink(object)%%['None']</expr>
          <args>['object:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="modpkglink">
          <expr>ret = obj.modpkglink(modpkginfo)%%['None']</expr>
          <args>['modpkginfo:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="formatvalue">
          <expr>ret = obj.formatvalue(object)%%['None']</expr>
          <args>['object:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="index">
          <expr>ret = obj.index(dir,shadowed)%%['None', 'None']</expr>
          <args>['dir:None', 'shadowed:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="reprlib.Repr" init="obj = pydoc.TextRepr()%%[]" name="TextRepr">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="repr1">
          <expr>ret = obj.repr1(x,level)%%['dict', 'int']</expr>
          <args>['x:dict', 'level:int']</args>
          <return>['getattr:builtin_function_or_method', 'cram:function']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="repr_string">
          <expr>ret = obj.repr_string(x,level)%%['str', 'int']</expr>
          <args>['x:str', 'level:int']</args>
          <return>['ret:NoneType', 'testrepr:str']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="repr_instance">
          <expr>ret = obj.repr_instance(x,level)%%['None', 'None']</expr>
          <args>['x:None', 'level:None']</args>
          <return>['cram:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="pydoc.Doc" init="obj = pydoc.TextDoc()%%[]" name="TextDoc">
        <api name="indent">
          <expr>ret = obj.indent(text,prefix)%%['str', 'str']</expr>
          <args>['text:str', 'prefix:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="formatvalue">
          <expr>ret = obj.formatvalue(object)%%['None']</expr>
          <args>['object:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = pydoc.Helper()%%['builtin_function_or_method', 'NoneType']" name="Helper">
        <api name="__init__">
          <expr>None</expr>
          <args>['input:builtin_function_or_method', 'output:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="output">
          <expr>ret = obj.output()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = pydoc.ModuleScanner()%%[]" name="ModuleScanner"/>
      <api name="pathdirs">
        <expr>ret = pydoc.pathdirs()%%[]</expr>
        <args>[]</args>
        <return>['dirs:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getdoc">
        <expr>ret = pydoc.getdoc(object)%%['function']</expr>
        <args>['object:function']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="splitdoc">
        <expr>pydoc.splitdoc(doc)%%['str']</expr>
        <args>['doc:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="classname">
        <expr>ret = pydoc.classname(object,modname)%%['type', 'str']</expr>
        <args>['object:type', 'modname:str']</args>
        <return>['name:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isdata">
        <expr>ret = pydoc.isdata(object)%%['module']</expr>
        <args>['object:module']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="replace">
        <expr>ret = pydoc.replace(text)%%['str']</expr>
        <args>['text:str']</args>
        <return>['text:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="cram">
        <expr>ret = pydoc.cram(text,maxlen)%%['str', 'int']</expr>
        <args>['text:str', 'maxlen:int']</args>
        <return>['ret:NoneType', 'text:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="stripid">
        <expr>ret = pydoc.stripid(text)%%['str']</expr>
        <args>['text:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="allmethods">
        <expr>ret = pydoc.allmethods(cl)%%['type']</expr>
        <args>['cl:type']</args>
        <return>['methods:dict']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="visiblename">
        <expr>ret = pydoc.visiblename(name,all,obj)%%['str', 'list', 'module']</expr>
        <args>['name:str', 'all:list', 'obj:module']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="classify_class_attrs">
        <expr>ret = pydoc.classify_class_attrs(object)%%['type']</expr>
        <args>['object:type']</args>
        <return>['results:list']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="sort_attributes">
        <expr>pydoc.sort_attributes(attrs,object)%%['list', 'type']</expr>
        <args>['attrs:list', 'object:type']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ispackage">
        <expr>ret = pydoc.ispackage(path)%%['str']</expr>
        <args>['path:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="source_synopsis">
        <expr>ret = pydoc.source_synopsis(file)%%['TextIOWrapper']</expr>
        <args>['file:TextIOWrapper']</args>
        <return>['result:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="synopsis">
        <expr>ret = pydoc.synopsis(filename,cache)%%['str', 'dict']</expr>
        <args>['filename:str', 'cache:dict']</args>
        <return>['result:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="importfile">
        <expr>ret = pydoc.importfile(path)%%['str']</expr>
        <args>['path:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="safeimport">
        <expr>ret = pydoc.safeimport(path,forceload,cache)%%['str', 'int', 'dict']</expr>
        <args>['path:str', 'forceload:int', 'cache:dict']</args>
        <return>['module:module']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="pager">
        <expr>pydoc.pager(text)%%['str']</expr>
        <args>['text:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getpager">
        <expr>ret = pydoc.getpager()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType', 'ttypager:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="plain">
        <expr>ret = pydoc.plain(text)%%['str']</expr>
        <args>['text:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="pipepager">
        <expr>pydoc.pipepager(text,cmd)%%['None', 'None']</expr>
        <args>['text:None', 'cmd:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="tempfilepager">
        <expr>pydoc.tempfilepager(text,cmd)%%['None', 'None']</expr>
        <args>['text:None', 'cmd:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ttypager">
        <expr>pydoc.ttypager(text)%%['None']</expr>
        <args>['text:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="plainpager">
        <expr>pydoc.plainpager(text)%%['str']</expr>
        <args>['text:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="describe">
        <expr>ret = pydoc.describe(thing)%%['type']</expr>
        <args>['thing:type']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="locate">
        <expr>ret = pydoc.locate(path,forceload)%%['str', 'int']</expr>
        <args>['path:str', 'forceload:int']</args>
        <return>['object:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="resolve">
        <expr>pydoc.resolve(thing,forceload)%%['type', 'int']</expr>
        <args>['thing:type', 'forceload:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="render_doc">
        <expr>ret = pydoc.render_doc(thing,title,forceload,renderer)%%['type', 'str', 'int', 'HTMLDoc']</expr>
        <args>['thing:type', 'title:str', 'forceload:int', 'renderer:HTMLDoc']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="doc">
        <expr>pydoc.doc(thing,title,forceload,output)%%['type', 'str', 'int', 'StringIO']</expr>
        <args>['thing:type', 'title:str', 'forceload:int', 'output:StringIO']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="writedoc">
        <expr>pydoc.writedoc(thing,forceload)%%['None', 'None']</expr>
        <args>['thing:None', 'forceload:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="writedocs">
        <expr>pydoc.writedocs(dir,pkgpath,done)%%['None', 'None', 'None']</expr>
        <args>['dir:None', 'pkgpath:None', 'done:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="apropos">
        <expr>pydoc.apropos(key)%%['str']</expr>
        <args>['key:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="browse">
        <expr>pydoc.browse(port)%%['None']</expr>
        <args>['port:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['open_browser:None', 'hostname:None']</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[None, None]</kwodefa>
      </api>
      <api name="ispath">
        <expr>ret = pydoc.ispath(x)%%['None']</expr>
        <args>['x:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="cli">
        <expr>pydoc.cli()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>EOFError</exception>
        <exception>Exception</exception>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>OSError</exception>
        <exception>SyntaxError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>getopt.GetoptError</exception>
        <exception>pydoc.ErrorDuringImport</exception>
        <exception>threading.BrokenBarrierError</exception>
        <exception>tokenize.StopTokenizing</exception>
        <exception>tokenize.TokenError</exception>
        <exception>webbrowser.Error</exception>
      </errors>
    </module>
    <module importfrom="['bisect:bisect_left', 'bisect:bisect_right', 'decimal:Decimal', 'fractions:Fraction', 'itertools:groupby']" imports="['collections', 'math', 'numbers', 'statistics']" name="statistics">
      <class base="ValueError" init="obj = statistics.StatisticsError()%%[]" name="StatisticsError"/>
      <api name="mean">
        <expr>ret = statistics.mean(data)%%['list']</expr>
        <args>['data:list']</args>
        <return>['_convert:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="harmonic_mean">
        <expr>ret = statistics.harmonic_mean(data)%%['list']</expr>
        <args>['data:list']</args>
        <return>['x:int', '_convert:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="median">
        <expr>ret = statistics.median(data)%%['list']</expr>
        <args>['data:list']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="median_low">
        <expr>ret = statistics.median_low(data)%%['list']</expr>
        <args>['data:list']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="median_high">
        <expr>ret = statistics.median_high(data)%%['list']</expr>
        <args>['data:list']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="median_grouped">
        <expr>ret = statistics.median_grouped(data,interval)%%['list', 'int']</expr>
        <args>['data:list', 'interval:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="mode">
        <expr>ret = statistics.mode(data)%%['list']</expr>
        <args>['data:list']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="variance">
        <expr>ret = statistics.variance(data,xbar)%%['list', 'float']</expr>
        <args>['data:list', 'xbar:float']</args>
        <return>['_convert:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="pvariance">
        <expr>ret = statistics.pvariance(data,mu)%%['list', 'float']</expr>
        <args>['data:list', 'mu:float']</args>
        <return>['_convert:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="stdev">
        <expr>ret = statistics.stdev(data,xbar)%%['list', 'NoneType']</expr>
        <args>['data:list', 'xbar:NoneType']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="pstdev">
        <expr>ret = statistics.pstdev(data,mu)%%['list', 'NoneType']</expr>
        <args>['data:list', 'mu:NoneType']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>OverflowError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>ZeroDivisionError</exception>
        <exception>statistics.StatisticsError</exception>
      </errors>
    </module>
    <module importfrom="['builtins:open', 'bz2:BZ2File', 'gzip:GzipFile', 'lzma:LZMAError', 'lzma:LZMAFile']" imports="['argparse', 'copy', 'grp', 'io', 'os', 'pwd', 're', 'shutil', 'stat', 'struct', 'sys', 'tarfile', 'time', 'warnings']" name="tarfile">
      <class base="Exception" init="obj = tarfile.TarError()%%[]" name="TarError"/>
      <class base="TarError" init="obj = tarfile.ExtractError()%%[]" name="ExtractError"/>
      <class base="TarError" init="obj = tarfile.ReadError()%%[]" name="ReadError"/>
      <class base="TarError" init="obj = tarfile.CompressionError()%%[]" name="CompressionError"/>
      <class base="TarError" init="obj = tarfile.StreamError()%%[]" name="StreamError"/>
      <class base="TarError" init="obj = tarfile.HeaderError()%%[]" name="HeaderError"/>
      <class base="HeaderError" init="obj = tarfile.EmptyHeaderError()%%[]" name="EmptyHeaderError"/>
      <class base="HeaderError" init="obj = tarfile.TruncatedHeaderError()%%[]" name="TruncatedHeaderError"/>
      <class base="HeaderError" init="obj = tarfile.EOFHeaderError()%%[]" name="EOFHeaderError"/>
      <class base="HeaderError" init="obj = tarfile.InvalidHeaderError()%%[]" name="InvalidHeaderError"/>
      <class base="HeaderError" init="obj = tarfile.SubsequentHeaderError()%%[]" name="SubsequentHeaderError"/>
      <class base="io.BufferedReader" init="obj = tarfile.ExFileObject(None,None)%%['NoneType', 'NoneType']" name="ExFileObject">
        <api name="__init__">
          <expr>None</expr>
          <args>['tarfile:NoneType', 'tarinfo:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="builtins.object" init="obj = tarfile.TarInfo()%%['NoneType']" name="TarInfo">
        <api name="__init__">
          <expr>None</expr>
          <args>['name:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="path">
          <expr>obj.path(name)%%['str']</expr>
          <args>['name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="linkpath">
          <expr>obj.linkpath(linkname)%%['str']</expr>
          <args>['linkname:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tobuf">
          <expr>ret = obj.tobuf(format,encoding,errors)%%['int', 'str', 'str']</expr>
          <args>['format:int', 'encoding:str', 'errors:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['DEFAULT_FORMAT', 'ENCODING', None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="create_pax_global_header">
          <expr>ret = obj.create_pax_global_header(cls,pax_headers)%%['None', 'None']</expr>
          <args>['cls:None', 'pax_headers:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isfile">
          <expr>ret = obj.isfile()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isdir">
          <expr>ret = obj.isdir()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="issym">
          <expr>ret = obj.issym()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="islnk">
          <expr>ret = obj.islnk()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ischr">
          <expr>ret = obj.ischr()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isblk">
          <expr>ret = obj.isblk()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isfifo">
          <expr>ret = obj.isfifo()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="issparse">
          <expr>ret = obj.issparse()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isdev">
          <expr>ret = obj.isdev()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="builtins.object" init="obj = tarfile.TarFile()%%['NoneType', 'NoneType', 'NoneType', 'builtin_function_or_method', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="TarFile">
        <api name="__init__">
          <expr>None</expr>
          <args>['name:NoneType', 'mode:NoneType', 'fileobj:NoneType', 'format:builtin_function_or_method', 'tarinfo:NoneType', 'dereference:NoneType', 'ignore_zeros:NoneType', 'encoding:NoneType', 'errors:NoneType', 'pax_headers:NoneType', 'debug:NoneType', 'errorlevel:NoneType', 'copybufsize:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None, None, None, None, None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="open">
          <expr>ret = obj.open(cls,name,mode,fileobj,bufsize)%%['None', 'None', 'None', 'None', 'None']</expr>
          <args>['cls:None', 'name:None', 'mode:None', 'fileobj:None', 'bufsize:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, 'RECORDSIZE']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="gzopen">
          <expr>ret = obj.gzopen(cls,name,mode,fileobj,compresslevel)%%['None', 'None', 'None', 'None', 'None']</expr>
          <args>['cls:None', 'name:None', 'mode:None', 'fileobj:None', 'compresslevel:None']</args>
          <return>['t:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="bz2open">
          <expr>ret = obj.bz2open(cls,name,mode,fileobj,compresslevel)%%['None', 'None', 'None', 'None', 'None']</expr>
          <args>['cls:None', 'name:None', 'mode:None', 'fileobj:None', 'compresslevel:None']</args>
          <return>['t:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="xzopen">
          <expr>ret = obj.xzopen(cls,name,mode,fileobj,preset)%%['None', 'None', 'None', 'None', 'None']</expr>
          <args>['cls:None', 'name:None', 'mode:None', 'fileobj:None', 'preset:None']</args>
          <return>['t:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getnames">
          <expr>ret = obj.getnames()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="extractall">
          <expr>obj.extractall(path,members)%%['str', 'list']</expr>
          <args>['path:str', 'members:list']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['numeric_owner:bool']</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
      </class>
      <api name="stn">
        <expr>ret = tarfile.stn(s,length,encoding,errors)%%['str', 'int', 'str', 'str']</expr>
        <args>['s:str', 'length:int', 'encoding:str', 'errors:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="nts">
        <expr>ret = tarfile.nts(s,encoding,errors)%%['bytes', 'str', 'str']</expr>
        <args>['s:bytes', 'encoding:str', 'errors:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="nti">
        <expr>ret = tarfile.nti(s)%%['bytes']</expr>
        <args>['s:bytes']</args>
        <return>['n:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="itn">
        <expr>ret = tarfile.itn(n,digits,format)%%['int', 'int', 'int']</expr>
        <args>['n:int', 'digits:int', 'format:int']</args>
        <return>['s:bytes']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, 'DEFAULT_FORMAT']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="calc_chksums">
        <expr>tarfile.calc_chksums(buf)%%['bytes']</expr>
        <args>['buf:bytes']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="copyfileobj">
        <expr>tarfile.copyfileobj(src,dst,length,exception,bufsize)%%['BufferedReader', '_Stream', 'int', 'type', 'NoneType']</expr>
        <args>['src:BufferedReader', 'dst:_Stream', 'length:int', 'exception:type', 'bufsize:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, 'OSError', None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="filemode">
        <expr>ret = tarfile.filemode(mode)%%['None']</expr>
        <args>['mode:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="is_tarfile">
        <expr>ret = tarfile.is_tarfile(name)%%['str']</expr>
        <args>['name:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>tarfile.main()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>EOFError</exception>
        <exception>FileExistsError</exception>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
        <exception>LZMAError</exception>
        <exception>NameError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>UnicodeDecodeError</exception>
        <exception>UnicodeEncodeError</exception>
        <exception>ValueError</exception>
        <exception>argparse.ArgumentError</exception>
        <exception>argparse.ArgumentTypeError</exception>
        <exception>copy.Error</exception>
        <exception>shutil.Error</exception>
        <exception>shutil.ExecError</exception>
        <exception>shutil.ReadError</exception>
        <exception>shutil.RegistryError</exception>
        <exception>shutil.SameFileError</exception>
        <exception>shutil.SpecialFileError</exception>
        <exception>tarfile.CompressionError</exception>
        <exception>tarfile.EOFHeaderError</exception>
        <exception>tarfile.EmptyHeaderError</exception>
        <exception>tarfile.ExtractError</exception>
        <exception>tarfile.HeaderError</exception>
        <exception>tarfile.InvalidHeaderError</exception>
        <exception>tarfile.ReadError</exception>
        <exception>tarfile.StreamError</exception>
        <exception>tarfile.SubsequentHeaderError</exception>
        <exception>tarfile.TarError</exception>
        <exception>tarfile.TruncatedHeaderError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['errno', 'hashlib', 'poplib', 're', 'socket', 'ssl', 'sys']" name="poplib">
      <class base="Exception" init="obj = poplib.error_proto()%%[]" name="error_proto"/>
      <class init="obj = poplib.POP3(None)%%['NoneType', 'NoneType', 'NoneType']" name="POP3">
        <api name="__init__">
          <expr>None</expr>
          <args>['host:NoneType', 'port:NoneType', 'timeout:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['POP3_PORT', None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getwelcome">
          <expr>ret = obj.getwelcome()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_debuglevel">
          <expr>obj.set_debuglevel(level)%%['None']</expr>
          <args>['level:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="user">
          <expr>ret = obj.user(user)%%['str']</expr>
          <args>['user:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pass_">
          <expr>ret = obj.pass_(pswd)%%['str']</expr>
          <args>['pswd:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="stat">
          <expr>obj.stat()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="list">
          <expr>ret = obj.list(which)%%['str']</expr>
          <args>['which:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="retr">
          <expr>ret = obj.retr(which)%%['str']</expr>
          <args>['which:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dele">
          <expr>ret = obj.dele(which)%%['str']</expr>
          <args>['which:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="noop">
          <expr>ret = obj.noop()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="rset">
          <expr>ret = obj.rset()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="quit">
          <expr>ret = obj.quit()%%[]</expr>
          <args>[]</args>
          <return>['resp:bytes']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="rpop">
          <expr>ret = obj.rpop(user)%%['str']</expr>
          <args>['user:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="apop">
          <expr>ret = obj.apop(user,password)%%['str', 'str']</expr>
          <args>['user:str', 'password:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="top">
          <expr>ret = obj.top(which,howmuch)%%['int', 'int']</expr>
          <args>['which:int', 'howmuch:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="uidl">
          <expr>ret = obj.uidl(which)%%['str']</expr>
          <args>['which:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="utf8">
          <expr>ret = obj.utf8()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="stls">
          <expr>ret = obj.stls(context)%%['SSLContext']</expr>
          <args>['context:SSLContext']</args>
          <return>['resp:bytes']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="poplib.POP3" init="obj = poplib.POP3_SSL(None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="POP3_SSL">
        <api name="__init__">
          <expr>None</expr>
          <args>['host:NoneType', 'port:NoneType', 'keyfile:NoneType', 'certfile:NoneType', 'timeout:NoneType', 'context:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['POP3_SSL_PORT', None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="stls">
          <expr>obj.stls(keyfile,certfile,context)%%['NoneType', 'NoneType', 'NoneType']</expr>
          <args>['keyfile:NoneType', 'certfile:NoneType', 'context:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>poplib.error_proto</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['keyword', 're', 'sys']" name="keyword">
      <api name="main">
        <expr>keyword.main()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['binascii', 'os', 'sys', 'uu']" name="uu">
      <class base="Exception" init="obj = uu.Error()%%[]" name="Error"/>
      <api name="encode">
        <expr>uu.encode(in_file,out_file,name,mode)%%['BufferedReader', 'BufferedWriter', 'str', 'int']</expr>
        <args>['in_file:BufferedReader', 'out_file:BufferedWriter', 'name:str', 'mode:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['backtick:bool']</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <api name="decode">
        <expr>uu.decode(in_file,out_file,mode,quiet)%%['BytesIO', 'BytesIO', 'NoneType', 'bool']</expr>
        <args>['in_file:BytesIO', 'out_file:BytesIO', 'mode:NoneType', 'quiet:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>binascii.Error</exception>
        <exception>uu.Error</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['abc']" name="abc">
      <class base="builtins.classmethod" init="obj = abc.abstractclassmethod(None)%%['None']" name="abstractclassmethod">
        <api name="__init__">
          <expr>None</expr>
          <args>['callable:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="builtins.staticmethod" init="obj = abc.abstractstaticmethod(None)%%['None']" name="abstractstaticmethod">
        <api name="__init__">
          <expr>None</expr>
          <args>['callable:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="builtins.property" init="obj = abc.abstractproperty()%%[]" name="abstractproperty"/>
      <class base="builtins.type" init="obj = abc.ABCMeta()%%[]" name="ABCMeta">
        <api name="register">
          <expr>ret = obj.register(cls,subclass)%%['None', 'None']</expr>
          <args>['cls:None', 'subclass:None']</args>
          <return>['_abc_register:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = abc.ABC()%%[]" name="ABC"/>
      <api name="abstractmethod">
        <expr>ret = abc.abstractmethod(funcobj)%%['function']</expr>
        <args>['funcobj:function']</args>
        <return>['funcobj:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['inspect:CO_ASYNC_GENERATOR', 'inspect:CO_COROUTINE', 'inspect:CO_GENERATOR']" imports="['bdb', 'fnmatch', 'linecache', 'os', 'reprlib', 'sys']" name="bdb">
      <class base="Exception" init="obj = bdb.BdbQuit()%%[]" name="BdbQuit"/>
      <class init="obj = bdb.Bdb()%%['NoneType']" name="Bdb">
        <api name="__init__">
          <expr>None</expr>
          <args>['skip:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="trace_dispatch">
          <expr>ret = obj.trace_dispatch(frame,event,arg)%%['None', 'None', 'None']</expr>
          <args>['frame:None', 'event:None', 'arg:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_skipped_module">
          <expr>ret = obj.is_skipped_module(module_name)%%['None']</expr>
          <args>['module_name:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="stop_here">
          <expr>ret = obj.stop_here(frame)%%['None']</expr>
          <args>['frame:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="break_here">
          <expr>ret = obj.break_here(frame)%%['None']</expr>
          <args>['frame:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="break_anywhere">
          <expr>ret = obj.break_anywhere(frame)%%['None']</expr>
          <args>['frame:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_until">
          <expr>obj.set_until(frame,lineno)%%['None', 'None']</expr>
          <args>['frame:None', 'lineno:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_next">
          <expr>obj.set_next(frame)%%['None']</expr>
          <args>['frame:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_return">
          <expr>obj.set_return(frame)%%['None']</expr>
          <args>['frame:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_trace">
          <expr>obj.set_trace(frame)%%['None']</expr>
          <args>['frame:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_continue">
          <expr>obj.set_continue()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_quit">
          <expr>obj.set_quit()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_break">
          <expr>ret = obj.set_break(filename,lineno,temporary,cond,funcname)%%['None', 'None', 'None', 'None', 'None']</expr>
          <args>['filename:None', 'lineno:None', 'temporary:None', 'cond:None', 'funcname:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clear_break">
          <expr>ret = obj.clear_break(filename,lineno)%%['None', 'None']</expr>
          <args>['filename:None', 'lineno:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clear_bpbynumber">
          <expr>ret = obj.clear_bpbynumber(arg)%%['None']</expr>
          <args>['arg:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clear_all_file_breaks">
          <expr>ret = obj.clear_all_file_breaks(filename)%%['None']</expr>
          <args>['filename:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clear_all_breaks">
          <expr>ret = obj.clear_all_breaks()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_break">
          <expr>ret = obj.get_break(filename,lineno)%%['None', 'None']</expr>
          <args>['filename:None', 'lineno:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_breaks">
          <expr>ret = obj.get_breaks(filename,lineno)%%['None', 'None']</expr>
          <args>['filename:None', 'lineno:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_file_breaks">
          <expr>ret = obj.get_file_breaks(filename)%%['None']</expr>
          <args>['filename:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_all_breaks">
          <expr>ret = obj.get_all_breaks()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_stack">
          <expr>obj.get_stack(f,t)%%['None', 'None']</expr>
          <args>['f:None', 't:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="format_stack_entry">
          <expr>ret = obj.format_stack_entry(frame_lineno,lprefix)%%['None', 'None']</expr>
          <args>['frame_lineno:None', 'lprefix:None']</args>
          <return>['s:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="runeval">
          <expr>ret = obj.runeval(expr,globals,locals)%%['None', 'None', 'None']</expr>
          <args>['expr:None', 'globals:None', 'locals:None']</args>
          <return>['eval:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="runctx">
          <expr>obj.runctx(cmd,globals,locals)%%['None', 'None', 'None']</expr>
          <args>['cmd:None', 'globals:None', 'locals:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="runcall">
          <expr>ret = obj.runcall()%%[]</expr>
          <args>[]</args>
          <return>['res:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = bdb.Breakpoint(None,None)%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="Breakpoint">
        <api name="__init__">
          <expr>None</expr>
          <args>['file:NoneType', 'line:NoneType', 'temporary:NoneType', 'cond:NoneType', 'funcname:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="enable">
          <expr>obj.enable()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="disable">
          <expr>obj.disable()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="bpprint">
          <expr>obj.bpprint(out)%%['None']</expr>
          <args>['out:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="bpformat">
          <expr>ret = obj.bpformat()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class base="bdb.Bdb" init="obj = bdb.Tdb()%%['NoneType']" name="Tdb"/>
      <api name="set_trace">
        <expr>bdb.set_trace()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="checkfuncname">
        <expr>ret = bdb.checkfuncname(b,frame)%%['None', 'None']</expr>
        <args>['b:None', 'frame:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="effective">
        <expr>bdb.effective(file,line,frame)%%['None', 'None', 'None']</expr>
        <args>['file:None', 'line:None', 'frame:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="foo">
        <expr>bdb.foo(n)%%['None']</expr>
        <args>['n:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="bar">
        <expr>ret = bdb.bar(a)%%['None']</expr>
        <args>['a:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>IndexError</exception>
        <exception>NotImplementedError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>bdb.BdbQuit</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['opcode']" name="opcode">
      <errors>
        <exception>ImportError</exception>
      </errors>
    </module>
    <module importfrom="['chunk:Chunk', 'collections:namedtuple']" imports="['audioop', 'builtins', 'struct', 'sys', 'warnings', 'wave']" name="wave">
      <class base="Exception" init="obj = wave.Error()%%[]" name="Error"/>
      <class init="obj = wave.Wave_read(None)%%['NoneType']" name="Wave_read">
        <api name="initfp">
          <expr>obj.initfp(file)%%['BytesIO']</expr>
          <args>['file:BytesIO']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="__init__">
          <expr>None</expr>
          <args>['f:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getfp">
          <expr>ret = obj.getfp()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="rewind">
          <expr>obj.rewind()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tell">
          <expr>ret = obj.tell()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getnchannels">
          <expr>ret = obj.getnchannels()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getnframes">
          <expr>ret = obj.getnframes()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getsampwidth">
          <expr>ret = obj.getsampwidth()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getframerate">
          <expr>ret = obj.getframerate()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getcomptype">
          <expr>ret = obj.getcomptype()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getcompname">
          <expr>ret = obj.getcompname()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getparams">
          <expr>ret = obj.getparams()%%[]</expr>
          <args>[]</args>
          <return>['_wave_params:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getmarkers">
          <expr>ret = obj.getmarkers()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getmark">
          <expr>obj.getmark(id)%%['None']</expr>
          <args>['id:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setpos">
          <expr>obj.setpos(pos)%%['int']</expr>
          <args>['pos:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="readframes">
          <expr>ret = obj.readframes(nframes)%%['int']</expr>
          <args>['nframes:int']</args>
          <return>['ret:NoneType', 'data:bytes']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = wave.Wave_write(None)%%['NoneType']" name="Wave_write">
        <api name="__init__">
          <expr>None</expr>
          <args>['f:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="initfp">
          <expr>obj.initfp(file)%%['BufferedWriter']</expr>
          <args>['file:BufferedWriter']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getnchannels">
          <expr>ret = obj.getnchannels()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getsampwidth">
          <expr>ret = obj.getsampwidth()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getframerate">
          <expr>ret = obj.getframerate()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getnframes">
          <expr>ret = obj.getnframes()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getcomptype">
          <expr>ret = obj.getcomptype()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getcompname">
          <expr>ret = obj.getcompname()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setparams">
          <expr>obj.setparams(params)%%['_wave_params']</expr>
          <args>['params:_wave_params']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getparams">
          <expr>ret = obj.getparams()%%[]</expr>
          <args>[]</args>
          <return>['_wave_params:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setmark">
          <expr>obj.setmark(id,pos,name)%%['None', 'None', 'None']</expr>
          <args>['id:None', 'pos:None', 'name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getmark">
          <expr>obj.getmark(id)%%['None']</expr>
          <args>['id:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getmarkers">
          <expr>ret = obj.getmarkers()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="writeframes">
          <expr>obj.writeframes(data)%%['bytes']</expr>
          <args>['data:bytes']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="open">
        <expr>ret = wave.open(f,mode)%%['BytesIO', 'str']</expr>
        <args>['f:BytesIO', 'mode:str']</args>
        <return>['Wave_read:type', 'Wave_write:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="openfp">
        <expr>ret = wave.openfp(f,mode)%%['str', 'str']</expr>
        <args>['f:str', 'mode:str']</args>
        <return>['open:MagicMock']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>EOFError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>struct.error</exception>
        <exception>wave.Error</exception>
      </errors>
    </module>
    <module importfrom="['io:StringIO']" imports="['collections:_collections', 'pprint', 're', 'sys:_sys', 'time', 'types:_types']" name="pprint">
      <class init="obj = pprint.PrettyPrinter()%%['NoneType', 'NoneType', 'NoneType', 'NoneType']" name="PrettyPrinter">
        <api name="__init__">
          <expr>None</expr>
          <args>['indent:NoneType', 'width:NoneType', 'depth:NoneType', 'stream:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['compact:NoneType']</kwoargs>
          <defa>[None, None, None, None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="isrecursive">
          <expr>ret = obj.isrecursive(object)%%['int']</expr>
          <args>['object:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isreadable">
          <expr>ret = obj.isreadable(object)%%['int']</expr>
          <args>['object:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="pprint">
        <expr>pprint.pprint(object,stream,indent,width,depth)%%['list', 'NoneType', 'int', 'int', 'NoneType']</expr>
        <args>['object:list', 'stream:NoneType', 'indent:int', 'width:int', 'depth:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['compact:bool']</kwoargs>
        <defa>[None, None, None, None]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <api name="pformat">
        <expr>ret = pprint.pformat(object,indent,width,depth)%%['dict', 'int', 'int', 'int']</expr>
        <args>['object:dict', 'indent:int', 'width:int', 'depth:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['compact:bool']</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <api name="saferepr">
        <expr>ret = pprint.saferepr(object)%%['int']</expr>
        <args>['object:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isreadable">
        <expr>ret = pprint.isreadable(object)%%['int']</expr>
        <args>['object:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isrecursive">
        <expr>ret = pprint.isrecursive(object)%%['int']</expr>
        <args>['object:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>StopIteration</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['re', 'textwrap']" name="textwrap">
      <class init="obj = textwrap.TextWrapper()%%['NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType', 'NoneType']" name="TextWrapper">
        <api name="__init__">
          <expr>None</expr>
          <args>['width:NoneType', 'initial_indent:NoneType', 'subsequent_indent:NoneType', 'expand_tabs:NoneType', 'replace_whitespace:NoneType', 'fix_sentence_endings:NoneType', 'break_long_words:NoneType', 'drop_whitespace:NoneType', 'break_on_hyphens:NoneType', 'tabsize:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['max_lines:NoneType', 'placeholder:NoneType']</kwoargs>
          <defa>[None, None, None, None, None, None, None, None, None, None]</defa>
          <kwodefa>[None, None]</kwodefa>
        </api>
        <api name="wrap">
          <expr>ret = obj.wrap(text)%%['str']</expr>
          <args>['text:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="fill">
          <expr>ret = obj.fill(text)%%['str']</expr>
          <args>['text:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="wrap">
        <expr>ret = textwrap.wrap(text,width)%%['str', 'int']</expr>
        <args>['text:str', 'width:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="fill">
        <expr>ret = textwrap.fill(text,width)%%['str', 'int']</expr>
        <args>['text:str', 'width:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="shorten">
        <expr>ret = textwrap.shorten(text,width)%%['str', 'int']</expr>
        <args>['text:str', 'width:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dedent">
        <expr>ret = textwrap.dedent(text)%%['str']</expr>
        <args>['text:str']</args>
        <return>['text:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="indent">
        <expr>ret = textwrap.indent(text,prefix,predicate)%%['str', 'str', 'function']</expr>
        <args>['text:str', 'prefix:str', 'predicate:function']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="['grp:getgrnam', 'pwd:getpwnam']" imports="['bz2', 'collections', 'errno', 'fnmatch', 'lzma', 'nt', 'os', 'shutil', 'stat', 'sys', 'tarfile', 'zipfile', 'zlib']" name="shutil">
      <class base="OSError" init="obj = shutil.Error()%%[]" name="Error"/>
      <class base="Error" init="obj = shutil.SameFileError()%%[]" name="SameFileError"/>
      <class base="OSError" init="obj = shutil.SpecialFileError()%%[]" name="SpecialFileError"/>
      <class base="OSError" init="obj = shutil.ExecError()%%[]" name="ExecError"/>
      <class base="OSError" init="obj = shutil.ReadError()%%[]" name="ReadError"/>
      <class base="Exception" init="obj = shutil.RegistryError()%%[]" name="RegistryError"/>
      <api name="copyfileobj">
        <expr>shutil.copyfileobj(fsrc,fdst,length)%%['BufferedReader', '_ZipWriteFile', 'int']</expr>
        <args>['fsrc:BufferedReader', 'fdst:_ZipWriteFile', 'length:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="copyfile">
        <expr>ret = shutil.copyfile(src,dst)%%['str', 'str']</expr>
        <args>['src:str', 'dst:str']</args>
        <return>['dst:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['follow_symlinks:bool']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <api name="copymode">
        <expr>shutil.copymode(src,dst)%%['str', 'str']</expr>
        <args>['src:str', 'dst:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['follow_symlinks:bool']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <api name="copystat">
        <expr>shutil.copystat(src,dst)%%['str', 'str']</expr>
        <args>['src:str', 'dst:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['follow_symlinks:bool']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <api name="copy">
        <expr>ret = shutil.copy(src,dst)%%['str', 'str']</expr>
        <args>['src:str', 'dst:str']</args>
        <return>['dst:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['follow_symlinks:bool']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <api name="copy2">
        <expr>ret = shutil.copy2(src,dst)%%['str', 'str']</expr>
        <args>['src:str', 'dst:str']</args>
        <return>['dst:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['follow_symlinks:bool']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <api name="ignore_patterns">
        <expr>ret = shutil.ignore_patterns()%%[]</expr>
        <args>[]</args>
        <return>['_ignore_patterns:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="copytree">
        <expr>ret = shutil.copytree(src,dst,symlinks,ignore,copy_function,ignore_dangling_symlinks)%%['str', 'str', 'bool', 'function', 'function', 'bool']</expr>
        <args>['src:str', 'dst:str', 'symlinks:bool', 'ignore:function', 'copy_function:function', 'ignore_dangling_symlinks:bool']</args>
        <return>['dst:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, 'copy2', None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="rmtree">
        <expr>ret = shutil.rmtree(path,ignore_errors,onerror)%%['str', 'bool', 'function']</expr>
        <args>['path:str', 'ignore_errors:bool', 'onerror:function']</args>
        <return>['_rmtree_unsafe:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="move">
        <expr>ret = shutil.move(src,dst,copy_function)%%['str', 'str', 'function']</expr>
        <args>['src:str', 'dst:str', 'copy_function:function']</args>
        <return>['real_dst:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['copy2']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_archive_formats">
        <expr>ret = shutil.get_archive_formats()%%[]</expr>
        <args>[]</args>
        <return>['formats:list']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="register_archive_format">
        <expr>shutil.register_archive_format(name,function,extra_args,description)%%['str', 'function', 'list', 'str']</expr>
        <args>['name:str', 'function:function', 'extra_args:list', 'description:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="unregister_archive_format">
        <expr>shutil.unregister_archive_format(name)%%['str']</expr>
        <args>['name:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="make_archive">
        <expr>ret = shutil.make_archive(base_name,format,root_dir,base_dir,verbose,dry_run,owner,group,logger)%%['str', 'str', 'str', 'str', 'int', 'int', 'str', 'str', 'NoneType']</expr>
        <args>['base_name:str', 'format:str', 'root_dir:str', 'base_dir:str', 'verbose:int', 'dry_run:int', 'owner:str', 'group:str', 'logger:NoneType']</args>
        <return>['filename:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_unpack_formats">
        <expr>ret = shutil.get_unpack_formats()%%[]</expr>
        <args>[]</args>
        <return>['formats:list']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="register_unpack_format">
        <expr>shutil.register_unpack_format(name,extensions,function,extra_args,description)%%['str', 'list', 'function', 'list', 'str']</expr>
        <args>['name:str', 'extensions:list', 'function:function', 'extra_args:list', 'description:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="unregister_unpack_format">
        <expr>shutil.unregister_unpack_format(name)%%['str']</expr>
        <args>['name:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="unpack_archive">
        <expr>shutil.unpack_archive(filename,extract_dir,format)%%['str', 'str', 'str']</expr>
        <args>['filename:str', 'extract_dir:str', 'format:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="disk_usage">
        <expr>ret = shutil.disk_usage(path)%%['str']</expr>
        <args>['path:str']</args>
        <return>['_ntuple_diskusage:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="chown">
        <expr>shutil.chown(path,user,group)%%['str', 'str', 'str']</expr>
        <args>['path:str', 'user:str', 'group:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_terminal_size">
        <expr>ret = shutil.get_terminal_size(fallback)%%['tuple']</expr>
        <args>['fallback:tuple']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="which">
        <expr>ret = shutil.which(cmd,mode,path)%%['str', 'int', 'str']</expr>
        <args>['cmd:str', 'mode:int', 'path:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>Exception</exception>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
        <exception>LookupError</exception>
        <exception>NotImplementedError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>shutil.Error</exception>
        <exception>shutil.ExecError</exception>
        <exception>shutil.ReadError</exception>
        <exception>shutil.RegistryError</exception>
        <exception>shutil.SameFileError</exception>
        <exception>shutil.SpecialFileError</exception>
        <exception>tarfile.CompressionError</exception>
        <exception>tarfile.EOFHeaderError</exception>
        <exception>tarfile.EmptyHeaderError</exception>
        <exception>tarfile.ExtractError</exception>
        <exception>tarfile.HeaderError</exception>
        <exception>tarfile.InvalidHeaderError</exception>
        <exception>tarfile.ReadError</exception>
        <exception>tarfile.StreamError</exception>
        <exception>tarfile.SubsequentHeaderError</exception>
        <exception>tarfile.TarError</exception>
        <exception>tarfile.TruncatedHeaderError</exception>
        <exception>zipfile.BadZipFile</exception>
        <exception>zipfile.LargeZipFile</exception>
      </errors>
    </module>
    <module importfrom="['functools:wraps', 'io:BytesIO']" imports="['struct', 'xdrlib']" name="xdrlib">
      <class base="Exception" init="obj = xdrlib.Error()%%[]" name="Error"/>
      <class base="Error" init="obj = xdrlib.ConversionError()%%[]" name="ConversionError"/>
      <class init="obj = xdrlib.Packer()%%[]" name="Packer">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="reset">
          <expr>obj.reset()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_buffer">
          <expr>ret = obj.get_buffer()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pack_int">
          <expr>obj.pack_int(x)%%['str']</expr>
          <args>['x:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pack_bool">
          <expr>obj.pack_bool(x)%%['bool']</expr>
          <args>['x:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pack_uhyper">
          <expr>obj.pack_uhyper(x)%%['str']</expr>
          <args>['x:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pack_float">
          <expr>obj.pack_float(x)%%['str']</expr>
          <args>['x:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pack_double">
          <expr>obj.pack_double(x)%%['str']</expr>
          <args>['x:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pack_string">
          <expr>obj.pack_string(s)%%['bytes']</expr>
          <args>['s:bytes']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pack_list">
          <expr>obj.pack_list(list,pack_item)%%['range', 'method']</expr>
          <args>['list:range', 'pack_item:method']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pack_array">
          <expr>obj.pack_array(list,pack_item)%%['list', 'method']</expr>
          <args>['list:list', 'pack_item:method']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class init="obj = xdrlib.Unpacker(None)%%['NoneType']" name="Unpacker">
        <api name="__init__">
          <expr>None</expr>
          <args>['data:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="reset">
          <expr>obj.reset(data)%%['bytes']</expr>
          <args>['data:bytes']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_position">
          <expr>ret = obj.get_position()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_position">
          <expr>obj.set_position(position)%%['int']</expr>
          <args>['position:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_buffer">
          <expr>ret = obj.get_buffer()%%[]</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="done">
          <expr>obj.done()%%[]</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unpack_int">
          <expr>ret = obj.unpack_int()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unpack_bool">
          <expr>ret = obj.unpack_bool()%%[]</expr>
          <args>[]</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unpack_hyper">
          <expr>ret = obj.unpack_hyper()%%[]</expr>
          <args>[]</args>
          <return>['x:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unpack_float">
          <expr>ret = obj.unpack_float()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unpack_double">
          <expr>ret = obj.unpack_double()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unpack_string">
          <expr>ret = obj.unpack_string()%%[]</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unpack_list">
          <expr>ret = obj.unpack_list(unpack_item)%%['method']</expr>
          <args>['unpack_item:method']</args>
          <return>['list:list']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unpack_array">
          <expr>ret = obj.unpack_array(unpack_item)%%['method']</expr>
          <args>['unpack_item:method']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="raise_conversion_error">
        <expr>ret = xdrlib.raise_conversion_error(function)%%['function']</expr>
        <args>['function:function']</args>
        <return>['result:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>EOFError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>xdrlib.ConversionError</exception>
        <exception>xdrlib.Error</exception>
      </errors>
    </module>
    <module importfrom="['enum:IntEnum', 'functools:wraps']" imports="['signal']" name="signal">
      <api name="signal">
        <expr>ret = signal.signal(signalnum,handler)%%['Signals', 'Handlers']</expr>
        <args>['signalnum:Signals', 'handler:Handlers']</args>
        <return>['_int_to_enum:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getsignal">
        <expr>ret = signal.getsignal(signalnum)%%['Signals']</expr>
        <args>['signalnum:Signals']</args>
        <return>['_int_to_enum:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="pthread_sigmask">
        <expr>ret = signal.pthread_sigmask(how,mask)%%['Sigmasks', 'range']</expr>
        <args>['how:Sigmasks', 'mask:range']</args>
        <return>['set:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="sigpending">
        <expr>ret = signal.sigpending()%%[]</expr>
        <args>[]</args>
        <return>['set:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="sigwait">
        <expr>ret = signal.sigwait(sigset)%%['None']</expr>
        <args>['sigset:None']</args>
        <return>['_int_to_enum:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['sre_constants']" name="sre_constants">
      <class base="Exception" init="obj = sre_constants.error()%%[]" name="error"/>
      <errors>
        <exception>sre_constants.error</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['functools', 'linecache', 'os', 'sys', 'tokenize']" name="linecache">
      <api name="getline">
        <expr>ret = linecache.getline(filename,lineno,module_globals)%%['str', 'int', 'dict']</expr>
        <args>['filename:str', 'lineno:int', 'module_globals:dict']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="clearcache">
        <expr>linecache.clearcache()%%[]</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getlines">
        <expr>ret = linecache.getlines(filename,module_globals)%%['str', 'dict']</expr>
        <args>['filename:str', 'module_globals:dict']</args>
        <return>['ret:NoneType', 'updatecache:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="checkcache">
        <expr>linecache.checkcache(filename)%%['str']</expr>
        <args>['filename:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="updatecache">
        <expr>ret = linecache.updatecache(filename,module_globals)%%['str', 'dict']</expr>
        <args>['filename:str', 'module_globals:dict']</args>
        <return>['ret:NoneType', 'lines:list']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="lazycache">
        <expr>ret = linecache.lazycache(filename,module_globals)%%['str', 'dict']</expr>
        <args>['filename:str', 'module_globals:dict']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>MemoryError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>tokenize.StopTokenizing</exception>
        <exception>tokenize.TokenError</exception>
      </errors>
    </module>
    <module importfrom="[]" imports="['builtins', 'copy', 'dataclasses', 'functools', 'inspect', 'keyword', 're', 'sys', 'types']" name="dataclasses">
      <class base="AttributeError" init="obj = dataclasses.FrozenInstanceError()%%[]" name="FrozenInstanceError"/>
      <class init="obj = dataclasses.InitVar()%%[]" name="InitVar"/>
      <class init="obj = dataclasses.Field(None,None,None,None,None,None,None)%%['NoneType', 'NoneType', 'NoneType', 'builtin_function_or_method', 'builtin_function_or_method', 'NoneType', 'NoneType']" name="Field">
        <api name="__init__">
          <expr>None</expr>
          <args>['default:NoneType', 'default_factory:NoneType', 'init:NoneType', 'repr:builtin_function_or_method', 'hash:builtin_function_or_method', 'compare:NoneType', 'metadata:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="field">
        <expr>ret = dataclasses.field()%%[]</expr>
        <args>[]</args>
        <return>['Field:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['default:_MISSING_TYPE', 'default_factory:_MISSING_TYPE', 'init:bool', 'repr:bool', 'hash:bool', 'compare:bool', 'metadata:SimpleNameSpace']</kwoargs>
        <defa>[]</defa>
        <kwodefa>['MISSING', 'MISSING', None, None, None, None, None]</kwodefa>
      </api>
      <api name="dataclass">
        <expr>ret = dataclasses.dataclass(_cls)%%['type']</expr>
        <args>['_cls:type']</args>
        <return>['wrap:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['init:bool', 'repr:bool', 'eq:bool', 'order:bool', 'unsafe_hash:bool', 'frozen:bool']</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[None, None, None, None, None, None]</kwodefa>
      </api>
      <api name="fields">
        <expr>ret = dataclasses.fields(class_or_instance)%%['type']</expr>
        <args>['class_or_instance:type']</args>
        <return>['tuple:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="is_dataclass">
        <expr>ret = dataclasses.is_dataclass(obj)%%['int']</expr>
        <args>['obj:int']</args>
        <return>['hasattr:builtin_function_or_method']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="asdict">
        <expr>ret = dataclasses.asdict(obj)%%['C']</expr>
        <args>['obj:C']</args>
        <return>['_asdict_inner:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['dict_factory:type']</kwoargs>
        <defa>[]</defa>
        <kwodefa>['dict']</kwodefa>
      </api>
      <api name="astuple">
        <expr>ret = dataclasses.astuple(obj)%%['C']</expr>
        <args>['obj:C']</args>
        <return>['_astuple_inner:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['tuple_factory:type']</kwoargs>
        <defa>[]</defa>
        <kwodefa>['tuple']</kwodefa>
      </api>
      <api name="make_dataclass">
        <expr>ret = dataclasses.make_dataclass(cls_name,fields)%%['str', 'list']</expr>
        <args>['cls_name:str', 'fields:list']</args>
        <return>['dataclass:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['bases:tuple', 'namespace:dict', 'init:bool', 'repr:bool', 'eq:bool', 'order:bool', 'unsafe_hash:bool', 'frozen:bool']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None, None, None, None, None, None, None, None]</kwodefa>
      </api>
      <api name="replace">
        <expr>ret = dataclasses.replace()%%[]</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>copy.Error</exception>
        <exception>dataclasses.FrozenInstanceError</exception>
      </errors>
    </module>
  </library>
</apisepc>
