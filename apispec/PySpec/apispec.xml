<?xml version="1.0" ?>
<apisepc version="1.0">
  <library name="sqlite3">
    <module name="sqlite3.dbapi2" imports="['datetime', 'time', 'collections.abc']" importfrom="['_sqlite3:*']">
      <api name="DateFromTicks">
        <expr>ret = DateFromTicks(ticks)</expr>
        <args>['ticks:int']</args>
        <return>['Date:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="TimeFromTicks">
        <expr>ret = TimeFromTicks(ticks)</expr>
        <args>['ticks:int']</args>
        <return>['Time:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="TimestampFromTicks">
        <expr>ret = TimestampFromTicks(ticks)</expr>
        <args>['ticks:int']</args>
        <return>['Timestamp:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="register_adapters_and_converters">
        <expr>register_adapters_and_converters()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="sqlite3.dump" imports="[]" importfrom="[]"/>
  </library>
  <library name="html">
    <module name="html.entities" imports="[]" importfrom="[]"/>
    <module name="html.parser" imports="['re']" importfrom="['html:unescape']">
      <class name="HTMLParser" init="obj = HTMLParser()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['convert_charrefs:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[True]</kwodefa>
        </api>
        <api name="feed">
          <expr>obj.feed(data)</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="close">
          <expr>obj.close()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_starttag_text">
          <expr>obj.ret = get_starttag_text()</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
    </module>
  </library>
  <library name="ctypes">
    <module name="ctypes.wintypes" imports="['ctypes']" importfrom="[]">
      <class name="VARIANT_BOOL" init=""/>
      <class name="RECT" init=""/>
      <class name="POINT" init=""/>
      <class name="SIZE" init=""/>
      <class name="FILETIME" init=""/>
      <class name="MSG" init=""/>
      <class name="WIN32_FIND_DATAA" init=""/>
      <class name="WIN32_FIND_DATAW" init=""/>
      <api name="RGB">
        <expr>ret = RGB(red,green,blue)</expr>
        <args>['red:None', 'green:None', 'blue:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="ctypes.util" imports="['os', 'shutil', 'subprocess', 'sys', 'importlib.machinery', 're', 'tempfile', 'struct']" importfrom="['ctypes.macholib.dyld:dyld_find', 'ctypes._aix:find_library']">
      <api name="find_msvcrt">
        <expr>ret = find_msvcrt()</expr>
        <args>[]</args>
        <return>['ret:None', 'ret:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="find_library">
        <expr>find_library(name)</expr>
        <args>['name:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ValueError</exception>
        <exception>OSError</exception>
        <exception>FileNotFoundError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>ValueError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>Exception</exception>
      </errors>
    </module>
    <module name="ctypes.macholib.framework" imports="['re']" importfrom="[]">
      <api name="framework_info">
        <expr>ret = framework_info(filename)</expr>
        <args>['filename:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="ctypes.macholib.dyld" imports="['os']" importfrom="['ctypes.macholib.framework:framework_info', 'ctypes.macholib.dylib:dylib_info', 'itertools:*']">
      <api name="dyld_env">
        <expr>ret = dyld_env(env,var)</expr>
        <args>['env:None', 'var:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dyld_image_suffix">
        <expr>ret = dyld_image_suffix(env)</expr>
        <args>['env:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dyld_framework_path">
        <expr>ret = dyld_framework_path(env)</expr>
        <args>['env:None']</args>
        <return>['dyld_env:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dyld_library_path">
        <expr>ret = dyld_library_path(env)</expr>
        <args>['env:None']</args>
        <return>['dyld_env:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dyld_fallback_framework_path">
        <expr>ret = dyld_fallback_framework_path(env)</expr>
        <args>['env:None']</args>
        <return>['dyld_env:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dyld_fallback_library_path">
        <expr>ret = dyld_fallback_library_path(env)</expr>
        <args>['env:None']</args>
        <return>['dyld_env:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dyld_image_suffix_search">
        <expr>ret = dyld_image_suffix_search(iterator,env)</expr>
        <args>['iterator:None', 'env:None']</args>
        <return>['iterator:None', '_inject:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dyld_override_search">
        <expr>dyld_override_search(name,env)</expr>
        <args>['name:None', 'env:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dyld_executable_path_search">
        <expr>dyld_executable_path_search(name,executable_path)</expr>
        <args>['name:None', 'executable_path:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dyld_default_search">
        <expr>dyld_default_search(name,env)</expr>
        <args>['name:None', 'env:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dyld_find">
        <expr>ret = dyld_find(name,executable_path,env)</expr>
        <args>['name:None', 'executable_path:None', 'env:None']</args>
        <return>['path:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="framework_find">
        <expr>ret = framework_find(fn,executable_path,env)</expr>
        <args>['fn:None', 'executable_path:None', 'env:None']</args>
        <return>['dyld_find:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ImportError</exception>
        <exception>NotImplementedError</exception>
        <exception>ValueError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module name="ctypes.macholib.dylib" imports="['re']" importfrom="[]">
      <api name="dylib_info">
        <expr>ret = dylib_info(filename)</expr>
        <args>['filename:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
  </library>
  <library name="xmlrpc">
    <module name="xmlrpc.client" imports="['base64', 'sys', 'time', 'http.client', 'urllib.parse', 'errno', 'gzip']" importfrom="['datetime:datetime', 'decimal:Decimal', 'xml.parsers:expat', 'io:BytesIO']">
      <class name="Error" init=""/>
      <class name="DateTime" init="obj = DateTime(value)">
        <api name="__init__">
          <expr>None</expr>
          <args>['value:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[0]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(data)</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="encode">
          <expr>obj.encode(out)</expr>
          <args>['out:Marshaller']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Binary" init="obj = Binary(data)">
        <api name="__init__">
          <expr>None</expr>
          <args>['data:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="encode">
          <expr>obj.encode(out)</expr>
          <args>['out:Marshaller']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ExpatParser" init="obj = ExpatParser(target)">
        <api name="__init__">
          <expr>None</expr>
          <args>['target:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="feed">
          <expr>obj.feed(data)</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="close">
          <expr>obj.close()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Marshaller" init="obj = Marshaller(encoding,allow_none)">
        <api name="__init__">
          <expr>None</expr>
          <args>['encoding:NoneType', 'allow_none:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dumps">
          <expr>obj.dumps(values)</expr>
          <args>['values:tuple']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dump_nil">
          <expr>obj.dump_nil(value,write)</expr>
          <args>['value:NoneType', 'write:builtin_function_or_method']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dump_bool">
          <expr>obj.dump_bool(value,write)</expr>
          <args>['value:bool', 'write:builtin_function_or_method']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dump_long">
          <expr>obj.dump_long(value,write)</expr>
          <args>['value:int', 'write:builtin_function_or_method']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dump_double">
          <expr>obj.dump_double(value,write)</expr>
          <args>['value:float', 'write:builtin_function_or_method']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dump_unicode">
          <expr>obj.dump_unicode(value,write,escape)</expr>
          <args>['value:str', 'write:builtin_function_or_method', 'escape:function']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['escape']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dump_bytes">
          <expr>obj.dump_bytes(value,write)</expr>
          <args>['value:bytes', 'write:builtin_function_or_method']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dump_array">
          <expr>obj.dump_array(value,write)</expr>
          <args>['value:tuple', 'write:builtin_function_or_method']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dump_datetime">
          <expr>obj.dump_datetime(value,write)</expr>
          <args>['value:datetime', 'write:builtin_function_or_method']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dump_instance">
          <expr>obj.dump_instance(value,write)</expr>
          <args>['value:Fault', 'write:builtin_function_or_method']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Unmarshaller" init="obj = Unmarshaller(use_datetime,use_builtin_types)">
        <api name="__init__">
          <expr>None</expr>
          <args>['use_datetime:NoneType', 'use_builtin_types:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False, False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="close">
          <expr>obj.close()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getmethodname">
          <expr>obj.getmethodname()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="xml">
          <expr>obj.xml(encoding,standalone)</expr>
          <args>['encoding:NoneType', 'standalone:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="start">
          <expr>obj.start(tag,attrs)</expr>
          <args>['tag:str', 'attrs:dict']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="data">
          <expr>obj.data(text)</expr>
          <args>['text:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end">
          <expr>obj.end(tag)</expr>
          <args>['tag:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_dispatch">
          <expr>obj.ret = end_dispatch(tag,data)</expr>
          <args>['tag:None', 'data:None']</args>
          <return>['f:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_nil">
          <expr>obj.end_nil(data)</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_boolean">
          <expr>obj.end_boolean(data)</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_int">
          <expr>obj.end_int(data)</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_double">
          <expr>obj.end_double(data)</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_bigdecimal">
          <expr>obj.end_bigdecimal(data)</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_array">
          <expr>obj.end_array(data)</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_struct">
          <expr>obj.end_struct(data)</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_base64">
          <expr>obj.end_base64(data)</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_dateTime">
          <expr>obj.end_dateTime(data)</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_value">
          <expr>obj.end_value(data)</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_params">
          <expr>obj.end_params(data)</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_fault">
          <expr>obj.end_fault(data)</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_methodName">
          <expr>obj.end_methodName(data)</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="MultiCallIterator" init="obj = MultiCallIterator(results)">
        <api name="__init__">
          <expr>None</expr>
          <args>['results:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="MultiCall" init="obj = MultiCall(server)">
        <api name="__init__">
          <expr>None</expr>
          <args>['server:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="GzipDecodedResponse" init="obj = GzipDecodedResponse(response)">
        <api name="__init__">
          <expr>None</expr>
          <args>['response:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Transport" init="obj = Transport(use_datetime,use_builtin_types)">
        <api name="__init__">
          <expr>None</expr>
          <args>['use_datetime:NoneType', 'use_builtin_types:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['headers:NoneType']</kwoargs>
          <defa>[False, False]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="request">
          <expr>obj.request(host,handler,request_body,verbose)</expr>
          <args>['host:str', 'handler:str', 'request_body:bytes', 'verbose:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="SafeTransport" init="obj = SafeTransport(use_datetime,use_builtin_types)">
        <api name="__init__">
          <expr>None</expr>
          <args>['use_datetime:NoneType', 'use_builtin_types:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['headers:NoneType', 'context:NoneType']</kwoargs>
          <defa>[False, False]</defa>
          <kwodefa>[None, None]</kwodefa>
        </api>
      </class>
      <class name="ServerProxy" init="obj = ServerProxy(uri,transport,encoding,verbose,allow_none,use_datetime,use_builtin_types)">
        <api name="__init__">
          <expr>None</expr>
          <args>['uri:NoneType', 'transport:NoneType', 'encoding:NoneType', 'verbose:NoneType', 'allow_none:NoneType', 'use_datetime:NoneType', 'use_builtin_types:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['headers:NoneType', 'context:NoneType']</kwoargs>
          <defa>[None, None, False, False, False, False]</defa>
          <kwodefa>[None, None]</kwodefa>
        </api>
      </class>
      <api name="escape">
        <expr>escape(s)</expr>
        <args>['s:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getparser">
        <expr>getparser(use_datetime,use_builtin_types)</expr>
        <args>['use_datetime:bool', 'use_builtin_types:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[False, False]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dumps">
        <expr>dumps(params,methodname,methodresponse,encoding,allow_none)</expr>
        <args>['params:tuple', 'methodname:NoneType', 'methodresponse:NoneType', 'encoding:NoneType', 'allow_none:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, False]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="loads">
        <expr>loads(data,use_datetime,use_builtin_types)</expr>
        <args>['data:str', 'use_datetime:bool', 'use_builtin_types:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[False, False]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="gzip_encode">
        <expr>gzip_encode(data)</expr>
        <args>['data:bytes']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="gzip_decode">
        <expr>gzip_decode(data,max_decode)</expr>
        <args>['data:bytes', 'max_decode:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[20971520]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ImportError</exception>
        <exception>xmlrpcxmlrpc.client.ProtocolError</exception>
        <exception>xmlrpcxmlrpc.client.ResponseError</exception>
        <exception>xmlrpcxmlrpc.client.Fault</exception>
        <exception>ValueError</exception>
        <exception>AttributeError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>http.client.RemoteDisconnected</exception>
        <exception>OSError</exception>
        <exception>Fault</exception>
        <exception>Exception</exception>
        <exception>Error</exception>
        <exception>Error</exception>
      </errors>
    </module>
    <module name="xmlrpc.server" imports="['html', 'http.server', 'socketserver', 'sys', 'os', 're', 'pydoc', 'traceback', 'fcntl', 'datetime']" importfrom="['xmlrpc.client:Fault', 'xmlrpc.client:dumps', 'xmlrpc.client:loads', 'xmlrpc.client:gzip_encode', 'xmlrpc.client:gzip_decode', 'http.server:BaseHTTPRequestHandler', 'functools:partial', 'inspect:signature']">
      <class name="SimpleXMLRPCDispatcher" init="obj = SimpleXMLRPCDispatcher(allow_none,encoding,use_builtin_types)">
        <api name="__init__">
          <expr>None</expr>
          <args>['allow_none:NoneType', 'encoding:NoneType', 'use_builtin_types:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False, None, False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="register_instance">
          <expr>obj.register_instance(instance,allow_dotted_names)</expr>
          <args>['instance:TestInstance', 'allow_dotted_names:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="register_function">
          <expr>obj.register_function(function,name)</expr>
          <args>['function:function', 'name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="register_introspection_functions">
          <expr>obj.register_introspection_functions()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="register_multicall_functions">
          <expr>obj.register_multicall_functions()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="system_listMethods">
          <expr>obj.ret = system_listMethods()</expr>
          <args>[]</args>
          <return>['sorted:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="system_methodSignature">
          <expr>obj.ret = system_methodSignature(method_name)</expr>
          <args>['method_name:None']</args>
          <return>['signatures not supported:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="system_methodHelp">
          <expr>obj.ret = system_methodHelp(method_name)</expr>
          <args>['method_name:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="system_multicall">
          <expr>obj.ret = system_multicall(call_list)</expr>
          <args>['call_list:None']</args>
          <return>['results:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="SimpleXMLRPCRequestHandler" init="">
        <api name="accept_encodings">
          <expr>obj.ret = accept_encodings()</expr>
          <args>[]</args>
          <return>['r:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_rpc_path_valid">
          <expr>obj.is_rpc_path_valid()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_POST">
          <expr>obj.do_POST()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="SimpleXMLRPCServer" init="obj = SimpleXMLRPCServer(addr,requestHandler,logRequests,allow_none,encoding,bind_and_activate,use_builtin_types)">
        <api name="__init__">
          <expr>None</expr>
          <args>['addr:NoneType', 'requestHandler:NoneType', 'logRequests:NoneType', 'allow_none:NoneType', 'encoding:NoneType', 'bind_and_activate:NoneType', 'use_builtin_types:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['SimpleXMLRPCRequestHandler', True, False, None, True, False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="MultiPathXMLRPCServer" init="obj = MultiPathXMLRPCServer(addr,requestHandler,logRequests,allow_none,encoding,bind_and_activate,use_builtin_types)">
        <api name="__init__">
          <expr>None</expr>
          <args>['addr:NoneType', 'requestHandler:NoneType', 'logRequests:NoneType', 'allow_none:NoneType', 'encoding:NoneType', 'bind_and_activate:NoneType', 'use_builtin_types:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['SimpleXMLRPCRequestHandler', True, False, None, True, False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_dispatcher">
          <expr>obj.ret = add_dispatcher(path,dispatcher)</expr>
          <args>['path:None', 'dispatcher:None']</args>
          <return>['dispatcher:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_dispatcher">
          <expr>obj.ret = get_dispatcher(path)</expr>
          <args>['path:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="CGIXMLRPCRequestHandler" init="obj = CGIXMLRPCRequestHandler(allow_none,encoding,use_builtin_types)">
        <api name="__init__">
          <expr>None</expr>
          <args>['allow_none:NoneType', 'encoding:NoneType', 'use_builtin_types:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False, None, False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="handle_request">
          <expr>obj.handle_request(request_text)</expr>
          <args>['request_text:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ServerHTMLDoc" init="">
        <api name="docroutine">
          <expr>obj.docroutine(object,name,mod,funcs,classes,methods,cl)</expr>
          <args>['object:function', 'name:str', 'mod:NoneType', 'funcs:dict', 'classes:dict', 'methods:dict', 'cl:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="docserver">
          <expr>obj.docserver(server_name,package_documentation,methods)</expr>
          <args>['server_name:str', 'package_documentation:str', 'methods:dict']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="XMLRPCDocGenerator" init="obj = XMLRPCDocGenerator()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_server_title">
          <expr>obj.set_server_title(server_title)</expr>
          <args>['server_title:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_server_name">
          <expr>obj.set_server_name(server_name)</expr>
          <args>['server_name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_server_documentation">
          <expr>obj.set_server_documentation(server_documentation)</expr>
          <args>['server_documentation:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="generate_html_documentation">
          <expr>obj.ret = generate_html_documentation()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="DocXMLRPCRequestHandler" init="">
        <api name="do_GET">
          <expr>obj.do_GET()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="DocXMLRPCServer" init="obj = DocXMLRPCServer(addr,requestHandler,logRequests,allow_none,encoding,bind_and_activate,use_builtin_types)">
        <api name="__init__">
          <expr>None</expr>
          <args>['addr:NoneType', 'requestHandler:NoneType', 'logRequests:NoneType', 'allow_none:NoneType', 'encoding:NoneType', 'bind_and_activate:NoneType', 'use_builtin_types:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['DocXMLRPCRequestHandler', True, False, None, True, False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="DocCGIXMLRPCRequestHandler" init="obj = DocCGIXMLRPCRequestHandler()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ExampleService" init="">
        <api name="getData">
          <expr>obj.ret = getData()</expr>
          <args>[]</args>
          <return>['42:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="resolve_dotted_attribute">
        <expr>resolve_dotted_attribute(obj,attr,allow_dotted_names)</expr>
        <args>['obj:ClassWithAnnotation', 'attr:str', 'allow_dotted_names:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[True]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="list_public_methods">
        <expr>list_public_methods(obj)</expr>
        <args>['obj:ClassWithAnnotation']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ImportError</exception>
        <exception>Fault</exception>
        <exception>AttributeError</exception>
        <exception>Fault</exception>
        <exception>KeyError</exception>
        <exception>AttributeError</exception>
        <exception>NotImplementedError</exception>
        <exception>Exception</exception>
        <exception>NotImplementedError</exception>
        <exception>ValueError</exception>
        <exception>ValueError</exception>
        <exception>TypeError</exception>
        <exception>AttributeError</exception>
        <exception>KeyboardInterrupt</exception>
      </errors>
    </module>
  </library>
  <library name="email">
    <module name="email.policy" imports="['re', 'sys']" importfrom="['email._policybase:Policy', 'email._policybase:Compat32', 'email._policybase:compat32', 'email.headerregistry:HeaderRegistry', 'email.contentmanager:raw_data_manager', 'email.message:EmailMessage']">
      <class name="EmailPolicy" init="obj = EmailPolicy()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="header_max_count">
          <expr>obj.header_max_count(name)</expr>
          <args>['name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="header_source_parse">
          <expr>obj.header_source_parse(sourcelines)</expr>
          <args>['sourcelines:list']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="header_store_parse">
          <expr>obj.header_store_parse(name,value)</expr>
          <args>['name:str', 'value:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="header_fetch_parse">
          <expr>obj.header_fetch_parse(name,value)</expr>
          <args>['name:str', 'value:_ContentTypeHeader']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="fold_binary">
          <expr>obj.fold_binary(name,value)</expr>
          <args>['name:str', 'value:_UniqueAddressHeader']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
    </module>
    <module name="email.message" imports="['re', 'uu', 'quopri']" importfrom="['io:BytesIO', 'io:StringIO', 'email:utils', 'email:errors', 'email._policybase:Policy', 'email._policybase:compat32', 'email:charset', 'email._encoded_words:decode_b', 'email.generator:Generator', 'email.generator:BytesGenerator']">
      <class name="Message" init="obj = Message(policy)">
        <api name="__init__">
          <expr>None</expr>
          <args>['policy:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['compat32']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_multipart">
          <expr>obj.is_multipart()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_unixfrom">
          <expr>obj.set_unixfrom(unixfrom)</expr>
          <args>['unixfrom:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_unixfrom">
          <expr>obj.get_unixfrom()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="attach">
          <expr>obj.attach(payload)</expr>
          <args>['payload:Message']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_payload">
          <expr>obj.get_payload(i,decode)</expr>
          <args>['i:NoneType', 'decode:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_payload">
          <expr>obj.set_payload(payload,charset)</expr>
          <args>['payload:str', 'charset:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_charset">
          <expr>obj.get_charset()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="keys">
          <expr>obj.keys()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="values">
          <expr>obj.values()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="items">
          <expr>obj.items()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_raw">
          <expr>obj.set_raw(name,value)</expr>
          <args>['name:str', 'value:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="raw_items">
          <expr>obj.raw_items()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_all">
          <expr>obj.get_all(name,failobj)</expr>
          <args>['name:str', 'failobj:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_content_maintype">
          <expr>obj.get_content_maintype()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_content_subtype">
          <expr>obj.get_content_subtype()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_default_type">
          <expr>obj.set_default_type(ctype)</expr>
          <args>['ctype:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_type">
          <expr>obj.set_type(type,header,requote)</expr>
          <args>['type:str', 'header:str', 'requote:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['Content-Type', True]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_filename">
          <expr>obj.get_filename(failobj)</expr>
          <args>['failobj:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_boundary">
          <expr>obj.get_boundary(failobj)</expr>
          <args>['failobj:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_boundary">
          <expr>obj.set_boundary(boundary)</expr>
          <args>['boundary:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_charsets">
          <expr>obj.get_charsets(failobj)</expr>
          <args>['failobj:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_content_disposition">
          <expr>obj.get_content_disposition()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="MIMEPart" init="obj = MIMEPart(policy)">
        <api name="__init__">
          <expr>None</expr>
          <args>['policy:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_attachment">
          <expr>obj.is_attachment()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_body">
          <expr>obj.get_body(preferencelist)</expr>
          <args>['preferencelist:tuple']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="iter_attachments">
          <expr>obj.iter_attachments()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="iter_parts">
          <expr>obj.iter_parts()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="make_related">
          <expr>obj.make_related(boundary)</expr>
          <args>['boundary:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="make_alternative">
          <expr>obj.make_alternative(boundary)</expr>
          <args>['boundary:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="make_mixed">
          <expr>obj.make_mixed(boundary)</expr>
          <args>['boundary:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_related">
          <expr>obj.add_related()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_alternative">
          <expr>obj.add_alternative()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_attachment">
          <expr>obj.add_attachment()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clear">
          <expr>obj.clear()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clear_content">
          <expr>obj.clear_content()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="EmailMessage" init=""/>
      <errors>
        <exception>UnicodeEncodeError</exception>
        <exception>AttributeError</exception>
        <exception>LookupError</exception>
        <exception>UnicodeError</exception>
        <exception>uu.Error</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>LookupError</exception>
        <exception>UnicodeError</exception>
        <exception>UnicodeError</exception>
        <exception>AttributeError</exception>
      </errors>
    </module>
    <module name="email.utils" imports="['os', 're', 'time', 'random', 'socket', 'datetime', 'urllib.parse']" importfrom="['email._parseaddr:quote', 'email._parseaddr:AddressList', 'email._parseaddr:mktime_tz', 'email._parseaddr:parsedate', 'email._parseaddr:parsedate_tz', 'email.charset:Charset']">
      <api name="formataddr">
        <expr>formataddr(pair,charset)</expr>
        <args>['pair:tuple', 'charset:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['utf-8']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getaddresses">
        <expr>getaddresses(fieldvalues)</expr>
        <args>['fieldvalues:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="formatdate">
        <expr>formatdate(timeval,localtime,usegmt)</expr>
        <args>['timeval:float', 'localtime:bool', 'usegmt:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, False, False]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="format_datetime">
        <expr>format_datetime(dt,usegmt)</expr>
        <args>['dt:datetime', 'usegmt:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[False]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="make_msgid">
        <expr>make_msgid(idstring,domain)</expr>
        <args>['idstring:NoneType', 'domain:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parsedate_to_datetime">
        <expr>parsedate_to_datetime(data)</expr>
        <args>['data:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parseaddr">
        <expr>parseaddr(addr)</expr>
        <args>['addr:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="unquote">
        <expr>unquote(str)</expr>
        <args>['str:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="decode_rfc2231">
        <expr>decode_rfc2231(s)</expr>
        <args>['s:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="encode_rfc2231">
        <expr>encode_rfc2231(s,charset,language)</expr>
        <args>['s:str', 'charset:str', 'language:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="decode_params">
        <expr>decode_params(params)</expr>
        <args>['params:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="collapse_rfc2231_value">
        <expr>collapse_rfc2231_value(value,errors,fallback_charset)</expr>
        <args>['value:str', 'errors:str', 'fallback_charset:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['replace', 'us-ascii']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="localtime">
        <expr>localtime(dt,isdst)</expr>
        <args>['dt:NoneType', 'isdst:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, 'int']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>UnicodeEncodeError</exception>
        <exception>UnicodeEncodeError</exception>
        <exception>LookupError</exception>
        <exception>AttributeError</exception>
      </errors>
    </module>
    <module name="email.charset" imports="['email.base64mime', 'email.quoprimime']" importfrom="['functools:partial', 'email:errors', 'email.encoders:encode_7or8bit']">
      <class name="Charset" init="obj = Charset(input_charset)">
        <api name="__init__">
          <expr>None</expr>
          <args>['input_charset:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['DEFAULT_CHARSET']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_body_encoding">
          <expr>obj.get_body_encoding()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="header_encode_lines">
          <expr>obj.header_encode_lines(string,maxlengths)</expr>
          <args>['string:str', 'maxlengths:generator']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="add_charset">
        <expr>add_charset(charset,header_enc,body_enc,output_charset)</expr>
        <args>['charset:str', 'header_enc:int', 'body_enc:NoneType', 'output_charset:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="add_alias">
        <expr>add_alias(alias,canonical)</expr>
        <args>['alias:None', 'canonical:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="add_codec">
        <expr>add_codec(charset,codecname)</expr>
        <args>['charset:None', 'codecname:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="email.feedparser" imports="['re']" importfrom="['email:errors', 'email._policybase:compat32', 'collections:deque', 'io:StringIO']">
      <class name="BufferedSubFile" init="obj = BufferedSubFile()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="push_eof_matcher">
          <expr>obj.push_eof_matcher(pred)</expr>
          <args>['pred:builtin_function_or_method']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pop_eof_matcher">
          <expr>obj.pop_eof_matcher()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="close">
          <expr>obj.close()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unreadline">
          <expr>obj.unreadline(line)</expr>
          <args>['line:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="push">
          <expr>obj.push(data)</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="FeedParser" init="obj = FeedParser(_factory)">
        <api name="__init__">
          <expr>None</expr>
          <args>['_factory:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['policy:NoneType']</kwoargs>
          <defa>[None]</defa>
          <kwodefa>['compat32']</kwodefa>
        </api>
        <api name="feed">
          <expr>obj.feed(data)</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="BytesFeedParser" init=""/>
      <errors>
        <exception>StopIteration</exception>
      </errors>
    </module>
    <module name="email.generator" imports="['re', 'sys', 'time', 'random']" importfrom="['copy:deepcopy', 'io:StringIO', 'io:BytesIO']">
      <class name="Generator" init="obj = Generator(outfp,mangle_from_,maxheaderlen)">
        <api name="__init__">
          <expr>None</expr>
          <args>['outfp:NoneType', 'mangle_from_:NoneType', 'maxheaderlen:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['policy:NoneType']</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
      </class>
      <class name="BytesGenerator" init=""/>
      <class name="DecodedGenerator" init="obj = DecodedGenerator(outfp,mangle_from_,maxheaderlen,fmt)">
        <api name="__init__">
          <expr>None</expr>
          <args>['outfp:NoneType', 'mangle_from_:NoneType', 'maxheaderlen:NoneType', 'fmt:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['policy:NoneType']</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
      </class>
    </module>
    <module name="email.parser" imports="[]" importfrom="['io:StringIO', 'io:TextIOWrapper', 'email.feedparser:FeedParser', 'email.feedparser:BytesFeedParser', 'email._policybase:compat32']">
      <class name="Parser" init="obj = Parser(_class)">
        <api name="__init__">
          <expr>None</expr>
          <args>['_class:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['policy:NoneType']</kwoargs>
          <defa>[None]</defa>
          <kwodefa>['compat32']</kwodefa>
        </api>
        <api name="parsestr">
          <expr>obj.parsestr(text,headersonly)</expr>
          <args>['text:str', 'headersonly:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="HeaderParser" init=""/>
      <class name="BytesParser" init="obj = BytesParser()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parsebytes">
          <expr>obj.parsebytes(text,headersonly)</expr>
          <args>['text:bytes', 'headersonly:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="BytesHeaderParser" init=""/>
    </module>
    <module name="email.encoders" imports="[]" importfrom="['base64:encodebytes', 'quopri:encodestring']">
      <api name="encode_base64">
        <expr>encode_base64(msg)</expr>
        <args>['msg:MIMEImage']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="encode_quopri">
        <expr>encode_quopri(msg)</expr>
        <args>['msg:MIMEApplication']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="encode_7or8bit">
        <expr>encode_7or8bit(msg)</expr>
        <args>['msg:MIMEText']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="encode_noop">
        <expr>encode_noop(msg)</expr>
        <args>['msg:MIMEApplication']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>UnicodeError</exception>
      </errors>
    </module>
    <module name="email.contentmanager" imports="['binascii', 'email.charset', 'email.message', 'email.errors']" importfrom="['email:quoprimime']">
      <class name="ContentManager" init="obj = ContentManager()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_get_handler">
          <expr>obj.add_get_handler(key,handler)</expr>
          <args>['key:str', 'handler:function']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_content">
          <expr>obj.get_content(msg)</expr>
          <args>['msg:EmailMessage']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_set_handler">
          <expr>obj.add_set_handler(typekey,handler)</expr>
          <args>['typekey:type', 'handler:function']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_content">
          <expr>obj.set_content(msg,obj)</expr>
          <args>['msg:EmailMessage', 'obj:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="get_text_content">
        <expr>get_text_content(msg,errors)</expr>
        <args>['msg:EmailMessage', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['replace']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_non_text_content">
        <expr>get_non_text_content(msg)</expr>
        <args>['msg:EmailMessage']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_message_content">
        <expr>get_message_content(msg)</expr>
        <args>['msg:EmailMessage']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_and_fixup_unknown_message_content">
        <expr>ret = get_and_fixup_unknown_message_content(msg)</expr>
        <args>['msg:EmailMessage']</args>
        <return>['bytes:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="set_text_content">
        <expr>set_text_content(msg,string,subtype,charset,cte,disposition,filename,cid,params,headers)</expr>
        <args>['msg:EmailMessage', 'string:str', 'subtype:str', 'charset:str', 'cte:NoneType', 'disposition:NoneType', 'filename:NoneType', 'cid:NoneType', 'params:NoneType', 'headers:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['plain', 'utf-8', None, None, None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="set_message_content">
        <expr>set_message_content(msg,message,subtype,cte,disposition,filename,cid,params,headers)</expr>
        <args>['msg:EmailMessage', 'message:EmailMessage', 'subtype:str', 'cte:NoneType', 'disposition:NoneType', 'filename:NoneType', 'cid:str', 'params:NoneType', 'headers:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['rfc822', None, None, None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="set_bytes_content">
        <expr>set_bytes_content(msg,data,maintype,subtype,cte,disposition,filename,cid,params,headers)</expr>
        <args>['msg:EmailMessage', 'data:bytes', 'maintype:str', 'subtype:str', 'cte:str', 'disposition:NoneType', 'filename:NoneType', 'cid:str', 'params:NoneType', 'headers:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['base64', None, None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>email.errors.HeaderDefect</exception>
        <exception>UnicodeDecodeError</exception>
      </errors>
    </module>
    <module name="email.base64mime" imports="[]" importfrom="['base64:b64encode', 'binascii:b2a_base64', 'binascii:a2b_base64']">
      <api name="header_length">
        <expr>header_length(bytearray)</expr>
        <args>['bytearray:bytes']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="header_encode">
        <expr>header_encode(header_bytes,charset)</expr>
        <args>['header_bytes:bytes', 'charset:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['iso-8859-1']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="body_encode">
        <expr>body_encode(s,maxlinelen,eol)</expr>
        <args>['s:bytes', 'maxlinelen:int', 'eol:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[76, 'NL']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="decode">
        <expr>decode(string)</expr>
        <args>['string:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="email.headerregistry" imports="[]" importfrom="['types:MappingProxyType', 'email:utils', 'email:errors']">
      <class name="Address" init="obj = Address(display_name,username,domain,addr_spec)">
        <api name="__init__">
          <expr>None</expr>
          <args>['display_name:NoneType', 'username:NoneType', 'domain:NoneType', 'addr_spec:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['', '', '', None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="display_name">
          <expr>obj.display_name()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="username">
          <expr>obj.username()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="domain">
          <expr>obj.domain()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="addr_spec">
          <expr>obj.addr_spec()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Group" init="obj = Group(display_name,addresses)">
        <api name="__init__">
          <expr>None</expr>
          <args>['display_name:NoneType', 'addresses:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="display_name">
          <expr>obj.display_name()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="addresses">
          <expr>obj.addresses()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="BaseHeader" init="">
        <api name="name">
          <expr>obj.ret = name()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="defects">
          <expr>obj.ret = defects()</expr>
          <args>[]</args>
          <return>['tuple:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="UnstructuredHeader" init=""/>
      <class name="UniqueUnstructuredHeader" init=""/>
      <class name="DateHeader" init="">
        <api name="datetime">
          <expr>obj.ret = datetime()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="UniqueDateHeader" init=""/>
      <class name="AddressHeader" init="">
        <api name="groups">
          <expr>obj.ret = groups()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="addresses">
          <expr>obj.ret = addresses()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="UniqueAddressHeader" init=""/>
      <class name="SingleAddressHeader" init="">
        <api name="address">
          <expr>obj.ret = address()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="UniqueSingleAddressHeader" init=""/>
      <class name="MIMEVersionHeader" init="">
        <api name="major">
          <expr>obj.ret = major()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="minor">
          <expr>obj.ret = minor()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="version">
          <expr>obj.ret = version()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ParameterizedMIMEHeader" init="">
        <api name="params">
          <expr>obj.ret = params()</expr>
          <args>[]</args>
          <return>['MappingProxyType:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ContentTypeHeader" init="">
        <api name="maintype">
          <expr>obj.ret = maintype()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="subtype">
          <expr>obj.ret = subtype()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="content_type">
          <expr>obj.ret = content_type()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ContentDispositionHeader" init="">
        <api name="content_disposition">
          <expr>obj.ret = content_disposition()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ContentTransferEncodingHeader" init="">
        <api name="cte">
          <expr>obj.ret = cte()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="MessageIDHeader" init=""/>
      <class name="HeaderRegistry" init="obj = HeaderRegistry(base_class,default_class,use_default_map)">
        <api name="__init__">
          <expr>None</expr>
          <args>['base_class:NoneType', 'default_class:NoneType', 'use_default_map:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['BaseHeader', 'UnstructuredHeader', True]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="map_to_type">
          <expr>obj.map_to_type(name,cls)</expr>
          <args>['name:str', 'cls:type']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
    </module>
    <module name="email.header" imports="['re', 'binascii', 'email.quoprimime', 'email.base64mime']" importfrom="['email.errors:HeaderParseError', 'email:charset']">
      <class name="Header" init="obj = Header(s,charset,maxlinelen,header_name,continuation_ws,errors)">
        <api name="__init__">
          <expr>None</expr>
          <args>['s:NoneType', 'charset:NoneType', 'maxlinelen:NoneType', 'header_name:NoneType', 'continuation_ws:NoneType', 'errors:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, ' ', 'strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="decode_header">
        <expr>decode_header(header)</expr>
        <args>['header:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="make_header">
        <expr>make_header(decoded_seq,maxlinelen,header_name,continuation_ws)</expr>
        <args>['decoded_seq:list', 'maxlinelen:NoneType', 'header_name:NoneType', 'continuation_ws:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, ' ']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>binascii.Error</exception>
        <exception>UnicodeEncodeError</exception>
        <exception>IndexError</exception>
        <exception>IndexError</exception>
      </errors>
    </module>
    <module name="email.iterators" imports="['sys']" importfrom="['io:StringIO']">
      <api name="walk">
        <expr>walk()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="body_line_iterator">
        <expr>body_line_iterator(msg,decode)</expr>
        <args>['msg:Message', 'decode:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[False]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="typed_subpart_iterator">
        <expr>typed_subpart_iterator(msg,maintype,subtype)</expr>
        <args>['msg:Message', 'maintype:str', 'subtype:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['text', None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="email.errors" imports="[]" importfrom="[]">
      <class name="MessageError" init=""/>
      <class name="NoBoundaryInMultipartDefect" init=""/>
      <class name="StartBoundaryNotFoundDefect" init=""/>
      <class name="CloseBoundaryNotFoundDefect" init=""/>
      <class name="FirstHeaderLineIsContinuationDefect" init=""/>
      <class name="MisplacedEnvelopeHeaderDefect" init=""/>
      <class name="MissingHeaderBodySeparatorDefect" init=""/>
      <class name="MultipartInvariantViolationDefect" init=""/>
      <class name="InvalidMultipartContentTransferEncodingDefect" init=""/>
      <class name="UndecodableBytesDefect" init=""/>
      <class name="InvalidBase64PaddingDefect" init=""/>
      <class name="InvalidBase64CharactersDefect" init=""/>
      <class name="InvalidBase64LengthDefect" init=""/>
      <class name="HeaderDefect" init="obj = HeaderDefect()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="InvalidHeaderDefect" init=""/>
      <class name="HeaderMissingRequiredValue" init=""/>
      <class name="NonPrintableDefect" init="obj = NonPrintableDefect(non_printables)">
        <api name="__init__">
          <expr>None</expr>
          <args>['non_printables:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ObsoleteHeaderDefect" init=""/>
      <class name="NonASCIILocalPartDefect" init=""/>
      <errors>
        <exception>emailemail.errors.MessageParseError</exception>
        <exception>emailemail.errors.HeaderParseError</exception>
        <exception>emailemail.errors.BoundaryError</exception>
        <exception>emailemail.errors.MultipartConversionError</exception>
        <exception>emailemail.errors.CharsetError</exception>
        <exception>emailemail.errors.MessageDefect</exception>
      </errors>
    </module>
    <module name="email.quoprimime" imports="['re']" importfrom="['string:ascii_letters', 'string:digits', 'string:hexdigits']">
      <api name="header_check">
        <expr>header_check(octet)</expr>
        <args>['octet:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="body_check">
        <expr>body_check(octet)</expr>
        <args>['octet:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="header_length">
        <expr>header_length(bytearray)</expr>
        <args>['bytearray:bytes']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="body_length">
        <expr>body_length(bytearray)</expr>
        <args>['bytearray:bytes']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="unquote">
        <expr>unquote(s)</expr>
        <args>['s:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="quote">
        <expr>quote(c)</expr>
        <args>['c:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="header_encode">
        <expr>header_encode(header_bytes,charset)</expr>
        <args>['header_bytes:bytes', 'charset:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['iso-8859-1']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="body_encode">
        <expr>body_encode(body,maxlinelen,eol)</expr>
        <args>['body:str', 'maxlinelen:int', 'eol:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[76, 'NL']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="decode">
        <expr>decode(encoded,eol)</expr>
        <args>['encoded:str', 'eol:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['NL']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="header_decode">
        <expr>header_decode(s)</expr>
        <args>['s:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="email.mime.nonmultipart" imports="[]" importfrom="['email:errors', 'email.mime.base:MIMEBase']">
      <class name="MIMENonMultipart" init="">
        <api name="attach">
          <expr>obj.attach(payload)</expr>
          <args>['payload:Message']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
    </module>
    <module name="email.mime.message" imports="[]" importfrom="['email:message', 'email.mime.nonmultipart:MIMENonMultipart']">
      <class name="MIMEMessage" init="obj = MIMEMessage(_msg,_subtype)">
        <api name="__init__">
          <expr>None</expr>
          <args>['_msg:NoneType', '_subtype:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['policy:NoneType']</kwoargs>
          <defa>['rfc822']</defa>
          <kwodefa>[None]</kwodefa>
        </api>
      </class>
    </module>
    <module name="email.mime.text" imports="[]" importfrom="['email.charset:Charset', 'email.mime.nonmultipart:MIMENonMultipart']">
      <class name="MIMEText" init="obj = MIMEText(_text,_subtype,_charset)">
        <api name="__init__">
          <expr>None</expr>
          <args>['_text:NoneType', '_subtype:NoneType', '_charset:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['policy:NoneType']</kwoargs>
          <defa>['plain', None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
      </class>
    </module>
    <module name="email.mime.application" imports="[]" importfrom="['email:encoders', 'email.mime.nonmultipart:MIMENonMultipart']">
      <class name="MIMEApplication" init="obj = MIMEApplication(_data,_subtype,_encoder)">
        <api name="__init__">
          <expr>None</expr>
          <args>['_data:NoneType', '_subtype:NoneType', '_encoder:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['policy:NoneType']</kwoargs>
          <defa>['octet-stream', None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
      </class>
    </module>
    <module name="email.mime.base" imports="['email.policy']" importfrom="['email:message']">
      <class name="MIMEBase" init="obj = MIMEBase(_maintype,_subtype)">
        <api name="__init__">
          <expr>None</expr>
          <args>['_maintype:NoneType', '_subtype:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['policy:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
      </class>
    </module>
    <module name="email.mime.audio" imports="['sndhdr']" importfrom="['io:BytesIO', 'email:encoders', 'email.mime.nonmultipart:MIMENonMultipart']">
      <class name="MIMEAudio" init="obj = MIMEAudio(_audiodata,_subtype,_encoder)">
        <api name="__init__">
          <expr>None</expr>
          <args>['_audiodata:NoneType', '_subtype:NoneType', '_encoder:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['policy:NoneType']</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
      </class>
    </module>
    <module name="email.mime.image" imports="['imghdr']" importfrom="['email:encoders', 'email.mime.nonmultipart:MIMENonMultipart']">
      <class name="MIMEImage" init="obj = MIMEImage(_imagedata,_subtype,_encoder)">
        <api name="__init__">
          <expr>None</expr>
          <args>['_imagedata:NoneType', '_subtype:NoneType', '_encoder:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['policy:NoneType']</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
      </class>
    </module>
    <module name="email.mime.multipart" imports="[]" importfrom="['email.mime.base:MIMEBase']">
      <class name="MIMEMultipart" init="obj = MIMEMultipart(_subtype,boundary,_subparts)">
        <api name="__init__">
          <expr>None</expr>
          <args>['_subtype:NoneType', 'boundary:NoneType', '_subparts:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['policy:NoneType']</kwoargs>
          <defa>['mixed', None, None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
      </class>
    </module>
  </library>
  <library name="dbm">
    <module name="dbm.dumb" imports="['ast', 'io', 'os', 'collections.abc']" importfrom="[]">
      <api name="open">
        <expr>open(file,flag,mode)</expr>
        <args>['file:str', 'flag:str', 'mode:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['c', 438]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>TypeError</exception>
        <exception>TypeError</exception>
        <exception>TypeError</exception>
        <exception>AttributeError</exception>
      </errors>
    </module>
  </library>
  <library name="venv"/>
  <library name="wsgiref">
    <module name="wsgiref.handlers" imports="['sys', 'os', 'time']" importfrom="['util:FileWrapper', 'util:guess_scheme', 'util:is_hop_by_hop', 'headers:Headers', 'traceback:print_exception', 'warnings:warn']">
      <class name="BaseHandler" init="">
        <api name="run">
          <expr>obj.run(application)</expr>
          <args>['application:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sendfile">
          <expr>obj.ret = sendfile()</expr>
          <args>[]</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="result_is_file">
          <expr>obj.ret = result_is_file()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="client_is_modern">
          <expr>obj.ret = client_is_modern()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="handle_error">
          <expr>obj.handle_error()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="SimpleHandler" init="obj = SimpleHandler(stdin,stdout,stderr,environ,multithread,multiprocess)">
        <api name="__init__">
          <expr>None</expr>
          <args>['stdin:NoneType', 'stdout:NoneType', 'stderr:NoneType', 'environ:NoneType', 'multithread:NoneType', 'multiprocess:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[True, False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="BaseCGIHandler" init=""/>
      <class name="CGIHandler" init="obj = CGIHandler()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IISCGIHandler" init="obj = IISCGIHandler()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="format_date_time">
        <expr>format_date_time(timestamp)</expr>
        <args>['timestamp:float']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_environ">
        <expr>read_environ()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>LookupError</exception>
        <exception>ConnectionAbortedError</exception>
        <exception>BrokenPipeError</exception>
        <exception>ConnectionResetError</exception>
        <exception>TypeError</exception>
        <exception>AttributeError</exception>
        <exception>NotImplementedError</exception>
      </errors>
    </module>
    <module name="wsgiref.validate" imports="['re', 'sys', 'warnings']" importfrom="[]">
      <class name="WSGIWarning" init=""/>
      <class name="InputWrapper" init="obj = InputWrapper(wsgi_input)">
        <api name="__init__">
          <expr>None</expr>
          <args>['wsgi_input:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="close">
          <expr>obj.close()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ErrorWrapper" init="obj = ErrorWrapper(wsgi_errors)">
        <api name="__init__">
          <expr>None</expr>
          <args>['wsgi_errors:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="writelines">
          <expr>obj.writelines(seq)</expr>
          <args>['seq:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="close">
          <expr>obj.close()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="WriteWrapper" init="obj = WriteWrapper(wsgi_writer)">
        <api name="__init__">
          <expr>None</expr>
          <args>['wsgi_writer:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="PartialIteratorWrapper" init="obj = PartialIteratorWrapper(wsgi_iterator)">
        <api name="__init__">
          <expr>None</expr>
          <args>['wsgi_iterator:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IteratorWrapper" init="obj = IteratorWrapper(wsgi_iterator,check_start_response)">
        <api name="__init__">
          <expr>None</expr>
          <args>['wsgi_iterator:NoneType', 'check_start_response:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="assert_">
        <expr>assert_(cond)</expr>
        <args>['cond:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="check_string_type">
        <expr>check_string_type(value,title)</expr>
        <args>['value:str', 'title:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="validator">
        <expr>validator(application)</expr>
        <args>['application:function']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="check_environ">
        <expr>check_environ(environ)</expr>
        <args>['environ:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="check_input">
        <expr>check_input(wsgi_input)</expr>
        <args>['wsgi_input:BufferedReader']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="check_errors">
        <expr>check_errors(wsgi_errors)</expr>
        <args>['wsgi_errors:StringIO']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="check_status">
        <expr>check_status(status)</expr>
        <args>['status:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="check_headers">
        <expr>check_headers(headers)</expr>
        <args>['headers:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="check_content_type">
        <expr>check_content_type(status,headers)</expr>
        <args>['status:str', 'headers:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="check_exc_info">
        <expr>check_exc_info(exc_info)</expr>
        <args>['exc_info:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="check_iterator">
        <expr>check_iterator(iterator)</expr>
        <args>['iterator:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="wsgiref.simple_server" imports="['sys', 'urllib.parse', 'webbrowser']" importfrom="['http.server:BaseHTTPRequestHandler', 'http.server:HTTPServer', 'wsgiref.handlers:SimpleHandler', 'platform:python_implementation', 'io:StringIO']">
      <class name="ServerHandler" init=""/>
      <class name="WSGIServer" init="">
        <api name="get_app">
          <expr>obj.ret = get_app()</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_app">
          <expr>obj.set_app(application)</expr>
          <args>['application:function']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="WSGIRequestHandler" init="">
        <api name="get_environ">
          <expr>obj.ret = get_environ()</expr>
          <args>[]</args>
          <return>['env:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_stderr">
          <expr>obj.ret = get_stderr()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="handle">
          <expr>obj.handle()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="demo_app">
        <expr>ret = demo_app(environ,start_response)</expr>
        <args>['environ:None', 'start_response:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="make_server">
        <expr>make_server(host,port,app,server_class,handler_class)</expr>
        <args>['host:str', 'port:int', 'app:function', 'server_class:type', 'handler_class:type']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['WSGIServer', 'WSGIRequestHandler']</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="wsgiref.headers" imports="['re']" importfrom="[]">
      <class name="Headers" init="obj = Headers(headers)">
        <api name="__init__">
          <expr>None</expr>
          <args>['headers:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_all">
          <expr>obj.get_all(name)</expr>
          <args>['name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="keys">
          <expr>obj.ret = keys()</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="values">
          <expr>obj.ret = values()</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="items">
          <expr>obj.items()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setdefault">
          <expr>obj.setdefault(name,value)</expr>
          <args>['name:str', 'value:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_header">
          <expr>obj.add_header(_name,_value)</expr>
          <args>['_name:str', '_value:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
    </module>
    <module name="wsgiref.util" imports="['posixpath', 'warnings']" importfrom="['urllib.parse:quote', 'io:StringIO', 'io:BytesIO']">
      <class name="FileWrapper" init="obj = FileWrapper(filelike,blksize)">
        <api name="__init__">
          <expr>None</expr>
          <args>['filelike:NoneType', 'blksize:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[8192]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="guess_scheme">
        <expr>guess_scheme(environ)</expr>
        <args>['environ:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="application_uri">
        <expr>application_uri(environ)</expr>
        <args>['environ:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="request_uri">
        <expr>request_uri(environ,include_query)</expr>
        <args>['environ:dict', 'include_query:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[True]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="shift_path_info">
        <expr>shift_path_info(environ)</expr>
        <args>['environ:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="setup_testing_defaults">
        <expr>setup_testing_defaults(environ)</expr>
        <args>['environ:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="is_hop_by_hop">
        <expr>is_hop_by_hop(header_name)</expr>
        <args>['header_name:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
  </library>
  <library name="zoneinfo"/>
  <library name="http">
    <module name="http.client" imports="['email.parser', 'email.message', 'errno', 'http', 'io', 're', 'socket', 'collections.abc', 'ssl']" importfrom="['urllib.parse:urlsplit']">
      <class name="HTTPMessage" init="">
        <api name="getallmatchingheaders">
          <expr>obj.ret = getallmatchingheaders(name)</expr>
          <args>['name:None']</args>
          <return>['lst:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="HTTPResponse" init="obj = HTTPResponse(sock,debuglevel,method,url)">
        <api name="__init__">
          <expr>None</expr>
          <args>['sock:NoneType', 'debuglevel:NoneType', 'method:NoneType', 'url:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[0, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="begin">
          <expr>obj.begin()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="readable">
          <expr>obj.ret = readable()</expr>
          <args>[]</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isclosed">
          <expr>obj.isclosed()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getheader">
          <expr>obj.getheader(name,default)</expr>
          <args>['name:str', 'default:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getheaders">
          <expr>obj.getheaders()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info">
          <expr>obj.info()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="geturl">
          <expr>obj.geturl()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getcode">
          <expr>obj.ret = getcode()</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="HTTPConnection" init="obj = HTTPConnection(host,port,timeout,source_address,blocksize)">
        <api name="__init__">
          <expr>None</expr>
          <args>['host:NoneType', 'port:NoneType', 'timeout:NoneType', 'source_address:NoneType', 'blocksize:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, 8192]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_tunnel">
          <expr>obj.set_tunnel(host,port,headers)</expr>
          <args>['host:str', 'port:NoneType', 'headers:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_debuglevel">
          <expr>obj.set_debuglevel(level)</expr>
          <args>['level:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="request">
          <expr>obj.request(method,url,body,headers)</expr>
          <args>['method:str', 'url:str', 'body:NoneType', 'headers:dict']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['encode_chunked:bool']</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[False]</kwodefa>
        </api>
        <api name="getresponse">
          <expr>obj.getresponse()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="HTTPSConnection" init="obj = HTTPSConnection(host,port,key_file,cert_file,timeout,source_address)">
        <api name="__init__">
          <expr>None</expr>
          <args>['host:NoneType', 'port:NoneType', 'key_file:NoneType', 'cert_file:NoneType', 'timeout:NoneType', 'source_address:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['context:NoneType', 'check_hostname:NoneType', 'blocksize:NoneType']</kwoargs>
          <defa>[None, None, None, None, None]</defa>
          <kwodefa>[None, None, 8192]</kwodefa>
        </api>
      </class>
      <class name="HTTPException" init=""/>
      <class name="NotConnected" init=""/>
      <class name="InvalidURL" init=""/>
      <class name="UnknownProtocol" init="obj = UnknownProtocol(version)">
        <api name="__init__">
          <expr>None</expr>
          <args>['version:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="UnknownTransferEncoding" init=""/>
      <class name="UnimplementedFileMode" init=""/>
      <class name="IncompleteRead" init="obj = IncompleteRead(partial,expected)">
        <api name="__init__">
          <expr>None</expr>
          <args>['partial:NoneType', 'expected:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ImproperConnectionState" init=""/>
      <class name="CannotSendRequest" init=""/>
      <class name="CannotSendHeader" init=""/>
      <class name="ResponseNotReady" init=""/>
      <class name="BadStatusLine" init="obj = BadStatusLine(line)">
        <api name="__init__">
          <expr>None</expr>
          <args>['line:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="LineTooLong" init="obj = LineTooLong(line_type)">
        <api name="__init__">
          <expr>None</expr>
          <args>['line_type:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="parse_headers">
        <expr>parse_headers(fp,_class)</expr>
        <args>['fp:BufferedReader', '_class:type']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['HTTPMessage']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>UnicodeEncodeError</exception>
        <exception>ValueError</exception>
        <exception>ValueError</exception>
        <exception>ValueError</exception>
        <exception>IncompleteRead</exception>
        <exception>ValueError</exception>
        <exception>ValueError</exception>
        <exception>IncompleteRead</exception>
        <exception>IncompleteRead</exception>
        <exception>IncompleteRead</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>TypeError</exception>
        <exception>UnicodeEncodeError</exception>
        <exception>UnicodeEncodeError</exception>
        <exception>ConnectionError</exception>
        <exception>ImportError</exception>
        <exception>httphttp.client.RemoteDisconnected</exception>
      </errors>
    </module>
    <module name="http.server" imports="['copy', 'datetime', 'email.utils', 'html', 'http.client', 'io', 'mimetypes', 'os', 'posixpath', 'select', 'shutil', 'socket', 'socketserver', 'sys', 'time', 'urllib.parse', 'pwd', 'base64', 'binascii', 'subprocess', 'argparse', 'contextlib']" importfrom="['http:HTTPStatus']">
      <class name="HTTPServer" init=""/>
      <class name="ThreadingHTTPServer" init=""/>
      <class name="BaseHTTPRequestHandler" init="">
        <api name="parse_request">
          <expr>obj.ret = parse_request()</expr>
          <args>[]</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="handle_expect_100">
          <expr>obj.ret = handle_expect_100()</expr>
          <args>[]</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="handle">
          <expr>obj.handle()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="version_string">
          <expr>obj.ret = version_string()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="date_time_string">
          <expr>obj.ret = date_time_string(timestamp)</expr>
          <args>['timestamp:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="log_date_time_string">
          <expr>obj.ret = log_date_time_string()</expr>
          <args>[]</args>
          <return>['s:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="address_string">
          <expr>obj.ret = address_string()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="SimpleHTTPRequestHandler" init="obj = SimpleHTTPRequestHandler()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['directory:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="do_GET">
          <expr>obj.do_GET()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_HEAD">
          <expr>obj.do_HEAD()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="list_directory">
          <expr>obj.ret = list_directory(path)</expr>
          <args>['path:None']</args>
          <return>['f:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="CGIHTTPRequestHandler" init="">
        <api name="do_POST">
          <expr>obj.do_POST()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_cgi">
          <expr>obj.ret = is_cgi()</expr>
          <args>[]</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_executable">
          <expr>obj.ret = is_executable(path)</expr>
          <args>['path:None']</args>
          <return>['executable:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="DualStackServer" init="">
        <api name="finish_request">
          <expr>obj.finish_request(request,client_address)</expr>
          <args>['request:None', 'client_address:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="nobody_uid">
        <expr>ret = nobody_uid()</expr>
        <args>[]</args>
        <return>['nobody:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="executable">
        <expr>ret = executable(path)</expr>
        <args>['path:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ValueError</exception>
        <exception>IndexError</exception>
        <exception>http.client.LineTooLong</exception>
        <exception>http.client.HTTPException</exception>
        <exception>socket.timeout</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>IndexError</exception>
        <exception>OverflowError</exception>
        <exception>ValueError</exception>
        <exception>OSError</exception>
        <exception>UnicodeDecodeError</exception>
        <exception>UnicodeDecodeError</exception>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
        <exception>UnicodeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module name="http.cookiejar" imports="['os', 'copy', 'datetime', 're', 'time', 'urllib.parse', 'urllib.request', 'threading', 'http.client', 'logging', 'io', 'warnings', 'traceback']" importfrom="['calendar:timegm']">
      <class name="Cookie" init="obj = Cookie(version,name,value,port,port_specified,domain,domain_specified,domain_initial_dot,path,path_specified,secure,expires,discard,comment,comment_url,rest,rfc2109)">
        <api name="__init__">
          <expr>None</expr>
          <args>['version:NoneType', 'name:NoneType', 'value:NoneType', 'port:NoneType', 'port_specified:NoneType', 'domain:NoneType', 'domain_specified:NoneType', 'domain_initial_dot:NoneType', 'path:NoneType', 'path_specified:NoneType', 'secure:NoneType', 'expires:NoneType', 'discard:NoneType', 'comment:NoneType', 'comment_url:NoneType', 'rest:NoneType', 'rfc2109:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_nonstandard_attr">
          <expr>obj.has_nonstandard_attr(name)</expr>
          <args>['name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_nonstandard_attr">
          <expr>obj.ret = get_nonstandard_attr(name,default)</expr>
          <args>['name:None', 'default:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_nonstandard_attr">
          <expr>obj.set_nonstandard_attr(name,value)</expr>
          <args>['name:None', 'value:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_expired">
          <expr>obj.is_expired(now)</expr>
          <args>['now:float']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="CookiePolicy" init="">
        <api name="set_ok">
          <expr>obj.set_ok(cookie,request)</expr>
          <args>['cookie:None', 'request:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="return_ok">
          <expr>obj.return_ok(cookie,request)</expr>
          <args>['cookie:None', 'request:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="domain_return_ok">
          <expr>obj.ret = domain_return_ok(domain,request)</expr>
          <args>['domain:None', 'request:None']</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="path_return_ok">
          <expr>obj.ret = path_return_ok(path,request)</expr>
          <args>['path:None', 'request:None']</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="DefaultCookiePolicy" init="obj = DefaultCookiePolicy(blocked_domains,allowed_domains,netscape,rfc2965,rfc2109_as_netscape,hide_cookie2,strict_domain,strict_rfc2965_unverifiable,strict_ns_unverifiable,strict_ns_domain,strict_ns_set_initial_dollar,strict_ns_set_path,secure_protocols)">
        <api name="__init__">
          <expr>None</expr>
          <args>['blocked_domains:NoneType', 'allowed_domains:NoneType', 'netscape:NoneType', 'rfc2965:NoneType', 'rfc2109_as_netscape:NoneType', 'hide_cookie2:NoneType', 'strict_domain:NoneType', 'strict_rfc2965_unverifiable:NoneType', 'strict_ns_unverifiable:NoneType', 'strict_ns_domain:NoneType', 'strict_ns_set_initial_dollar:NoneType', 'strict_ns_set_path:NoneType', 'secure_protocols:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, True, False, None, False, False, True, False, 'DomainLiberal', False, False, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="blocked_domains">
          <expr>obj.ret = blocked_domains()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_blocked_domains">
          <expr>obj.set_blocked_domains(blocked_domains)</expr>
          <args>['blocked_domains:list']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_blocked">
          <expr>obj.is_blocked(domain)</expr>
          <args>['domain:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="allowed_domains">
          <expr>obj.ret = allowed_domains()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_allowed_domains">
          <expr>obj.set_allowed_domains(allowed_domains)</expr>
          <args>['allowed_domains:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_not_allowed">
          <expr>obj.is_not_allowed(domain)</expr>
          <args>['domain:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_ok">
          <expr>obj.set_ok(cookie,request)</expr>
          <args>['cookie:Cookie', 'request:Request']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_ok_version">
          <expr>obj.set_ok_version(cookie,request)</expr>
          <args>['cookie:Cookie', 'request:Request']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_ok_verifiability">
          <expr>obj.set_ok_verifiability(cookie,request)</expr>
          <args>['cookie:Cookie', 'request:Request']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_ok_name">
          <expr>obj.set_ok_name(cookie,request)</expr>
          <args>['cookie:Cookie', 'request:Request']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_ok_path">
          <expr>obj.set_ok_path(cookie,request)</expr>
          <args>['cookie:Cookie', 'request:Request']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_ok_domain">
          <expr>obj.set_ok_domain(cookie,request)</expr>
          <args>['cookie:Cookie', 'request:Request']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_ok_port">
          <expr>obj.set_ok_port(cookie,request)</expr>
          <args>['cookie:Cookie', 'request:Request']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="return_ok">
          <expr>obj.return_ok(cookie,request)</expr>
          <args>['cookie:Cookie', 'request:Request']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="return_ok_version">
          <expr>obj.return_ok_version(cookie,request)</expr>
          <args>['cookie:Cookie', 'request:Request']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="return_ok_verifiability">
          <expr>obj.return_ok_verifiability(cookie,request)</expr>
          <args>['cookie:Cookie', 'request:Request']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="return_ok_secure">
          <expr>obj.return_ok_secure(cookie,request)</expr>
          <args>['cookie:Cookie', 'request:Request']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="return_ok_expires">
          <expr>obj.return_ok_expires(cookie,request)</expr>
          <args>['cookie:Cookie', 'request:Request']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="return_ok_port">
          <expr>obj.return_ok_port(cookie,request)</expr>
          <args>['cookie:Cookie', 'request:Request']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="return_ok_domain">
          <expr>obj.return_ok_domain(cookie,request)</expr>
          <args>['cookie:Cookie', 'request:Request']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="domain_return_ok">
          <expr>obj.domain_return_ok(domain,request)</expr>
          <args>['domain:str', 'request:Request']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="path_return_ok">
          <expr>obj.path_return_ok(path,request)</expr>
          <args>['path:str', 'request:Request']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Absent" init=""/>
      <class name="CookieJar" init="obj = CookieJar(policy)">
        <api name="__init__">
          <expr>None</expr>
          <args>['policy:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_policy">
          <expr>obj.set_policy(policy)</expr>
          <args>['policy:DefaultCookiePolicy']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_cookie_header">
          <expr>obj.add_cookie_header(request)</expr>
          <args>['request:Request']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="make_cookies">
          <expr>obj.make_cookies(response,request)</expr>
          <args>['response:FakeResponse', 'request:Request']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_cookie_if_ok">
          <expr>obj.set_cookie_if_ok(cookie,request)</expr>
          <args>['cookie:None', 'request:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="extract_cookies">
          <expr>obj.extract_cookies(response,request)</expr>
          <args>['response:FakeResponse', 'request:Request']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clear_session_cookies">
          <expr>obj.clear_session_cookies()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="FileCookieJar" init="obj = FileCookieJar(filename,delayload,policy)">
        <api name="__init__">
          <expr>None</expr>
          <args>['filename:NoneType', 'delayload:NoneType', 'policy:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, False, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="save">
          <expr>obj.save(filename,ignore_discard,ignore_expires)</expr>
          <args>['filename:None', 'ignore_discard:None', 'ignore_expires:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, False, False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="revert">
          <expr>obj.revert(filename,ignore_discard,ignore_expires)</expr>
          <args>['filename:None', 'ignore_discard:None', 'ignore_expires:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, False, False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="LWPCookieJar" init="">
        <api name="as_lwp_str">
          <expr>obj.as_lwp_str(ignore_discard,ignore_expires)</expr>
          <args>['ignore_discard:bool', 'ignore_expires:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[True, True]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="save">
          <expr>obj.save(filename,ignore_discard,ignore_expires)</expr>
          <args>['filename:str', 'ignore_discard:bool', 'ignore_expires:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, False, False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="MozillaCookieJar" init="">
        <api name="save">
          <expr>obj.save(filename,ignore_discard,ignore_expires)</expr>
          <args>['filename:NoneType', 'ignore_discard:bool', 'ignore_expires:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, False, False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="time2isoz">
        <expr>time2isoz(t)</expr>
        <args>['t:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="time2netscape">
        <expr>time2netscape(t)</expr>
        <args>['t:float']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="offset_from_tz_string">
        <expr>offset_from_tz_string(tz)</expr>
        <args>['tz:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="http2time">
        <expr>http2time(text)</expr>
        <args>['text:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="iso2time">
        <expr>iso2time(text)</expr>
        <args>['text:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="unmatched">
        <expr>unmatched(match)</expr>
        <args>['match:Match']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="split_header_words">
        <expr>split_header_words(header_values)</expr>
        <args>['header_values:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="join_header_words">
        <expr>join_header_words(lists)</expr>
        <args>['lists:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="strip_quotes">
        <expr>strip_quotes(text)</expr>
        <args>['text:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parse_ns_headers">
        <expr>parse_ns_headers(ns_headers)</expr>
        <args>['ns_headers:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="is_HDN">
        <expr>is_HDN(text)</expr>
        <args>['text:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="domain_match">
        <expr>domain_match(A,B)</expr>
        <args>['A:str', 'B:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="liberal_is_HDN">
        <expr>liberal_is_HDN(text)</expr>
        <args>['text:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="user_domain_match">
        <expr>user_domain_match(A,B)</expr>
        <args>['A:str', 'B:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="request_host">
        <expr>request_host(request)</expr>
        <args>['request:Request']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="eff_request_host">
        <expr>eff_request_host(request)</expr>
        <args>['request:Request']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="request_path">
        <expr>request_path(request)</expr>
        <args>['request:Request']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="request_port">
        <expr>request_port(request)</expr>
        <args>['request:Request']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="uppercase_escaped_char">
        <expr>uppercase_escaped_char(match)</expr>
        <args>['match:Match']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="escape_path">
        <expr>escape_path(path)</expr>
        <args>['path:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="reach">
        <expr>reach(h)</expr>
        <args>['h:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="is_third_party">
        <expr>ret = is_third_party(request)</expr>
        <args>['request:None']</args>
        <return>['ret:bool']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="vals_sorted_by_key">
        <expr>vals_sorted_by_key(adict)</expr>
        <args>['adict:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="deepvalues">
        <expr>deepvalues(mapping)</expr>
        <args>['mapping:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="lwp_cookie_str">
        <expr>lwp_cookie_str(cookie)</expr>
        <args>['cookie:Cookie']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ValueError</exception>
        <exception>ValueError</exception>
        <exception>ValueError</exception>
        <exception>AttributeError</exception>
        <exception>ValueError</exception>
        <exception>ValueError</exception>
        <exception>KeyError</exception>
        <exception>Exception</exception>
        <exception>Exception</exception>
        <exception>httphttp.cookiejar.LoadError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>Exception</exception>
        <exception>OSError</exception>
        <exception>Exception</exception>
      </errors>
    </module>
    <module name="http.cookies" imports="['re', 'string', 'types']" importfrom="['time:gmtime', 'time:time']">
      <class name="CookieError" init=""/>
      <class name="Morsel" init="obj = Morsel()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="key">
          <expr>obj.key()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="value">
          <expr>obj.value()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="coded_value">
          <expr>obj.coded_value()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="copy">
          <expr>obj.ret = copy()</expr>
          <args>[]</args>
          <return>['morsel:Morsel']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isReservedKey">
          <expr>obj.isReservedKey(K)</expr>
          <args>['K:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set">
          <expr>obj.set(key,val,coded_val)</expr>
          <args>['key:str', 'val:str', 'coded_val:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="output">
          <expr>obj.output(attrs,header)</expr>
          <args>['attrs:NoneType', 'header:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, 'Set-Cookie:']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="js_output">
          <expr>obj.js_output(attrs)</expr>
          <args>['attrs:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="OutputString">
          <expr>obj.OutputString(attrs)</expr>
          <args>['attrs:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="BaseCookie" init="obj = BaseCookie(input)">
        <api name="value_decode">
          <expr>obj.value_decode(val)</expr>
          <args>['val:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="__init__">
          <expr>None</expr>
          <args>['input:builtin_function_or_method']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="output">
          <expr>obj.ret = output(attrs,header,sep)</expr>
          <args>['attrs:None', 'header:None', 'sep:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, 'Set-Cookie:', '\r\n']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="js_output">
          <expr>obj.ret = js_output(attrs)</expr>
          <args>['attrs:None']</args>
          <return>['_nulljoin:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="load">
          <expr>obj.load(rawdata)</expr>
          <args>['rawdata:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="SimpleCookie" init="">
        <api name="value_decode">
          <expr>obj.value_decode(val)</expr>
          <args>['val:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
    </module>
  </library>
  <library name="encodings">
    <module name="encodings.iso8859_14" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.cp858" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.cp1026" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:int', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.utf_16_be" imports="['codecs']" importfrom="[]">
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init=""/>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="decode">
        <expr>decode(input,errors)</expr>
        <args>['input:int', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['strict']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.aliases" imports="[]" importfrom="[]"/>
    <module name="encodings.cp850" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.cp1255" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.euc_jisx0213" imports="['codecs']" importfrom="[]">
      <class name="Codec" init=""/>
      <class name="IncrementalEncoder" init=""/>
      <class name="IncrementalDecoder" init=""/>
      <class name="StreamReader" init=""/>
      <class name="StreamWriter" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.mac_latin2" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.hp_roman8" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:int', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>ret = getregentry()</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.mac_arabic" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.ret = encode(input,errors)</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.ret = decode(input,errors)</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.ret = encode(input,final)</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.ret = decode(input,final)</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>ret = getregentry()</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.cp273" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.ret = encode(input,final)</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.ret = decode(input,final)</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>ret = getregentry()</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.idna" imports="['stringprep', 're', 'codecs']" importfrom="['unicodedata:ucd_3_2_0']">
      <class name="Codec" init=""/>
      <class name="IncrementalEncoder" init=""/>
      <class name="IncrementalDecoder" init=""/>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="nameprep">
        <expr>nameprep(label)</expr>
        <args>['label:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ToASCII">
        <expr>ToASCII(label)</expr>
        <args>['label:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ToUnicode">
        <expr>ToUnicode(label)</expr>
        <args>['label:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>UnicodeError</exception>
        <exception>UnicodeError</exception>
        <exception>UnicodeError</exception>
        <exception>UnicodeError</exception>
        <exception>UnicodeEncodeError</exception>
        <exception>UnicodeDecodeError</exception>
      </errors>
    </module>
    <module name="encodings.cp1252" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.iso8859_9" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.cp869" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.iso2022_jp_1" imports="['codecs']" importfrom="[]">
      <class name="Codec" init=""/>
      <class name="IncrementalEncoder" init=""/>
      <class name="IncrementalDecoder" init=""/>
      <class name="StreamReader" init=""/>
      <class name="StreamWriter" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.gbk" imports="['codecs']" importfrom="[]">
      <class name="Codec" init=""/>
      <class name="IncrementalEncoder" init=""/>
      <class name="IncrementalDecoder" init=""/>
      <class name="StreamReader" init=""/>
      <class name="StreamWriter" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.mac_turkish" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.iso2022_jp_3" imports="['codecs']" importfrom="[]">
      <class name="Codec" init=""/>
      <class name="IncrementalEncoder" init=""/>
      <class name="IncrementalDecoder" init=""/>
      <class name="StreamReader" init=""/>
      <class name="StreamWriter" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.gb18030" imports="['codecs']" importfrom="[]">
      <class name="Codec" init=""/>
      <class name="IncrementalEncoder" init=""/>
      <class name="IncrementalDecoder" init=""/>
      <class name="StreamReader" init=""/>
      <class name="StreamWriter" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.zlib_codec" imports="['codecs', 'zlib']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.ret = encode(input,errors)</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['zlib_encode:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.ret = decode(input,errors)</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['zlib_decode:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="obj = IncrementalEncoder(errors)">
        <api name="__init__">
          <expr>None</expr>
          <args>['errors:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="encode">
          <expr>obj.ret = encode(input,final)</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="reset">
          <expr>obj.reset()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="obj = IncrementalDecoder(errors)">
        <api name="__init__">
          <expr>None</expr>
          <args>['errors:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.ret = decode(input,final)</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="reset">
          <expr>obj.reset()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="zlib_encode">
        <expr>zlib_encode(input,errors)</expr>
        <args>['input:bytes', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['strict']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="zlib_decode">
        <expr>zlib_decode(input,errors)</expr>
        <args>['input:bytes', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['strict']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.mac_greek" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.bz2_codec" imports="['codecs', 'bz2']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.ret = encode(input,errors)</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['bz2_encode:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.ret = decode(input,errors)</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['bz2_decode:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="obj = IncrementalEncoder(errors)">
        <api name="__init__">
          <expr>None</expr>
          <args>['errors:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="encode">
          <expr>obj.ret = encode(input,final)</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="reset">
          <expr>obj.reset()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="obj = IncrementalDecoder(errors)">
        <api name="__init__">
          <expr>None</expr>
          <args>['errors:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.ret = decode(input,final)</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="reset">
          <expr>obj.reset()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="bz2_encode">
        <expr>bz2_encode(input,errors)</expr>
        <args>['input:bytes', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['strict']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="bz2_decode">
        <expr>bz2_decode(input,errors)</expr>
        <args>['input:bytes', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['strict']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>EOFError</exception>
      </errors>
    </module>
    <module name="encodings.cp874" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.iso2022_jp" imports="['codecs']" importfrom="[]">
      <class name="Codec" init=""/>
      <class name="IncrementalEncoder" init=""/>
      <class name="IncrementalDecoder" init=""/>
      <class name="StreamReader" init=""/>
      <class name="StreamWriter" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.raw_unicode_escape" imports="['codecs']" importfrom="[]">
      <class name="Codec" init=""/>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init=""/>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init="">
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:bytes', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.utf_16" imports="['codecs', 'sys']" importfrom="[]">
      <class name="IncrementalEncoder" init="obj = IncrementalEncoder(errors)">
        <api name="__init__">
          <expr>None</expr>
          <args>['errors:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getstate">
          <expr>obj.getstate()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setstate">
          <expr>obj.setstate(state)</expr>
          <args>['state:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="obj = IncrementalDecoder(errors)">
        <api name="__init__">
          <expr>None</expr>
          <args>['errors:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getstate">
          <expr>obj.getstate()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init="obj = StreamWriter(stream,errors)">
        <api name="__init__">
          <expr>None</expr>
          <args>['stream:NoneType', 'errors:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamReader" init="">
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:bytes', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="decode">
        <expr>decode(input,errors)</expr>
        <args>['input:int', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['strict']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
      </errors>
    </module>
    <module name="encodings.latin_1" imports="['codecs']" importfrom="[]">
      <class name="Codec" init=""/>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <class name="StreamConverter" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.ptcp154" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.cp864" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.cp1251" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.mac_farsi" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.ret = encode(input,errors)</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.ret = decode(input,errors)</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.ret = encode(input,final)</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.ret = decode(input,final)</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>ret = getregentry()</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.cp950" imports="['codecs']" importfrom="[]">
      <class name="Codec" init=""/>
      <class name="IncrementalEncoder" init=""/>
      <class name="IncrementalDecoder" init=""/>
      <class name="StreamReader" init=""/>
      <class name="StreamWriter" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.cp852" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.cp1250" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.iso2022_jp_2" imports="['codecs']" importfrom="[]">
      <class name="Codec" init=""/>
      <class name="IncrementalEncoder" init=""/>
      <class name="IncrementalDecoder" init=""/>
      <class name="StreamReader" init=""/>
      <class name="StreamWriter" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.mac_roman" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.shift_jisx0213" imports="['codecs']" importfrom="[]">
      <class name="Codec" init=""/>
      <class name="IncrementalEncoder" init=""/>
      <class name="IncrementalDecoder" init=""/>
      <class name="StreamReader" init=""/>
      <class name="StreamWriter" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.big5hkscs" imports="['codecs']" importfrom="[]">
      <class name="Codec" init=""/>
      <class name="IncrementalEncoder" init=""/>
      <class name="IncrementalDecoder" init=""/>
      <class name="StreamReader" init=""/>
      <class name="StreamWriter" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.cp437" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.undefined" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:None', 'final:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:None', 'final:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.base64_codec" imports="['codecs', 'base64']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.ret = encode(input,errors)</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['base64_encode:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.ret = decode(input,errors)</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['base64_decode:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.ret = encode(input,final)</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.ret = decode(input,final)</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="base64_encode">
        <expr>base64_encode(input,errors)</expr>
        <args>['input:bytes', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['strict']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="base64_decode">
        <expr>base64_decode(input,errors)</expr>
        <args>['input:bytes', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['strict']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.euc_jp" imports="['codecs']" importfrom="[]">
      <class name="Codec" init=""/>
      <class name="IncrementalEncoder" init=""/>
      <class name="IncrementalDecoder" init=""/>
      <class name="StreamReader" init=""/>
      <class name="StreamWriter" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.ascii" imports="['codecs']" importfrom="[]">
      <class name="Codec" init=""/>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <class name="StreamConverter" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.kz1048" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.utf_16_le" imports="['codecs']" importfrom="[]">
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init=""/>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="decode">
        <expr>decode(input,errors)</expr>
        <args>['input:int', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['strict']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.cp949" imports="['codecs']" importfrom="[]">
      <class name="Codec" init=""/>
      <class name="IncrementalEncoder" init=""/>
      <class name="IncrementalDecoder" init=""/>
      <class name="StreamReader" init=""/>
      <class name="StreamWriter" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.punycode" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:bytes', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init=""/>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.ret = decode(input,final)</expr>
          <args>['input:None', 'final:None']</args>
          <return>['punycode_decode:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="segregate">
        <expr>segregate(str)</expr>
        <args>['str:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="selective_len">
        <expr>selective_len(str,max)</expr>
        <args>['str:str', 'max:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="selective_find">
        <expr>selective_find(str,char,index,pos)</expr>
        <args>['str:str', 'char:str', 'index:int', 'pos:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="insertion_unsort">
        <expr>insertion_unsort(str,extended)</expr>
        <args>['str:str', 'extended:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="T">
        <expr>T(j,bias)</expr>
        <args>['j:int', 'bias:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="generate_generalized_integer">
        <expr>generate_generalized_integer(N,bias)</expr>
        <args>['N:int', 'bias:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="adapt">
        <expr>adapt(delta,first,numchars)</expr>
        <args>['delta:int', 'first:bool', 'numchars:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="generate_integers">
        <expr>generate_integers(baselen,deltas)</expr>
        <args>['baselen:int', 'deltas:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="punycode_encode">
        <expr>punycode_encode(text)</expr>
        <args>['text:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="decode_generalized_number">
        <expr>decode_generalized_number(extended,extpos,bias,errors)</expr>
        <args>['extended:str', 'extpos:int', 'bias:int', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="insertion_sort">
        <expr>insertion_sort(base,extended,errors)</expr>
        <args>['base:str', 'extended:str', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="punycode_decode">
        <expr>punycode_decode(text,errors)</expr>
        <args>['text:bytes', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>IndexError</exception>
      </errors>
    </module>
    <module name="encodings.quopri_codec" imports="['codecs', 'quopri']" importfrom="['io:BytesIO']">
      <class name="Codec" init=""/>
      <class name="IncrementalEncoder" init=""/>
      <class name="IncrementalDecoder" init=""/>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="quopri_encode">
        <expr>quopri_encode(input,errors)</expr>
        <args>['input:bytes', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['strict']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="quopri_decode">
        <expr>quopri_decode(input,errors)</expr>
        <args>['input:bytes', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['strict']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.cp862" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.iso8859_3" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.iso8859_11" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:int', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>ret = getregentry()</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.cp1258" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.iso8859_4" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.cp037" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:int', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.cp1254" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.tis_620" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:int', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>ret = getregentry()</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.utf_8_sig" imports="['codecs']" importfrom="[]">
      <class name="IncrementalEncoder" init="obj = IncrementalEncoder(errors)">
        <api name="__init__">
          <expr>None</expr>
          <args>['errors:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getstate">
          <expr>obj.ret = getstate()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setstate">
          <expr>obj.setstate(state)</expr>
          <args>['state:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="obj = IncrementalDecoder(errors)">
        <api name="__init__">
          <expr>None</expr>
          <args>['errors:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init="">
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:bytes', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="encode">
        <expr>encode(input,errors)</expr>
        <args>['input:str', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['strict']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="decode">
        <expr>decode(input,errors)</expr>
        <args>['input:memoryview', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['strict']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>AttributeError</exception>
      </errors>
    </module>
    <module name="encodings.cp1257" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.iso8859_13" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.utf_7" imports="['codecs']" importfrom="[]">
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init=""/>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="decode">
        <expr>decode(input,errors)</expr>
        <args>['input:memoryview', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['strict']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.iso8859_6" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.johab" imports="['codecs']" importfrom="[]">
      <class name="Codec" init=""/>
      <class name="IncrementalEncoder" init=""/>
      <class name="IncrementalDecoder" init=""/>
      <class name="StreamReader" init=""/>
      <class name="StreamWriter" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.big5" imports="['codecs']" importfrom="[]">
      <class name="Codec" init=""/>
      <class name="IncrementalEncoder" init=""/>
      <class name="IncrementalDecoder" init=""/>
      <class name="StreamReader" init=""/>
      <class name="StreamWriter" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.cp857" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.shift_jis_2004" imports="['codecs']" importfrom="[]">
      <class name="Codec" init=""/>
      <class name="IncrementalEncoder" init=""/>
      <class name="IncrementalDecoder" init=""/>
      <class name="StreamReader" init=""/>
      <class name="StreamWriter" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.cp1256" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.shift_jis" imports="['codecs']" importfrom="[]">
      <class name="Codec" init=""/>
      <class name="IncrementalEncoder" init=""/>
      <class name="IncrementalDecoder" init=""/>
      <class name="StreamReader" init=""/>
      <class name="StreamWriter" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.iso2022_kr" imports="['codecs']" importfrom="[]">
      <class name="Codec" init=""/>
      <class name="IncrementalEncoder" init=""/>
      <class name="IncrementalDecoder" init=""/>
      <class name="StreamReader" init=""/>
      <class name="StreamWriter" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.cp1253" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.iso8859_15" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.utf_32_be" imports="['codecs']" importfrom="[]">
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.ret = encode(input,final)</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init=""/>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="decode">
        <expr>decode(input,errors)</expr>
        <args>['input:memoryview', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['strict']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.utf_32" imports="['codecs', 'sys']" importfrom="[]">
      <class name="IncrementalEncoder" init="obj = IncrementalEncoder(errors)">
        <api name="__init__">
          <expr>None</expr>
          <args>['errors:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="encode">
          <expr>obj.ret = encode(input,final)</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getstate">
          <expr>obj.ret = getstate()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setstate">
          <expr>obj.setstate(state)</expr>
          <args>['state:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="obj = IncrementalDecoder(errors)">
        <api name="__init__">
          <expr>None</expr>
          <args>['errors:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getstate">
          <expr>obj.getstate()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init="obj = StreamWriter(stream,errors)">
        <api name="__init__">
          <expr>None</expr>
          <args>['stream:NoneType', 'errors:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamReader" init="">
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:bytes', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="decode">
        <expr>ret = decode(input,errors)</expr>
        <args>['input:None', 'errors:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['strict']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
      </errors>
    </module>
    <module name="encodings.palmos" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:int', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>ret = getregentry()</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.unicode_escape" imports="['codecs']" importfrom="[]">
      <class name="Codec" init=""/>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init=""/>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init="">
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:bytes', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.cp866" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.cp863" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.iso8859_7" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.koi8_t" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.iso8859_5" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.cp860" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.hz" imports="['codecs']" importfrom="[]">
      <class name="Codec" init=""/>
      <class name="IncrementalEncoder" init=""/>
      <class name="IncrementalDecoder" init=""/>
      <class name="StreamReader" init=""/>
      <class name="StreamWriter" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.cp861" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.rot_13" imports="['codecs', 'sys']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.ret = encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.ret = decode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="rot13">
        <expr>rot13(infile,outfile)</expr>
        <args>['infile:StringIO', 'outfile:StringIO']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.cp1125" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.cp1140" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:int', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.euc_kr" imports="['codecs']" importfrom="[]">
      <class name="Codec" init=""/>
      <class name="IncrementalEncoder" init=""/>
      <class name="IncrementalDecoder" init=""/>
      <class name="StreamReader" init=""/>
      <class name="StreamWriter" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.cp500" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:int', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.utf_32_le" imports="['codecs']" importfrom="[]">
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.ret = encode(input,final)</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init=""/>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="decode">
        <expr>decode(input,errors)</expr>
        <args>['input:memoryview', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['strict']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.cp865" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.iso8859_1" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.ret = encode(input,errors)</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.ret = decode(input,errors)</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.ret = encode(input,final)</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.ret = decode(input,final)</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>ret = getregentry()</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.iso2022_jp_ext" imports="['codecs']" importfrom="[]">
      <class name="Codec" init=""/>
      <class name="IncrementalEncoder" init=""/>
      <class name="IncrementalDecoder" init=""/>
      <class name="StreamReader" init=""/>
      <class name="StreamWriter" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.koi8_r" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.iso8859_16" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.cp1006" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.mac_cyrillic" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.utf_8" imports="['codecs']" importfrom="[]">
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init=""/>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="decode">
        <expr>decode(input,errors)</expr>
        <args>['input:int', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['strict']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.mac_croatian" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.ret = encode(input,errors)</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.ret = decode(input,errors)</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.ret = encode(input,final)</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.ret = decode(input,final)</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>ret = getregentry()</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.gb2312" imports="['codecs']" importfrom="[]">
      <class name="Codec" init=""/>
      <class name="IncrementalEncoder" init=""/>
      <class name="IncrementalDecoder" init=""/>
      <class name="StreamReader" init=""/>
      <class name="StreamWriter" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.euc_jis_2004" imports="['codecs']" importfrom="[]">
      <class name="Codec" init=""/>
      <class name="IncrementalEncoder" init=""/>
      <class name="IncrementalDecoder" init=""/>
      <class name="StreamReader" init=""/>
      <class name="StreamWriter" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.iso8859_10" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.iso2022_jp_2004" imports="['codecs']" importfrom="[]">
      <class name="Codec" init=""/>
      <class name="IncrementalEncoder" init=""/>
      <class name="IncrementalDecoder" init=""/>
      <class name="StreamReader" init=""/>
      <class name="StreamWriter" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.iso8859_2" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.cp720" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.cp855" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.koi8_u" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.charmap" imports="['codecs']" importfrom="[]">
      <class name="Codec" init=""/>
      <class name="IncrementalEncoder" init="obj = IncrementalEncoder(errors,mapping)">
        <api name="__init__">
          <expr>None</expr>
          <args>['errors:NoneType', 'mapping:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict', None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="obj = IncrementalDecoder(errors,mapping)">
        <api name="__init__">
          <expr>None</expr>
          <args>['errors:NoneType', 'mapping:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict', None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init="obj = StreamWriter(stream,errors,mapping)">
        <api name="__init__">
          <expr>None</expr>
          <args>['stream:NoneType', 'errors:NoneType', 'mapping:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict', None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamReader" init="obj = StreamReader(stream,errors,mapping)">
        <api name="__init__">
          <expr>None</expr>
          <args>['stream:NoneType', 'errors:NoneType', 'mapping:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict', None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="getregentry">
        <expr>ret = getregentry()</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.uu_codec" imports="['codecs', 'binascii']" importfrom="['io:BytesIO']">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.ret = encode(input,errors)</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['uu_encode:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.ret = decode(input,errors)</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['uu_decode:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.ret = encode(input,final)</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.ret = decode(input,final)</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="uu_encode">
        <expr>uu_encode(input,errors,filename,mode)</expr>
        <args>['input:bytes', 'errors:str', 'filename:str', 'mode:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['strict', '&lt;data&gt;', 438]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="uu_decode">
        <expr>uu_decode(input,errors)</expr>
        <args>['input:bytes', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['strict']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>binascii.Error</exception>
      </errors>
    </module>
    <module name="encodings.mac_iceland" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.cp775" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.cp932" imports="['codecs']" importfrom="[]">
      <class name="Codec" init=""/>
      <class name="IncrementalEncoder" init=""/>
      <class name="IncrementalDecoder" init=""/>
      <class name="StreamReader" init=""/>
      <class name="StreamWriter" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.cp737" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.mac_romanian" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.ret = encode(input,errors)</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.ret = decode(input,errors)</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.ret = encode(input,final)</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.ret = decode(input,final)</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>ret = getregentry()</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.hex_codec" imports="['codecs', 'binascii']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.ret = encode(input,errors)</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['hex_encode:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.ret = decode(input,errors)</expr>
          <args>['input:None', 'errors:None']</args>
          <return>['hex_decode:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.ret = encode(input,final)</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.ret = decode(input,final)</expr>
          <args>['input:None', 'final:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="hex_encode">
        <expr>hex_encode(input,errors)</expr>
        <args>['input:bytes', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['strict']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="hex_decode">
        <expr>hex_decode(input,errors)</expr>
        <args>['input:bytes', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['strict']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.cp856" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.cp424" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:int', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.cp875" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:int', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="encodings.iso8859_8" imports="['codecs']" importfrom="[]">
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:memoryview', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="">
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="">
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init=""/>
      <class name="StreamReader" init=""/>
      <api name="getregentry">
        <expr>getregentry()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
  </library>
  <library name="xml">
    <module name="xml.parsers.expat" imports="['sys']" importfrom="['pyexpat:*']"/>
    <module name="xml.sax.expatreader" imports="['sys', 'weakref', 'xml.sax.saxutils']" importfrom="['xml.sax._exceptions:*', 'xml.sax.handler:feature_validation', 'xml.sax.handler:feature_namespaces', 'xml.sax.handler:feature_namespace_prefixes', 'xml.sax.handler:feature_external_ges', 'xml.sax.handler:feature_external_pes', 'xml.sax.handler:feature_string_interning', 'xml.sax.handler:property_xml_string', 'xml.sax.handler:property_interning_dict', 'xml.parsers:expat', 'xml.sax:xmlreader', 'xml.sax:saxutils', 'xml.sax:handler']">
      <class name="ExpatLocator" init="obj = ExpatLocator(parser)">
        <api name="__init__">
          <expr>None</expr>
          <args>['parser:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getColumnNumber">
          <expr>obj.ret = getColumnNumber()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getLineNumber">
          <expr>obj.ret = getLineNumber()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ExpatParser" init="obj = ExpatParser(namespaceHandling,bufsize)">
        <api name="__init__">
          <expr>None</expr>
          <args>['namespaceHandling:NoneType', 'bufsize:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[0, 'int']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="prepareParser">
          <expr>obj.prepareParser(source)</expr>
          <args>['source:InputSource']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getFeature">
          <expr>obj.getFeature(name)</expr>
          <args>['name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setFeature">
          <expr>obj.setFeature(name,state)</expr>
          <args>['name:str', 'state:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getProperty">
          <expr>obj.ret = getProperty(name)</expr>
          <args>['name:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setProperty">
          <expr>obj.setProperty(name,value)</expr>
          <args>['name:None', 'value:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getColumnNumber">
          <expr>obj.getColumnNumber()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getLineNumber">
          <expr>obj.getLineNumber()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="start_element">
          <expr>obj.start_element(name,attrs)</expr>
          <args>['name:str', 'attrs:dict']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_element">
          <expr>obj.end_element(name)</expr>
          <args>['name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="start_element_ns">
          <expr>obj.start_element_ns(name,attrs)</expr>
          <args>['name:str', 'attrs:dict']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_element_ns">
          <expr>obj.end_element_ns(name)</expr>
          <args>['name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="processing_instruction">
          <expr>obj.processing_instruction(target,data)</expr>
          <args>['target:None', 'data:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="character_data">
          <expr>obj.character_data(data)</expr>
          <args>['data:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="start_namespace_decl">
          <expr>obj.start_namespace_decl(prefix,uri)</expr>
          <args>['prefix:NoneType', 'uri:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_namespace_decl">
          <expr>obj.end_namespace_decl(prefix)</expr>
          <args>['prefix:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="start_doctype_decl">
          <expr>obj.start_doctype_decl(name,sysid,pubid,has_internal_subset)</expr>
          <args>['name:None', 'sysid:None', 'pubid:None', 'has_internal_subset:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unparsed_entity_decl">
          <expr>obj.unparsed_entity_decl(name,base,sysid,pubid,notation_name)</expr>
          <args>['name:str', 'base:NoneType', 'sysid:str', 'pubid:NoneType', 'notation_name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="notation_decl">
          <expr>obj.notation_decl(name,base,sysid,pubid)</expr>
          <args>['name:str', 'base:NoneType', 'sysid:NoneType', 'pubid:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="external_entity_ref">
          <expr>obj.external_entity_ref(context,base,sysid,pubid)</expr>
          <args>['context:str', 'base:NoneType', 'sysid:str', 'pubid:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="skipped_entity_handler">
          <expr>obj.skipped_entity_handler(name,is_pe)</expr>
          <args>['name:None', 'is_pe:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="create_parser">
        <expr>create_parser()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ImportError</exception>
        <exception>ImportError</exception>
        <exception>expat.error</exception>
        <exception>AttributeError</exception>
      </errors>
    </module>
    <module name="xml.sax.saxutils" imports="['os', 'urllib.parse', 'urllib.request', 'io', 'codecs', 'sys']" importfrom="[]">
      <class name="XMLGenerator" init="obj = XMLGenerator(out,encoding,short_empty_elements)">
        <api name="__init__">
          <expr>None</expr>
          <args>['out:NoneType', 'encoding:NoneType', 'short_empty_elements:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, 'iso-8859-1', False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="startDocument">
          <expr>obj.startDocument()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="endDocument">
          <expr>obj.endDocument()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="startPrefixMapping">
          <expr>obj.startPrefixMapping(prefix,uri)</expr>
          <args>['prefix:NoneType', 'uri:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="endPrefixMapping">
          <expr>obj.endPrefixMapping(prefix)</expr>
          <args>['prefix:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="startElement">
          <expr>obj.startElement(name,attrs)</expr>
          <args>['name:str', 'attrs:dict']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="endElement">
          <expr>obj.endElement(name)</expr>
          <args>['name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="startElementNS">
          <expr>obj.startElementNS(name,qname,attrs)</expr>
          <args>['name:tuple', 'qname:str', 'attrs:dict']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="endElementNS">
          <expr>obj.endElementNS(name,qname)</expr>
          <args>['name:tuple', 'qname:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="characters">
          <expr>obj.characters(content)</expr>
          <args>['content:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ignorableWhitespace">
          <expr>obj.ignorableWhitespace(content)</expr>
          <args>['content:bytes']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="processingInstruction">
          <expr>obj.processingInstruction(target,data)</expr>
          <args>['target:str', 'data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="XMLFilterBase" init="obj = XMLFilterBase(parent)">
        <api name="__init__">
          <expr>None</expr>
          <args>['parent:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getParent">
          <expr>obj.ret = getParent()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setParent">
          <expr>obj.setParent(parent)</expr>
          <args>['parent:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="escape">
        <expr>escape(data,entities)</expr>
        <args>['data:str', 'entities:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="unescape">
        <expr>unescape(data,entities)</expr>
        <args>['data:str', 'entities:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="quoteattr">
        <expr>quoteattr(data,entities)</expr>
        <args>['data:str', 'entities:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="prepare_input_source">
        <expr>prepare_input_source(source,base)</expr>
        <args>['source:StringIO', 'base:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
      </errors>
    </module>
    <module name="xml.sax.xmlreader" imports="[]" importfrom="['_exceptions:SAXNotSupportedException', '_exceptions:SAXNotRecognizedException']">
      <class name="XMLReader" init="obj = XMLReader()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parse">
          <expr>obj.parse(source)</expr>
          <args>['source:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getContentHandler">
          <expr>obj.ret = getContentHandler()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setContentHandler">
          <expr>obj.setContentHandler(handler)</expr>
          <args>['handler:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getDTDHandler">
          <expr>obj.ret = getDTDHandler()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setDTDHandler">
          <expr>obj.setDTDHandler(handler)</expr>
          <args>['handler:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getEntityResolver">
          <expr>obj.ret = getEntityResolver()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setEntityResolver">
          <expr>obj.setEntityResolver(resolver)</expr>
          <args>['resolver:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getErrorHandler">
          <expr>obj.ret = getErrorHandler()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setErrorHandler">
          <expr>obj.setErrorHandler(handler)</expr>
          <args>['handler:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setLocale">
          <expr>obj.setLocale(locale)</expr>
          <args>['locale:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getFeature">
          <expr>obj.getFeature(name)</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setFeature">
          <expr>obj.setFeature(name,state)</expr>
          <args>['name:None', 'state:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getProperty">
          <expr>obj.getProperty(name)</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setProperty">
          <expr>obj.setProperty(name,value)</expr>
          <args>['name:None', 'value:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalParser" init="obj = IncrementalParser(bufsize)">
        <api name="__init__">
          <expr>None</expr>
          <args>['bufsize:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['int']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parse">
          <expr>obj.parse(source)</expr>
          <args>['source:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="reset">
          <expr>obj.reset()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Locator" init="">
        <api name="getColumnNumber">
          <expr>obj.ret = getColumnNumber()</expr>
          <args>[]</args>
          <return>['ret:int']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getLineNumber">
          <expr>obj.ret = getLineNumber()</expr>
          <args>[]</args>
          <return>['ret:int']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getPublicId">
          <expr>obj.ret = getPublicId()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getSystemId">
          <expr>obj.ret = getSystemId()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="InputSource" init="obj = InputSource(system_id)">
        <api name="__init__">
          <expr>None</expr>
          <args>['system_id:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setPublicId">
          <expr>obj.setPublicId(public_id)</expr>
          <args>['public_id:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getPublicId">
          <expr>obj.getPublicId()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setSystemId">
          <expr>obj.setSystemId(system_id)</expr>
          <args>['system_id:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getSystemId">
          <expr>obj.getSystemId()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setEncoding">
          <expr>obj.setEncoding(encoding)</expr>
          <args>['encoding:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getEncoding">
          <expr>obj.getEncoding()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setByteStream">
          <expr>obj.setByteStream(bytefile)</expr>
          <args>['bytefile:BytesIO']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setCharacterStream">
          <expr>obj.setCharacterStream(charfile)</expr>
          <args>['charfile:StringIO']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="AttributesImpl" init="obj = AttributesImpl(attrs)">
        <api name="__init__">
          <expr>None</expr>
          <args>['attrs:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getLength">
          <expr>obj.getLength()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getType">
          <expr>obj.ret = getType(name)</expr>
          <args>['name:None']</args>
          <return>['CDATA:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getValue">
          <expr>obj.getValue(name)</expr>
          <args>['name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getValueByQName">
          <expr>obj.getValueByQName(name)</expr>
          <args>['name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getNameByQName">
          <expr>obj.getNameByQName(name)</expr>
          <args>['name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getQNameByName">
          <expr>obj.getQNameByName(name)</expr>
          <args>['name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getNames">
          <expr>obj.getNames()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getQNames">
          <expr>obj.getQNames()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="keys">
          <expr>obj.keys()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="copy">
          <expr>obj.ret = copy()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="items">
          <expr>obj.items()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="values">
          <expr>obj.values()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="AttributesNSImpl" init="obj = AttributesNSImpl(attrs,qnames)">
        <api name="__init__">
          <expr>None</expr>
          <args>['attrs:NoneType', 'qnames:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getValueByQName">
          <expr>obj.getValueByQName(name)</expr>
          <args>['name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getNameByQName">
          <expr>obj.getNameByQName(name)</expr>
          <args>['name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getQNameByName">
          <expr>obj.getQNameByName(name)</expr>
          <args>['name:tuple']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getQNames">
          <expr>obj.getQNames()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="copy">
          <expr>obj.ret = copy()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
    </module>
    <module name="xml.sax.handler" imports="[]" importfrom="[]">
      <class name="ErrorHandler" init="">
        <api name="error">
          <expr>obj.error(exception)</expr>
          <args>['exception:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="fatalError">
          <expr>obj.fatalError(exception)</expr>
          <args>['exception:SAXParseException']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="warning">
          <expr>obj.warning(exception)</expr>
          <args>['exception:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ContentHandler" init="obj = ContentHandler()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setDocumentLocator">
          <expr>obj.setDocumentLocator(locator)</expr>
          <args>['locator:ExpatLocator']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="startDocument">
          <expr>obj.startDocument()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="endDocument">
          <expr>obj.endDocument()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="startPrefixMapping">
          <expr>obj.startPrefixMapping(prefix,uri)</expr>
          <args>['prefix:None', 'uri:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="endPrefixMapping">
          <expr>obj.endPrefixMapping(prefix)</expr>
          <args>['prefix:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="startElement">
          <expr>obj.startElement(name,attrs)</expr>
          <args>['name:str', 'attrs:AttributesImpl']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="endElement">
          <expr>obj.endElement(name)</expr>
          <args>['name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="startElementNS">
          <expr>obj.startElementNS(name,qname,attrs)</expr>
          <args>['name:None', 'qname:None', 'attrs:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="endElementNS">
          <expr>obj.endElementNS(name,qname)</expr>
          <args>['name:None', 'qname:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="characters">
          <expr>obj.characters(content)</expr>
          <args>['content:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ignorableWhitespace">
          <expr>obj.ignorableWhitespace(whitespace)</expr>
          <args>['whitespace:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="processingInstruction">
          <expr>obj.processingInstruction(target,data)</expr>
          <args>['target:None', 'data:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="skippedEntity">
          <expr>obj.skippedEntity(name)</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="DTDHandler" init="">
        <api name="notationDecl">
          <expr>obj.notationDecl(name,publicId,systemId)</expr>
          <args>['name:None', 'publicId:None', 'systemId:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unparsedEntityDecl">
          <expr>obj.unparsedEntityDecl(name,publicId,systemId,ndata)</expr>
          <args>['name:None', 'publicId:None', 'systemId:None', 'ndata:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="EntityResolver" init="">
        <api name="resolveEntity">
          <expr>obj.ret = resolveEntity(publicId,systemId)</expr>
          <args>['publicId:None', 'systemId:None']</args>
          <return>['systemId:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
    </module>
    <module name="xml.dom.domreg" imports="['sys', 'os']" importfrom="[]">
      <api name="registerDOMImplementation">
        <expr>registerDOMImplementation(name,factory)</expr>
        <args>['name:None', 'factory:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getDOMImplementation">
        <expr>ret = getDOMImplementation(name,features)</expr>
        <args>['name:None', 'features:None']</args>
        <return>['ret:None', 'getDOMImplementation:None', 'dom:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>Exception</exception>
      </errors>
    </module>
    <module name="xml.dom.minidom" imports="['io', 'xml.dom']" importfrom="['xml.dom:EMPTY_NAMESPACE', 'xml.dom:EMPTY_PREFIX', 'xml.dom:XMLNS_NAMESPACE', 'xml.dom:domreg', 'xml.dom.minicompat:*', 'xml.dom.xmlbuilder:DOMImplementationLS', 'xml.dom.xmlbuilder:DocumentLS', 'xml.dom:expatbuilder', 'xml.dom:pulldom']">
      <class name="Node" init="">
        <api name="toxml">
          <expr>obj.ret = toxml(encoding,standalone)</expr>
          <args>['encoding:None', 'standalone:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="hasChildNodes">
          <expr>obj.ret = hasChildNodes()</expr>
          <args>[]</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="replaceChild">
          <expr>obj.ret = replaceChild(newChild,oldChild)</expr>
          <args>['newChild:None', 'oldChild:None']</args>
          <return>['ret:None', 'oldChild:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="cloneNode">
          <expr>obj.ret = cloneNode(deep)</expr>
          <args>['deep:None']</args>
          <return>['_clone_node:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isSupported">
          <expr>obj.ret = isSupported(feature,version)</expr>
          <args>['feature:None', 'version:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isSameNode">
          <expr>obj.ret = isSameNode(other)</expr>
          <args>['other:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getInterface">
          <expr>obj.ret = getInterface(feature)</expr>
          <args>['feature:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getUserData">
          <expr>obj.ret = getUserData(key)</expr>
          <args>['key:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setUserData">
          <expr>obj.ret = setUserData(key,data,handler)</expr>
          <args>['key:None', 'data:None', 'handler:None']</args>
          <return>['old:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="DocumentFragment" init="obj = DocumentFragment()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Attr" init="obj = Attr(qName,namespaceURI,localName,prefix)">
        <api name="__init__">
          <expr>None</expr>
          <args>['qName:None', 'namespaceURI:None', 'localName:None', 'prefix:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['EMPTY_NAMESPACE', None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="NamedNodeMap" init="obj = NamedNodeMap(attrs,attrsNS,ownerElement)">
        <api name="__init__">
          <expr>None</expr>
          <args>['attrs:None', 'attrsNS:None', 'ownerElement:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="item">
          <expr>obj.item(index)</expr>
          <args>['index:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="items">
          <expr>obj.ret = items()</expr>
          <args>[]</args>
          <return>['L:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="itemsNS">
          <expr>obj.ret = itemsNS()</expr>
          <args>[]</args>
          <return>['L:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="keysNS">
          <expr>obj.ret = keysNS()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="removeNamedItem">
          <expr>obj.removeNamedItem(name)</expr>
          <args>['name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="removeNamedItemNS">
          <expr>obj.removeNamedItemNS(namespaceURI,localName)</expr>
          <args>['namespaceURI:str', 'localName:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setNamedItemNS">
          <expr>obj.ret = setNamedItemNS(node)</expr>
          <args>['node:Text']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="TypeInfo" init="obj = TypeInfo(namespace,name)">
        <api name="__init__">
          <expr>None</expr>
          <args>['namespace:None', 'name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Element" init="obj = Element(tagName,namespaceURI,prefix,localName)">
        <api name="__init__">
          <expr>None</expr>
          <args>['tagName:None', 'namespaceURI:None', 'prefix:None', 'localName:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['EMPTY_NAMESPACE', None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getAttribute">
          <expr>obj.getAttribute(attname)</expr>
          <args>['attname:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getAttributeNS">
          <expr>obj.getAttributeNS(namespaceURI,localName)</expr>
          <args>['namespaceURI:str', 'localName:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setAttribute">
          <expr>obj.setAttribute(attname,value)</expr>
          <args>['attname:str', 'value:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setAttributeNS">
          <expr>obj.setAttributeNS(namespaceURI,qualifiedName,value)</expr>
          <args>['namespaceURI:NoneType', 'qualifiedName:str', 'value:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="removeAttribute">
          <expr>obj.removeAttribute(name)</expr>
          <args>['name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="removeAttributeNS">
          <expr>obj.removeAttributeNS(namespaceURI,localName)</expr>
          <args>['namespaceURI:str', 'localName:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="hasAttribute">
          <expr>obj.ret = hasAttribute(name)</expr>
          <args>['name:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="hasAttributeNS">
          <expr>obj.ret = hasAttributeNS(namespaceURI,localName)</expr>
          <args>['namespaceURI:None', 'localName:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getElementsByTagName">
          <expr>obj.getElementsByTagName(name)</expr>
          <args>['name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getElementsByTagNameNS">
          <expr>obj.ret = getElementsByTagNameNS(namespaceURI,localName)</expr>
          <args>['namespaceURI:None', 'localName:None']</args>
          <return>['_get_elements_by_tagName_ns_helper:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="hasAttributes">
          <expr>obj.ret = hasAttributes()</expr>
          <args>[]</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setIdAttribute">
          <expr>obj.setIdAttribute(name)</expr>
          <args>['name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setIdAttributeNS">
          <expr>obj.setIdAttributeNS(namespaceURI,localName)</expr>
          <args>['namespaceURI:str', 'localName:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Childless" init="">
        <api name="hasChildNodes">
          <expr>obj.ret = hasChildNodes()</expr>
          <args>[]</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="replaceChild">
          <expr>obj.replaceChild(newChild,oldChild)</expr>
          <args>['newChild:None', 'oldChild:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ProcessingInstruction" init="obj = ProcessingInstruction(target,data)">
        <api name="__init__">
          <expr>None</expr>
          <args>['target:None', 'data:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="CharacterData" init="obj = CharacterData()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="substringData">
          <expr>obj.ret = substringData(offset,count)</expr>
          <args>['offset:None', 'count:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="appendData">
          <expr>obj.appendData(arg)</expr>
          <args>['arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="insertData">
          <expr>obj.insertData(offset,arg)</expr>
          <args>['offset:None', 'arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="deleteData">
          <expr>obj.deleteData(offset,count)</expr>
          <args>['offset:None', 'count:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="replaceData">
          <expr>obj.replaceData(offset,count,arg)</expr>
          <args>['offset:None', 'count:None', 'arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Text" init="">
        <api name="splitText">
          <expr>obj.ret = splitText(offset)</expr>
          <args>['offset:None']</args>
          <return>['newText:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="replaceWholeText">
          <expr>obj.replaceWholeText(content)</expr>
          <args>['content:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Comment" init="obj = Comment(data)">
        <api name="__init__">
          <expr>None</expr>
          <args>['data:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="CDATASection" init=""/>
      <class name="ReadOnlySequentialNamedNodeMap" init="obj = ReadOnlySequentialNamedNodeMap(seq)">
        <api name="__init__">
          <expr>None</expr>
          <args>['seq:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="item">
          <expr>obj.item(index)</expr>
          <args>['index:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="removeNamedItem">
          <expr>obj.removeNamedItem(name)</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="removeNamedItemNS">
          <expr>obj.removeNamedItemNS(namespaceURI,localName)</expr>
          <args>['namespaceURI:None', 'localName:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setNamedItemNS">
          <expr>obj.setNamedItemNS(node)</expr>
          <args>['node:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Identified" init=""/>
      <class name="DocumentType" init="obj = DocumentType(qualifiedName)">
        <api name="__init__">
          <expr>None</expr>
          <args>['qualifiedName:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="cloneNode">
          <expr>obj.cloneNode(deep)</expr>
          <args>['deep:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Entity" init="obj = Entity(name,publicId,systemId,notation)">
        <api name="__init__">
          <expr>None</expr>
          <args>['name:None', 'publicId:None', 'systemId:None', 'notation:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="replaceChild">
          <expr>obj.replaceChild(newChild,oldChild)</expr>
          <args>['newChild:None', 'oldChild:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Notation" init="obj = Notation(name,publicId,systemId)">
        <api name="__init__">
          <expr>None</expr>
          <args>['name:None', 'publicId:None', 'systemId:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="DOMImplementation" init="">
        <api name="createDocument">
          <expr>obj.createDocument(namespaceURI,qualifiedName,doctype)</expr>
          <args>['namespaceURI:str', 'qualifiedName:str', 'doctype:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="createDocumentType">
          <expr>obj.createDocumentType(qualifiedName,publicId,systemId)</expr>
          <args>['qualifiedName:str', 'publicId:NoneType', 'systemId:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getInterface">
          <expr>obj.ret = getInterface(feature)</expr>
          <args>['feature:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ElementInfo" init="obj = ElementInfo(name)">
        <api name="__init__">
          <expr>None</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isEmpty">
          <expr>obj.ret = isEmpty()</expr>
          <args>[]</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Document" init="obj = Document()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="cloneNode">
          <expr>obj.cloneNode(deep)</expr>
          <args>['deep:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="createDocumentFragment">
          <expr>obj.createDocumentFragment()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="createElement">
          <expr>obj.createElement(tagName)</expr>
          <args>['tagName:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="createTextNode">
          <expr>obj.createTextNode(data)</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="createCDATASection">
          <expr>obj.createCDATASection(data)</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="createComment">
          <expr>obj.createComment(data)</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="createProcessingInstruction">
          <expr>obj.createProcessingInstruction(target,data)</expr>
          <args>['target:str', 'data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="createAttribute">
          <expr>obj.createAttribute(qName)</expr>
          <args>['qName:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="createAttributeNS">
          <expr>obj.createAttributeNS(namespaceURI,qualifiedName)</expr>
          <args>['namespaceURI:str', 'qualifiedName:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getElementById">
          <expr>obj.getElementById(id)</expr>
          <args>['id:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getElementsByTagName">
          <expr>obj.getElementsByTagName(name)</expr>
          <args>['name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getElementsByTagNameNS">
          <expr>obj.getElementsByTagNameNS(namespaceURI,localName)</expr>
          <args>['namespaceURI:str', 'localName:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isSupported">
          <expr>obj.ret = isSupported(feature,version)</expr>
          <args>['feature:None', 'version:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="importNode">
          <expr>obj.importNode(node,deep)</expr>
          <args>['node:Document', 'deep:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="renameNode">
          <expr>obj.renameNode(n,namespaceURI,name)</expr>
          <args>['n:Attr', 'namespaceURI:NoneType', 'name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="parse">
        <expr>parse(file,parser,bufsize)</expr>
        <args>['file:str', 'parser:NoneType', 'bufsize:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parseString">
        <expr>parseString(string,parser)</expr>
        <args>['string:str', 'parser:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getDOMImplementation">
        <expr>getDOMImplementation(features)</expr>
        <args>['features:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ValueError</exception>
        <exception>ValueError</exception>
        <exception>ValueError</exception>
        <exception>AttributeError</exception>
        <exception>KeyError</exception>
        <exception>AttributeError</exception>
        <exception>AttributeError</exception>
        <exception>IndexError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>AttributeError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>IndexError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module name="xml.dom.expatbuilder" imports="[]" importfrom="['xml.dom:xmlbuilder', 'xml.dom:minidom', 'xml.dom:Node', 'xml.dom:EMPTY_NAMESPACE', 'xml.dom:EMPTY_PREFIX', 'xml.dom:XMLNS_NAMESPACE', 'xml.parsers:expat', 'xml.dom.NodeFilter:NodeFilter']">
      <class name="ElementInfo" init="obj = ElementInfo(tagName,model)">
        <api name="__init__">
          <expr>None</expr>
          <args>['tagName:None', 'model:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getAttributeType">
          <expr>obj.getAttributeType(aname)</expr>
          <args>['aname:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getAttributeTypeNS">
          <expr>obj.ret = getAttributeTypeNS(namespaceURI,localName)</expr>
          <args>['namespaceURI:None', 'localName:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isElementContent">
          <expr>obj.ret = isElementContent()</expr>
          <args>[]</args>
          <return>['ret:None', 'ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isEmpty">
          <expr>obj.ret = isEmpty()</expr>
          <args>[]</args>
          <return>['ret:None', 'ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isIdNS">
          <expr>obj.ret = isIdNS(euri,ename,auri,aname)</expr>
          <args>['euri:None', 'ename:None', 'auri:None', 'aname:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ExpatBuilder" init="obj = ExpatBuilder(options)">
        <api name="__init__">
          <expr>None</expr>
          <args>['options:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parseFile">
          <expr>obj.ret = parseFile(file)</expr>
          <args>['file:None']</args>
          <return>['doc:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="start_doctype_decl_handler">
          <expr>obj.start_doctype_decl_handler(doctypeName,systemId,publicId,has_internal_subset)</expr>
          <args>['doctypeName:None', 'systemId:None', 'publicId:None', 'has_internal_subset:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_doctype_decl_handler">
          <expr>obj.end_doctype_decl_handler()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pi_handler">
          <expr>obj.pi_handler(target,data)</expr>
          <args>['target:None', 'data:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="character_data_handler_cdata">
          <expr>obj.character_data_handler_cdata(data)</expr>
          <args>['data:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="character_data_handler">
          <expr>obj.character_data_handler(data)</expr>
          <args>['data:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="entity_decl_handler">
          <expr>obj.entity_decl_handler(entityName,is_parameter_entity,value,base,systemId,publicId,notationName)</expr>
          <args>['entityName:None', 'is_parameter_entity:None', 'value:None', 'base:None', 'systemId:None', 'publicId:None', 'notationName:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="notation_decl_handler">
          <expr>obj.notation_decl_handler(notationName,base,systemId,publicId)</expr>
          <args>['notationName:None', 'base:None', 'systemId:None', 'publicId:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="comment_handler">
          <expr>obj.comment_handler(data)</expr>
          <args>['data:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="start_cdata_section_handler">
          <expr>obj.start_cdata_section_handler()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_cdata_section_handler">
          <expr>obj.end_cdata_section_handler()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="external_entity_ref_handler">
          <expr>obj.ret = external_entity_ref_handler(context,base,systemId,publicId)</expr>
          <args>['context:None', 'base:None', 'systemId:None', 'publicId:None']</args>
          <return>['1:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="first_element_handler">
          <expr>obj.first_element_handler(name,attributes)</expr>
          <args>['name:None', 'attributes:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_element_handler">
          <expr>obj.end_element_handler(name)</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="element_decl_handler">
          <expr>obj.element_decl_handler(name,model)</expr>
          <args>['name:None', 'model:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="attlist_decl_handler">
          <expr>obj.attlist_decl_handler(elem,name,type,default,required)</expr>
          <args>['elem:None', 'name:None', 'type:None', 'default:None', 'required:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="xml_decl_handler">
          <expr>obj.xml_decl_handler(version,encoding,standalone)</expr>
          <args>['version:None', 'encoding:None', 'standalone:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="FilterVisibilityController" init="obj = FilterVisibilityController(filter)">
        <api name="__init__">
          <expr>None</expr>
          <args>['filter:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="FilterCrutch" init="obj = FilterCrutch(builder)">
        <api name="__init__">
          <expr>None</expr>
          <args>['builder:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Rejecter" init="obj = Rejecter(builder)">
        <api name="__init__">
          <expr>None</expr>
          <args>['builder:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_element_handler">
          <expr>obj.end_element_handler()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Skipper" init="">
        <api name="end_element_handler">
          <expr>obj.end_element_handler()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="FragmentBuilder" init="obj = FragmentBuilder(context,options)">
        <api name="__init__">
          <expr>None</expr>
          <args>['context:None', 'options:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parseFile">
          <expr>obj.ret = parseFile(file)</expr>
          <args>['file:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Namespaces" init="">
        <api name="start_namespace_decl_handler">
          <expr>obj.start_namespace_decl_handler(prefix,uri)</expr>
          <args>['prefix:None', 'uri:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ExpatBuilderNS" init=""/>
      <class name="FragmentBuilderNS" init=""/>
      <class name="ParseEscape" init=""/>
      <class name="InternalSubsetExtractor" init="">
        <api name="start_doctype_decl_handler">
          <expr>obj.start_doctype_decl_handler(name,publicId,systemId,has_internal_subset)</expr>
          <args>['name:str', 'publicId:NoneType', 'systemId:NoneType', 'has_internal_subset:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_doctype_decl_handler">
          <expr>obj.end_doctype_decl_handler()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="parse">
        <expr>parse(file,namespaces)</expr>
        <args>['file:str', 'namespaces:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[True]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parseString">
        <expr>parseString(string,namespaces)</expr>
        <args>['string:str', 'namespaces:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[True]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parseFragment">
        <expr>ret = parseFragment(file,context,namespaces)</expr>
        <args>['file:None', 'context:None', 'namespaces:None']</args>
        <return>['result:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[True]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parseFragmentString">
        <expr>ret = parseFragmentString(string,context,namespaces)</expr>
        <args>['string:None', 'context:None', 'namespaces:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[True]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="makeBuilder">
        <expr>ret = makeBuilder(options)</expr>
        <args>['options:None']</args>
        <return>['ExpatBuilderNS:None', 'ExpatBuilder:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ParseEscape</exception>
        <exception>ParseEscape</exception>
        <exception>ParseEscape</exception>
        <exception>ParseEscape</exception>
      </errors>
    </module>
    <module name="xml.dom.NodeFilter" imports="[]" importfrom="[]">
      <class name="NodeFilter" init="">
        <api name="acceptNode">
          <expr>obj.acceptNode(node)</expr>
          <args>['node:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
    </module>
    <module name="xml.dom.minicompat" imports="['xml.dom']" importfrom="[]">
      <class name="NodeList" init="">
        <api name="item">
          <expr>obj.item(index)</expr>
          <args>['index:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="EmptyNodeList" init="">
        <api name="item">
          <expr>obj.item(index)</expr>
          <args>['index:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="defproperty">
        <expr>defproperty(klass,name,doc)</expr>
        <args>['klass:None', 'name:None', 'doc:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="xml.dom.pulldom" imports="['xml.sax', 'xml.sax.handler', 'xml.dom.minidom', 'warnings']" importfrom="['io:StringIO']">
      <class name="PullDOM" init="obj = PullDOM(documentFactory)">
        <api name="__init__">
          <expr>None</expr>
          <args>['documentFactory:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setDocumentLocator">
          <expr>obj.setDocumentLocator(locator)</expr>
          <args>['locator:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="startPrefixMapping">
          <expr>obj.startPrefixMapping(prefix,uri)</expr>
          <args>['prefix:NoneType', 'uri:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="endPrefixMapping">
          <expr>obj.endPrefixMapping(prefix)</expr>
          <args>['prefix:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="startElementNS">
          <expr>obj.startElementNS(name,tagName,attrs)</expr>
          <args>['name:tuple', 'tagName:NoneType', 'attrs:AttributesNSImpl']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="endElementNS">
          <expr>obj.endElementNS(name,tagName)</expr>
          <args>['name:tuple', 'tagName:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="startElement">
          <expr>obj.startElement(name,attrs)</expr>
          <args>['name:str', 'attrs:AttributesImpl']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="endElement">
          <expr>obj.endElement(name)</expr>
          <args>['name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="comment">
          <expr>obj.comment(s)</expr>
          <args>['s:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="processingInstruction">
          <expr>obj.processingInstruction(target,data)</expr>
          <args>['target:str', 'data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ignorableWhitespace">
          <expr>obj.ignorableWhitespace(chars)</expr>
          <args>['chars:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="characters">
          <expr>obj.characters(chars)</expr>
          <args>['chars:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="startDocument">
          <expr>obj.startDocument()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="endDocument">
          <expr>obj.endDocument()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clear">
          <expr>obj.clear()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ErrorHandler" init="">
        <api name="warning">
          <expr>obj.warning(exception)</expr>
          <args>['exception:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="error">
          <expr>obj.error(exception)</expr>
          <args>['exception:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="fatalError">
          <expr>obj.fatalError(exception)</expr>
          <args>['exception:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="DOMEventStream" init="obj = DOMEventStream(stream,parser,bufsize)">
        <api name="__init__">
          <expr>None</expr>
          <args>['stream:NoneType', 'parser:NoneType', 'bufsize:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="reset">
          <expr>obj.reset()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="expandNode">
          <expr>obj.expandNode(node)</expr>
          <args>['node:Element']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="SAX2DOM" init=""/>
      <api name="parse">
        <expr>parse(stream_or_string,parser,bufsize)</expr>
        <args>['stream_or_string:str', 'parser:NoneType', 'bufsize:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parseString">
        <expr>parseString(string,parser)</expr>
        <args>['string:str', 'parser:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="xml.dom.xmlbuilder" imports="['copy', 'xml.dom', 'urllib.request', 'xml.dom.expatbuilder', 'posixpath', 'urllib.parse']" importfrom="['xml.dom.NodeFilter:NodeFilter']">
      <class name="Options" init=""/>
      <class name="DOMBuilder" init="obj = DOMBuilder()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setFeature">
          <expr>obj.setFeature(name,state)</expr>
          <args>['name:None', 'state:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="supportsFeature">
          <expr>obj.ret = supportsFeature(name)</expr>
          <args>['name:None']</args>
          <return>['hasattr:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="canSetFeature">
          <expr>obj.ret = canSetFeature(name,state)</expr>
          <args>['name:None', 'state:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getFeature">
          <expr>obj.ret = getFeature(name)</expr>
          <args>['name:None']</args>
          <return>['getattr:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parseURI">
          <expr>obj.ret = parseURI(uri)</expr>
          <args>['uri:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parseWithContext">
          <expr>obj.parseWithContext(input,cnode,action)</expr>
          <args>['input:None', 'cnode:None', 'action:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="DOMEntityResolver" init=""/>
      <class name="DOMInputSource" init="obj = DOMInputSource()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="DOMBuilderFilter" init="">
        <api name="acceptNode">
          <expr>obj.ret = acceptNode(element)</expr>
          <args>['element:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="startContainer">
          <expr>obj.ret = startContainer(element)</expr>
          <args>['element:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="DocumentLS" init="">
        <api name="abort">
          <expr>obj.abort()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="load">
          <expr>obj.load(uri)</expr>
          <args>['uri:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="loadXML">
          <expr>obj.loadXML(source)</expr>
          <args>['source:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="saveXML">
          <expr>obj.ret = saveXML(snode)</expr>
          <args>['snode:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="DOMImplementationLS" init="">
        <api name="createDOMBuilder">
          <expr>obj.ret = createDOMBuilder(mode,schemaType)</expr>
          <args>['mode:None', 'schemaType:None']</args>
          <return>['DOMBuilder:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="createDOMWriter">
          <expr>obj.createDOMWriter()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="createDOMInputSource">
          <expr>obj.ret = createDOMInputSource()</expr>
          <args>[]</args>
          <return>['DOMInputSource:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>KeyError</exception>
        <exception>AttributeError</exception>
        <exception>AttributeError</exception>
      </errors>
    </module>
    <module name="xml.etree.cElementTree" imports="[]" importfrom="['xml.etree.ElementTree:*']"/>
    <module name="xml.etree.ElementTree" imports="['sys', 're', 'warnings', 'io', 'collections', 'collections.abc', 'contextlib']" importfrom="['_elementtree:*']">
      <class name="Element" init="obj = Element(tag,attrib)">
        <api name="__init__">
          <expr>None</expr>
          <args>['tag:NoneType', 'attrib:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="copy">
          <expr>obj.ret = copy()</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="extend">
          <expr>obj.extend(elements)</expr>
          <args>['elements:list']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set">
          <expr>obj.set(key,value)</expr>
          <args>['key:str', 'value:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="QName" init="obj = QName(text_or_uri,tag)">
        <api name="__init__">
          <expr>None</expr>
          <args>['text_or_uri:NoneType', 'tag:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ElementTree" init="obj = ElementTree(element,file)">
        <api name="__init__">
          <expr>None</expr>
          <args>['element:NoneType', 'file:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getroot">
          <expr>obj.getroot()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parse">
          <expr>obj.parse(source,parser)</expr>
          <args>['source:BufferedReader', 'parser:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="write_c14n">
          <expr>obj.ret = write_c14n(file)</expr>
          <args>['file:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IterParseIterator" init=""/>
      <class name="XMLPullParser" init="obj = XMLPullParser(events)">
        <api name="__init__">
          <expr>None</expr>
          <args>['events:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['_parser:NoneType']</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="read_events">
          <expr>obj.read_events()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="TreeBuilder" init="obj = TreeBuilder(element_factory)">
        <api name="__init__">
          <expr>None</expr>
          <args>['element_factory:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['comment_factory:NoneType', 'pi_factory:NoneType', 'insert_comments:NoneType', 'insert_pis:NoneType']</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[None, None, False, False]</kwodefa>
        </api>
        <api name="data">
          <expr>obj.data(data)</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="start">
          <expr>obj.start(tag,attrs)</expr>
          <args>['tag:str', 'attrs:dict']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end">
          <expr>obj.end(tag)</expr>
          <args>['tag:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="comment">
          <expr>obj.ret = comment(text)</expr>
          <args>['text:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pi">
          <expr>obj.ret = pi(target,text)</expr>
          <args>['target:None', 'text:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="XMLParser" init="obj = XMLParser()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['target:NoneType', 'encoding:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None, None]</kwodefa>
        </api>
      </class>
      <class name="C14NWriterTarget" init="obj = C14NWriterTarget(write)">
        <api name="__init__">
          <expr>None</expr>
          <args>['write:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['with_comments:NoneType', 'strip_text:NoneType', 'rewrite_prefixes:NoneType', 'qname_aware_tags:NoneType', 'qname_aware_attrs:NoneType', 'exclude_attrs:NoneType', 'exclude_tags:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[False, False, False, None, None, None, None]</kwodefa>
        </api>
        <api name="data">
          <expr>obj.data(data)</expr>
          <args>['data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="comment">
          <expr>obj.comment(text)</expr>
          <args>['text:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pi">
          <expr>obj.pi(target,data)</expr>
          <args>['target:str', 'data:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="iselement">
        <expr>iselement(element)</expr>
        <args>['element:Element']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="SubElement">
        <expr>SubElement(parent,tag,attrib)</expr>
        <args>['parent:Element', 'tag:str', 'attrib:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="Comment">
        <expr>Comment(text)</expr>
        <args>['text:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ProcessingInstruction">
        <expr>ProcessingInstruction(target,text)</expr>
        <args>['target:str', 'text:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="register_namespace">
        <expr>register_namespace(prefix,uri)</expr>
        <args>['prefix:str', 'uri:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="tostring">
        <expr>tostring(element,encoding,method)</expr>
        <args>['element:Element', 'encoding:NoneType', 'method:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['xml_declaration:NoneType', 'default_namespace:NoneType', 'short_empty_elements:bool']</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[None, None, True]</kwodefa>
      </api>
      <api name="tostringlist">
        <expr>tostringlist(element,encoding,method)</expr>
        <args>['element:Element', 'encoding:NoneType', 'method:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['xml_declaration:NoneType', 'default_namespace:NoneType', 'short_empty_elements:bool']</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[None, None, True]</kwodefa>
      </api>
      <api name="dump">
        <expr>dump(elem)</expr>
        <args>['elem:Element']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="indent">
        <expr>indent(tree,space,level)</expr>
        <args>['tree:Element', 'space:str', 'level:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['  ', 0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parse">
        <expr>parse(source,parser)</expr>
        <args>['source:BufferedReader', 'parser:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="iterparse">
        <expr>iterparse(source,events,parser)</expr>
        <args>['source:StringIO', 'events:NoneType', 'parser:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="XML">
        <expr>XML(text,parser)</expr>
        <args>['text:str', 'parser:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="XMLID">
        <expr>XMLID(text,parser)</expr>
        <args>['text:str', 'parser:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="fromstringlist">
        <expr>ret = fromstringlist(sequence,parser)</expr>
        <args>['sequence:list', 'parser:NoneType']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="canonicalize">
        <expr>canonicalize(xml_data)</expr>
        <args>['xml_data:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['out:NoneType', 'from_file:NoneType']</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[None, None]</kwodefa>
      </api>
      <errors>
        <exception>xmlxml.etree.ElementTree.ParseError</exception>
        <exception>AttributeError</exception>
        <exception>AttributeError</exception>
        <exception>NameError</exception>
        <exception>TypeError</exception>
        <exception>AttributeError</exception>
        <exception>TypeError</exception>
        <exception>AttributeError</exception>
        <exception>TypeError</exception>
        <exception>AttributeError</exception>
        <exception>SyntaxError</exception>
        <exception>KeyError</exception>
        <exception>AttributeError</exception>
        <exception>KeyError</exception>
        <exception>self._error</exception>
        <exception>self._error</exception>
        <exception>AttributeError</exception>
        <exception>TypeError</exception>
        <exception>AttributeError</exception>
        <exception>TypeError</exception>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
      </errors>
    </module>
    <module name="xml.etree.ElementInclude" imports="['copy']" importfrom="['urllib.parse:urljoin']">
      <api name="default_loader">
        <expr>ret = default_loader(href,parse,encoding)</expr>
        <args>['href:None', 'parse:None', 'encoding:None']</args>
        <return>['data:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="include">
        <expr>include(elem,loader,base_url,max_depth)</expr>
        <args>['elem:Element', 'loader:method', 'base_url:NoneType', 'max_depth:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, 'DEFAULT_MAX_INCLUSION_DEPTH']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>xmlxml.etree.ElementInclude.FatalIncludeError</exception>
        <exception>xmlxml.etree.ElementInclude.LimitedRecursiveIncludeError</exception>
      </errors>
    </module>
    <module name="xml.etree.ElementPath" imports="['re']" importfrom="[]">
      <api name="xpath_tokenizer">
        <expr>xpath_tokenizer(pattern,namespaces)</expr>
        <args>['pattern:str', 'namespaces:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_parent_map">
        <expr>get_parent_map(context)</expr>
        <args>['context:_SelectorContext']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="prepare_child">
        <expr>prepare_child(next,token)</expr>
        <args>['next:method-wrapper', 'token:tuple']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="prepare_star">
        <expr>prepare_star(next,token)</expr>
        <args>['next:method-wrapper', 'token:tuple']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="prepare_self">
        <expr>prepare_self(next,token)</expr>
        <args>['next:method-wrapper', 'token:tuple']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="prepare_descendant">
        <expr>prepare_descendant(next,token)</expr>
        <args>['next:method-wrapper', 'token:tuple']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="prepare_parent">
        <expr>prepare_parent(next,token)</expr>
        <args>['next:method-wrapper', 'token:tuple']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="prepare_predicate">
        <expr>prepare_predicate(next,token)</expr>
        <args>['next:method-wrapper', 'token:tuple']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="iterfind">
        <expr>iterfind(elem,path,namespaces)</expr>
        <args>['elem:Element', 'path:str', 'namespaces:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="find">
        <expr>find(elem,path,namespaces)</expr>
        <args>['elem:Element', 'path:str', 'namespaces:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="findall">
        <expr>findall(elem,path,namespaces)</expr>
        <args>['elem:Element', 'path:str', 'namespaces:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="findtext">
        <expr>findtext(elem,path,default,namespaces)</expr>
        <args>['elem:Element', 'path:str', 'default:NoneType', 'namespaces:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>KeyError</exception>
        <exception>StopIteration</exception>
        <exception>StopIteration</exception>
        <exception>ValueError</exception>
        <exception>KeyError</exception>
        <exception>StopIteration</exception>
      </errors>
    </module>
  </library>
  <library name="ensurepip"/>
  <library name="pydoc_data">
    <module name="pydoc_data.topics" imports="[]" importfrom="[]"/>
  </library>
  <library name="distutils">
    <module name="distutils.archive_util" imports="['os', 'sys', 'zipfile', 'tarfile']" importfrom="['warnings:warn', 'distutils.errors:DistutilsExecError', 'distutils.spawn:spawn', 'distutils.dir_util:mkpath', 'distutils:log', 'pwd:getpwnam', 'grp:getgrnam']">
      <api name="make_tarball">
        <expr>make_tarball(base_name,base_dir,compress,verbose,dry_run,owner,group)</expr>
        <args>['base_name:str', 'base_dir:str', 'compress:str', 'verbose:int', 'dry_run:int', 'owner:NoneType', 'group:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['gzip', 0, 0, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="make_zipfile">
        <expr>make_zipfile(base_name,base_dir,verbose,dry_run)</expr>
        <args>['base_name:str', 'base_dir:str', 'verbose:int', 'dry_run:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0, 0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="check_archive_formats">
        <expr>check_archive_formats(formats)</expr>
        <args>['formats:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="make_archive">
        <expr>make_archive(base_name,format,root_dir,base_dir,verbose,dry_run,owner,group)</expr>
        <args>['base_name:str', 'format:str', 'root_dir:str', 'base_dir:NoneType', 'verbose:int', 'dry_run:int', 'owner:NoneType', 'group:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, 0, 0, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ImportError</exception>
        <exception>ImportError</exception>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>DistutilsExecError</exception>
        <exception>RuntimeError</exception>
        <exception>KeyError</exception>
      </errors>
    </module>
    <module name="distutils.text_file" imports="['sys', 'io']" importfrom="[]">
      <class name="TextFile" init="obj = TextFile(filename,file)">
        <api name="__init__">
          <expr>None</expr>
          <args>['filename:NoneType', 'file:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="gen_error">
          <expr>obj.ret = gen_error(msg,line)</expr>
          <args>['msg:None', 'line:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="error">
          <expr>obj.error(msg,line)</expr>
          <args>['msg:None', 'line:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="readlines">
          <expr>obj.readlines()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unreadline">
          <expr>obj.unreadline(line)</expr>
          <args>['line:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
    </module>
    <module name="distutils.versionpredicate" imports="['re', 'distutils.version', 'operator']" importfrom="[]">
      <class name="VersionPredicate" init="obj = VersionPredicate(versionPredicateStr)">
        <api name="__init__">
          <expr>None</expr>
          <args>['versionPredicateStr:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="satisfied_by">
          <expr>obj.satisfied_by(version)</expr>
          <args>['version:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="splitUp">
        <expr>splitUp(pred)</expr>
        <args>['pred:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="split_provision">
        <expr>split_provision(value)</expr>
        <args>['value:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="distutils.bcppcompiler" imports="['os']" importfrom="['distutils.errors:DistutilsExecError', 'distutils.errors:CompileError', 'distutils.errors:LibError', 'distutils.errors:LinkError', 'distutils.errors:UnknownFileError', 'distutils.ccompiler:CCompiler', 'distutils.ccompiler:gen_preprocess_options', 'distutils.file_util:write_file', 'distutils.dep_util:newer', 'distutils:log']">
      <class name="BCPPCompiler" init="obj = BCPPCompiler(verbose,dry_run,force)">
        <api name="__init__">
          <expr>None</expr>
          <args>['verbose:NoneType', 'dry_run:NoneType', 'force:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[0, 0, 0]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="compile">
          <expr>obj.ret = compile(sources,output_dir,macros,include_dirs,debug,extra_preargs,extra_postargs,depends)</expr>
          <args>['sources:None', 'output_dir:None', 'macros:None', 'include_dirs:None', 'debug:None', 'extra_preargs:None', 'extra_postargs:None', 'depends:None']</args>
          <return>['objects:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, 0, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="create_static_lib">
          <expr>obj.create_static_lib(objects,output_libname,output_dir,debug,target_lang)</expr>
          <args>['objects:None', 'output_libname:None', 'output_dir:None', 'debug:None', 'target_lang:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, 0, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="link">
          <expr>obj.link(target_desc,objects,output_filename,output_dir,libraries,library_dirs,runtime_library_dirs,export_symbols,debug,extra_preargs,extra_postargs,build_temp,target_lang)</expr>
          <args>['target_desc:None', 'objects:None', 'output_filename:None', 'output_dir:None', 'libraries:None', 'library_dirs:None', 'runtime_library_dirs:None', 'export_symbols:None', 'debug:None', 'extra_preargs:None', 'extra_postargs:None', 'build_temp:None', 'target_lang:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None, 0, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="object_filenames">
          <expr>obj.ret = object_filenames(source_filenames,strip_dir,output_dir)</expr>
          <args>['source_filenames:None', 'strip_dir:None', 'output_dir:None']</args>
          <return>['obj_names:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[0, '']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="preprocess">
          <expr>obj.preprocess(source,output_file,macros,include_dirs,extra_preargs,extra_postargs)</expr>
          <args>['source:None', 'output_file:None', 'macros:None', 'include_dirs:None', 'extra_preargs:None', 'extra_postargs:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>KeyError</exception>
        <exception>DistutilsExecError</exception>
        <exception>DistutilsExecError</exception>
        <exception>DistutilsExecError</exception>
        <exception>DistutilsExecError</exception>
        <exception>DistutilsExecError</exception>
      </errors>
    </module>
    <module name="distutils.dep_util" imports="['os']" importfrom="['distutils.errors:DistutilsFileError', 'stat:ST_MTIME']">
      <api name="newer">
        <expr>newer(source,target)</expr>
        <args>['source:str', 'target:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="newer_pairwise">
        <expr>newer_pairwise(sources,targets)</expr>
        <args>['sources:list', 'targets:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="newer_group">
        <expr>newer_group(sources,target,missing)</expr>
        <args>['sources:list', 'target:str', 'missing:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['error']</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="distutils.cygwinccompiler" imports="['os', 'sys', 'copy', 're']" importfrom="['subprocess:Popen', 'subprocess:PIPE', 'subprocess:check_output', 'distutils.unixccompiler:UnixCCompiler', 'distutils.file_util:write_file', 'distutils.errors:DistutilsExecError', 'distutils.errors:CCompilerError', 'distutils.errors:CompileError', 'distutils.errors:UnknownFileError', 'distutils.version:LooseVersion', 'distutils.spawn:find_executable', 'distutils:sysconfig']">
      <class name="CygwinCCompiler" init="obj = CygwinCCompiler(verbose,dry_run,force)">
        <api name="__init__">
          <expr>None</expr>
          <args>['verbose:NoneType', 'dry_run:NoneType', 'force:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[0, 0, 0]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="object_filenames">
          <expr>obj.ret = object_filenames(source_filenames,strip_dir,output_dir)</expr>
          <args>['source_filenames:None', 'strip_dir:None', 'output_dir:None']</args>
          <return>['obj_names:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[0, '']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Mingw32CCompiler" init="obj = Mingw32CCompiler(verbose,dry_run,force)">
        <api name="__init__">
          <expr>None</expr>
          <args>['verbose:NoneType', 'dry_run:NoneType', 'force:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[0, 0, 0]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="get_msvcr">
        <expr>get_msvcr()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="check_config_h">
        <expr>check_config_h()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_versions">
        <expr>get_versions()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="is_cygwingcc">
        <expr>ret = is_cygwingcc()</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>DistutilsExecError</exception>
        <exception>DistutilsExecError</exception>
        <exception>OSError</exception>
      </errors>
    </module>
    <module name="distutils.debug" imports="['os']" importfrom="[]"/>
    <module name="distutils.filelist" imports="['os', 're', 'fnmatch', 'functools']" importfrom="['distutils.util:convert_path', 'distutils.errors:DistutilsTemplateError', 'distutils.errors:DistutilsInternalError', 'distutils:log', 'distutils.debug:DEBUG']">
      <class name="FileList" init="obj = FileList(warn,debug_print)">
        <api name="__init__">
          <expr>None</expr>
          <args>['warn:NoneType', 'debug_print:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_allfiles">
          <expr>obj.set_allfiles(allfiles)</expr>
          <args>['allfiles:list']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sort">
          <expr>obj.sort()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="remove_duplicates">
          <expr>obj.remove_duplicates()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="process_template_line">
          <expr>obj.process_template_line(line)</expr>
          <args>['line:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="include_pattern">
          <expr>obj.include_pattern(pattern,anchor,prefix,is_regex)</expr>
          <args>['pattern:str', 'anchor:int', 'prefix:NoneType', 'is_regex:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[1, None, 0]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="exclude_pattern">
          <expr>obj.exclude_pattern(pattern,anchor,prefix,is_regex)</expr>
          <args>['pattern:str', 'anchor:int', 'prefix:NoneType', 'is_regex:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[1, None, 0]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="findall">
        <expr>findall(dir)</expr>
        <args>['dir:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="glob_to_re">
        <expr>glob_to_re(pattern)</expr>
        <args>['pattern:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="translate_pattern">
        <expr>translate_pattern(pattern,anchor,prefix,is_regex)</expr>
        <args>['pattern:str', 'anchor:int', 'prefix:NoneType', 'is_regex:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[1, None, 0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="distutils.extension" imports="['os', 'warnings']" importfrom="['distutils.sysconfig:parse_makefile', 'distutils.sysconfig:expand_makefile_vars', 'distutils.text_file:TextFile', 'distutils.util:split_quoted']">
      <class name="Extension" init="obj = Extension(name,sources,include_dirs,define_macros,undef_macros,library_dirs,libraries,runtime_library_dirs,extra_objects,extra_compile_args,extra_link_args,export_symbols,swig_opts,depends,language,optional)">
        <api name="__init__">
          <expr>None</expr>
          <args>['name:NoneType', 'sources:NoneType', 'include_dirs:NoneType', 'define_macros:NoneType', 'undef_macros:NoneType', 'library_dirs:NoneType', 'libraries:NoneType', 'runtime_library_dirs:NoneType', 'extra_objects:NoneType', 'extra_compile_args:NoneType', 'extra_link_args:NoneType', 'export_symbols:NoneType', 'swig_opts:NoneType', 'depends:NoneType', 'language:NoneType', 'optional:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None, None, None, None, None, None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="read_setup_file">
        <expr>ret = read_setup_file(filename)</expr>
        <args>['filename:str']</args>
        <return>['extensions:list']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="distutils.spawn" imports="['sys', 'os', 'subprocess']" importfrom="['distutils.errors:DistutilsPlatformError', 'distutils.errors:DistutilsExecError', 'distutils.debug:DEBUG', 'distutils:log', 'distutils:sysconfig']">
      <api name="spawn">
        <expr>spawn(cmd,search_path,verbose,dry_run)</expr>
        <args>['cmd:list', 'search_path:int', 'verbose:int', 'dry_run:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[1, 0, 0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="find_executable">
        <expr>find_executable(executable,path)</expr>
        <args>['executable:str', 'path:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>OSError</exception>
        <exception>AttributeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module name="distutils.log" imports="['sys']" importfrom="[]">
      <class name="Log" init="obj = Log(threshold)">
        <api name="__init__">
          <expr>None</expr>
          <args>['threshold:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['WARN']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="log">
          <expr>obj.log(level,msg)</expr>
          <args>['level:int', 'msg:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="debug">
          <expr>obj.debug(msg)</expr>
          <args>['msg:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info">
          <expr>obj.info(msg)</expr>
          <args>['msg:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="warn">
          <expr>obj.warn(msg)</expr>
          <args>['msg:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="error">
          <expr>obj.error(msg)</expr>
          <args>['msg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="fatal">
          <expr>obj.fatal(msg)</expr>
          <args>['msg:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="set_threshold">
        <expr>set_threshold(level)</expr>
        <args>['level:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="set_verbosity">
        <expr>set_verbosity(v)</expr>
        <args>['v:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>UnicodeEncodeError</exception>
      </errors>
    </module>
    <module name="distutils.fancy_getopt" imports="['sys', 'string', 're', 'getopt']" importfrom="['distutils.errors:*']">
      <class name="FancyGetopt" init="obj = FancyGetopt(option_table)">
        <api name="__init__">
          <expr>None</expr>
          <args>['option_table:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_option_table">
          <expr>obj.set_option_table(option_table)</expr>
          <args>['option_table:list']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_option">
          <expr>obj.add_option(long_option,short_option,help_string)</expr>
          <args>['long_option:None', 'short_option:None', 'help_string:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_option">
          <expr>obj.ret = has_option(long_option)</expr>
          <args>['long_option:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_aliases">
          <expr>obj.set_aliases(alias)</expr>
          <args>['alias:dict']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_negative_aliases">
          <expr>obj.set_negative_aliases(negative_alias)</expr>
          <args>['negative_alias:dict']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_option_order">
          <expr>obj.get_option_order()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="generate_help">
          <expr>obj.generate_help(header)</expr>
          <args>['header:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="print_help">
          <expr>obj.print_help(header,file)</expr>
          <args>['header:str', 'file:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="OptionDummy" init="obj = OptionDummy(options)">
        <api name="__init__">
          <expr>None</expr>
          <args>['options:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="fancy_getopt">
        <expr>ret = fancy_getopt(options,negative_opt,object,args)</expr>
        <args>['options:None', 'negative_opt:None', 'object:None', 'args:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="wrap_text">
        <expr>wrap_text(text,width)</expr>
        <args>['text:str', 'width:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="translate_longopt">
        <expr>translate_longopt(opt)</expr>
        <args>['opt:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>getopt.error</exception>
      </errors>
    </module>
    <module name="distutils.file_util" imports="['os', 'errno']" importfrom="['distutils.errors:DistutilsFileError', 'distutils:log', 'distutils.dep_util:newer', 'stat:ST_ATIME', 'stat:ST_MTIME', 'stat:ST_MODE', 'stat:S_IMODE', 'os.path:exists', 'os.path:isfile', 'os.path:isdir', 'os.path:basename', 'os.path:dirname']">
      <api name="copy_file">
        <expr>copy_file(src,dst,preserve_mode,preserve_times,update,link,verbose,dry_run)</expr>
        <args>['src:str', 'dst:str', 'preserve_mode:int', 'preserve_times:int', 'update:int', 'link:NoneType', 'verbose:int', 'dry_run:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[1, 1, 0, None, 1, 0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="move_file">
        <expr>move_file(src,dst,verbose,dry_run)</expr>
        <args>['src:str', 'dst:str', 'verbose:int', 'dry_run:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[1, 0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="write_file">
        <expr>write_file(filename,contents)</expr>
        <args>['filename:str', 'contents:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
      </errors>
    </module>
    <module name="distutils.sysconfig" imports="['os', 're', 'sys', 'warnings']" importfrom="['errors:DistutilsPlatformError', 'distutils.text_file:TextFile']">
      <api name="get_python_version">
        <expr>get_python_version()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_python_inc">
        <expr>get_python_inc(plat_specific,prefix)</expr>
        <args>['plat_specific:int', 'prefix:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_python_lib">
        <expr>get_python_lib(plat_specific,standard_lib,prefix)</expr>
        <args>['plat_specific:int', 'standard_lib:int', 'prefix:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0, 0, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="customize_compiler">
        <expr>customize_compiler(compiler)</expr>
        <args>['compiler:UnixCCompiler']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_config_h_filename">
        <expr>ret = get_config_h_filename()</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_makefile_filename">
        <expr>get_makefile_filename()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parse_config_h">
        <expr>ret = parse_config_h(fp,g)</expr>
        <args>['fp:None', 'g:None']</args>
        <return>['g:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parse_makefile">
        <expr>parse_makefile(fn,g)</expr>
        <args>['fn:str', 'g:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="expand_makefile_vars">
        <expr>expand_makefile_vars(s,vars)</expr>
        <args>['s:str', 'vars:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_config_vars">
        <expr>get_config_vars()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_config_var">
        <expr>get_config_var(name)</expr>
        <args>['name:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ValueError</exception>
        <exception>ValueError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module name="distutils.unixccompiler" imports="['os', 'sys', 're']" importfrom="['distutils:sysconfig', 'distutils.dep_util:newer', 'distutils.ccompiler:CCompiler', 'distutils.ccompiler:gen_preprocess_options', 'distutils.ccompiler:gen_lib_options', 'distutils.errors:DistutilsExecError', 'distutils.errors:CompileError', 'distutils.errors:LibError', 'distutils.errors:LinkError', 'distutils:log']">
      <class name="UnixCCompiler" init="">
        <api name="preprocess">
          <expr>obj.preprocess(source,output_file,macros,include_dirs,extra_preargs,extra_postargs)</expr>
          <args>['source:str', 'output_file:str', 'macros:NoneType', 'include_dirs:NoneType', 'extra_preargs:NoneType', 'extra_postargs:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="create_static_lib">
          <expr>obj.create_static_lib(objects,output_libname,output_dir,debug,target_lang)</expr>
          <args>['objects:list', 'output_libname:str', 'output_dir:str', 'debug:NoneType', 'target_lang:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, 0, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="link">
          <expr>obj.link(target_desc,objects,output_filename,output_dir,libraries,library_dirs,runtime_library_dirs,export_symbols,debug,extra_preargs,extra_postargs,build_temp,target_lang)</expr>
          <args>['target_desc:str', 'objects:list', 'output_filename:str', 'output_dir:NoneType', 'libraries:list', 'library_dirs:list', 'runtime_library_dirs:list', 'export_symbols:list', 'debug:NoneType', 'extra_preargs:NoneType', 'extra_postargs:list', 'build_temp:str', 'target_lang:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None, 0, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="library_dir_option">
          <expr>obj.ret = library_dir_option(dir)</expr>
          <args>['dir:None']</args>
          <return>['ret:int']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="runtime_library_dir_option">
          <expr>obj.ret = runtime_library_dir_option(dir)</expr>
          <args>['dir:None']</args>
          <return>['ret:None', 'ret:int']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="library_option">
          <expr>obj.ret = library_option(lib)</expr>
          <args>['lib:None']</args>
          <return>['ret:int']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="find_library_file">
          <expr>obj.ret = find_library_file(dirs,lib,debug)</expr>
          <args>['dirs:None', 'lib:None', 'debug:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[0]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>DistutilsExecError</exception>
        <exception>DistutilsExecError</exception>
        <exception>DistutilsExecError</exception>
        <exception>DistutilsExecError</exception>
      </errors>
    </module>
    <module name="distutils.util" imports="['os', 're', 'importlib.util', 'string', 'sys', 'distutils.sysconfig', 'pwd', 'subprocess']" importfrom="['distutils.errors:DistutilsPlatformError', 'distutils.dep_util:newer', 'distutils.spawn:spawn', 'distutils:log', 'distutils.errors:DistutilsByteCompileError', '_aix_support:aix_platform', 'tempfile:mkstemp', 'py_compile:compile', 'lib2to3.refactor:RefactoringTool', 'lib2to3.refactor:get_fixers_from_package', 'distutils.dir_util:mkpath', 'distutils.file_util:copy_file', 'distutils.filelist:FileList']">
      <class name="DistutilsRefactoringTool" init=""/>
      <class name="Mixin2to3" init=""/>
      <api name="get_host_platform">
        <expr>get_host_platform()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_platform">
        <expr>get_platform()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="convert_path">
        <expr>convert_path(pathname)</expr>
        <args>['pathname:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="change_root">
        <expr>change_root(new_root,pathname)</expr>
        <args>['new_root:str', 'pathname:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="check_environ">
        <expr>check_environ()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="subst_vars">
        <expr>subst_vars(s,local_vars)</expr>
        <args>['s:str', 'local_vars:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="grok_environment_error">
        <expr>ret = grok_environment_error(exc,prefix)</expr>
        <args>['exc:OSError', 'prefix:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['error: ']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="split_quoted">
        <expr>split_quoted(s)</expr>
        <args>['s:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="execute">
        <expr>execute(func,args,msg,verbose,dry_run)</expr>
        <args>['func:builtin_function_or_method', 'args:tuple', 'msg:str', 'verbose:int', 'dry_run:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, 0, 0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="strtobool">
        <expr>strtobool(val)</expr>
        <args>['val:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="byte_compile">
        <expr>byte_compile(py_files,optimize,force,prefix,base_dir,verbose,dry_run,direct)</expr>
        <args>['py_files:list', 'optimize:int', 'force:NoneType', 'prefix:str', 'base_dir:NoneType', 'verbose:int', 'dry_run:int', 'direct:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0, 0, None, None, 1, 0, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="rfc822_escape">
        <expr>rfc822_escape(header)</expr>
        <args>['header:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="run_2to3">
        <expr>run_2to3(files,fixer_names,options,explicit)</expr>
        <args>['files:None', 'fixer_names:None', 'options:None', 'explicit:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="copydir_run_2to3">
        <expr>ret = copydir_run_2to3(src,dest,template,fixer_names,options,explicit)</expr>
        <args>['src:None', 'dest:None', 'template:None', 'fixer_names:None', 'options:None', 'explicit:None']</args>
        <return>['copied:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>ImportError</exception>
      </errors>
    </module>
    <module name="distutils.config" imports="['os', 'cgi']" importfrom="['configparser:RawConfigParser', 'distutils.cmd:Command']">
      <class name="PyPIRCCommand" init="">
        <api name="initialize_options">
          <expr>obj.initialize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
    </module>
    <module name="distutils.cmd" imports="['sys', 'os', 're']" importfrom="['distutils.errors:DistutilsOptionError', 'distutils:util', 'distutils:dir_util', 'distutils:file_util', 'distutils:archive_util', 'distutils:dep_util', 'distutils:log', 'distutils.fancy_getopt:longopt_xlate', 'distutils.debug:DEBUG', 'distutils.spawn:spawn']">
      <class name="Command" init="obj = Command(dist)">
        <api name="__init__">
          <expr>None</expr>
          <args>['dist:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="initialize_options">
          <expr>obj.initialize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dump_options">
          <expr>obj.dump_options(header,indent)</expr>
          <args>['header:None', 'indent:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, '']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run">
          <expr>obj.run()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="debug_print">
          <expr>obj.debug_print(msg)</expr>
          <args>['msg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ensure_string">
          <expr>obj.ensure_string(option,default)</expr>
          <args>['option:None', 'default:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ensure_string_list">
          <expr>obj.ensure_string_list(option)</expr>
          <args>['option:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ensure_filename">
          <expr>obj.ensure_filename(option)</expr>
          <args>['option:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ensure_dirname">
          <expr>obj.ensure_dirname(option)</expr>
          <args>['option:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_command_name">
          <expr>obj.ret = get_command_name()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_undefined_options">
          <expr>obj.set_undefined_options(src_cmd)</expr>
          <args>['src_cmd:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_finalized_command">
          <expr>obj.ret = get_finalized_command(command,create)</expr>
          <args>['command:None', 'create:None']</args>
          <return>['cmd_obj:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[1]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_sub_commands">
          <expr>obj.ret = get_sub_commands()</expr>
          <args>[]</args>
          <return>['commands:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="make_file">
          <expr>obj.make_file(infiles,outfile,func,args,exec_msg,skip_msg,level)</expr>
          <args>['infiles:None', 'outfile:None', 'func:None', 'args:None', 'exec_msg:None', 'skip_msg:None', 'level:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, 1]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
    </module>
    <module name="distutils.core" imports="['os', 'sys']" importfrom="['distutils.debug:DEBUG', 'distutils.errors:*', 'distutils.dist:Distribution', 'distutils.cmd:Command', 'distutils.config:PyPIRCCommand', 'distutils.extension:Extension']">
      <api name="gen_usage">
        <expr>ret = gen_usage(script_name)</expr>
        <args>['script_name:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="setup">
        <expr>setup()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="run_setup">
        <expr>run_setup(script_name,script_args,stop_after)</expr>
        <args>['script_name:str', 'script_args:NoneType', 'stop_after:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, 'run']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>DistutilsSetupError</exception>
        <exception>DistutilsArgError</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>OSError</exception>
        <exception>DistutilsError</exception>
        <exception>CCompilerError</exception>
        <exception>SystemExit</exception>
      </errors>
    </module>
    <module name="distutils.version" imports="['re']" importfrom="[]">
      <class name="Version" init="obj = Version(vstring)">
        <api name="__init__">
          <expr>None</expr>
          <args>['vstring:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StrictVersion" init="">
        <api name="parse">
          <expr>obj.parse(vstring)</expr>
          <args>['vstring:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="LooseVersion" init="obj = LooseVersion(vstring)">
        <api name="__init__">
          <expr>None</expr>
          <args>['vstring:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parse">
          <expr>obj.parse(vstring)</expr>
          <args>['vstring:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module name="distutils.errors" imports="[]" importfrom="[]">
      <class name="DistutilsError" init=""/>
      <class name="CCompilerError" init=""/>
      <errors>
        <exception>distutilsdistutils.errors.DistutilsModuleError</exception>
        <exception>distutilsdistutils.errors.DistutilsClassError</exception>
        <exception>distutilsdistutils.errors.DistutilsGetoptError</exception>
        <exception>distutilsdistutils.errors.DistutilsArgError</exception>
        <exception>distutilsdistutils.errors.DistutilsFileError</exception>
        <exception>distutilsdistutils.errors.DistutilsOptionError</exception>
        <exception>distutilsdistutils.errors.DistutilsSetupError</exception>
        <exception>distutilsdistutils.errors.DistutilsPlatformError</exception>
        <exception>distutilsdistutils.errors.DistutilsExecError</exception>
        <exception>distutilsdistutils.errors.DistutilsInternalError</exception>
        <exception>distutilsdistutils.errors.DistutilsTemplateError</exception>
        <exception>distutilsdistutils.errors.DistutilsByteCompileError</exception>
        <exception>distutilsdistutils.errors.PreprocessError</exception>
        <exception>distutilsdistutils.errors.CompileError</exception>
        <exception>distutilsdistutils.errors.LibError</exception>
        <exception>distutilsdistutils.errors.LinkError</exception>
        <exception>distutilsdistutils.errors.UnknownFileError</exception>
      </errors>
    </module>
    <module name="distutils.dist" imports="['sys', 'os', 're', 'warnings', 'distutils.command', 'distutils.versionpredicate']" importfrom="['email:message_from_file', 'distutils.errors:*', 'distutils.fancy_getopt:FancyGetopt', 'distutils.fancy_getopt:translate_longopt', 'distutils.util:check_environ', 'distutils.util:strtobool', 'distutils.util:rfc822_escape', 'distutils:log', 'distutils.debug:DEBUG', 'pprint:pformat', 'configparser:ConfigParser', 'distutils.cmd:Command', 'distutils.core:gen_usage']">
      <class name="Distribution" init="">
        <api name="dump_option_dicts">
          <expr>obj.dump_option_dicts(header,commands,indent)</expr>
          <args>['header:None', 'commands:None', 'indent:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, '']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parse_config_files">
          <expr>obj.parse_config_files(filenames)</expr>
          <args>['filenames:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parse_command_line">
          <expr>obj.parse_command_line()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="handle_display_options">
          <expr>obj.handle_display_options(option_order)</expr>
          <args>['option_order:list']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_command_list">
          <expr>obj.ret = get_command_list()</expr>
          <args>[]</args>
          <return>['rv:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_command_packages">
          <expr>obj.get_command_packages()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run_commands">
          <expr>obj.run_commands()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_pure_modules">
          <expr>obj.has_pure_modules()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_ext_modules">
          <expr>obj.has_ext_modules()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_c_libraries">
          <expr>obj.has_c_libraries()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_modules">
          <expr>obj.ret = has_modules()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_headers">
          <expr>obj.has_headers()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_scripts">
          <expr>obj.has_scripts()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_data_files">
          <expr>obj.has_data_files()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_pure">
          <expr>obj.ret = is_pure()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="DistributionMetadata" init="">
        <api name="read_pkg_file">
          <expr>obj.read_pkg_file(file)</expr>
          <args>['file:StringIO']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="write_pkg_info">
          <expr>obj.write_pkg_info(base_dir)</expr>
          <args>['base_dir:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_name">
          <expr>obj.get_name()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_version">
          <expr>obj.get_version()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_fullname">
          <expr>obj.get_fullname()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_author">
          <expr>obj.ret = get_author()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_author_email">
          <expr>obj.ret = get_author_email()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_maintainer">
          <expr>obj.ret = get_maintainer()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_maintainer_email">
          <expr>obj.ret = get_maintainer_email()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_contact">
          <expr>obj.get_contact()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_contact_email">
          <expr>obj.get_contact_email()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_url">
          <expr>obj.get_url()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_license">
          <expr>obj.get_license()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_description">
          <expr>obj.get_description()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_long_description">
          <expr>obj.get_long_description()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_keywords">
          <expr>obj.get_keywords()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_keywords">
          <expr>obj.set_keywords(value)</expr>
          <args>['value:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_platforms">
          <expr>obj.get_platforms()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_platforms">
          <expr>obj.set_platforms(value)</expr>
          <args>['value:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_classifiers">
          <expr>obj.get_classifiers()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_classifiers">
          <expr>obj.set_classifiers(value)</expr>
          <args>['value:list']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_download_url">
          <expr>obj.get_download_url()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_requires">
          <expr>obj.get_requires()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_requires">
          <expr>obj.set_requires(value)</expr>
          <args>['value:list']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_provides">
          <expr>obj.get_provides()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_provides">
          <expr>obj.set_provides(value)</expr>
          <args>['value:list']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_obsoletes">
          <expr>obj.get_obsoletes()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_obsoletes">
          <expr>obj.set_obsoletes(value)</expr>
          <args>['value:list']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="fix_help_options">
        <expr>fix_help_options(options)</expr>
        <args>['options:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ImportError</exception>
        <exception>ValueError</exception>
        <exception>DistutilsModuleError</exception>
        <exception>AttributeError</exception>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>AttributeError</exception>
        <exception>AttributeError</exception>
        <exception>AttributeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module name="distutils.dir_util" imports="['os', 'errno']" importfrom="['distutils.errors:DistutilsFileError', 'distutils.errors:DistutilsInternalError', 'distutils:log', 'distutils.file_util:copy_file']">
      <api name="mkpath">
        <expr>mkpath(name,mode,verbose,dry_run)</expr>
        <args>['name:str', 'mode:int', 'verbose:int', 'dry_run:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[511, 1, 0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="create_tree">
        <expr>create_tree(base_dir,files,mode,verbose,dry_run)</expr>
        <args>['base_dir:str', 'files:list', 'mode:int', 'verbose:int', 'dry_run:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[511, 1, 0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="copy_tree">
        <expr>copy_tree(src,dst,preserve_mode,preserve_times,preserve_symlinks,update,verbose,dry_run)</expr>
        <args>['src:str', 'dst:NoneType', 'preserve_mode:int', 'preserve_times:int', 'preserve_symlinks:int', 'update:int', 'verbose:int', 'dry_run:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[1, 1, 0, 0, 1, 0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="remove_tree">
        <expr>remove_tree(directory,verbose,dry_run)</expr>
        <args>['directory:str', 'verbose:int', 'dry_run:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[1, 0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ensure_relative">
        <expr>ensure_relative(path)</expr>
        <args>['path:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
      </errors>
    </module>
    <module name="distutils.ccompiler" imports="['sys', 'os', 're', 'tempfile']" importfrom="['distutils.errors:*', 'distutils.spawn:spawn', 'distutils.file_util:move_file', 'distutils.dir_util:mkpath', 'distutils.dep_util:newer_group', 'distutils.util:split_quoted', 'distutils.util:execute', 'distutils:log', 'distutils.debug:DEBUG', 'distutils.fancy_getopt:FancyGetopt']">
      <class name="CCompiler" init="obj = CCompiler(verbose,dry_run,force)">
        <api name="__init__">
          <expr>None</expr>
          <args>['verbose:NoneType', 'dry_run:NoneType', 'force:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[0, 0, 0]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_executables">
          <expr>obj.set_executables()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="define_macro">
          <expr>obj.define_macro(name,value)</expr>
          <args>['name:None', 'value:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="undefine_macro">
          <expr>obj.undefine_macro(name)</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_include_dir">
          <expr>obj.add_include_dir(dir)</expr>
          <args>['dir:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_include_dirs">
          <expr>obj.set_include_dirs(dirs)</expr>
          <args>['dirs:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_library">
          <expr>obj.add_library(libname)</expr>
          <args>['libname:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_libraries">
          <expr>obj.set_libraries(libnames)</expr>
          <args>['libnames:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_library_dir">
          <expr>obj.add_library_dir(dir)</expr>
          <args>['dir:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_library_dirs">
          <expr>obj.set_library_dirs(dirs)</expr>
          <args>['dirs:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_runtime_library_dir">
          <expr>obj.add_runtime_library_dir(dir)</expr>
          <args>['dir:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_runtime_library_dirs">
          <expr>obj.set_runtime_library_dirs(dirs)</expr>
          <args>['dirs:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_link_object">
          <expr>obj.add_link_object(object)</expr>
          <args>['object:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_link_objects">
          <expr>obj.set_link_objects(objects)</expr>
          <args>['objects:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="detect_language">
          <expr>obj.ret = detect_language(sources)</expr>
          <args>['sources:None']</args>
          <return>['lang:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="preprocess">
          <expr>obj.preprocess(source,output_file,macros,include_dirs,extra_preargs,extra_postargs)</expr>
          <args>['source:None', 'output_file:None', 'macros:None', 'include_dirs:None', 'extra_preargs:None', 'extra_postargs:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="create_static_lib">
          <expr>obj.create_static_lib(objects,output_libname,output_dir,debug,target_lang)</expr>
          <args>['objects:None', 'output_libname:None', 'output_dir:None', 'debug:None', 'target_lang:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, 0, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="link_shared_lib">
          <expr>obj.link_shared_lib(objects,output_libname,output_dir,libraries,library_dirs,runtime_library_dirs,export_symbols,debug,extra_preargs,extra_postargs,build_temp,target_lang)</expr>
          <args>['objects:None', 'output_libname:None', 'output_dir:None', 'libraries:None', 'library_dirs:None', 'runtime_library_dirs:None', 'export_symbols:None', 'debug:None', 'extra_preargs:None', 'extra_postargs:None', 'build_temp:None', 'target_lang:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None, 0, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="link_shared_object">
          <expr>obj.link_shared_object(objects,output_filename,output_dir,libraries,library_dirs,runtime_library_dirs,export_symbols,debug,extra_preargs,extra_postargs,build_temp,target_lang)</expr>
          <args>['objects:None', 'output_filename:None', 'output_dir:None', 'libraries:None', 'library_dirs:None', 'runtime_library_dirs:None', 'export_symbols:None', 'debug:None', 'extra_preargs:None', 'extra_postargs:None', 'build_temp:None', 'target_lang:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None, 0, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="library_dir_option">
          <expr>obj.library_dir_option(dir)</expr>
          <args>['dir:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="runtime_library_dir_option">
          <expr>obj.runtime_library_dir_option(dir)</expr>
          <args>['dir:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="library_option">
          <expr>obj.library_option(lib)</expr>
          <args>['lib:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_function">
          <expr>obj.ret = has_function(funcname,includes,include_dirs,libraries,library_dirs)</expr>
          <args>['funcname:None', 'includes:None', 'include_dirs:None', 'libraries:None', 'library_dirs:None']</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="find_library_file">
          <expr>obj.find_library_file(dirs,lib,debug)</expr>
          <args>['dirs:None', 'lib:None', 'debug:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[0]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="shared_object_filename">
          <expr>obj.ret = shared_object_filename(basename,strip_dir,output_dir)</expr>
          <args>['basename:None', 'strip_dir:None', 'output_dir:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[0, '']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="executable_filename">
          <expr>obj.ret = executable_filename(basename,strip_dir,output_dir)</expr>
          <args>['basename:None', 'strip_dir:None', 'output_dir:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[0, '']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="library_filename">
          <expr>obj.ret = library_filename(libname,lib_type,strip_dir,output_dir)</expr>
          <args>['libname:None', 'lib_type:None', 'strip_dir:None', 'output_dir:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['static', 0, '']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="announce">
          <expr>obj.announce(msg,level)</expr>
          <args>['msg:None', 'level:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[1]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="debug_print">
          <expr>obj.debug_print(msg)</expr>
          <args>['msg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="warn">
          <expr>obj.warn(msg)</expr>
          <args>['msg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="get_default_compiler">
        <expr>get_default_compiler(osname,platform)</expr>
        <args>['osname:NoneType', 'platform:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="show_compilers">
        <expr>show_compilers()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="new_compiler">
        <expr>new_compiler(plat,compiler,verbose,dry_run,force)</expr>
        <args>['plat:NoneType', 'compiler:NoneType', 'verbose:int', 'dry_run:int', 'force:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, 0, 0, 0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="gen_preprocess_options">
        <expr>gen_preprocess_options(macros,include_dirs)</expr>
        <args>['macros:list', 'include_dirs:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="gen_lib_options">
        <expr>gen_lib_options(compiler,library_dirs,runtime_library_dirs,libraries)</expr>
        <args>['compiler:UnixCCompiler', 'library_dirs:list', 'runtime_library_dirs:list', 'libraries:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ValueError</exception>
        <exception>KeyError</exception>
        <exception>CompileError</exception>
        <exception>LinkError</exception>
        <exception>TypeError</exception>
        <exception>KeyError</exception>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
      </errors>
    </module>
    <module name="distutils.command.bdist_rpm" imports="['subprocess', 'sys', 'os']" importfrom="['distutils.core:Command', 'distutils.debug:DEBUG', 'distutils.file_util:write_file', 'distutils.errors:*', 'distutils.sysconfig:get_python_version', 'distutils:log']">
      <class name="bdist_rpm" init="">
        <api name="initialize_options">
          <expr>obj.initialize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run">
          <expr>obj.run()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
    </module>
    <module name="distutils.command.check" imports="[]" importfrom="['distutils.core:Command', 'distutils.errors:DistutilsSetupError', 'docutils.utils:Reporter', 'docutils.parsers.rst:Parser', 'docutils:frontend', 'docutils:nodes']">
      <class name="SilentReporter" init="obj = SilentReporter(source,report_level,halt_level,stream,debug,encoding,error_handler)">
        <api name="__init__">
          <expr>None</expr>
          <args>['source:NoneType', 'report_level:NoneType', 'halt_level:NoneType', 'stream:NoneType', 'debug:NoneType', 'encoding:NoneType', 'error_handler:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, 0, 'ascii', 'replace']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="check" init="">
        <api name="initialize_options">
          <expr>obj.initialize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run">
          <expr>obj.run()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>Exception</exception>
        <exception>AttributeError</exception>
      </errors>
    </module>
    <module name="distutils.command.build_scripts" imports="['os', 're', 'tokenize']" importfrom="['stat:ST_MODE', 'distutils:sysconfig', 'distutils.core:Command', 'distutils.dep_util:newer', 'distutils.util:convert_path', 'distutils.util:Mixin2to3', 'distutils:log']">
      <class name="build_scripts" init="">
        <api name="initialize_options">
          <expr>obj.initialize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_source_files">
          <expr>obj.ret = get_source_files()</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run">
          <expr>obj.run()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="build_scripts_2to3" init=""/>
      <errors>
        <exception>OSError</exception>
        <exception>UnicodeDecodeError</exception>
        <exception>UnicodeDecodeError</exception>
      </errors>
    </module>
    <module name="distutils.command.build" imports="['sys', 'os']" importfrom="['distutils.core:Command', 'distutils.errors:DistutilsOptionError', 'distutils.util:get_platform', 'distutils.ccompiler:show_compilers']">
      <class name="build" init="">
        <api name="initialize_options">
          <expr>obj.initialize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run">
          <expr>obj.run()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="show_compilers">
        <expr>show_compilers()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module name="distutils.command.upload" imports="['os', 'io', 'hashlib']" importfrom="['base64:standard_b64encode', 'urllib.error:HTTPError', 'urllib.request:urlopen', 'urllib.request:Request', 'urllib.parse:urlparse', 'distutils.errors:DistutilsError', 'distutils.errors:DistutilsOptionError', 'distutils.core:PyPIRCCommand', 'distutils.spawn:spawn', 'distutils:log']">
      <class name="upload" init="">
        <api name="run">
          <expr>obj.run()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>ValueError</exception>
        <exception>HTTPError</exception>
        <exception>OSError</exception>
      </errors>
    </module>
    <module name="distutils.command.build_clib" imports="['os']" importfrom="['distutils.core:Command', 'distutils.errors:*', 'distutils.sysconfig:customize_compiler', 'distutils:log', 'distutils.ccompiler:show_compilers', 'distutils.ccompiler:new_compiler']">
      <class name="build_clib" init="">
        <api name="initialize_options">
          <expr>obj.initialize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run">
          <expr>obj.run()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_library_names">
          <expr>obj.ret = get_library_names()</expr>
          <args>[]</args>
          <return>['ret:None', 'lib_names:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_source_files">
          <expr>obj.get_source_files()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="show_compilers">
        <expr>show_compilers()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="distutils.command.register" imports="['getpass', 'io', 'urllib.parse', 'urllib.request']" importfrom="['warnings:warn', 'distutils.core:PyPIRCCommand', 'distutils.errors:*', 'distutils:log']">
      <class name="register" init="">
        <api name="check_metadata">
          <expr>obj.check_metadata()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="build_post_data">
          <expr>obj.build_post_data(action)</expr>
          <args>['action:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>urllib.error.HTTPError</exception>
        <exception>urllib.error.URLError</exception>
      </errors>
    </module>
    <module name="distutils.command.install" imports="['sys', 'os']" importfrom="['distutils:log', 'distutils.core:Command', 'distutils.debug:DEBUG', 'distutils.sysconfig:get_config_vars', 'distutils.errors:DistutilsPlatformError', 'distutils.file_util:write_file', 'distutils.util:convert_path', 'distutils.util:subst_vars', 'distutils.util:change_root', 'distutils.util:get_platform', 'distutils.errors:DistutilsOptionError', 'site:USER_BASE', 'site:USER_SITE', 'pprint:pprint', 'distutils.fancy_getopt:longopt_xlate']">
      <class name="install" init="">
        <api name="initialize_options">
          <expr>obj.initialize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run">
          <expr>obj.run()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_inputs">
          <expr>obj.ret = get_inputs()</expr>
          <args>[]</args>
          <return>['inputs:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_lib">
          <expr>obj.has_lib()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_data">
          <expr>obj.has_data()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>KeyError</exception>
      </errors>
    </module>
    <module name="distutils.command.install_scripts" imports="['os']" importfrom="['distutils.core:Command', 'distutils:log', 'stat:ST_MODE']">
      <class name="install_scripts" init="">
        <api name="initialize_options">
          <expr>obj.initialize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run">
          <expr>obj.run()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_inputs">
          <expr>obj.ret = get_inputs()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_outputs">
          <expr>obj.get_outputs()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
    </module>
    <module name="distutils.command.sdist" imports="['os', 'sys']" importfrom="['glob:glob', 'warnings:warn', 'distutils.core:Command', 'distutils:dir_util', 'distutils:file_util', 'distutils:archive_util', 'distutils.text_file:TextFile', 'distutils.filelist:FileList', 'distutils:log', 'distutils.util:convert_path', 'distutils.errors:DistutilsTemplateError', 'distutils.errors:DistutilsOptionError', 'distutils.fancy_getopt:FancyGetopt', 'distutils.archive_util:ARCHIVE_FORMATS']">
      <class name="sdist" init="">
        <api name="checking_metadata">
          <expr>obj.checking_metadata()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="initialize_options">
          <expr>obj.initialize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="check_metadata">
          <expr>obj.check_metadata()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_archive_files">
          <expr>obj.ret = get_archive_files()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="show_formats">
        <expr>show_formats()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>DistutilsTemplateError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module name="distutils.command.install_data" imports="['os']" importfrom="['distutils.core:Command', 'distutils.util:change_root', 'distutils.util:convert_path']">
      <class name="install_data" init="">
        <api name="initialize_options">
          <expr>obj.initialize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run">
          <expr>obj.run()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_inputs">
          <expr>obj.ret = get_inputs()</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_outputs">
          <expr>obj.get_outputs()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
    </module>
    <module name="distutils.command.bdist" imports="['os']" importfrom="['distutils.core:Command', 'distutils.errors:*', 'distutils.util:get_platform', 'distutils.fancy_getopt:FancyGetopt']">
      <class name="bdist" init="">
        <api name="initialize_options">
          <expr>obj.initialize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run">
          <expr>obj.run()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="show_formats">
        <expr>show_formats()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
      </errors>
    </module>
    <module name="distutils.command.config" imports="['os', 're']" importfrom="['distutils.core:Command', 'distutils.errors:DistutilsExecError', 'distutils.sysconfig:customize_compiler', 'distutils:log', 'distutils.ccompiler:CCompiler', 'distutils.ccompiler:new_compiler', 'distutils.ccompiler:CompileError', 'distutils.ccompiler:LinkError']">
      <class name="config" init="">
        <api name="initialize_options">
          <expr>obj.initialize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="search_cpp">
          <expr>obj.search_cpp(pattern,body,headers,include_dirs,lang)</expr>
          <args>['pattern:str', 'body:str', 'headers:NoneType', 'include_dirs:NoneType', 'lang:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, 'c']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="try_compile">
          <expr>obj.ret = try_compile(body,headers,include_dirs,lang)</expr>
          <args>['body:None', 'headers:None', 'include_dirs:None', 'lang:None']</args>
          <return>['ok:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, 'c']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="try_run">
          <expr>obj.ret = try_run(body,headers,include_dirs,libraries,library_dirs,lang)</expr>
          <args>['body:None', 'headers:None', 'include_dirs:None', 'libraries:None', 'library_dirs:None', 'lang:None']</args>
          <return>['ok:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, 'c']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="check_func">
          <expr>obj.ret = check_func(func,headers,include_dirs,libraries,library_dirs,decl,call)</expr>
          <args>['func:None', 'headers:None', 'include_dirs:None', 'libraries:None', 'library_dirs:None', 'decl:None', 'call:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, 0, 0]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="check_lib">
          <expr>obj.ret = check_lib(library,library_dirs,headers,include_dirs,other_libraries)</expr>
          <args>['library:None', 'library_dirs:None', 'headers:None', 'include_dirs:None', 'other_libraries:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="check_header">
          <expr>obj.ret = check_header(header,include_dirs,library_dirs,lang)</expr>
          <args>['header:None', 'include_dirs:None', 'library_dirs:None', 'lang:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, 'c']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="dump_file">
        <expr>dump_file(filename,head)</expr>
        <args>['filename:str', 'head:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>OSError</exception>
        <exception>CompileError</exception>
        <exception>CompileError</exception>
        <exception>CompileError</exception>
        <exception>LinkError</exception>
        <exception>CompileError</exception>
        <exception>LinkError</exception>
        <exception>DistutilsExecError</exception>
      </errors>
    </module>
    <module name="distutils.command.install_lib" imports="['os', 'importlib.util', 'sys']" importfrom="['distutils.core:Command', 'distutils.errors:DistutilsOptionError', 'distutils.util:byte_compile']">
      <class name="install_lib" init="">
        <api name="initialize_options">
          <expr>obj.initialize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run">
          <expr>obj.run()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_inputs">
          <expr>obj.ret = get_inputs()</expr>
          <args>[]</args>
          <return>['inputs:list']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>ValueError</exception>
        <exception>AssertionError</exception>
      </errors>
    </module>
    <module name="distutils.command.bdist_dumb" imports="['os']" importfrom="['distutils.core:Command', 'distutils.util:get_platform', 'distutils.dir_util:remove_tree', 'distutils.dir_util:ensure_relative', 'distutils.errors:*', 'distutils.sysconfig:get_python_version', 'distutils:log']">
      <class name="bdist_dumb" init="">
        <api name="initialize_options">
          <expr>obj.initialize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run">
          <expr>obj.run()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>KeyError</exception>
      </errors>
    </module>
    <module name="distutils.command.clean" imports="['os']" importfrom="['distutils.core:Command', 'distutils.dir_util:remove_tree', 'distutils:log']">
      <class name="clean" init="">
        <api name="initialize_options">
          <expr>obj.initialize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run">
          <expr>obj.run()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>OSError</exception>
      </errors>
    </module>
    <module name="distutils.command.bdist_wininst" imports="['os', 'sys', 'warnings', 'time', 'distutils', 'struct']" importfrom="['distutils.core:Command', 'distutils.util:get_platform', 'distutils.dir_util:remove_tree', 'distutils.errors:*', 'distutils.sysconfig:get_python_version', 'distutils:log', 'tempfile:mktemp', 'msvcrt:CRT_ASSEMBLY_VERSION']">
      <class name="bdist_wininst" init="obj = bdist_wininst()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="initialize_options">
          <expr>obj.initialize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_exe_bytes">
          <expr>obj.ret = get_exe_bytes()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>ImportError</exception>
      </errors>
    </module>
    <module name="distutils.command.install_headers" imports="[]" importfrom="['distutils.core:Command']">
      <class name="install_headers" init="">
        <api name="initialize_options">
          <expr>obj.initialize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run">
          <expr>obj.run()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_inputs">
          <expr>obj.ret = get_inputs()</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_outputs">
          <expr>obj.ret = get_outputs()</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
    </module>
    <module name="distutils.command.install_egg_info" imports="['os', 'sys', 're']" importfrom="['distutils.cmd:Command', 'distutils:log', 'distutils:dir_util']">
      <class name="install_egg_info" init="">
        <api name="initialize_options">
          <expr>obj.initialize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run">
          <expr>obj.run()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_outputs">
          <expr>obj.get_outputs()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="safe_name">
        <expr>safe_name(name)</expr>
        <args>['name:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="safe_version">
        <expr>safe_version(version)</expr>
        <args>['version:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="to_filename">
        <expr>to_filename(name)</expr>
        <args>['name:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="distutils.command.build_ext" imports="['contextlib', 'os', 're', 'sys']" importfrom="['distutils.core:Command', 'distutils.errors:*', 'distutils.sysconfig:customize_compiler', 'distutils.sysconfig:get_python_version', 'distutils.sysconfig:get_config_h_filename', 'distutils.dep_util:newer_group', 'distutils.extension:Extension', 'distutils.util:get_platform', 'distutils:log', 'site:USER_BASE', 'distutils.ccompiler:show_compilers', 'distutils:sysconfig', 'distutils.ccompiler:new_compiler', 'concurrent.futures:ThreadPoolExecutor', 'distutils.sysconfig:get_config_var', 'distutils._msvccompiler:MSVCCompiler']">
      <class name="build_ext" init="">
        <api name="initialize_options">
          <expr>obj.initialize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run">
          <expr>obj.run()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_source_files">
          <expr>obj.get_source_files()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_outputs">
          <expr>obj.get_outputs()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="find_swig">
          <expr>obj.ret = find_swig()</expr>
          <args>[]</args>
          <return>['swig:None', 'fn:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_export_symbols">
          <expr>obj.get_export_symbols(ext)</expr>
          <args>['ext:Extension']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_libraries">
          <expr>obj.get_libraries(ext)</expr>
          <args>['ext:Extension']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="show_compilers">
        <expr>show_compilers()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ValueError</exception>
        <exception>ImportError</exception>
        <exception>CCompilerError</exception>
        <exception>DistutilsError</exception>
        <exception>CompileError</exception>
        <exception>UnicodeEncodeError</exception>
      </errors>
    </module>
    <module name="distutils.command.build_py" imports="['os', 'importlib.util', 'sys', 'glob']" importfrom="['distutils.core:Command', 'distutils.errors:*', 'distutils.util:convert_path', 'distutils.util:Mixin2to3', 'distutils:log', 'distutils.util:byte_compile']">
      <class name="build_py" init="">
        <api name="initialize_options">
          <expr>obj.initialize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finalize_options">
          <expr>obj.finalize_options()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run">
          <expr>obj.run()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="check_module">
          <expr>obj.check_module(module,module_file)</expr>
          <args>['module:str', 'module_file:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_source_files">
          <expr>obj.get_source_files()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_outputs">
          <expr>obj.get_outputs(include_bytecode)</expr>
          <args>['include_bytecode:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[1]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="build_py_2to3" init="">
        <api name="run">
          <expr>obj.run()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>ValueError</exception>
        <exception>AssertionError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
      </errors>
    </module>
  </library>
  <library name="logging">
    <module name="logging.handlers" imports="['logging', 'socket', 'os', 'pickle', 'struct', 'time', 're', 'queue', 'threading', 'copy', 'smtplib', 'email.utils', 'http.client', 'urllib.parse', 'base64']" importfrom="['stat:ST_DEV', 'stat:ST_INO', 'stat:ST_MTIME', 'email.message:EmailMessage']">
      <class name="BaseRotatingHandler" init="obj = BaseRotatingHandler(filename,mode,encoding,delay,errors)">
        <api name="__init__">
          <expr>None</expr>
          <args>['filename:NoneType', 'mode:NoneType', 'encoding:NoneType', 'delay:NoneType', 'errors:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, False, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="rotation_filename">
          <expr>obj.ret = rotation_filename(default_name)</expr>
          <args>['default_name:None']</args>
          <return>['result:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="rotate">
          <expr>obj.rotate(source,dest)</expr>
          <args>['source:None', 'dest:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="RotatingFileHandler" init="obj = RotatingFileHandler(filename,mode,maxBytes,backupCount,encoding,delay,errors)">
        <api name="__init__">
          <expr>None</expr>
          <args>['filename:NoneType', 'mode:NoneType', 'maxBytes:NoneType', 'backupCount:NoneType', 'encoding:NoneType', 'delay:NoneType', 'errors:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['a', 0, 0, None, False, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="shouldRollover">
          <expr>obj.shouldRollover(record)</expr>
          <args>['record:LogRecord']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="TimedRotatingFileHandler" init="obj = TimedRotatingFileHandler(filename,when,interval,backupCount,encoding,delay,utc,atTime,errors)">
        <api name="__init__">
          <expr>None</expr>
          <args>['filename:NoneType', 'when:NoneType', 'interval:NoneType', 'backupCount:NoneType', 'encoding:NoneType', 'delay:NoneType', 'utc:NoneType', 'atTime:NoneType', 'errors:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['h', 1, 0, None, False, False, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="shouldRollover">
          <expr>obj.shouldRollover(record)</expr>
          <args>['record:LogRecord']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getFilesToDelete">
          <expr>obj.getFilesToDelete()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="WatchedFileHandler" init="obj = WatchedFileHandler(filename,mode,encoding,delay,errors)">
        <api name="__init__">
          <expr>None</expr>
          <args>['filename:NoneType', 'mode:NoneType', 'encoding:NoneType', 'delay:NoneType', 'errors:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['a', None, False, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="SocketHandler" init="obj = SocketHandler(host,port)">
        <api name="__init__">
          <expr>None</expr>
          <args>['host:NoneType', 'port:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="DatagramHandler" init="obj = DatagramHandler(host,port)">
        <api name="__init__">
          <expr>None</expr>
          <args>['host:NoneType', 'port:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="SysLogHandler" init="obj = SysLogHandler(address,facility,socktype)">
        <api name="__init__">
          <expr>None</expr>
          <args>['address:NoneType', 'facility:NoneType', 'socktype:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, 'LOG_USER', None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="encodePriority">
          <expr>obj.encodePriority(facility,priority)</expr>
          <args>['facility:int', 'priority:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="mapPriority">
          <expr>obj.mapPriority(levelName)</expr>
          <args>['levelName:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="SMTPHandler" init="obj = SMTPHandler(mailhost,fromaddr,toaddrs,subject,credentials,secure,timeout)">
        <api name="__init__">
          <expr>None</expr>
          <args>['mailhost:NoneType', 'fromaddr:NoneType', 'toaddrs:NoneType', 'subject:NoneType', 'credentials:NoneType', 'secure:NoneType', 'timeout:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, 5.0]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="NTEventLogHandler" init="obj = NTEventLogHandler(appname,dllname,logtype)">
        <api name="__init__">
          <expr>None</expr>
          <args>['appname:NoneType', 'dllname:NoneType', 'logtype:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, 'Application']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="HTTPHandler" init="obj = HTTPHandler(host,url,method,secure,credentials,context)">
        <api name="__init__">
          <expr>None</expr>
          <args>['host:NoneType', 'url:NoneType', 'method:NoneType', 'secure:NoneType', 'credentials:NoneType', 'context:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['GET', False, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="mapLogRecord">
          <expr>obj.mapLogRecord(record)</expr>
          <args>['record:LogRecord']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="BufferingHandler" init="obj = BufferingHandler(capacity)">
        <api name="__init__">
          <expr>None</expr>
          <args>['capacity:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="shouldFlush">
          <expr>obj.shouldFlush(record)</expr>
          <args>['record:LogRecord']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="MemoryHandler" init="obj = MemoryHandler(capacity,flushLevel,target,flushOnClose)">
        <api name="__init__">
          <expr>None</expr>
          <args>['capacity:NoneType', 'flushLevel:NoneType', 'target:NoneType', 'flushOnClose:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, True]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="shouldFlush">
          <expr>obj.shouldFlush(record)</expr>
          <args>['record:LogRecord']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setTarget">
          <expr>obj.setTarget(target)</expr>
          <args>['target:MockRaceConditionHandler']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="QueueHandler" init="obj = QueueHandler(queue)">
        <api name="__init__">
          <expr>None</expr>
          <args>['queue:module']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="prepare">
          <expr>obj.prepare(record)</expr>
          <args>['record:LogRecord']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="QueueListener" init="obj = QueueListener(queue)">
        <api name="__init__">
          <expr>None</expr>
          <args>['queue:module']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['respect_handler_level:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[False]</kwodefa>
        </api>
        <api name="stop">
          <expr>obj.stop()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>Exception</exception>
        <exception>FileNotFoundError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>Exception</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>Exception</exception>
        <exception>Exception</exception>
        <exception>Exception</exception>
        <exception>Exception</exception>
        <exception>Exception</exception>
        <exception>queue.Empty</exception>
      </errors>
    </module>
    <module name="logging.config" imports="['errno', 'io', 'logging', 'logging.handlers', 're', 'struct', 'sys', 'threading', 'traceback', 'configparser']" importfrom="['socketserver:ThreadingTCPServer', 'socketserver:StreamRequestHandler']">
      <class name="ConvertingMixin" init="">
        <api name="convert_with_key">
          <expr>obj.ret = convert_with_key(key,value,replace)</expr>
          <args>['key:None', 'value:None', 'replace:None']</args>
          <return>['result:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[True]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ConvertingDict" init=""/>
      <class name="ConvertingList" init=""/>
      <class name="ConvertingTuple" init=""/>
      <class name="BaseConfigurator" init="obj = BaseConfigurator(config)">
        <api name="__init__">
          <expr>None</expr>
          <args>['config:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ext_convert">
          <expr>obj.ret = ext_convert(value)</expr>
          <args>['value:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="cfg_convert">
          <expr>obj.cfg_convert(value)</expr>
          <args>['value:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="configure_custom">
          <expr>obj.ret = configure_custom(config)</expr>
          <args>['config:None']</args>
          <return>['result:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="as_tuple">
          <expr>obj.ret = as_tuple(value)</expr>
          <args>['value:None']</args>
          <return>['value:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="DictConfigurator" init="">
        <api name="configure">
          <expr>obj.configure()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ConfigStreamHandler" init=""/>
      <class name="ConfigSocketReceiver" init=""/>
      <class name="Server" init=""/>
      <api name="fileConfig">
        <expr>fileConfig(fname,defaults,disable_existing_loggers)</expr>
        <args>['fname:StringIO', 'defaults:NoneType', 'disable_existing_loggers:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, True]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="valid_ident">
        <expr>valid_ident(s)</expr>
        <args>['s:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dictConfig">
        <expr>dictConfig(config)</expr>
        <args>['config:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="listen">
        <expr>listen(port,verify)</expr>
        <args>['port:int', 'verify:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['DEFAULT_LOGGING_CONFIG_PORT', None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="stopListening">
        <expr>stopListening()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>AttributeError</exception>
        <exception>NameError</exception>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>TypeError</exception>
        <exception>Exception</exception>
        <exception>Exception</exception>
        <exception>Exception</exception>
        <exception>Exception</exception>
        <exception>Exception</exception>
        <exception>Exception</exception>
        <exception>Exception</exception>
        <exception>Exception</exception>
        <exception>Exception</exception>
        <exception>TypeError</exception>
        <exception>Exception</exception>
        <exception>Exception</exception>
        <exception>Exception</exception>
        <exception>TypeError</exception>
        <exception>Exception</exception>
      </errors>
    </module>
  </library>
  <library name="json">
    <module name="json.scanner" imports="['re']" importfrom="['_json:make_scanner']">
      <api name="py_make_scanner">
        <expr>py_make_scanner(context)</expr>
        <args>['context:JSONDecoder']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ImportError</exception>
      </errors>
    </module>
    <module name="json.encoder" imports="['re']" importfrom="['_json:encode_basestring_ascii', '_json:encode_basestring', '_json:make_encoder']">
      <class name="JSONEncoder" init="obj = JSONEncoder()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['skipkeys:NoneType', 'ensure_ascii:NoneType', 'check_circular:NoneType', 'allow_nan:NoneType', 'sort_keys:NoneType', 'indent:NoneType', 'separators:NoneType', 'default:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[False, True, True, True, False, None, None, None]</kwodefa>
        </api>
        <api name="default">
          <expr>obj.default(o)</expr>
          <args>['o:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="encode">
          <expr>obj.ret = encode(o)</expr>
          <args>['o:dict']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="py_encode_basestring">
        <expr>ret = py_encode_basestring(s)</expr>
        <args>['s:None']</args>
        <return>['ret:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="py_encode_basestring_ascii">
        <expr>ret = py_encode_basestring_ascii(s)</expr>
        <args>['s:None']</args>
        <return>['ret:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ImportError</exception>
        <exception>ImportError</exception>
        <exception>ImportError</exception>
      </errors>
    </module>
    <module name="json.decoder" imports="['re']" importfrom="['json:scanner', '_json:scanstring']">
      <class name="JSONDecoder" init="obj = JSONDecoder()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['object_hook:NoneType', 'parse_float:NoneType', 'parse_int:NoneType', 'parse_constant:NoneType', 'strict:NoneType', 'object_pairs_hook:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None, None, None, None, True, None]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(s,_w)</expr>
          <args>['s:str', '_w:builtin_function_or_method']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="py_scanstring">
        <expr>py_scanstring(s,end,strict,_b,_m)</expr>
        <args>['s:None', 'end:None', 'strict:None', '_b:None', '_m:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[True, 'BACKSLASH', None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="JSONObject">
        <expr>JSONObject(s_and_end,strict,scan_once,object_hook,object_pairs_hook,memo,_w,_ws)</expr>
        <args>['s_and_end:None', 'strict:None', 'scan_once:None', 'object_hook:None', 'object_pairs_hook:None', 'memo:None', '_w:None', '_ws:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, 'WHITESPACE_STR']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="JSONArray">
        <expr>JSONArray(s_and_end,scan_once,_w,_ws)</expr>
        <args>['s_and_end:None', 'scan_once:None', '_w:None', '_ws:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, 'WHITESPACE_STR']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ImportError</exception>
        <exception>jsonjson.decoder.JSONDecodeError</exception>
        <exception>ValueError</exception>
        <exception>IndexError</exception>
        <exception>KeyError</exception>
        <exception>IndexError</exception>
        <exception>StopIteration</exception>
        <exception>IndexError</exception>
        <exception>StopIteration</exception>
        <exception>IndexError</exception>
        <exception>StopIteration</exception>
      </errors>
    </module>
    <module name="json.tool" imports="['argparse', 'json', 'sys']" importfrom="['pathlib:Path']">
      <api name="main">
        <expr>main()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ValueError</exception>
        <exception>BrokenPipeError</exception>
      </errors>
    </module>
  </library>
  <library name="collections">
    <module name="collections.abc" imports="[]" importfrom="['_collections_abc:*']"/>
  </library>
  <library name="urllib">
    <module name="urllib.error" imports="['urllib.response']" importfrom="[]">
      <errors>
        <exception>urlliburllib.error.URLError</exception>
        <exception>urlliburllib.error.HTTPError</exception>
        <exception>urlliburllib.error.ContentTooShortError</exception>
      </errors>
    </module>
    <module name="urllib.request" imports="['base64', 'bisect', 'email', 'hashlib', 'http.client', 'io', 'os', 'posixpath', 're', 'socket', 'string', 'sys', 'time', 'tempfile', 'contextlib', 'warnings', 'ssl', 'email.utils', 'mimetypes', 'ftplib', 'getpass', 'winreg']" importfrom="['urllib.error:URLError', 'urllib.error:HTTPError', 'urllib.error:ContentTooShortError', 'urllib.parse:urlparse', 'urllib.parse:urlsplit', 'urllib.parse:urljoin', 'urllib.parse:unwrap', 'urllib.parse:quote', 'urllib.parse:unquote', 'urllib.parse:unquote_to_bytes', 'urllib.parse:urlunparse', 'urllib.response:addinfourl', 'urllib.response:addclosehook', 'nturl2path:url2pathname', 'nturl2path:pathname2url', 'fnmatch:fnmatch']">
      <class name="Request" init="obj = Request(url,data,headers,origin_req_host,unverifiable,method)">
        <api name="__init__">
          <expr>None</expr>
          <args>['url:NoneType', 'data:NoneType', 'headers:NoneType', 'origin_req_host:NoneType', 'unverifiable:NoneType', 'method:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, False, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="full_url">
          <expr>obj.full_url()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="data">
          <expr>obj.data()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_method">
          <expr>obj.get_method()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_full_url">
          <expr>obj.get_full_url()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_proxy">
          <expr>obj.set_proxy(host,type)</expr>
          <args>['host:str', 'type:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_proxy">
          <expr>obj.has_proxy()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_header">
          <expr>obj.add_header(key,val)</expr>
          <args>['key:str', 'val:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_unredirected_header">
          <expr>obj.add_unredirected_header(key,val)</expr>
          <args>['key:str', 'val:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_header">
          <expr>obj.has_header(header_name)</expr>
          <args>['header_name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="header_items">
          <expr>obj.header_items()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="OpenerDirector" init="obj = OpenerDirector()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_handler">
          <expr>obj.add_handler(handler)</expr>
          <args>['handler:ProxyHandler']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="error">
          <expr>obj.error(proto)</expr>
          <args>['proto:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="BaseHandler" init=""/>
      <class name="HTTPErrorProcessor" init="">
        <api name="http_response">
          <expr>obj.http_response(request,response)</expr>
          <args>['request:Request', 'response:HTTPResponse']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="HTTPDefaultErrorHandler" init="">
        <api name="http_error_default">
          <expr>obj.http_error_default(req,fp,code,msg,hdrs)</expr>
          <args>['req:Request', 'fp:HTTPResponse', 'code:int', 'msg:str', 'hdrs:HTTPMessage']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="HTTPRedirectHandler" init="">
        <api name="http_error_302">
          <expr>obj.http_error_302(req,fp,code,msg,headers)</expr>
          <args>['req:Request', 'fp:HTTPResponse', 'code:int', 'msg:str', 'headers:HTTPMessage']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ProxyHandler" init="obj = ProxyHandler(proxies)">
        <api name="__init__">
          <expr>None</expr>
          <args>['proxies:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="proxy_open">
          <expr>obj.proxy_open(req,proxy,type)</expr>
          <args>['req:Request', 'proxy:str', 'type:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="HTTPPasswordMgr" init="obj = HTTPPasswordMgr()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_password">
          <expr>obj.add_password(realm,uri,user,passwd)</expr>
          <args>['realm:str', 'uri:str', 'user:str', 'passwd:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="find_user_password">
          <expr>obj.find_user_password(realm,authuri)</expr>
          <args>['realm:str', 'authuri:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_suburi">
          <expr>obj.is_suburi(base,test)</expr>
          <args>['base:tuple', 'test:tuple']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="HTTPPasswordMgrWithDefaultRealm" init=""/>
      <class name="HTTPPasswordMgrWithPriorAuth" init="obj = HTTPPasswordMgrWithPriorAuth()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_authenticated">
          <expr>obj.is_authenticated(authuri)</expr>
          <args>['authuri:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="AbstractBasicAuthHandler" init="obj = AbstractBasicAuthHandler(password_mgr)">
        <api name="__init__">
          <expr>None</expr>
          <args>['password_mgr:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="http_error_auth_reqed">
          <expr>obj.ret = http_error_auth_reqed(authreq,host,req,headers)</expr>
          <args>['authreq:None', 'host:None', 'req:None', 'headers:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="http_request">
          <expr>obj.ret = http_request(req)</expr>
          <args>['req:None']</args>
          <return>['req:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="http_response">
          <expr>obj.ret = http_response(req,response)</expr>
          <args>['req:None', 'response:None']</args>
          <return>['response:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="HTTPBasicAuthHandler" init="">
        <api name="http_error_401">
          <expr>obj.http_error_401(req,fp,code,msg,headers)</expr>
          <args>['req:Request', 'fp:HTTPResponse', 'code:int', 'msg:str', 'headers:HTTPMessage']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ProxyBasicAuthHandler" init="">
        <api name="http_error_407">
          <expr>obj.http_error_407(req,fp,code,msg,headers)</expr>
          <args>['req:Request', 'fp:MockFile', 'code:int', 'msg:str', 'headers:Message']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="AbstractDigestAuthHandler" init="obj = AbstractDigestAuthHandler(passwd)">
        <api name="__init__">
          <expr>None</expr>
          <args>['passwd:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="reset_retry_count">
          <expr>obj.reset_retry_count()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="HTTPDigestAuthHandler" init="">
        <api name="http_error_401">
          <expr>obj.ret = http_error_401(req,fp,code,msg,headers)</expr>
          <args>['req:Request', 'fp:MockFile', 'code:int', 'msg:str', 'headers:Message']</args>
          <return>['retry:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ProxyDigestAuthHandler" init="">
        <api name="http_error_407">
          <expr>obj.http_error_407(req,fp,code,msg,headers)</expr>
          <args>['req:Request', 'fp:HTTPResponse', 'code:int', 'msg:str', 'headers:HTTPMessage']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="AbstractHTTPHandler" init="obj = AbstractHTTPHandler(debuglevel)">
        <api name="__init__">
          <expr>None</expr>
          <args>['debuglevel:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[0]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_http_debuglevel">
          <expr>obj.set_http_debuglevel(level)</expr>
          <args>['level:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_request_">
          <expr>obj.do_request_(request)</expr>
          <args>['request:Request']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_open">
          <expr>obj.do_open(http_class,req)</expr>
          <args>['http_class:MockHTTPClass', 'req:Request']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="HTTPHandler" init="">
        <api name="http_open">
          <expr>obj.http_open(req)</expr>
          <args>['req:Request']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="HTTPSHandler" init="obj = HTTPSHandler(debuglevel,context,check_hostname)">
        <api name="__init__">
          <expr>None</expr>
          <args>['debuglevel:NoneType', 'context:NoneType', 'check_hostname:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[0, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="https_open">
          <expr>obj.https_open(req)</expr>
          <args>['req:Request']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="HTTPCookieProcessor" init="obj = HTTPCookieProcessor(cookiejar)">
        <api name="__init__">
          <expr>None</expr>
          <args>['cookiejar:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="http_request">
          <expr>obj.http_request(request)</expr>
          <args>['request:Request']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="http_response">
          <expr>obj.http_response(request,response)</expr>
          <args>['request:Request', 'response:MockResponse']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="UnknownHandler" init="">
        <api name="unknown_open">
          <expr>obj.unknown_open(req)</expr>
          <args>['req:Request']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="FileHandler" init="">
        <api name="file_open">
          <expr>obj.file_open(req)</expr>
          <args>['req:Request']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_names">
          <expr>obj.get_names()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="FTPHandler" init="">
        <api name="ftp_open">
          <expr>obj.ftp_open(req)</expr>
          <args>['req:Request']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="CacheFTPHandler" init="obj = CacheFTPHandler()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setTimeout">
          <expr>obj.setTimeout(t)</expr>
          <args>['t:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setMaxConns">
          <expr>obj.setMaxConns(m)</expr>
          <args>['m:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clear_cache">
          <expr>obj.clear_cache()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="DataHandler" init="">
        <api name="data_open">
          <expr>obj.data_open(req)</expr>
          <args>['req:Request']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="URLopener" init="obj = URLopener(proxies)">
        <api name="__init__">
          <expr>None</expr>
          <args>['proxies:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="addheader">
          <expr>obj.addheader()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="retrieve">
          <expr>obj.retrieve(url,filename,reporthook,data)</expr>
          <args>['url:str', 'filename:NoneType', 'reporthook:NoneType', 'data:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="open_http">
          <expr>obj.ret = open_http(url,data)</expr>
          <args>['url:str', 'data:NoneType']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="open_file">
          <expr>obj.ret = open_file(url)</expr>
          <args>['url:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="open_ftp">
          <expr>obj.ret = open_ftp(url)</expr>
          <args>['url:None']</args>
          <return>['addinfourl:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="open_data">
          <expr>obj.ret = open_data(url,data)</expr>
          <args>['url:None', 'data:None']</args>
          <return>['addinfourl:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="FancyURLopener" init="obj = FancyURLopener()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="http_error_301">
          <expr>obj.ret = http_error_301(url,fp,errcode,errmsg,headers,data)</expr>
          <args>['url:None', 'fp:None', 'errcode:None', 'errmsg:None', 'headers:None', 'data:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="http_error_303">
          <expr>obj.ret = http_error_303(url,fp,errcode,errmsg,headers,data)</expr>
          <args>['url:None', 'fp:None', 'errcode:None', 'errmsg:None', 'headers:None', 'data:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="http_error_307">
          <expr>obj.ret = http_error_307(url,fp,errcode,errmsg,headers,data)</expr>
          <args>['url:None', 'fp:None', 'errcode:None', 'errmsg:None', 'headers:None', 'data:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="http_error_401">
          <expr>obj.ret = http_error_401(url,fp,errcode,errmsg,headers,data,retry)</expr>
          <args>['url:str', 'fp:FakeSocket', 'errcode:int', 'errmsg:str', 'headers:HTTPMessage', 'data:NoneType', 'retry:bool']</args>
          <return>['getattr:builtin_function_or_method']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="http_error_407">
          <expr>obj.ret = http_error_407(url,fp,errcode,errmsg,headers,data,retry)</expr>
          <args>['url:None', 'fp:None', 'errcode:None', 'errmsg:None', 'headers:None', 'data:None', 'retry:None']</args>
          <return>['getattr:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="retry_proxy_http_basic_auth">
          <expr>obj.ret = retry_proxy_http_basic_auth(url,realm,data)</expr>
          <args>['url:None', 'realm:None', 'data:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="retry_proxy_https_basic_auth">
          <expr>obj.ret = retry_proxy_https_basic_auth(url,realm,data)</expr>
          <args>['url:None', 'realm:None', 'data:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="retry_https_basic_auth">
          <expr>obj.ret = retry_https_basic_auth(url,realm,data)</expr>
          <args>['url:None', 'realm:None', 'data:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ftpwrapper" init="obj = ftpwrapper(user,passwd,host,port,dirs,timeout,persistent)">
        <api name="__init__">
          <expr>None</expr>
          <args>['user:NoneType', 'passwd:NoneType', 'host:NoneType', 'port:NoneType', 'dirs:NoneType', 'timeout:NoneType', 'persistent:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, True]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="init">
          <expr>obj.init()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="file_close">
          <expr>obj.file_close()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="urlopen">
        <expr>urlopen(url,data,timeout)</expr>
        <args>['url:str', 'data:NoneType', 'timeout:object']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['cafile:NoneType', 'capath:NoneType', 'cadefault:bool', 'context:NoneType']</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[None, None, False, None]</kwodefa>
      </api>
      <api name="install_opener">
        <expr>install_opener(opener)</expr>
        <args>['opener:OpenerDirector']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="urlretrieve">
        <expr>urlretrieve(url,filename,reporthook,data)</expr>
        <args>['url:str', 'filename:NoneType', 'reporthook:NoneType', 'data:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="urlcleanup">
        <expr>urlcleanup()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="request_host">
        <expr>request_host(request)</expr>
        <args>['request:Request']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="build_opener">
        <expr>build_opener()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parse_keqv_list">
        <expr>parse_keqv_list(l)</expr>
        <args>['l:filter']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parse_http_list">
        <expr>parse_http_list(s)</expr>
        <args>['s:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="url2pathname">
        <expr>url2pathname(pathname)</expr>
        <args>['pathname:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="pathname2url">
        <expr>pathname2url(pathname)</expr>
        <args>['pathname:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="localhost">
        <expr>ret = localhost()</expr>
        <args>[]</args>
        <return>['_localhost:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="thishost">
        <expr>thishost()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ftperrors">
        <expr>ret = ftperrors()</expr>
        <args>[]</args>
        <return>['_ftperrors:tuple']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="noheaders">
        <expr>ret = noheaders()</expr>
        <args>[]</args>
        <return>['_noheaders:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getproxies_environment">
        <expr>getproxies_environment()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="proxy_bypass_environment">
        <expr>proxy_bypass_environment(host,proxies)</expr>
        <args>['host:str', 'proxies:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="proxy_bypass_macosx_sysconf">
        <expr>ret = proxy_bypass_macosx_sysconf(host)</expr>
        <args>['host:None']</args>
        <return>['_proxy_bypass_macosx_sysconf:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getproxies_macosx_sysconf">
        <expr>ret = getproxies_macosx_sysconf()</expr>
        <args>[]</args>
        <return>['_get_proxies:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="proxy_bypass">
        <expr>ret = proxy_bypass(host)</expr>
        <args>['host:None']</args>
        <return>['proxy_bypass_environment:None', 'proxy_bypass_registry:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getproxies">
        <expr>ret = getproxies()</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getproxies_registry">
        <expr>ret = getproxies_registry()</expr>
        <args>[]</args>
        <return>['proxies:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="proxy_bypass_registry">
        <expr>ret = proxy_bypass_registry(host)</expr>
        <args>['host:None']</args>
        <return>['0:None', '1:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>ValueError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>socket.gaierror</exception>
        <exception>OSError</exception>
        <exception>socket.gaierror</exception>
        <exception>OSError</exception>
        <exception>ftplib.all_errors</exception>
        <exception>OSError</exception>
        <exception>HTTPError</exception>
        <exception>URLError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>http.client.BadStatusLine</exception>
        <exception>OSError</exception>
        <exception>ValueError</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>socket.gaierror</exception>
        <exception>ftplib.all_errors</exception>
        <exception>ftplib.error_perm</exception>
        <exception>ftplib.error_perm</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>ValueError</exception>
        <exception>TypeError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
      </errors>
    </module>
    <module name="urllib.robotparser" imports="['collections', 'urllib.parse', 'urllib.request', 'time']" importfrom="[]">
      <class name="RobotFileParser" init="obj = RobotFileParser(url)">
        <api name="__init__">
          <expr>None</expr>
          <args>['url:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="mtime">
          <expr>obj.mtime()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_url">
          <expr>obj.set_url(url)</expr>
          <args>['url:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="can_fetch">
          <expr>obj.can_fetch(useragent,url)</expr>
          <args>['useragent:str', 'url:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="crawl_delay">
          <expr>obj.crawl_delay(useragent)</expr>
          <args>['useragent:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="request_rate">
          <expr>obj.request_rate(useragent)</expr>
          <args>['useragent:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="site_maps">
          <expr>obj.site_maps()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="RuleLine" init="obj = RuleLine(path,allowance)">
        <api name="__init__">
          <expr>None</expr>
          <args>['path:NoneType', 'allowance:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="applies_to">
          <expr>obj.applies_to(filename)</expr>
          <args>['filename:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Entry" init="obj = Entry()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="applies_to">
          <expr>obj.applies_to(useragent)</expr>
          <args>['useragent:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>urllib.error.HTTPError</exception>
      </errors>
    </module>
    <module name="urllib.parse" imports="['re', 'sys', 'types', 'collections', 'warnings', 'unicodedata']" importfrom="['collections:namedtuple']">
      <class name="DefragResult" init="">
        <api name="geturl">
          <expr>obj.geturl()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="SplitResult" init="">
        <api name="geturl">
          <expr>obj.geturl()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ParseResult" init="">
        <api name="geturl">
          <expr>obj.geturl()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="DefragResultBytes" init="">
        <api name="geturl">
          <expr>obj.geturl()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="SplitResultBytes" init="">
        <api name="geturl">
          <expr>obj.geturl()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ParseResultBytes" init="">
        <api name="geturl">
          <expr>obj.geturl()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Quoter" init="obj = Quoter(safe)">
        <api name="__init__">
          <expr>None</expr>
          <args>['safe:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="clear_cache">
        <expr>clear_cache()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="urlparse">
        <expr>urlparse(url,scheme,allow_fragments)</expr>
        <args>['url:str', 'scheme:str', 'allow_fragments:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['', True]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="urlsplit">
        <expr>urlsplit(url,scheme,allow_fragments)</expr>
        <args>['url:str', 'scheme:str', 'allow_fragments:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['', True]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="urlunparse">
        <expr>urlunparse(components)</expr>
        <args>['components:tuple']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="urlunsplit">
        <expr>urlunsplit(components)</expr>
        <args>['components:tuple']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="urljoin">
        <expr>urljoin(base,url,allow_fragments)</expr>
        <args>['base:str', 'url:str', 'allow_fragments:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[True]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="urldefrag">
        <expr>urldefrag(url)</expr>
        <args>['url:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="unquote_to_bytes">
        <expr>unquote_to_bytes(string)</expr>
        <args>['string:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="unquote">
        <expr>unquote(string,encoding,errors)</expr>
        <args>['string:str', 'encoding:str', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['utf-8', 'replace']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parse_qs">
        <expr>parse_qs(qs,keep_blank_values,strict_parsing,encoding,errors,max_num_fields,separator)</expr>
        <args>['qs:str', 'keep_blank_values:bool', 'strict_parsing:bool', 'encoding:str', 'errors:str', 'max_num_fields:NoneType', 'separator:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[False, False, 'utf-8', 'replace', None, '&amp;']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parse_qsl">
        <expr>parse_qsl(qs,keep_blank_values,strict_parsing,encoding,errors,max_num_fields,separator)</expr>
        <args>['qs:str', 'keep_blank_values:bool', 'strict_parsing:bool', 'encoding:str', 'errors:str', 'max_num_fields:NoneType', 'separator:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[False, False, 'utf-8', 'replace', None, '&amp;']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="unquote_plus">
        <expr>unquote_plus(string,encoding,errors)</expr>
        <args>['string:str', 'encoding:str', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['utf-8', 'replace']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="quote">
        <expr>quote(string,safe,encoding,errors)</expr>
        <args>['string:str', 'safe:str', 'encoding:str', 'errors:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['/', None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="quote_plus">
        <expr>quote_plus(string,safe,encoding,errors)</expr>
        <args>['string:str', 'safe:str', 'encoding:NoneType', 'errors:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['', None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="quote_from_bytes">
        <expr>quote_from_bytes(bs,safe)</expr>
        <args>['bs:bytes', 'safe:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['/']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="urlencode">
        <expr>urlencode(query,doseq,safe,encoding,errors,quote_via)</expr>
        <args>['query:dict', 'doseq:bool', 'safe:str', 'encoding:NoneType', 'errors:NoneType', 'quote_via:function']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[False, '', None, None, 'quote_plus']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="to_bytes">
        <expr>ret = to_bytes(url)</expr>
        <args>['url:str']</args>
        <return>['_to_bytes:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="unwrap">
        <expr>unwrap(url)</expr>
        <args>['url:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="splittype">
        <expr>ret = splittype(url)</expr>
        <args>['url:str']</args>
        <return>['_splittype:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="splithost">
        <expr>ret = splithost(url)</expr>
        <args>['url:str']</args>
        <return>['_splithost:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="splituser">
        <expr>ret = splituser(host)</expr>
        <args>['host:str']</args>
        <return>['_splituser:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="splitpasswd">
        <expr>ret = splitpasswd(user)</expr>
        <args>['user:str']</args>
        <return>['_splitpasswd:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="splitport">
        <expr>ret = splitport(host)</expr>
        <args>['host:str']</args>
        <return>['_splitport:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="splitnport">
        <expr>ret = splitnport(host,defport)</expr>
        <args>['host:str', 'defport:int']</args>
        <return>['_splitnport:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['int']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="splitquery">
        <expr>ret = splitquery(url)</expr>
        <args>['url:str']</args>
        <return>['_splitquery:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="splittag">
        <expr>ret = splittag(url)</expr>
        <args>['url:str']</args>
        <return>['_splittag:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="splitattr">
        <expr>ret = splitattr(url)</expr>
        <args>['url:str']</args>
        <return>['_splitattr:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="splitvalue">
        <expr>ret = splitvalue(attr)</expr>
        <args>['attr:str']</args>
        <return>['_splitvalue:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ValueError</exception>
        <exception>IndexError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>TypeError</exception>
        <exception>TypeError</exception>
        <exception>UnicodeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module name="urllib.response" imports="['tempfile']" importfrom="[]">
      <class name="addbase" init="obj = addbase(fp)">
        <api name="__init__">
          <expr>None</expr>
          <args>['fp:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="addclosehook" init="obj = addclosehook(fp,closehook)">
        <api name="__init__">
          <expr>None</expr>
          <args>['fp:NoneType', 'closehook:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="addinfo" init="obj = addinfo(fp,headers)">
        <api name="__init__">
          <expr>None</expr>
          <args>['fp:NoneType', 'headers:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info">
          <expr>obj.ret = info()</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="addinfourl" init="obj = addinfourl(fp,headers,url,code)">
        <api name="__init__">
          <expr>None</expr>
          <args>['fp:NoneType', 'headers:NoneType', 'url:NoneType', 'code:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="status">
          <expr>obj.status()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getcode">
          <expr>obj.getcode()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="geturl">
          <expr>obj.geturl()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
    </module>
  </library>
  <library name="turtledemo">
    <module name="turtledemo.penrose" imports="[]" importfrom="['turtle:*', 'math:cos', 'math:pi', 'time:perf_counter', 'time:sleep']">
      <api name="kite">
        <expr>kite(l)</expr>
        <args>['l:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dart">
        <expr>dart(l)</expr>
        <args>['l:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="inflatekite">
        <expr>inflatekite(l,n)</expr>
        <args>['l:None', 'n:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="inflatedart">
        <expr>inflatedart(l,n)</expr>
        <args>['l:None', 'n:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="draw">
        <expr>draw(l,n,th)</expr>
        <args>['l:None', 'n:None', 'th:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[2]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="sun">
        <expr>sun(l,n)</expr>
        <args>['l:None', 'n:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="star">
        <expr>star(l,n)</expr>
        <args>['l:None', 'n:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="makeshapes">
        <expr>makeshapes()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="start">
        <expr>start()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="demo">
        <expr>demo(fun)</expr>
        <args>['fun:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['sun']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>ret = main()</expr>
        <args>[]</args>
        <return>['Done:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="turtledemo.yinyang" imports="[]" importfrom="['turtle:*']">
      <api name="yin">
        <expr>yin(radius,color1,color2)</expr>
        <args>['radius:None', 'color1:None', 'color2:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>ret = main()</expr>
        <args>[]</args>
        <return>['Done!:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="turtledemo.forest" imports="[]" importfrom="['turtle:Turtle', 'turtle:colormode', 'turtle:tracer', 'turtle:mainloop', 'random:randrange', 'time:perf_counter']">
      <api name="symRandom">
        <expr>ret = symRandom(n)</expr>
        <args>['n:None']</args>
        <return>['randrange:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="randomize">
        <expr>ret = randomize(branchlist,angledist,sizedist)</expr>
        <args>['branchlist:None', 'angledist:None', 'sizedist:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="randomfd">
        <expr>randomfd(t,distance,parts,angledist)</expr>
        <args>['t:None', 'distance:None', 'parts:None', 'angledist:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="tree">
        <expr>tree(tlist,size,level,widthfactor,branchlists,angledist,sizedist)</expr>
        <args>['tlist:None', 'size:None', 'level:None', 'widthfactor:None', 'branchlists:None', 'angledist:None', 'sizedist:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[10, 5]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="start">
        <expr>start(t,x,y)</expr>
        <args>['t:None', 'x:None', 'y:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="doit1">
        <expr>ret = doit1(level,pen)</expr>
        <args>['level:None', 'pen:None']</args>
        <return>['t:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="doit2">
        <expr>ret = doit2(level,pen)</expr>
        <args>['level:None', 'pen:None']</args>
        <return>['t:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="doit3">
        <expr>ret = doit3(level,pen)</expr>
        <args>['level:None', 'pen:None']</args>
        <return>['t:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>ret = main()</expr>
        <args>[]</args>
        <return>['ret:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="turtledemo.paint" imports="[]" importfrom="['turtle:*']">
      <api name="switchupdown">
        <expr>switchupdown(x,y)</expr>
        <args>['x:None', 'y:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0, 0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="changecolor">
        <expr>changecolor(x,y)</expr>
        <args>['x:None', 'y:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0, 0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>ret = main()</expr>
        <args>[]</args>
        <return>['EVENTLOOP:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="turtledemo.nim" imports="['turtle', 'random', 'time']" importfrom="[]">
      <class name="NimModel" init="obj = NimModel(game)">
        <api name="__init__">
          <expr>None</expr>
          <args>['game:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="game_over">
          <expr>obj.ret = game_over()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Stick" init="obj = Stick(row,col,game)">
        <api name="__init__">
          <expr>None</expr>
          <args>['row:None', 'col:None', 'game:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="coords">
          <expr>obj.coords(row,col)</expr>
          <args>['row:None', 'col:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="makemove">
          <expr>obj.makemove(x,y)</expr>
          <args>['x:None', 'y:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="NimView" init="obj = NimView(game)">
        <api name="__init__">
          <expr>None</expr>
          <args>['game:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="NimController" init="obj = NimController(game)">
        <api name="__init__">
          <expr>None</expr>
          <args>['game:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Nim" init="obj = Nim(screen)">
        <api name="__init__">
          <expr>None</expr>
          <args>['screen:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="randomrow">
        <expr>ret = randomrow()</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="computerzug">
        <expr>ret = computerzug(state)</expr>
        <args>['state:None']</args>
        <return>['randommove:None', 'move:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="randommove">
        <expr>randommove(state)</expr>
        <args>['state:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>ret = main()</expr>
        <args>[]</args>
        <return>['EVENTLOOP:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="turtledemo.round_dance" imports="[]" importfrom="['turtle:*']">
      <api name="stop">
        <expr>stop()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>ret = main()</expr>
        <args>[]</args>
        <return>['DONE!:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="turtledemo.peace" imports="[]" importfrom="['turtle:*']">
      <api name="main">
        <expr>ret = main()</expr>
        <args>[]</args>
        <return>['Done!:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="turtledemo.tree" imports="[]" importfrom="['turtle:Turtle', 'turtle:mainloop', 'time:perf_counter']">
      <api name="tree">
        <expr>tree(plist,l,a,f)</expr>
        <args>['plist:None', 'l:None', 'a:None', 'f:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="maketree">
        <expr>maketree()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>ret = main()</expr>
        <args>[]</args>
        <return>['ret:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="turtledemo.two_canvases" imports="[]" importfrom="['turtle:TurtleScreen', 'turtle:RawTurtle', 'turtle:TK']">
      <api name="main">
        <expr>ret = main()</expr>
        <args>[]</args>
        <return>['EVENTLOOP:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="turtledemo.planet_and_moon" imports="[]" importfrom="['turtle:Shape', 'turtle:Turtle', 'turtle:mainloop', 'turtle:Vec2D']">
      <class name="GravSys" init="obj = GravSys()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="start">
          <expr>obj.start()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Star" init="obj = Star(m,x,v,gravSys,shape)">
        <api name="__init__">
          <expr>None</expr>
          <args>['m:None', 'x:None', 'v:None', 'gravSys:None', 'shape:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="main">
        <expr>ret = main()</expr>
        <args>[]</args>
        <return>['Done!:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="turtledemo.chaos" imports="[]" importfrom="['turtle:*']">
      <api name="f">
        <expr>ret = f(x)</expr>
        <args>['x:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="g">
        <expr>ret = g(x)</expr>
        <args>['x:None']</args>
        <return>['ret:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="h">
        <expr>ret = h(x)</expr>
        <args>['x:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="jumpto">
        <expr>jumpto(x,y)</expr>
        <args>['x:None', 'y:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="line">
        <expr>line(x1,y1,x2,y2)</expr>
        <args>['x1:None', 'y1:None', 'x2:None', 'y2:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="coosys">
        <expr>coosys()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="plot">
        <expr>plot(fun,start,color)</expr>
        <args>['fun:None', 'start:None', 'color:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>ret = main()</expr>
        <args>[]</args>
        <return>['Done!:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="turtledemo.clock" imports="[]" importfrom="['turtle:*', 'datetime:datetime']">
      <api name="jump">
        <expr>jump(distanz,winkel)</expr>
        <args>['distanz:None', 'winkel:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="hand">
        <expr>hand(laenge,spitze)</expr>
        <args>['laenge:None', 'spitze:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="make_hand_shape">
        <expr>make_hand_shape(name,laenge,spitze)</expr>
        <args>['name:None', 'laenge:None', 'spitze:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="clockface">
        <expr>clockface(radius)</expr>
        <args>['radius:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="setup">
        <expr>setup()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="wochentag">
        <expr>ret = wochentag(t)</expr>
        <args>['t:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="datum">
        <expr>ret = datum(z)</expr>
        <args>['z:None']</args>
        <return>['ret:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="tick">
        <expr>tick()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>ret = main()</expr>
        <args>[]</args>
        <return>['EVENTLOOP:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>Terminator</exception>
      </errors>
    </module>
    <module name="turtledemo.sorting_animate" imports="['random']" importfrom="['turtle:*']">
      <class name="Block" init="obj = Block(size)">
        <api name="__init__">
          <expr>None</expr>
          <args>['size:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="glow">
          <expr>obj.glow()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unglow">
          <expr>obj.unglow()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Shelf" init="obj = Shelf(y)">
        <api name="__init__">
          <expr>None</expr>
          <args>['y:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="push">
          <expr>obj.push(d)</expr>
          <args>['d:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="isort">
        <expr>isort(shelf)</expr>
        <args>['shelf:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ssort">
        <expr>ssort(shelf)</expr>
        <args>['shelf:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="partition">
        <expr>ret = partition(shelf,left,right,pivot_index)</expr>
        <args>['shelf:None', 'left:None', 'right:None', 'pivot_index:None']</args>
        <return>['store_index:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="qsort">
        <expr>qsort(shelf,left,right)</expr>
        <args>['shelf:None', 'left:None', 'right:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="randomize">
        <expr>randomize()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="show_text">
        <expr>show_text(text,line)</expr>
        <args>['text:None', 'line:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="start_ssort">
        <expr>start_ssort()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="start_isort">
        <expr>start_isort()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="start_qsort">
        <expr>start_qsort()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="init_shelf">
        <expr>init_shelf()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="disable_keys">
        <expr>disable_keys()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="enable_keys">
        <expr>enable_keys()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>ret = main()</expr>
        <args>[]</args>
        <return>['EVENTLOOP:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="turtledemo.bytedesign" imports="[]" importfrom="['turtle:Turtle', 'turtle:mainloop', 'time:perf_counter']">
      <class name="Designer" init="">
        <api name="design">
          <expr>obj.design(homePos,scale)</expr>
          <args>['homePos:None', 'scale:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="main">
        <expr>ret = main()</expr>
        <args>[]</args>
        <return>['ret:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="turtledemo.fractalcurves" imports="['math']" importfrom="['turtle:*', 'time:sleep', 'time:perf_counter']">
      <class name="CurvesTurtle" init="">
        <api name="fractalgon">
          <expr>obj.fractalgon(n,rad,lev,dir)</expr>
          <args>['n:None', 'rad:None', 'lev:None', 'dir:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="main">
        <expr>ret = main()</expr>
        <args>[]</args>
        <return>['res:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="turtledemo.lindenmayer" imports="[]" importfrom="['turtle:*', 'time:sleep']">
      <api name="replace">
        <expr>ret = replace(seq,replacementRules,n)</expr>
        <args>['seq:None', 'replacementRules:None', 'n:None']</args>
        <return>['seq:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="draw">
        <expr>draw(commands,rules)</expr>
        <args>['commands:None', 'rules:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>ret = main()</expr>
        <args>[]</args>
        <return>['Done!:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>TypeError</exception>
      </errors>
    </module>
    <module name="turtledemo.rosette" imports="[]" importfrom="['turtle:Screen', 'turtle:Turtle', 'turtle:mainloop', 'time:perf_counter', 'time:sleep']">
      <api name="mn_eck">
        <expr>mn_eck(p,ne,sz)</expr>
        <args>['p:None', 'ne:None', 'sz:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>ret = main()</expr>
        <args>[]</args>
        <return>['ret:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="turtledemo.minimal_hanoi" imports="[]" importfrom="['turtle:*']">
      <class name="Disc" init="obj = Disc(n)">
        <api name="__init__">
          <expr>None</expr>
          <args>['n:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Tower" init="obj = Tower(x)">
        <api name="__init__">
          <expr>None</expr>
          <args>['x:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="push">
          <expr>obj.push(d)</expr>
          <args>['d:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="hanoi">
        <expr>hanoi(n,from_,with_,to_)</expr>
        <args>['n:None', 'from_:None', 'with_:None', 'to_:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="play">
        <expr>play()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>ret = main()</expr>
        <args>[]</args>
        <return>['EVENTLOOP:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>Terminator</exception>
      </errors>
    </module>
    <module name="turtledemo.colormixer" imports="[]" importfrom="['turtle:Screen', 'turtle:Turtle', 'turtle:mainloop']">
      <class name="ColorTurtle" init="obj = ColorTurtle(x,y)">
        <api name="__init__">
          <expr>None</expr>
          <args>['x:None', 'y:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="shift">
          <expr>obj.shift(x,y)</expr>
          <args>['x:None', 'y:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="setbgcolor">
        <expr>setbgcolor()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>ret = main()</expr>
        <args>[]</args>
        <return>['EVENTLOOP:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
  </library>
  <library name="asyncio">
    <module name="asyncio.staggered" imports="['contextlib', 'typing']" importfrom="[]">
      <api name="staggered_race">
        <expr>staggered_race(coro_fns,delay)</expr>
        <args>['coro_fns:None', 'delay:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['loop:None']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
    </module>
    <module name="asyncio.unix_events" imports="['errno', 'io', 'itertools', 'os', 'selectors', 'signal', 'socket', 'stat', 'subprocess', 'sys', 'threading', 'warnings']" importfrom="['log:logger']">
      <class name="AbstractChildWatcher" init="">
        <api name="add_child_handler">
          <expr>obj.add_child_handler(pid,callback)</expr>
          <args>['pid:Mock', 'callback:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="remove_child_handler">
          <expr>obj.remove_child_handler(pid)</expr>
          <args>['pid:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="attach_loop">
          <expr>obj.attach_loop(loop)</expr>
          <args>['loop:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_active">
          <expr>obj.is_active()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="PidfdChildWatcher" init="obj = PidfdChildWatcher()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_active">
          <expr>obj.ret = is_active()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_child_handler">
          <expr>obj.add_child_handler(pid,callback)</expr>
          <args>['pid:None', 'callback:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="remove_child_handler">
          <expr>obj.ret = remove_child_handler(pid)</expr>
          <args>['pid:None']</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="BaseChildWatcher" init="obj = BaseChildWatcher()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_active">
          <expr>obj.ret = is_active()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="SafeChildWatcher" init="">
        <api name="add_child_handler">
          <expr>obj.add_child_handler(pid,callback)</expr>
          <args>['pid:int', 'callback:method']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="remove_child_handler">
          <expr>obj.remove_child_handler(pid)</expr>
          <args>['pid:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="FastChildWatcher" init="obj = FastChildWatcher()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_child_handler">
          <expr>obj.add_child_handler(pid,callback)</expr>
          <args>['pid:int', 'callback:method']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="remove_child_handler">
          <expr>obj.remove_child_handler(pid)</expr>
          <args>['pid:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="MultiLoopChildWatcher" init="obj = MultiLoopChildWatcher()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_active">
          <expr>obj.ret = is_active()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_child_handler">
          <expr>obj.add_child_handler(pid,callback)</expr>
          <args>['pid:None', 'callback:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="remove_child_handler">
          <expr>obj.ret = remove_child_handler(pid)</expr>
          <args>['pid:None']</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ThreadedChildWatcher" init="obj = ThreadedChildWatcher()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_active">
          <expr>obj.is_active()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_child_handler">
          <expr>obj.add_child_handler(pid,callback)</expr>
          <args>['pid:int', 'callback:method']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="remove_child_handler">
          <expr>obj.ret = remove_child_handler(pid)</expr>
          <args>['pid:None']</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>ValueError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>ValueError</exception>
        <exception>OSError</exception>
        <exception>BlockingIOError</exception>
        <exception>InterruptedError</exception>
        <exception>OSError</exception>
        <exception>SystemExit</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>BaseException</exception>
        <exception>BlockingIOError</exception>
        <exception>InterruptedError</exception>
        <exception>OSError</exception>
        <exception>BlockingIOError</exception>
        <exception>InterruptedError</exception>
        <exception>SystemExit</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>BaseException</exception>
        <exception>BlockingIOError</exception>
        <exception>InterruptedError</exception>
        <exception>SystemExit</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>BaseException</exception>
        <exception>ChildProcessError</exception>
        <exception>KeyError</exception>
        <exception>SystemExit</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>BaseException</exception>
        <exception>KeyError</exception>
        <exception>ChildProcessError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>ChildProcessError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>ChildProcessError</exception>
        <exception>KeyError</exception>
        <exception>SystemExit</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>BaseException</exception>
        <exception>ChildProcessError</exception>
      </errors>
    </module>
    <module name="asyncio.tasks" imports="['concurrent.futures', 'contextvars', 'functools', 'inspect', 'itertools', 'types', 'warnings', 'weakref']" importfrom="['types:GenericAlias', 'queues:Queue']">
      <class name="Task" init="obj = Task(coro)">
        <api name="__init__">
          <expr>None</expr>
          <args>['coro:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['loop:NoneType', 'name:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None, None]</kwodefa>
        </api>
        <api name="get_coro">
          <expr>obj.get_coro()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_name">
          <expr>obj.get_name()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_result">
          <expr>obj.set_result(result)</expr>
          <args>['result:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_exception">
          <expr>obj.set_exception(exception)</expr>
          <args>['exception:ValueError']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_stack">
          <expr>obj.get_stack()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['limit:int']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="print_stack">
          <expr>obj.print_stack()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['limit:int', 'file:StringIO']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None, None]</kwodefa>
        </api>
        <api name="cancel">
          <expr>obj.cancel(msg)</expr>
          <args>['msg:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="current_task">
        <expr>current_task(loop)</expr>
        <args>['loop:_UnixSelectorEventLoop']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="all_tasks">
        <expr>all_tasks(loop)</expr>
        <args>['loop:_UnixSelectorEventLoop']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="create_task">
        <expr>create_task(coro)</expr>
        <args>['coro:coroutine']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['name:NoneType']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <api name="wait">
        <expr>wait(fs)</expr>
        <args>['fs:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['loop:NoneType', 'timeout:NoneType', 'return_when:str']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None, None, 'ALL_COMPLETED']</kwodefa>
      </api>
      <api name="wait_for">
        <expr>wait_for(fut,timeout)</expr>
        <args>['fut:coroutine', 'timeout:float']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['loop:_UnixSelectorEventLoop']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <api name="as_completed">
        <expr>as_completed(fs)</expr>
        <args>['fs:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['loop:TestLoop', 'timeout:NoneType']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None, None]</kwodefa>
      </api>
      <api name="sleep">
        <expr>sleep(delay,result)</expr>
        <args>['delay:int', 'result:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['loop:NoneType']</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <api name="ensure_future">
        <expr>ensure_future(coro_or_future)</expr>
        <args>['coro_or_future:coroutine']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['loop:_UnixSelectorEventLoop']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <api name="gather">
        <expr>gather()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['loop:NoneType', 'return_exceptions:bool']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None, False]</kwodefa>
      </api>
      <api name="shield">
        <expr>shield(arg)</expr>
        <args>['arg:Future']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['loop:NoneType']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <api name="run_coroutine_threadsafe">
        <expr>run_coroutine_threadsafe(coro,loop)</expr>
        <args>['coro:coroutine', 'loop:_UnixSelectorEventLoop']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>RuntimeError</exception>
        <exception>RuntimeError</exception>
        <exception>AttributeError</exception>
        <exception>StopIteration</exception>
        <exception>exceptions.CancelledError</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>SystemExit</exception>
        <exception>BaseException</exception>
        <exception>BaseException</exception>
        <exception>ImportError</exception>
        <exception>exceptions.CancelledError</exception>
        <exception>exceptions.CancelledError</exception>
        <exception>exceptions.CancelledError</exception>
        <exception>ImportError</exception>
      </errors>
    </module>
    <module name="asyncio.coroutines" imports="['collections.abc', 'functools', 'inspect', 'os', 'sys', 'traceback', 'types', 'warnings']" importfrom="['log:logger']">
      <class name="CoroWrapper" init="obj = CoroWrapper(gen,func)">
        <api name="__init__">
          <expr>None</expr>
          <args>['gen:NoneType', 'func:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="gi_frame">
          <expr>obj.gi_frame()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="gi_running">
          <expr>obj.gi_running()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="gi_code">
          <expr>obj.gi_code()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="gi_yieldfrom">
          <expr>obj.ret = gi_yieldfrom()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="coroutine">
        <expr>coroutine(func)</expr>
        <args>['func:function']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="iscoroutinefunction">
        <expr>iscoroutinefunction(func)</expr>
        <args>['func:function']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="iscoroutine">
        <expr>iscoroutine(obj)</expr>
        <args>['obj:coroutine']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="asyncio.locks" imports="['collections', 'warnings']" importfrom="[]">
      <class name="Lock" init="obj = Lock()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['loop:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="locked">
          <expr>obj.locked()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="release">
          <expr>obj.release()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Event" init="obj = Event()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['loop:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="is_set">
          <expr>obj.is_set()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set">
          <expr>obj.set()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clear">
          <expr>obj.clear()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Condition" init="obj = Condition(lock)">
        <api name="__init__">
          <expr>None</expr>
          <args>['lock:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['loop:NoneType']</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="notify_all">
          <expr>obj.notify_all()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Semaphore" init="obj = Semaphore(value)">
        <api name="__init__">
          <expr>None</expr>
          <args>['value:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['loop:NoneType']</kwoargs>
          <defa>[1]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="release">
          <expr>obj.release()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="BoundedSemaphore" init="obj = BoundedSemaphore(value)">
        <api name="__init__">
          <expr>None</expr>
          <args>['value:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['loop:NoneType']</kwoargs>
          <defa>[1]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>StopIteration</exception>
      </errors>
    </module>
    <module name="asyncio.proactor_events" imports="['io', 'os', 'socket', 'warnings', 'signal', 'threading', 'collections']" importfrom="['log:logger']">
      <class name="BaseProactorEventLoop" init="obj = BaseProactorEventLoop(proactor)">
        <api name="__init__">
          <expr>None</expr>
          <args>['proactor:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>socket.error</exception>
        <exception>socket.error</exception>
        <exception>SystemExit</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>BaseException</exception>
        <exception>SystemExit</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>BaseException</exception>
        <exception>ConnectionAbortedError</exception>
        <exception>ConnectionResetError</exception>
        <exception>OSError</exception>
        <exception>exceptions.CancelledError</exception>
        <exception>ConnectionResetError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>Exception</exception>
        <exception>OSError</exception>
        <exception>exceptions.CancelledError</exception>
        <exception>exceptions.CancelledError</exception>
        <exception>SystemExit</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>BaseException</exception>
        <exception>OSError</exception>
      </errors>
    </module>
    <module name="asyncio.events" imports="['contextvars', 'os', 'socket', 'subprocess', 'sys', 'threading']" importfrom="['_asyncio:get_running_loop', '_asyncio:get_event_loop']">
      <class name="Handle" init="obj = Handle(callback,args,loop,context)">
        <api name="__init__">
          <expr>None</expr>
          <args>['callback:NoneType', 'args:NoneType', 'loop:NoneType', 'context:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="cancel">
          <expr>obj.cancel()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="cancelled">
          <expr>obj.cancelled()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="TimerHandle" init="obj = TimerHandle(when,callback,args,loop,context)">
        <api name="__init__">
          <expr>None</expr>
          <args>['when:NoneType', 'callback:NoneType', 'args:NoneType', 'loop:NoneType', 'context:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="when">
          <expr>obj.ret = when()</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="AbstractServer" init="">
        <api name="close">
          <expr>obj.close()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_loop">
          <expr>obj.get_loop()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_serving">
          <expr>obj.is_serving()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="AbstractEventLoop" init="">
        <api name="run_forever">
          <expr>obj.run_forever()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run_until_complete">
          <expr>obj.run_until_complete(future)</expr>
          <args>['future:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="stop">
          <expr>obj.stop()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_running">
          <expr>obj.is_running()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_closed">
          <expr>obj.is_closed()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="close">
          <expr>obj.close()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="call_soon">
          <expr>obj.ret = call_soon(callback)</expr>
          <args>['callback:NoneType']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['context:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="call_at">
          <expr>obj.call_at(when,callback)</expr>
          <args>['when:Mock', 'callback:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['context:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="time">
          <expr>obj.time()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="create_future">
          <expr>obj.create_future()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="create_task">
          <expr>obj.create_task(coro)</expr>
          <args>['coro:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['name:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="call_soon_threadsafe">
          <expr>obj.call_soon_threadsafe(callback)</expr>
          <args>['callback:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['context:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="run_in_executor">
          <expr>obj.run_in_executor(executor,func)</expr>
          <args>['executor:Mock', 'func:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_default_executor">
          <expr>obj.set_default_executor(executor)</expr>
          <args>['executor:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_reader">
          <expr>obj.add_reader(fd,callback)</expr>
          <args>['fd:int', 'callback:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="remove_reader">
          <expr>obj.remove_reader(fd)</expr>
          <args>['fd:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_writer">
          <expr>obj.add_writer(fd,callback)</expr>
          <args>['fd:int', 'callback:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="remove_writer">
          <expr>obj.remove_writer(fd)</expr>
          <args>['fd:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_signal_handler">
          <expr>obj.add_signal_handler(sig,callback)</expr>
          <args>['sig:int', 'callback:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="remove_signal_handler">
          <expr>obj.remove_signal_handler(sig)</expr>
          <args>['sig:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_task_factory">
          <expr>obj.set_task_factory(factory)</expr>
          <args>['factory:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_task_factory">
          <expr>obj.get_task_factory()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_exception_handler">
          <expr>obj.get_exception_handler()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_exception_handler">
          <expr>obj.set_exception_handler(handler)</expr>
          <args>['handler:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="default_exception_handler">
          <expr>obj.default_exception_handler(context)</expr>
          <args>['context:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="call_exception_handler">
          <expr>obj.call_exception_handler(context)</expr>
          <args>['context:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_debug">
          <expr>obj.get_debug()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_debug">
          <expr>obj.set_debug(enabled)</expr>
          <args>['enabled:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="AbstractEventLoopPolicy" init="">
        <api name="get_event_loop">
          <expr>obj.get_event_loop()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_event_loop">
          <expr>obj.set_event_loop(loop)</expr>
          <args>['loop:object']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="new_event_loop">
          <expr>obj.new_event_loop()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_child_watcher">
          <expr>obj.get_child_watcher()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_child_watcher">
          <expr>obj.set_child_watcher(watcher)</expr>
          <args>['watcher:object']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="BaseDefaultEventLoopPolicy" init="obj = BaseDefaultEventLoopPolicy()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_event_loop">
          <expr>obj.ret = get_event_loop()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="new_event_loop">
          <expr>obj.ret = new_event_loop()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="get_running_loop">
        <expr>get_running_loop()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_event_loop_policy">
        <expr>get_event_loop_policy()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="set_event_loop_policy">
        <expr>set_event_loop_policy(policy)</expr>
        <args>['policy:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_event_loop">
        <expr>get_event_loop()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="set_event_loop">
        <expr>set_event_loop(loop)</expr>
        <args>['loop:_UnixSelectorEventLoop']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="new_event_loop">
        <expr>new_event_loop()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_child_watcher">
        <expr>get_child_watcher()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="set_child_watcher">
        <expr>set_child_watcher(watcher)</expr>
        <args>['watcher:SafeChildWatcher']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>SystemExit</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>BaseException</exception>
        <exception>ImportError</exception>
      </errors>
    </module>
    <module name="asyncio.log" imports="['logging']" importfrom="[]"/>
    <module name="asyncio.base_tasks" imports="['linecache', 'traceback']" importfrom="[]"/>
    <module name="asyncio.constants" imports="['enum']" importfrom="[]"/>
    <module name="asyncio.transports" imports="[]" importfrom="[]">
      <class name="BaseTransport" init="obj = BaseTransport(extra)">
        <api name="__init__">
          <expr>None</expr>
          <args>['extra:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_extra_info">
          <expr>obj.ret = get_extra_info(name,default)</expr>
          <args>['name:None', 'default:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_closing">
          <expr>obj.is_closing()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="close">
          <expr>obj.close()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_protocol">
          <expr>obj.set_protocol(protocol)</expr>
          <args>['protocol:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_protocol">
          <expr>obj.get_protocol()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ReadTransport" init="">
        <api name="is_reading">
          <expr>obj.is_reading()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pause_reading">
          <expr>obj.pause_reading()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="resume_reading">
          <expr>obj.resume_reading()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="WriteTransport" init="">
        <api name="set_write_buffer_limits">
          <expr>obj.set_write_buffer_limits(high,low)</expr>
          <args>['high:None', 'low:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_write_buffer_size">
          <expr>obj.get_write_buffer_size()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_write_buffer_limits">
          <expr>obj.get_write_buffer_limits()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="writelines">
          <expr>obj.writelines(list_of_data)</expr>
          <args>['list_of_data:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="write_eof">
          <expr>obj.write_eof()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="can_write_eof">
          <expr>obj.can_write_eof()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="abort">
          <expr>obj.abort()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Transport" init=""/>
      <class name="DatagramTransport" init="">
        <api name="sendto">
          <expr>obj.sendto(data,addr)</expr>
          <args>['data:str', 'addr:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="abort">
          <expr>obj.abort()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="SubprocessTransport" init="">
        <api name="get_pid">
          <expr>obj.get_pid()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_returncode">
          <expr>obj.get_returncode()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_pipe_transport">
          <expr>obj.get_pipe_transport(fd)</expr>
          <args>['fd:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="send_signal">
          <expr>obj.send_signal(signal)</expr>
          <args>['signal:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="terminate">
          <expr>obj.terminate()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="kill">
          <expr>obj.kill()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>SystemExit</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>BaseException</exception>
        <exception>SystemExit</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>BaseException</exception>
      </errors>
    </module>
    <module name="asyncio.runners" imports="[]" importfrom="[]">
      <api name="run">
        <expr>run(main)</expr>
        <args>['main:coroutine']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['debug:NoneType']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
    </module>
    <module name="asyncio.base_events" imports="['collections', 'collections.abc', 'concurrent.futures', 'functools', 'heapq', 'itertools', 'os', 'socket', 'stat', 'subprocess', 'threading', 'time', 'traceback', 'sys', 'warnings', 'weakref', 'ssl']" importfrom="['log:logger']">
      <class name="Server" init="obj = Server(loop,sockets,protocol_factory,ssl_context,backlog,ssl_handshake_timeout)">
        <api name="__init__">
          <expr>None</expr>
          <args>['loop:NoneType', 'sockets:NoneType', 'protocol_factory:NoneType', 'ssl_context:NoneType', 'backlog:NoneType', 'ssl_handshake_timeout:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_loop">
          <expr>obj.ret = get_loop()</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_serving">
          <expr>obj.is_serving()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sockets">
          <expr>obj.sockets()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="close">
          <expr>obj.close()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="BaseEventLoop" init="obj = BaseEventLoop()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="create_task">
          <expr>obj.create_task(coro)</expr>
          <args>['coro:coroutine']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['name:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="set_task_factory">
          <expr>obj.set_task_factory(factory)</expr>
          <args>['factory:function']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_task_factory">
          <expr>obj.get_task_factory()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run_until_complete">
          <expr>obj.run_until_complete(future)</expr>
          <args>['future:coroutine']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="call_later">
          <expr>obj.call_later(delay,callback)</expr>
          <args>['delay:int', 'callback:function']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['context:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="call_soon">
          <expr>obj.call_soon(callback)</expr>
          <args>['callback:function']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['context:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="run_in_executor">
          <expr>obj.ret = run_in_executor(executor,func)</expr>
          <args>['executor:NoneType', 'func:function']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_default_executor">
          <expr>obj.set_default_executor(executor)</expr>
          <args>['executor:DummyExecutor']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_exception_handler">
          <expr>obj.get_exception_handler()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_exception_handler">
          <expr>obj.set_exception_handler(handler)</expr>
          <args>['handler:function']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="call_exception_handler">
          <expr>obj.call_exception_handler(context)</expr>
          <args>['context:dict']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_debug">
          <expr>obj.set_debug(enabled)</expr>
          <args>['enabled:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>OSError</exception>
        <exception>Exception</exception>
        <exception>SystemExit</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>BaseException</exception>
        <exception>SystemExit</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>BaseException</exception>
      </errors>
    </module>
    <module name="asyncio.trsock" imports="['socket', 'warnings']" importfrom="[]">
      <class name="TransportSocket" init="obj = TransportSocket(sock)">
        <api name="__init__">
          <expr>None</expr>
          <args>['sock:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="family">
          <expr>obj.family()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="type">
          <expr>obj.type()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="proto">
          <expr>obj.proto()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="settimeout">
          <expr>obj.settimeout(value)</expr>
          <args>['value:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="gettimeout">
          <expr>obj.ret = gettimeout()</expr>
          <args>[]</args>
          <return>['0:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setblocking">
          <expr>obj.setblocking(flag)</expr>
          <args>['flag:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>socket.error</exception>
        <exception>socket.error</exception>
      </errors>
    </module>
    <module name="asyncio.streams" imports="['socket', 'sys', 'warnings', 'weakref']" importfrom="['log:logger', 'tasks:sleep']">
      <class name="FlowControlMixin" init="obj = FlowControlMixin(loop)">
        <api name="__init__">
          <expr>None</expr>
          <args>['loop:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pause_writing">
          <expr>obj.pause_writing()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="resume_writing">
          <expr>obj.resume_writing()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="connection_lost">
          <expr>obj.connection_lost(exc)</expr>
          <args>['exc:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamReaderProtocol" init="obj = StreamReaderProtocol(stream_reader,client_connected_cb,loop)">
        <api name="__init__">
          <expr>None</expr>
          <args>['stream_reader:NoneType', 'client_connected_cb:NoneType', 'loop:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="connection_made">
          <expr>obj.connection_made(transport)</expr>
          <args>['transport:_SelectorSocketTransport']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="data_received">
          <expr>obj.data_received(data)</expr>
          <args>['data:bytes']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="eof_received">
          <expr>obj.eof_received()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init="obj = StreamWriter(transport,protocol,reader,loop)">
        <api name="__init__">
          <expr>None</expr>
          <args>['transport:NoneType', 'protocol:NoneType', 'reader:NoneType', 'loop:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="transport">
          <expr>obj.ret = transport()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamReader" init="obj = StreamReader(limit,loop)">
        <api name="__init__">
          <expr>None</expr>
          <args>['limit:NoneType', 'loop:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['_DEFAULT_LIMIT', None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="at_eof">
          <expr>obj.at_eof()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="open_connection">
        <expr>open_connection(host,port)</expr>
        <args>['host:str', 'port:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['loop:_UnixSelectorEventLoop', 'limit:int']</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[None, '_DEFAULT_LIMIT']</kwodefa>
      </api>
      <api name="start_server">
        <expr>start_server(client_connected_cb,host,port)</expr>
        <args>['client_connected_cb:function', 'host:str', 'port:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['loop:NoneType', 'limit:int']</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[None, '_DEFAULT_LIMIT']</kwodefa>
      </api>
      <api name="open_unix_connection">
        <expr>open_unix_connection(path)</expr>
        <args>['path:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['loop:_UnixSelectorEventLoop', 'limit:int']</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[None, '_DEFAULT_LIMIT']</kwodefa>
      </api>
      <api name="start_unix_server">
        <expr>start_unix_server(client_connected_cb,path)</expr>
        <args>['client_connected_cb:method', 'path:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['loop:_UnixSelectorEventLoop', 'limit:int']</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[None, '_DEFAULT_LIMIT']</kwodefa>
      </api>
      <errors>
        <exception>NotImplementedError</exception>
      </errors>
    </module>
    <module name="asyncio.futures" imports="['concurrent.futures', 'contextvars', 'logging', 'sys']" importfrom="['types:GenericAlias']">
      <class name="Future" init="obj = Future()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['loop:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="get_loop">
          <expr>obj.get_loop()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="cancel">
          <expr>obj.cancel(msg)</expr>
          <args>['msg:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="cancelled">
          <expr>obj.cancelled()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="done">
          <expr>obj.done()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_done_callback">
          <expr>obj.add_done_callback(fn)</expr>
          <args>['fn:TaskWakeupMethWrapper']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['context:Context']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="remove_done_callback">
          <expr>obj.remove_done_callback(fn)</expr>
          <args>['fn:function']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_result">
          <expr>obj.set_result(result)</expr>
          <args>['result:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_exception">
          <expr>obj.set_exception(exception)</expr>
          <args>['exception:RuntimeError']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="wrap_future">
        <expr>wrap_future(future)</expr>
        <args>['future:Future']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['loop:_UnixSelectorEventLoop']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
      </errors>
    </module>
    <module name="asyncio.queues" imports="['collections', 'heapq', 'warnings']" importfrom="['types:GenericAlias']">
      <class name="QueueEmpty" init=""/>
      <class name="QueueFull" init=""/>
      <class name="Queue" init="obj = Queue(maxsize)">
        <api name="__init__">
          <expr>None</expr>
          <args>['maxsize:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['loop:NoneType']</kwoargs>
          <defa>[0]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="maxsize">
          <expr>obj.ret = maxsize()</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="empty">
          <expr>obj.empty()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="full">
          <expr>obj.full()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="put_nowait">
          <expr>obj.put_nowait(item)</expr>
          <args>['item:tuple']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_nowait">
          <expr>obj.get_nowait()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="task_done">
          <expr>obj.task_done()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="PriorityQueue" init=""/>
      <class name="LifoQueue" init=""/>
    </module>
    <module name="asyncio.exceptions" imports="[]" importfrom="[]">
      <class name="CancelledError" init=""/>
      <class name="TimeoutError" init=""/>
      <class name="InvalidStateError" init=""/>
      <class name="LimitOverrunError" init="obj = LimitOverrunError(message,consumed)">
        <api name="__init__">
          <expr>None</expr>
          <args>['message:NoneType', 'consumed:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>asyncioasyncio.exceptions.SendfileNotAvailableError</exception>
        <exception>asyncioasyncio.exceptions.IncompleteReadError</exception>
      </errors>
    </module>
    <module name="asyncio.threads" imports="['functools', 'contextvars']" importfrom="[]">
      <api name="to_thread">
        <expr>to_thread()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>['func:builtin_function_or_method']</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="asyncio.protocols" imports="[]" importfrom="[]">
      <class name="BaseProtocol" init="">
        <api name="connection_made">
          <expr>obj.connection_made(transport)</expr>
          <args>['transport:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="connection_lost">
          <expr>obj.connection_lost(exc)</expr>
          <args>['exc:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pause_writing">
          <expr>obj.pause_writing()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="resume_writing">
          <expr>obj.resume_writing()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Protocol" init="">
        <api name="data_received">
          <expr>obj.data_received(data)</expr>
          <args>['data:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="eof_received">
          <expr>obj.eof_received()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="BufferedProtocol" init="">
        <api name="get_buffer">
          <expr>obj.get_buffer(sizehint)</expr>
          <args>['sizehint:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="buffer_updated">
          <expr>obj.buffer_updated(nbytes)</expr>
          <args>['nbytes:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="eof_received">
          <expr>obj.eof_received()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="DatagramProtocol" init="">
        <api name="datagram_received">
          <expr>obj.datagram_received(data,addr)</expr>
          <args>['data:Mock', 'addr:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="error_received">
          <expr>obj.error_received(exc)</expr>
          <args>['exc:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="SubprocessProtocol" init="">
        <api name="pipe_data_received">
          <expr>obj.pipe_data_received(fd,data)</expr>
          <args>['fd:int', 'data:Mock']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pipe_connection_lost">
          <expr>obj.pipe_connection_lost(fd,exc)</expr>
          <args>['fd:int', 'exc:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="process_exited">
          <expr>obj.process_exited()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
    </module>
    <module name="asyncio.sslproto" imports="['collections', 'warnings', 'ssl']" importfrom="['log:logger']">
      <class name="SSLProtocol" init="obj = SSLProtocol(loop,app_protocol,sslcontext,waiter,server_side,server_hostname,call_connection_made,ssl_handshake_timeout)">
        <api name="__init__">
          <expr>None</expr>
          <args>['loop:NoneType', 'app_protocol:NoneType', 'sslcontext:NoneType', 'waiter:NoneType', 'server_side:NoneType', 'server_hostname:NoneType', 'call_connection_made:NoneType', 'ssl_handshake_timeout:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False, None, True, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="connection_lost">
          <expr>obj.connection_lost(exc)</expr>
          <args>['exc:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>ImportError</exception>
        <exception>ssl.SSLError</exception>
        <exception>SystemExit</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>BaseException</exception>
        <exception>SystemExit</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>BaseException</exception>
        <exception>SystemExit</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>BaseException</exception>
        <exception>SystemExit</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>BaseException</exception>
      </errors>
    </module>
    <module name="asyncio.selector_events" imports="['collections', 'errno', 'functools', 'selectors', 'socket', 'warnings', 'weakref', 'ssl']" importfrom="['log:logger']">
      <class name="BaseSelectorEventLoop" init="obj = BaseSelectorEventLoop(selector)">
        <api name="__init__">
          <expr>None</expr>
          <args>['selector:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_reader">
          <expr>obj.add_reader(fd,callback)</expr>
          <args>['fd:None', 'callback:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_writer">
          <expr>obj.add_writer(fd,callback)</expr>
          <args>['fd:None', 'callback:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
        <exception>InterruptedError</exception>
        <exception>BlockingIOError</exception>
        <exception>OSError</exception>
        <exception>BlockingIOError</exception>
        <exception>InterruptedError</exception>
        <exception>ConnectionAbortedError</exception>
        <exception>OSError</exception>
        <exception>AttributeError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>BlockingIOError</exception>
        <exception>InterruptedError</exception>
        <exception>SystemExit</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>BaseException</exception>
        <exception>BlockingIOError</exception>
        <exception>InterruptedError</exception>
        <exception>SystemExit</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>BaseException</exception>
        <exception>BlockingIOError</exception>
        <exception>InterruptedError</exception>
        <exception>SystemExit</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>BaseException</exception>
        <exception>BlockingIOError</exception>
        <exception>InterruptedError</exception>
        <exception>SystemExit</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>BaseException</exception>
        <exception>BlockingIOError</exception>
        <exception>InterruptedError</exception>
        <exception>SystemExit</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>BaseException</exception>
        <exception>BlockingIOError</exception>
        <exception>InterruptedError</exception>
        <exception>SystemExit</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>BaseException</exception>
        <exception>SystemExit</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>BaseException</exception>
        <exception>BlockingIOError</exception>
        <exception>InterruptedError</exception>
        <exception>SystemExit</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>BaseException</exception>
        <exception>SystemExit</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>BaseException</exception>
        <exception>BlockingIOError</exception>
        <exception>InterruptedError</exception>
        <exception>SystemExit</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>BaseException</exception>
        <exception>SystemExit</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>BaseException</exception>
        <exception>SystemExit</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>BaseException</exception>
        <exception>BlockingIOError</exception>
        <exception>InterruptedError</exception>
        <exception>SystemExit</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>BaseException</exception>
        <exception>BlockingIOError</exception>
        <exception>InterruptedError</exception>
        <exception>SystemExit</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>BaseException</exception>
        <exception>BlockingIOError</exception>
        <exception>InterruptedError</exception>
        <exception>OSError</exception>
        <exception>SystemExit</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>BaseException</exception>
        <exception>BlockingIOError</exception>
        <exception>InterruptedError</exception>
        <exception>OSError</exception>
        <exception>SystemExit</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>BaseException</exception>
        <exception>BlockingIOError</exception>
        <exception>InterruptedError</exception>
        <exception>OSError</exception>
        <exception>SystemExit</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>BaseException</exception>
      </errors>
    </module>
    <module name="asyncio.format_helpers" imports="['functools', 'inspect', 'reprlib', 'sys', 'traceback']" importfrom="[]">
      <api name="extract_stack">
        <expr>extract_stack(f,limit)</expr>
        <args>['f:frame', 'limit:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="asyncio.base_futures" imports="['reprlib']" importfrom="['_thread:get_ident']">
      <api name="isfuture">
        <expr>isfuture(obj)</expr>
        <args>['obj:coroutine']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
  </library>
  <library name="tkinter">
    <module name="tkinter.commondialog" imports="[]" importfrom="['tkinter:Frame']">
      <class name="Dialog" init="obj = Dialog(master)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="show">
          <expr>obj.ret = show()</expr>
          <args>[]</args>
          <return>['s:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
    </module>
    <module name="tkinter.colorchooser" imports="[]" importfrom="['tkinter.commondialog:Dialog']">
      <class name="Chooser" init=""/>
      <api name="askcolor">
        <expr>ret = askcolor(color)</expr>
        <args>['color:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>KeyError</exception>
      </errors>
    </module>
    <module name="tkinter.dialog" imports="[]" importfrom="['tkinter:Widget', 'tkinter:TclError', 'tkinter:Button', 'tkinter:Pack']">
      <class name="Dialog" init="obj = Dialog(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
    </module>
    <module name="tkinter.messagebox" imports="[]" importfrom="['tkinter.commondialog:Dialog']">
      <class name="Message" init=""/>
      <api name="showinfo">
        <expr>ret = showinfo(title,message)</expr>
        <args>['title:None', 'message:None']</args>
        <return>['_show:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="showwarning">
        <expr>ret = showwarning(title,message)</expr>
        <args>['title:None', 'message:None']</args>
        <return>['_show:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="showerror">
        <expr>ret = showerror(title,message)</expr>
        <args>['title:None', 'message:None']</args>
        <return>['_show:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="askquestion">
        <expr>ret = askquestion(title,message)</expr>
        <args>['title:None', 'message:None']</args>
        <return>['_show:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="askokcancel">
        <expr>ret = askokcancel(title,message)</expr>
        <args>['title:None', 'message:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="askyesno">
        <expr>ret = askyesno(title,message)</expr>
        <args>['title:None', 'message:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="askyesnocancel">
        <expr>ret = askyesnocancel(title,message)</expr>
        <args>['title:None', 'message:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="askretrycancel">
        <expr>ret = askretrycancel(title,message)</expr>
        <args>['title:None', 'message:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="tkinter.constants" imports="[]" importfrom="[]"/>
    <module name="tkinter.tix" imports="['os', 'tkinter']" importfrom="['tkinter:*']">
      <class name="tixCommand" init="">
        <api name="tix_addbitmapdir">
          <expr>obj.ret = tix_addbitmapdir(directory)</expr>
          <args>['directory:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tix_cget">
          <expr>obj.ret = tix_cget(option)</expr>
          <args>['option:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tix_configure">
          <expr>obj.ret = tix_configure(cnf)</expr>
          <args>['cnf:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tix_filedialog">
          <expr>obj.ret = tix_filedialog(dlgclass)</expr>
          <args>['dlgclass:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tix_getbitmap">
          <expr>obj.ret = tix_getbitmap(name)</expr>
          <args>['name:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tix_getimage">
          <expr>obj.ret = tix_getimage(name)</expr>
          <args>['name:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tix_option_get">
          <expr>obj.ret = tix_option_get(name)</expr>
          <args>['name:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tix_resetoptions">
          <expr>obj.ret = tix_resetoptions(newScheme,newFontSet,newScmPrio)</expr>
          <args>['newScheme:None', 'newFontSet:None', 'newScmPrio:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Tk" init="obj = Tk(screenName,baseName,className)">
        <api name="__init__">
          <expr>None</expr>
          <args>['screenName:NoneType', 'baseName:NoneType', 'className:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, 'Tix']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Form" init="">
        <api name="config">
          <expr>obj.config(cnf)</expr>
          <args>['cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="check">
          <expr>obj.ret = check()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="forget">
          <expr>obj.forget()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="grid">
          <expr>obj.ret = grid(xsize,ysize)</expr>
          <args>['xsize:None', 'ysize:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[0, 0]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info">
          <expr>obj.ret = info(option)</expr>
          <args>['option:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="slaves">
          <expr>obj.ret = slaves()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="TixWidget" init="obj = TixWidget(master,widgetName,static_options,cnf,kw)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'widgetName:NoneType', 'static_options:NoneType', 'cnf:NoneType', 'kw:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_silent">
          <expr>obj.set_silent(value)</expr>
          <args>['value:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="subwidget">
          <expr>obj.ret = subwidget(name)</expr>
          <args>['name:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="subwidgets_all">
          <expr>obj.ret = subwidgets_all()</expr>
          <args>[]</args>
          <return>['ret:None', 'retlist:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="config_all">
          <expr>obj.config_all(option,value)</expr>
          <args>['option:None', 'value:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="image_create">
          <expr>obj.ret = image_create(imgtype,cnf,master)</expr>
          <args>['imgtype:None', 'cnf:None', 'master:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="image_delete">
          <expr>obj.image_delete(imgname)</expr>
          <args>['imgname:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="TixSubWidget" init="obj = TixSubWidget(master,name,destroy_physically,check_intermediate)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'name:NoneType', 'destroy_physically:NoneType', 'check_intermediate:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[1, 1]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="DisplayStyle" init="obj = DisplayStyle(itemtype,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['itemtype:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['master:NoneType']</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="delete">
          <expr>obj.delete()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="config">
          <expr>obj.ret = config(cnf)</expr>
          <args>['cnf:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Balloon" init="obj = Balloon(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="bind_widget">
          <expr>obj.bind_widget(widget,cnf)</expr>
          <args>['widget:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unbind_widget">
          <expr>obj.unbind_widget(widget)</expr>
          <args>['widget:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ButtonBox" init="obj = ButtonBox(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add">
          <expr>obj.ret = add(name,cnf)</expr>
          <args>['name:None', 'cnf:None']</args>
          <return>['btn:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="invoke">
          <expr>obj.invoke(name)</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ComboBox" init="obj = ComboBox(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_history">
          <expr>obj.add_history(str)</expr>
          <args>['str:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="append_history">
          <expr>obj.append_history(str)</expr>
          <args>['str:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="insert">
          <expr>obj.insert(index,str)</expr>
          <args>['index:None', 'str:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pick">
          <expr>obj.pick(index)</expr>
          <args>['index:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Control" init="obj = Control(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decrement">
          <expr>obj.decrement()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="increment">
          <expr>obj.increment()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="invoke">
          <expr>obj.invoke()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="update">
          <expr>obj.update()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="DirList" init="obj = DirList(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="chdir">
          <expr>obj.chdir(dir)</expr>
          <args>['dir:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="DirTree" init="obj = DirTree(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="chdir">
          <expr>obj.chdir(dir)</expr>
          <args>['dir:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="DirSelectBox" init="obj = DirSelectBox(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ExFileSelectBox" init="obj = ExFileSelectBox(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="filter">
          <expr>obj.filter()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="invoke">
          <expr>obj.invoke()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="DirSelectDialog" init="obj = DirSelectDialog(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="popup">
          <expr>obj.popup()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="popdown">
          <expr>obj.popdown()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ExFileSelectDialog" init="obj = ExFileSelectDialog(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="popup">
          <expr>obj.popup()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="popdown">
          <expr>obj.popdown()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="FileSelectBox" init="obj = FileSelectBox(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="apply_filter">
          <expr>obj.apply_filter()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="invoke">
          <expr>obj.invoke()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="FileSelectDialog" init="obj = FileSelectDialog(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="popup">
          <expr>obj.popup()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="popdown">
          <expr>obj.popdown()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="FileEntry" init="obj = FileEntry(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="invoke">
          <expr>obj.invoke()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="HList" init="obj = HList(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add">
          <expr>obj.ret = add(entry,cnf)</expr>
          <args>['entry:None', 'cnf:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_child">
          <expr>obj.ret = add_child(parent,cnf)</expr>
          <args>['parent:None', 'cnf:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="anchor_set">
          <expr>obj.anchor_set(entry)</expr>
          <args>['entry:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="anchor_clear">
          <expr>obj.anchor_clear()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="column_width">
          <expr>obj.ret = column_width(col,width,chars)</expr>
          <args>['col:None', 'width:None', 'chars:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[0, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="delete_all">
          <expr>obj.delete_all()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="delete_entry">
          <expr>obj.delete_entry(entry)</expr>
          <args>['entry:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="delete_offsprings">
          <expr>obj.delete_offsprings(entry)</expr>
          <args>['entry:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="delete_siblings">
          <expr>obj.delete_siblings(entry)</expr>
          <args>['entry:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dragsite_set">
          <expr>obj.dragsite_set(index)</expr>
          <args>['index:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dragsite_clear">
          <expr>obj.dragsite_clear()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dropsite_set">
          <expr>obj.dropsite_set(index)</expr>
          <args>['index:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dropsite_clear">
          <expr>obj.dropsite_clear()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="header_create">
          <expr>obj.header_create(col,cnf)</expr>
          <args>['col:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="header_configure">
          <expr>obj.ret = header_configure(col,cnf)</expr>
          <args>['col:None', 'cnf:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="header_cget">
          <expr>obj.ret = header_cget(col,opt)</expr>
          <args>['col:None', 'opt:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="header_exists">
          <expr>obj.ret = header_exists(col)</expr>
          <args>['col:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="header_delete">
          <expr>obj.header_delete(col)</expr>
          <args>['col:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="header_size">
          <expr>obj.ret = header_size(col)</expr>
          <args>['col:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="hide_entry">
          <expr>obj.hide_entry(entry)</expr>
          <args>['entry:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="indicator_create">
          <expr>obj.indicator_create(entry,cnf)</expr>
          <args>['entry:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="indicator_configure">
          <expr>obj.ret = indicator_configure(entry,cnf)</expr>
          <args>['entry:None', 'cnf:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="indicator_cget">
          <expr>obj.ret = indicator_cget(entry,opt)</expr>
          <args>['entry:None', 'opt:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="indicator_exists">
          <expr>obj.ret = indicator_exists(entry)</expr>
          <args>['entry:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="indicator_delete">
          <expr>obj.indicator_delete(entry)</expr>
          <args>['entry:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="indicator_size">
          <expr>obj.ret = indicator_size(entry)</expr>
          <args>['entry:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_anchor">
          <expr>obj.ret = info_anchor()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_bbox">
          <expr>obj.ret = info_bbox(entry)</expr>
          <args>['entry:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_children">
          <expr>obj.ret = info_children(entry)</expr>
          <args>['entry:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_data">
          <expr>obj.ret = info_data(entry)</expr>
          <args>['entry:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_dragsite">
          <expr>obj.ret = info_dragsite()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_dropsite">
          <expr>obj.ret = info_dropsite()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_exists">
          <expr>obj.ret = info_exists(entry)</expr>
          <args>['entry:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_hidden">
          <expr>obj.ret = info_hidden(entry)</expr>
          <args>['entry:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_next">
          <expr>obj.ret = info_next(entry)</expr>
          <args>['entry:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_parent">
          <expr>obj.ret = info_parent(entry)</expr>
          <args>['entry:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_prev">
          <expr>obj.ret = info_prev(entry)</expr>
          <args>['entry:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_selection">
          <expr>obj.ret = info_selection()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="item_cget">
          <expr>obj.ret = item_cget(entry,col,opt)</expr>
          <args>['entry:None', 'col:None', 'opt:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="item_configure">
          <expr>obj.ret = item_configure(entry,col,cnf)</expr>
          <args>['entry:None', 'col:None', 'cnf:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="item_create">
          <expr>obj.item_create(entry,col,cnf)</expr>
          <args>['entry:None', 'col:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="item_exists">
          <expr>obj.ret = item_exists(entry,col)</expr>
          <args>['entry:None', 'col:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="item_delete">
          <expr>obj.item_delete(entry,col)</expr>
          <args>['entry:None', 'col:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="entrycget">
          <expr>obj.ret = entrycget(entry,opt)</expr>
          <args>['entry:None', 'opt:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="entryconfigure">
          <expr>obj.ret = entryconfigure(entry,cnf)</expr>
          <args>['entry:None', 'cnf:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="nearest">
          <expr>obj.ret = nearest(y)</expr>
          <args>['y:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="see">
          <expr>obj.see(entry)</expr>
          <args>['entry:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="selection_clear">
          <expr>obj.selection_clear(cnf)</expr>
          <args>['cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="selection_includes">
          <expr>obj.ret = selection_includes(entry)</expr>
          <args>['entry:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="selection_set">
          <expr>obj.selection_set(first,last)</expr>
          <args>['first:None', 'last:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="show_entry">
          <expr>obj.ret = show_entry(entry)</expr>
          <args>['entry:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="InputOnly" init="obj = InputOnly(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="LabelEntry" init="obj = LabelEntry(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="LabelFrame" init="obj = LabelFrame(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ListNoteBook" init="obj = ListNoteBook(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add">
          <expr>obj.ret = add(name,cnf)</expr>
          <args>['name:None', 'cnf:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="page">
          <expr>obj.ret = page(name)</expr>
          <args>['name:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pages">
          <expr>obj.ret = pages()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="raise_page">
          <expr>obj.raise_page(name)</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Meter" init="obj = Meter(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="NoteBook" init="obj = NoteBook(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add">
          <expr>obj.ret = add(name,cnf)</expr>
          <args>['name:None', 'cnf:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="delete">
          <expr>obj.delete(name)</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="page">
          <expr>obj.ret = page(name)</expr>
          <args>['name:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pages">
          <expr>obj.ret = pages()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="raise_page">
          <expr>obj.raise_page(name)</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="raised">
          <expr>obj.ret = raised()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="NoteBookFrame" init=""/>
      <class name="OptionMenu" init="obj = OptionMenu(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_command">
          <expr>obj.add_command(name,cnf)</expr>
          <args>['name:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_separator">
          <expr>obj.add_separator(name,cnf)</expr>
          <args>['name:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="delete">
          <expr>obj.delete(name)</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="disable">
          <expr>obj.disable(name)</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="enable">
          <expr>obj.enable(name)</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="PanedWindow" init="obj = PanedWindow(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add">
          <expr>obj.ret = add(name,cnf)</expr>
          <args>['name:None', 'cnf:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="delete">
          <expr>obj.delete(name)</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="forget">
          <expr>obj.forget(name)</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="panecget">
          <expr>obj.ret = panecget(entry,opt)</expr>
          <args>['entry:None', 'opt:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="paneconfigure">
          <expr>obj.ret = paneconfigure(entry,cnf)</expr>
          <args>['entry:None', 'cnf:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="panes">
          <expr>obj.ret = panes()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="PopupMenu" init="obj = PopupMenu(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="bind_widget">
          <expr>obj.bind_widget(widget)</expr>
          <args>['widget:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unbind_widget">
          <expr>obj.unbind_widget(widget)</expr>
          <args>['widget:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="post_widget">
          <expr>obj.post_widget(widget,x,y)</expr>
          <args>['widget:None', 'x:None', 'y:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ResizeHandle" init="obj = ResizeHandle(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="attach_widget">
          <expr>obj.attach_widget(widget)</expr>
          <args>['widget:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="detach_widget">
          <expr>obj.detach_widget(widget)</expr>
          <args>['widget:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="hide">
          <expr>obj.hide(widget)</expr>
          <args>['widget:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="show">
          <expr>obj.show(widget)</expr>
          <args>['widget:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ScrolledHList" init="obj = ScrolledHList(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ScrolledListBox" init="obj = ScrolledListBox(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ScrolledText" init="obj = ScrolledText(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ScrolledTList" init="obj = ScrolledTList(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ScrolledWindow" init="obj = ScrolledWindow(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Select" init="obj = Select(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add">
          <expr>obj.ret = add(name,cnf)</expr>
          <args>['name:None', 'cnf:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="invoke">
          <expr>obj.invoke(name)</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Shell" init="obj = Shell(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="DialogShell" init="obj = DialogShell(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="popdown">
          <expr>obj.popdown()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="popup">
          <expr>obj.popup()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="center">
          <expr>obj.center()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StdButtonBox" init="obj = StdButtonBox(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="invoke">
          <expr>obj.invoke(name)</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="TList" init="obj = TList(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="active_set">
          <expr>obj.active_set(index)</expr>
          <args>['index:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="active_clear">
          <expr>obj.active_clear()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="anchor_set">
          <expr>obj.anchor_set(index)</expr>
          <args>['index:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="anchor_clear">
          <expr>obj.anchor_clear()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="delete">
          <expr>obj.delete(from_,to)</expr>
          <args>['from_:None', 'to:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dragsite_set">
          <expr>obj.dragsite_set(index)</expr>
          <args>['index:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dragsite_clear">
          <expr>obj.dragsite_clear()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dropsite_set">
          <expr>obj.dropsite_set(index)</expr>
          <args>['index:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dropsite_clear">
          <expr>obj.dropsite_clear()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="insert">
          <expr>obj.insert(index,cnf)</expr>
          <args>['index:None', 'cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_active">
          <expr>obj.ret = info_active()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_anchor">
          <expr>obj.ret = info_anchor()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_down">
          <expr>obj.ret = info_down(index)</expr>
          <args>['index:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_left">
          <expr>obj.ret = info_left(index)</expr>
          <args>['index:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_right">
          <expr>obj.ret = info_right(index)</expr>
          <args>['index:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_selection">
          <expr>obj.ret = info_selection()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_size">
          <expr>obj.ret = info_size()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_up">
          <expr>obj.ret = info_up(index)</expr>
          <args>['index:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="nearest">
          <expr>obj.ret = nearest(x,y)</expr>
          <args>['x:None', 'y:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="see">
          <expr>obj.see(index)</expr>
          <args>['index:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="selection_clear">
          <expr>obj.selection_clear(cnf)</expr>
          <args>['cnf:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="selection_includes">
          <expr>obj.ret = selection_includes(index)</expr>
          <args>['index:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="selection_set">
          <expr>obj.selection_set(first,last)</expr>
          <args>['first:None', 'last:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Tree" init="obj = Tree(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="autosetmode">
          <expr>obj.autosetmode()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="close">
          <expr>obj.close(entrypath)</expr>
          <args>['entrypath:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getmode">
          <expr>obj.ret = getmode(entrypath)</expr>
          <args>['entrypath:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="open">
          <expr>obj.open(entrypath)</expr>
          <args>['entrypath:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setmode">
          <expr>obj.setmode(entrypath,mode)</expr>
          <args>['entrypath:None', 'mode:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['none']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="CheckList" init="obj = CheckList(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="autosetmode">
          <expr>obj.autosetmode()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="close">
          <expr>obj.close(entrypath)</expr>
          <args>['entrypath:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getmode">
          <expr>obj.ret = getmode(entrypath)</expr>
          <args>['entrypath:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="open">
          <expr>obj.open(entrypath)</expr>
          <args>['entrypath:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getselection">
          <expr>obj.ret = getselection(mode)</expr>
          <args>['mode:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['on']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getstatus">
          <expr>obj.ret = getstatus(entrypath)</expr>
          <args>['entrypath:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setstatus">
          <expr>obj.setstatus(entrypath,mode)</expr>
          <args>['entrypath:None', 'mode:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['on']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="CObjView" init=""/>
      <class name="Grid" init="obj = Grid(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="anchor_clear">
          <expr>obj.anchor_clear()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="anchor_get">
          <expr>obj.ret = anchor_get()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="anchor_set">
          <expr>obj.anchor_set(x,y)</expr>
          <args>['x:None', 'y:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="delete_row">
          <expr>obj.delete_row(from_,to)</expr>
          <args>['from_:None', 'to:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="delete_column">
          <expr>obj.delete_column(from_,to)</expr>
          <args>['from_:None', 'to:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="edit_apply">
          <expr>obj.edit_apply()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="edit_set">
          <expr>obj.edit_set(x,y)</expr>
          <args>['x:None', 'y:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="entrycget">
          <expr>obj.ret = entrycget(x,y,option)</expr>
          <args>['x:None', 'y:None', 'option:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="entryconfigure">
          <expr>obj.ret = entryconfigure(x,y,cnf)</expr>
          <args>['x:None', 'y:None', 'cnf:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_exists">
          <expr>obj.ret = info_exists(x,y)</expr>
          <args>['x:None', 'y:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info_bbox">
          <expr>obj.ret = info_bbox(x,y)</expr>
          <args>['x:None', 'y:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="move_column">
          <expr>obj.move_column(from_,to,offset)</expr>
          <args>['from_:None', 'to:None', 'offset:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="move_row">
          <expr>obj.move_row(from_,to,offset)</expr>
          <args>['from_:None', 'to:None', 'offset:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="nearest">
          <expr>obj.ret = nearest(x,y)</expr>
          <args>['x:None', 'y:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set">
          <expr>obj.set(x,y,itemtype)</expr>
          <args>['x:None', 'y:None', 'itemtype:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="size_column">
          <expr>obj.ret = size_column(index)</expr>
          <args>['index:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="size_row">
          <expr>obj.ret = size_row(index)</expr>
          <args>['index:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unset">
          <expr>obj.unset(x,y)</expr>
          <args>['x:None', 'y:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ScrolledGrid" init="obj = ScrolledGrid(master,cnf)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'cnf:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="OptionName">
        <expr>ret = OptionName(widget)</expr>
        <args>['widget:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="FileTypeList">
        <expr>ret = FileTypeList(dict)</expr>
        <args>['dict:None']</args>
        <return>['s:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>TclError</exception>
        <exception>TclError</exception>
        <exception>TclError</exception>
      </errors>
    </module>
    <module name="tkinter.scrolledtext" imports="[]" importfrom="['tkinter:Frame', 'tkinter:Text', 'tkinter:Scrollbar', 'tkinter:Pack', 'tkinter:Grid', 'tkinter:Place', 'tkinter.constants:RIGHT', 'tkinter.constants:LEFT', 'tkinter.constants:Y', 'tkinter.constants:BOTH', 'tkinter.constants:END']">
      <class name="ScrolledText" init="obj = ScrolledText(master)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="example">
        <expr>example()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="tkinter.simpledialog" imports="[]" importfrom="['tkinter:*', 'tkinter:messagebox']">
      <class name="SimpleDialog" init="obj = SimpleDialog(master,text,buttons,default,cancel,title,class_)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'text:NoneType', 'buttons:NoneType', 'default:NoneType', 'cancel:NoneType', 'title:NoneType', 'class_:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['', None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="go">
          <expr>obj.ret = go()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="return_event">
          <expr>obj.return_event(event)</expr>
          <args>['event:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="wm_delete_window">
          <expr>obj.wm_delete_window()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Dialog" init="obj = Dialog(parent,title)">
        <api name="__init__">
          <expr>None</expr>
          <args>['parent:NoneType', 'title:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="body">
          <expr>obj.body(master)</expr>
          <args>['master:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="buttonbox">
          <expr>obj.buttonbox()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ok">
          <expr>obj.ok(event)</expr>
          <args>['event:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="validate">
          <expr>obj.ret = validate()</expr>
          <args>[]</args>
          <return>['1:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="askinteger">
        <expr>ret = askinteger(title,prompt)</expr>
        <args>['title:None', 'prompt:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="askfloat">
        <expr>ret = askfloat(title,prompt)</expr>
        <args>['title:None', 'prompt:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="askstring">
        <expr>ret = askstring(title,prompt)</expr>
        <args>['title:None', 'prompt:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module name="tkinter.ttk" imports="['tkinter', 'os']" importfrom="[]">
      <class name="Style" init="obj = Style(master)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="configure">
          <expr>obj.ret = configure(style,query_opt)</expr>
          <args>['style:None', 'query_opt:None']</args>
          <return>['result:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="map">
          <expr>obj.ret = map(style,query_opt)</expr>
          <args>['style:None', 'query_opt:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="lookup">
          <expr>obj.ret = lookup(style,option,state,default)</expr>
          <args>['style:None', 'option:None', 'state:None', 'default:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="layout">
          <expr>obj.ret = layout(style,layoutspec)</expr>
          <args>['style:None', 'layoutspec:None']</args>
          <return>['_list_from_layouttuple:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="element_create">
          <expr>obj.element_create(elementname,etype)</expr>
          <args>['elementname:None', 'etype:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="element_names">
          <expr>obj.ret = element_names()</expr>
          <args>[]</args>
          <return>['tuple:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="element_options">
          <expr>obj.ret = element_options(elementname)</expr>
          <args>['elementname:None']</args>
          <return>['tuple:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="theme_create">
          <expr>obj.theme_create(themename,parent,settings)</expr>
          <args>['themename:None', 'parent:None', 'settings:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="theme_settings">
          <expr>obj.theme_settings(themename,settings)</expr>
          <args>['themename:None', 'settings:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="theme_names">
          <expr>obj.ret = theme_names()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="theme_use">
          <expr>obj.ret = theme_use(themename)</expr>
          <args>['themename:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Widget" init="obj = Widget(master,widgetname,kw)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'widgetname:NoneType', 'kw:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="identify">
          <expr>obj.ret = identify(x,y)</expr>
          <args>['x:None', 'y:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="instate">
          <expr>obj.ret = instate(statespec,callback)</expr>
          <args>['statespec:None', 'callback:None']</args>
          <return>['callback:None', 'ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="state">
          <expr>obj.ret = state(statespec)</expr>
          <args>['statespec:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Button" init="obj = Button(master)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="invoke">
          <expr>obj.ret = invoke()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Checkbutton" init="obj = Checkbutton(master)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="invoke">
          <expr>obj.ret = invoke()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Entry" init="obj = Entry(master,widget)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'widget:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="bbox">
          <expr>obj.ret = bbox(index)</expr>
          <args>['index:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="identify">
          <expr>obj.ret = identify(x,y)</expr>
          <args>['x:None', 'y:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="validate">
          <expr>obj.ret = validate()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Combobox" init="obj = Combobox(master)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="current">
          <expr>obj.ret = current(newindex)</expr>
          <args>['newindex:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set">
          <expr>obj.set(value)</expr>
          <args>['value:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Frame" init="obj = Frame(master)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Label" init="obj = Label(master)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Labelframe" init="obj = Labelframe(master)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Menubutton" init="obj = Menubutton(master)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Notebook" init="obj = Notebook(master)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add">
          <expr>obj.add(child)</expr>
          <args>['child:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="forget">
          <expr>obj.forget(tab_id)</expr>
          <args>['tab_id:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="hide">
          <expr>obj.hide(tab_id)</expr>
          <args>['tab_id:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="identify">
          <expr>obj.ret = identify(x,y)</expr>
          <args>['x:None', 'y:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="index">
          <expr>obj.ret = index(tab_id)</expr>
          <args>['tab_id:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="insert">
          <expr>obj.insert(pos,child)</expr>
          <args>['pos:None', 'child:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="select">
          <expr>obj.ret = select(tab_id)</expr>
          <args>['tab_id:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tab">
          <expr>obj.ret = tab(tab_id,option)</expr>
          <args>['tab_id:None', 'option:None']</args>
          <return>['_val_or_dict:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tabs">
          <expr>obj.ret = tabs()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="enable_traversal">
          <expr>obj.enable_traversal()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Panedwindow" init="obj = Panedwindow(master)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="insert">
          <expr>obj.insert(pos,child)</expr>
          <args>['pos:None', 'child:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pane">
          <expr>obj.ret = pane(pane,option)</expr>
          <args>['pane:None', 'option:None']</args>
          <return>['_val_or_dict:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sashpos">
          <expr>obj.ret = sashpos(index,newpos)</expr>
          <args>['index:None', 'newpos:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Progressbar" init="obj = Progressbar(master)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="start">
          <expr>obj.start(interval)</expr>
          <args>['interval:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="step">
          <expr>obj.step(amount)</expr>
          <args>['amount:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="stop">
          <expr>obj.stop()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Radiobutton" init="obj = Radiobutton(master)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="invoke">
          <expr>obj.ret = invoke()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Scale" init="obj = Scale(master)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Scrollbar" init="obj = Scrollbar(master)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Separator" init="obj = Separator(master)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Sizegrip" init="obj = Sizegrip(master)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Spinbox" init="obj = Spinbox(master)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set">
          <expr>obj.set(value)</expr>
          <args>['value:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Treeview" init="obj = Treeview(master)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="bbox">
          <expr>obj.ret = bbox(item,column)</expr>
          <args>['item:None', 'column:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_children">
          <expr>obj.ret = get_children(item)</expr>
          <args>['item:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_children">
          <expr>obj.set_children(item)</expr>
          <args>['item:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="column">
          <expr>obj.ret = column(column,option)</expr>
          <args>['column:None', 'option:None']</args>
          <return>['_val_or_dict:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="delete">
          <expr>obj.delete()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="detach">
          <expr>obj.detach()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="exists">
          <expr>obj.ret = exists(item)</expr>
          <args>['item:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="focus">
          <expr>obj.ret = focus(item)</expr>
          <args>['item:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="heading">
          <expr>obj.ret = heading(column,option)</expr>
          <args>['column:None', 'option:None']</args>
          <return>['_val_or_dict:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="identify_row">
          <expr>obj.ret = identify_row(y)</expr>
          <args>['y:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="identify_column">
          <expr>obj.ret = identify_column(x)</expr>
          <args>['x:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="identify_region">
          <expr>obj.ret = identify_region(x,y)</expr>
          <args>['x:None', 'y:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="identify_element">
          <expr>obj.ret = identify_element(x,y)</expr>
          <args>['x:None', 'y:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="index">
          <expr>obj.ret = index(item)</expr>
          <args>['item:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="insert">
          <expr>obj.ret = insert(parent,index,iid)</expr>
          <args>['parent:None', 'index:None', 'iid:None']</args>
          <return>['res:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="item">
          <expr>obj.ret = item(item,option)</expr>
          <args>['item:None', 'option:None']</args>
          <return>['_val_or_dict:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="move">
          <expr>obj.move(item,parent,index)</expr>
          <args>['item:None', 'parent:None', 'index:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="next">
          <expr>obj.ret = next(item)</expr>
          <args>['item:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parent">
          <expr>obj.ret = parent(item)</expr>
          <args>['item:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="prev">
          <expr>obj.ret = prev(item)</expr>
          <args>['item:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="see">
          <expr>obj.see(item)</expr>
          <args>['item:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="selection">
          <expr>obj.ret = selection()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="selection_set">
          <expr>obj.selection_set()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="selection_add">
          <expr>obj.selection_add()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="selection_remove">
          <expr>obj.selection_remove()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="selection_toggle">
          <expr>obj.selection_toggle()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set">
          <expr>obj.ret = set(item,column,value)</expr>
          <args>['item:None', 'column:None', 'value:None']</args>
          <return>['_splitdict:None', 'res:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tag_bind">
          <expr>obj.tag_bind(tagname,sequence,callback)</expr>
          <args>['tagname:None', 'sequence:None', 'callback:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tag_configure">
          <expr>obj.ret = tag_configure(tagname,option)</expr>
          <args>['tagname:None', 'option:None']</args>
          <return>['_val_or_dict:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tag_has">
          <expr>obj.ret = tag_has(tagname,item)</expr>
          <args>['tagname:None', 'item:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="LabeledScale" init="obj = LabeledScale(master,variable,from_,to)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'variable:NoneType', 'from_:NoneType', 'to:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, 0, 10]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="value">
          <expr>obj.value(val)</expr>
          <args>['val:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="OptionMenu" init="obj = OptionMenu(master,variable,default)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'variable:NoneType', 'default:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_menu">
          <expr>obj.set_menu(default)</expr>
          <args>['default:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="tclobjs_to_py">
        <expr>tclobjs_to_py(adict)</expr>
        <args>['adict:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="setup_master">
        <expr>ret = setup_master(master)</expr>
        <args>['master:None']</args>
        <return>['master:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ValueError</exception>
        <exception>TypeError</exception>
        <exception>AttributeError</exception>
        <exception>AttributeError</exception>
      </errors>
    </module>
    <module name="tkinter.dnd" imports="['tkinter']" importfrom="[]">
      <class name="DndHandler" init="obj = DndHandler(source,event)">
        <api name="__init__">
          <expr>None</expr>
          <args>['source:NoneType', 'event:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="on_motion">
          <expr>obj.on_motion(event)</expr>
          <args>['event:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="on_release">
          <expr>obj.on_release(event)</expr>
          <args>['event:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="cancel">
          <expr>obj.cancel(event)</expr>
          <args>['event:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Icon" init="obj = Icon(name)">
        <api name="__init__">
          <expr>None</expr>
          <args>['name:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="attach">
          <expr>obj.attach(canvas,x,y)</expr>
          <args>['canvas:None', 'x:None', 'y:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[10, 10]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="press">
          <expr>obj.press(event)</expr>
          <args>['event:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="move">
          <expr>obj.move(event)</expr>
          <args>['event:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="putback">
          <expr>obj.putback()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Tester" init="obj = Tester(root)">
        <api name="__init__">
          <expr>None</expr>
          <args>['root:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dnd_accept">
          <expr>obj.ret = dnd_accept(source,event)</expr>
          <args>['source:None', 'event:None']</args>
          <return>['self:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="dnd_start">
        <expr>ret = dnd_start(source,event)</expr>
        <args>['source:None', 'event:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>AttributeError</exception>
      </errors>
    </module>
    <module name="tkinter.font" imports="['itertools', 'tkinter']" importfrom="[]">
      <class name="Font" init="obj = Font(root,font,name,exists)">
        <api name="__init__">
          <expr>None</expr>
          <args>['root:NoneType', 'font:NoneType', 'name:NoneType', 'exists:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="copy">
          <expr>obj.ret = copy()</expr>
          <args>[]</args>
          <return>['Font:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="actual">
          <expr>obj.ret = actual(option,displayof)</expr>
          <args>['option:None', 'displayof:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="config">
          <expr>obj.ret = config()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="measure">
          <expr>obj.ret = measure(text,displayof)</expr>
          <args>['text:None', 'displayof:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="metrics">
          <expr>obj.ret = metrics()</expr>
          <args>[]</args>
          <return>['ret:None', 'options:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="nametofont">
        <expr>ret = nametofont(name)</expr>
        <args>['name:None']</args>
        <return>['Font:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="families">
        <expr>ret = families(root,displayof)</expr>
        <args>['root:None', 'displayof:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="names">
        <expr>ret = names(root)</expr>
        <args>['root:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>Exception</exception>
      </errors>
    </module>
    <module name="tkinter.filedialog" imports="['fnmatch', 'os']" importfrom="['tkinter:Frame', 'tkinter:LEFT', 'tkinter:YES', 'tkinter:BOTTOM', 'tkinter:Entry', 'tkinter:TOP', 'tkinter:Button', 'tkinter:Tk', 'tkinter:X', 'tkinter:Toplevel', 'tkinter:RIGHT', 'tkinter:Y', 'tkinter:END', 'tkinter:Listbox', 'tkinter:BOTH', 'tkinter:Scrollbar', 'tkinter.dialog:Dialog', 'tkinter:commondialog']">
      <class name="FileDialog" init="obj = FileDialog(master,title)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'title:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="go">
          <expr>obj.ret = go(dir_or_file,pattern,default,key)</expr>
          <args>['dir_or_file:None', 'pattern:None', 'default:None', 'key:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, '*', '', None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dirs_double_event">
          <expr>obj.dirs_double_event(event)</expr>
          <args>['event:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dirs_select_event">
          <expr>obj.dirs_select_event(event)</expr>
          <args>['event:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="files_double_event">
          <expr>obj.files_double_event(event)</expr>
          <args>['event:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="files_select_event">
          <expr>obj.files_select_event(event)</expr>
          <args>['event:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ok_event">
          <expr>obj.ok_event(event)</expr>
          <args>['event:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_selection">
          <expr>obj.ret = get_selection()</expr>
          <args>[]</args>
          <return>['file:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="cancel_command">
          <expr>obj.cancel_command(event)</expr>
          <args>['event:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="LoadFileDialog" init=""/>
      <class name="SaveFileDialog" init=""/>
      <class name="Open" init=""/>
      <class name="SaveAs" init=""/>
      <class name="Directory" init=""/>
      <api name="askopenfilename">
        <expr>ret = askopenfilename()</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="asksaveasfilename">
        <expr>ret = asksaveasfilename()</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="askopenfilenames">
        <expr>ret = askopenfilenames()</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="askopenfile">
        <expr>ret = askopenfile(mode)</expr>
        <args>['mode:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['r']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="askopenfiles">
        <expr>ret = askopenfiles(mode)</expr>
        <args>['mode:None']</args>
        <return>['files:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['r']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="asksaveasfile">
        <expr>ret = asksaveasfile(mode)</expr>
        <args>['mode:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['w']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="askdirectory">
        <expr>ret = askdirectory()</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>KeyError</exception>
        <exception>AttributeError</exception>
        <exception>AttributeError</exception>
      </errors>
    </module>
  </library>
  <library name="curses">
    <module name="curses.ascii" imports="[]" importfrom="[]">
      <api name="isalnum">
        <expr>isalnum(c)</expr>
        <args>['c:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isalpha">
        <expr>isalpha(c)</expr>
        <args>['c:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isascii">
        <expr>isascii(c)</expr>
        <args>['c:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isblank">
        <expr>isblank(c)</expr>
        <args>['c:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="iscntrl">
        <expr>iscntrl(c)</expr>
        <args>['c:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isdigit">
        <expr>isdigit(c)</expr>
        <args>['c:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isgraph">
        <expr>isgraph(c)</expr>
        <args>['c:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="islower">
        <expr>islower(c)</expr>
        <args>['c:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isprint">
        <expr>isprint(c)</expr>
        <args>['c:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ispunct">
        <expr>ispunct(c)</expr>
        <args>['c:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isspace">
        <expr>isspace(c)</expr>
        <args>['c:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isupper">
        <expr>isupper(c)</expr>
        <args>['c:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isxdigit">
        <expr>isxdigit(c)</expr>
        <args>['c:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isctrl">
        <expr>isctrl(c)</expr>
        <args>['c:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ismeta">
        <expr>ismeta(c)</expr>
        <args>['c:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ascii">
        <expr>ascii(c)</expr>
        <args>['c:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ctrl">
        <expr>ctrl(c)</expr>
        <args>['c:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="alt">
        <expr>alt(c)</expr>
        <args>['c:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="unctrl">
        <expr>unctrl(c)</expr>
        <args>['c:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="curses.textpad" imports="['curses', 'curses.ascii']" importfrom="[]">
      <class name="Textbox" init="obj = Textbox(win,insert_mode)">
        <api name="__init__">
          <expr>None</expr>
          <args>['win:NoneType', 'insert_mode:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_command">
          <expr>obj.ret = do_command(ch)</expr>
          <args>['ch:None']</args>
          <return>['0:None', '1:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="edit">
          <expr>obj.ret = edit(validate)</expr>
          <args>['validate:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="rectangle">
        <expr>rectangle(win,uly,ulx,lry,lrx)</expr>
        <args>['win:None', 'uly:None', 'ulx:None', 'lry:None', 'lrx:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>curses.error</exception>
      </errors>
    </module>
    <module name="curses.panel" imports="[]" importfrom="['_curses_panel:*']"/>
    <module name="curses.has_key" imports="[]" importfrom="[]">
      <api name="has_key">
        <expr>ret = has_key(ch)</expr>
        <args>['ch:None']</args>
        <return>['ret:bool']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
  </library>
  <library name=".">
    <module name="operator" imports="[]" importfrom="['builtins:abs', 'functools:partial', '_operator:*']">
      <class name="attrgetter" init="obj = attrgetter(attr)">
        <api name="__init__">
          <expr>None</expr>
          <args>['attr:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="itemgetter" init="obj = itemgetter(item)">
        <api name="__init__">
          <expr>None</expr>
          <args>['item:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="methodcaller" init="obj = methodcaller()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>['self:NoneType', 'name:NoneType']</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="lt">
        <expr>lt(a,b)</expr>
        <args>['a:complex', 'b:complex']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="le">
        <expr>le(a,b)</expr>
        <args>['a:complex', 'b:complex']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="eq">
        <expr>eq(a,b)</expr>
        <args>['a:C', 'b:C']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ne">
        <expr>ne(a,b)</expr>
        <args>['a:C', 'b:C']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ge">
        <expr>ge(a,b)</expr>
        <args>['a:complex', 'b:complex']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="gt">
        <expr>gt(a,b)</expr>
        <args>['a:complex', 'b:complex']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="not_">
        <expr>ret = not_(a)</expr>
        <args>['a:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="truth">
        <expr>truth(a)</expr>
        <args>['a:C']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="is_">
        <expr>is_(a,b)</expr>
        <args>['a:str', 'b:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="is_not">
        <expr>is_not(a,b)</expr>
        <args>['a:str', 'b:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="abs">
        <expr>abs(a)</expr>
        <args>['a:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="add">
        <expr>add(a,b)</expr>
        <args>['a:NoneType', 'b:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="and_">
        <expr>and_(a,b)</expr>
        <args>['a:NoneType', 'b:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="floordiv">
        <expr>floordiv(a,b)</expr>
        <args>['a:NoneType', 'b:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="index">
        <expr>ret = index(a)</expr>
        <args>['a:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="inv">
        <expr>inv(a)</expr>
        <args>['a:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="lshift">
        <expr>lshift(a,b)</expr>
        <args>['a:NoneType', 'b:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="mod">
        <expr>mod(a,b)</expr>
        <args>['a:NoneType', 'b:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="mul">
        <expr>mul(a,b)</expr>
        <args>['a:NoneType', 'b:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="matmul">
        <expr>ret = matmul(a,b)</expr>
        <args>['a:int', 'b:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="neg">
        <expr>neg(a)</expr>
        <args>['a:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="or_">
        <expr>or_(a,b)</expr>
        <args>['a:NoneType', 'b:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="pos">
        <expr>pos(a)</expr>
        <args>['a:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="pow">
        <expr>pow(a,b)</expr>
        <args>['a:NoneType', 'b:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="rshift">
        <expr>rshift(a,b)</expr>
        <args>['a:NoneType', 'b:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="sub">
        <expr>sub(a,b)</expr>
        <args>['a:NoneType', 'b:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="truediv">
        <expr>truediv(a,b)</expr>
        <args>['a:NoneType', 'b:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="xor">
        <expr>xor(a,b)</expr>
        <args>['a:NoneType', 'b:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="concat">
        <expr>concat(a,b)</expr>
        <args>['a:NoneType', 'b:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="contains">
        <expr>contains(a,b)</expr>
        <args>['a:NoneType', 'b:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="countOf">
        <expr>countOf(a,b)</expr>
        <args>['a:NoneType', 'b:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="delitem">
        <expr>delitem(a,b)</expr>
        <args>['a:list', 'b:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getitem">
        <expr>getitem(a,b)</expr>
        <args>['a:range', 'b:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="indexOf">
        <expr>indexOf(a,b)</expr>
        <args>['a:NoneType', 'b:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="setitem">
        <expr>setitem(a,b,c)</expr>
        <args>['a:list', 'b:NoneType', 'c:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="length_hint">
        <expr>length_hint(obj,default)</expr>
        <args>['obj:list', 'default:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="iadd">
        <expr>ret = iadd(a,b)</expr>
        <args>['a:C', 'b:int']</args>
        <return>['a:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="iand">
        <expr>ret = iand(a,b)</expr>
        <args>['a:C', 'b:int']</args>
        <return>['a:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="iconcat">
        <expr>ret = iconcat(a,b)</expr>
        <args>['a:C', 'b:C']</args>
        <return>['a:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ifloordiv">
        <expr>ret = ifloordiv(a,b)</expr>
        <args>['a:C', 'b:int']</args>
        <return>['a:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ilshift">
        <expr>ret = ilshift(a,b)</expr>
        <args>['a:C', 'b:int']</args>
        <return>['a:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="imod">
        <expr>ret = imod(a,b)</expr>
        <args>['a:C', 'b:int']</args>
        <return>['a:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="imul">
        <expr>ret = imul(a,b)</expr>
        <args>['a:C', 'b:int']</args>
        <return>['a:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="imatmul">
        <expr>ret = imatmul(a,b)</expr>
        <args>['a:C', 'b:int']</args>
        <return>['a:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ior">
        <expr>ret = ior(a,b)</expr>
        <args>['a:C', 'b:int']</args>
        <return>['a:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ipow">
        <expr>ret = ipow(a,b)</expr>
        <args>['a:C', 'b:int']</args>
        <return>['a:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="irshift">
        <expr>ret = irshift(a,b)</expr>
        <args>['a:C', 'b:int']</args>
        <return>['a:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isub">
        <expr>ret = isub(a,b)</expr>
        <args>['a:C', 'b:int']</args>
        <return>['a:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="itruediv">
        <expr>ret = itruediv(a,b)</expr>
        <args>['a:C', 'b:int']</args>
        <return>['a:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ixor">
        <expr>ret = ixor(a,b)</expr>
        <args>['a:C', 'b:int']</args>
        <return>['a:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>TypeError</exception>
        <exception>AttributeError</exception>
        <exception>TypeError</exception>
        <exception>ImportError</exception>
      </errors>
    </module>
    <module name="cgitb" imports="['inspect', 'keyword', 'linecache', 'os', 'pydoc', 'sys', 'tempfile', 'time', 'tokenize', 'traceback']" importfrom="[]">
      <class name="Hook" init="obj = Hook(display,logdir,context,file,format)">
        <api name="__init__">
          <expr>None</expr>
          <args>['display:NoneType', 'logdir:NoneType', 'context:NoneType', 'file:NoneType', 'format:builtin_function_or_method']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[1, None, 5, None, 'html']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="reset">
        <expr>ret = reset()</expr>
        <args>[]</args>
        <return>['&lt;!--: spam\nContent-Type: text/html\n\n&lt;body bgcolor=&quot;#f0f0f8&quot;&gt;&lt;font color=&quot;#f0f0f8&quot; size=&quot;-5&quot;&gt; --&gt;\n&lt;body bgcolor=&quot;#f0f0f8&quot;&gt;&lt;font color=&quot;#f0f0f8&quot; size=&quot;-5&quot;&gt; --&gt; --&gt;\n&lt;/font&gt; &lt;/font&gt; &lt;/font&gt; &lt;/script&gt; &lt;/object&gt; &lt;/blockquote&gt; &lt;/pre&gt;\n&lt;/table&gt; &lt;/table&gt; &lt;/table&gt; &lt;/table&gt; &lt;/table&gt; &lt;/font&gt; &lt;/font&gt; &lt;/font&gt;:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="small">
        <expr>small(text)</expr>
        <args>['text:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="strong">
        <expr>strong(text)</expr>
        <args>['text:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="grey">
        <expr>grey(text)</expr>
        <args>['text:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="lookup">
        <expr>lookup(name,frame,locals)</expr>
        <args>['name:str', 'frame:frame', 'locals:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="scanvars">
        <expr>scanvars(reader,frame,locals)</expr>
        <args>['reader:function', 'frame:frame', 'locals:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="html">
        <expr>ret = html(einfo,context)</expr>
        <args>['einfo:tuple', 'context:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[5]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="text">
        <expr>ret = text(einfo,context)</expr>
        <args>['einfo:tuple', 'context:int']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[5]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="enable">
        <expr>enable(display,logdir,context,format)</expr>
        <args>['display:None', 'logdir:None', 'context:None', 'format:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[1, None, 5, 'html']</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="cgi" imports="['sys', 'os', 'urllib.parse', 'html', 'locale', 'tempfile', 'traceback', 're']" importfrom="['io:StringIO', 'io:BytesIO', 'io:TextIOWrapper', 'collections.abc:Mapping', 'email.parser:FeedParser', 'email.message:Message']">
      <class name="MiniFieldStorage" init="obj = MiniFieldStorage(name,value)">
        <api name="__init__">
          <expr>None</expr>
          <args>['name:NoneType', 'value:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="FieldStorage" init="obj = FieldStorage(fp,headers,outerboundary,environ,keep_blank_values,strict_parsing,limit,encoding,errors,max_num_fields,separator)">
        <api name="__init__">
          <expr>None</expr>
          <args>['fp:NoneType', 'headers:NoneType', 'outerboundary:NoneType', 'environ:NoneType', 'keep_blank_values:NoneType', 'strict_parsing:NoneType', 'limit:NoneType', 'encoding:NoneType', 'errors:NoneType', 'max_num_fields:NoneType', 'separator:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, b'', None, 0, 0, None, 'utf-8', 'replace', None, '&amp;']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getfirst">
          <expr>obj.ret = getfirst(key,default)</expr>
          <args>['key:None', 'default:None']</args>
          <return>['ret:None', 'default:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="keys">
          <expr>obj.keys()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read_urlencoded">
          <expr>obj.read_urlencoded()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read_multi">
          <expr>obj.read_multi(environ,keep_blank_values,strict_parsing)</expr>
          <args>['environ:dict', 'keep_blank_values:int', 'strict_parsing:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read_single">
          <expr>obj.read_single()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="initlog">
        <expr>initlog()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dolog">
        <expr>dolog(fmt)</expr>
        <args>['fmt:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="nolog">
        <expr>nolog()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="closelog">
        <expr>closelog()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parse">
        <expr>parse(fp,environ,keep_blank_values,strict_parsing,separator)</expr>
        <args>['fp:NoneType', 'environ:dict', 'keep_blank_values:int', 'strict_parsing:int', 'separator:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, 0, 0, '&amp;']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parse_multipart">
        <expr>parse_multipart(fp,pdict,encoding,errors,separator)</expr>
        <args>['fp:BytesIO', 'pdict:dict', 'encoding:str', 'errors:str', 'separator:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['utf-8', 'replace', '&amp;']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parse_header">
        <expr>parse_header(line)</expr>
        <args>['line:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="print_exception">
        <expr>print_exception(type,value,tb,limit)</expr>
        <args>['type:None', 'value:None', 'tb:None', 'limit:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="print_environ">
        <expr>print_environ(environ)</expr>
        <args>['environ:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="print_form">
        <expr>print_form(form)</expr>
        <args>['form:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="print_directory">
        <expr>print_directory()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="print_arguments">
        <expr>print_arguments()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="print_environ_usage">
        <expr>print_environ_usage()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="valid_boundary">
        <expr>valid_boundary(s)</expr>
        <args>['s:bytes']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>OSError</exception>
        <exception>KeyError</exception>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
      </errors>
    </module>
    <module name="compileall" imports="['os', 'sys', 'importlib.util', 'py_compile', 'struct', 'filecmp', 'argparse', 're']" importfrom="['functools:partial', 'pathlib:Path', 'concurrent.futures:ProcessPoolExecutor']">
      <api name="compile_dir">
        <expr>compile_dir(dir,maxlevels,ddir,force,rx,quiet,legacy,optimize,workers,invalidation_mode)</expr>
        <args>['dir:str', 'maxlevels:int', 'ddir:NoneType', 'force:bool', 'rx:NoneType', 'quiet:bool', 'legacy:bool', 'optimize:int', 'workers:int', 'invalidation_mode:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['stripdir:NoneType', 'prependdir:NoneType', 'limit_sl_dest:NoneType', 'hardlink_dupes:bool']</kwoargs>
        <defa>[None, None, False, None, 0, False, 'int', 1, None]</defa>
        <kwodefa>[None, None, None, False]</kwodefa>
      </api>
      <api name="compile_file">
        <expr>compile_file(fullname,ddir,force,rx,quiet,legacy,optimize,invalidation_mode)</expr>
        <args>['fullname:str', 'ddir:NoneType', 'force:bool', 'rx:NoneType', 'quiet:bool', 'legacy:bool', 'optimize:int', 'invalidation_mode:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['stripdir:NoneType', 'prependdir:NoneType', 'limit_sl_dest:NoneType', 'hardlink_dupes:bool']</kwoargs>
        <defa>[None, False, None, 0, False, 'int', None]</defa>
        <kwodefa>[None, None, None, False]</kwodefa>
      </api>
      <api name="compile_path">
        <expr>compile_path(skip_curdir,maxlevels,force,quiet,legacy,optimize,invalidation_mode)</expr>
        <args>['skip_curdir:int', 'maxlevels:int', 'force:bool', 'quiet:int', 'legacy:bool', 'optimize:int', 'invalidation_mode:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[1, 0, False, 0, False, 'int', None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>main()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>OSError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>py_compile.PyCompileError</exception>
        <exception>SyntaxError</exception>
        <exception>UnicodeError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>KeyboardInterrupt</exception>
      </errors>
    </module>
    <module name="imghdr" imports="[]" importfrom="['os:PathLike']">
      <api name="what">
        <expr>what(file,h)</expr>
        <args>['file:NoneType', 'h:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="mailcap" imports="['os', 'warnings']" importfrom="[]">
      <api name="lineno_sort_key">
        <expr>lineno_sort_key(entry)</expr>
        <args>['entry:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getcaps">
        <expr>getcaps()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="listmailcapfiles">
        <expr>listmailcapfiles()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="readmailcapfile">
        <expr>ret = readmailcapfile(fp)</expr>
        <args>['fp:TextIOWrapper']</args>
        <return>['caps:dict']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parseline">
        <expr>parseline(line)</expr>
        <args>['line:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parsefield">
        <expr>parsefield(line,i,n)</expr>
        <args>['line:str', 'i:int', 'n:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="findmatch">
        <expr>findmatch(caps,MIMEtype,key,filename,plist)</expr>
        <args>['caps:dict', 'MIMEtype:str', 'key:str', 'filename:str', 'plist:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['view', '/dev/null', None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="lookup">
        <expr>lookup(caps,MIMEtype,key)</expr>
        <args>['caps:dict', 'MIMEtype:str', 'key:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="subst">
        <expr>subst(field,MIMEtype,filename,plist)</expr>
        <args>['field:str', 'MIMEtype:str', 'filename:str', 'plist:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="findparam">
        <expr>findparam(name,plist)</expr>
        <args>['name:str', 'plist:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="show">
        <expr>show(caps)</expr>
        <args>['caps:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>OSError</exception>
      </errors>
    </module>
    <module name="opcode" imports="[]" importfrom="['_opcode:stack_effect']">
      <api name="def_op">
        <expr>def_op(name,op)</expr>
        <args>['name:None', 'op:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="name_op">
        <expr>name_op(name,op)</expr>
        <args>['name:None', 'op:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="jrel_op">
        <expr>jrel_op(name,op)</expr>
        <args>['name:None', 'op:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="jabs_op">
        <expr>jabs_op(name,op)</expr>
        <args>['name:None', 'op:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ImportError</exception>
      </errors>
    </module>
    <module name="random" imports="['os']" importfrom="['warnings:warn', 'math:log', 'math:exp', 'math:pi', 'math:e', 'math:ceil', 'math:sqrt', 'math:acos', 'math:cos', 'math:sin', 'math:tau', 'math:floor', 'os:urandom', '_collections_abc:Set', '_collections_abc:Sequence', 'itertools:accumulate', 'itertools:repeat', 'bisect:bisect', '_sha512:sha512', 'statistics:stdev', 'statistics:fmean', 'time:perf_counter']">
      <class name="Random" init="obj = Random(x)">
        <api name="__init__">
          <expr>None</expr>
          <args>['x:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="randbytes">
          <expr>obj.randbytes(n)</expr>
          <args>['n:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="randint">
          <expr>obj.randint(a,b)</expr>
          <args>['a:int', 'b:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="choice">
          <expr>obj.choice(seq)</expr>
          <args>['seq:list']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="shuffle">
          <expr>obj.shuffle(x,random)</expr>
          <args>['x:list', 'random:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="choices">
          <expr>obj.choices(population,weights)</expr>
          <args>['population:range', 'weights:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['cum_weights:NoneType', 'k:int']</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[None, 1]</kwodefa>
        </api>
        <api name="uniform">
          <expr>obj.uniform(a,b)</expr>
          <args>['a:float', 'b:float']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="triangular">
          <expr>obj.triangular(low,high,mode)</expr>
          <args>['low:int', 'high:int', 'mode:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[0.0, 1.0, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="normalvariate">
          <expr>obj.normalvariate(mu,sigma)</expr>
          <args>['mu:float', 'sigma:float']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="gauss">
          <expr>obj.gauss(mu,sigma)</expr>
          <args>['mu:float', 'sigma:float']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="lognormvariate">
          <expr>obj.lognormvariate(mu,sigma)</expr>
          <args>['mu:float', 'sigma:float']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="expovariate">
          <expr>obj.expovariate(lambd)</expr>
          <args>['lambd:float']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="vonmisesvariate">
          <expr>obj.vonmisesvariate(mu,kappa)</expr>
          <args>['mu:float', 'kappa:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="betavariate">
          <expr>obj.betavariate(alpha,beta)</expr>
          <args>['alpha:float', 'beta:float']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="paretovariate">
          <expr>obj.paretovariate(alpha)</expr>
          <args>['alpha:float']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="weibullvariate">
          <expr>obj.weibullvariate(alpha,beta)</expr>
          <args>['alpha:float', 'beta:float']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="SystemRandom" init="">
        <api name="randbytes">
          <expr>obj.randbytes(n)</expr>
          <args>['n:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>ImportError</exception>
        <exception>ValueError</exception>
        <exception>TypeError</exception>
        <exception>ZeroDivisionError</exception>
      </errors>
    </module>
    <module name="ipaddress" imports="['functools', 're']" importfrom="[]">
      <class name="IPv4Address" init="obj = IPv4Address(address)">
        <api name="__init__">
          <expr>None</expr>
          <args>['address:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="packed">
          <expr>obj.ret = packed()</expr>
          <args>[]</args>
          <return>['v4_int_to_packed:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_reserved">
          <expr>obj.ret = is_reserved()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_private">
          <expr>obj.ret = is_private()</expr>
          <args>[]</args>
          <return>['any:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_global">
          <expr>obj.ret = is_global()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_multicast">
          <expr>obj.ret = is_multicast()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_unspecified">
          <expr>obj.ret = is_unspecified()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_loopback">
          <expr>obj.ret = is_loopback()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_link_local">
          <expr>obj.ret = is_link_local()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IPv4Interface" init="obj = IPv4Interface(address)">
        <api name="__init__">
          <expr>None</expr>
          <args>['address:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="hostmask">
          <expr>obj.ret = hostmask()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="with_prefixlen">
          <expr>obj.ret = with_prefixlen()</expr>
          <args>[]</args>
          <return>['ret:int']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="with_netmask">
          <expr>obj.ret = with_netmask()</expr>
          <args>[]</args>
          <return>['ret:int']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="with_hostmask">
          <expr>obj.ret = with_hostmask()</expr>
          <args>[]</args>
          <return>['ret:int']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IPv4Network" init="obj = IPv4Network(address,strict)">
        <api name="__init__">
          <expr>None</expr>
          <args>['address:None', 'strict:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[True]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_global">
          <expr>obj.ret = is_global()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IPv6Address" init="obj = IPv6Address(address)">
        <api name="__init__">
          <expr>None</expr>
          <args>['address:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="scope_id">
          <expr>obj.ret = scope_id()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="packed">
          <expr>obj.ret = packed()</expr>
          <args>[]</args>
          <return>['v6_int_to_packed:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_multicast">
          <expr>obj.ret = is_multicast()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_reserved">
          <expr>obj.ret = is_reserved()</expr>
          <args>[]</args>
          <return>['any:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_link_local">
          <expr>obj.ret = is_link_local()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_site_local">
          <expr>obj.ret = is_site_local()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_private">
          <expr>obj.ret = is_private()</expr>
          <args>[]</args>
          <return>['any:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_global">
          <expr>obj.ret = is_global()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_unspecified">
          <expr>obj.ret = is_unspecified()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_loopback">
          <expr>obj.ret = is_loopback()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ipv4_mapped">
          <expr>obj.ret = ipv4_mapped()</expr>
          <args>[]</args>
          <return>['ret:None', 'IPv4Address:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="teredo">
          <expr>obj.ret = teredo()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sixtofour">
          <expr>obj.ret = sixtofour()</expr>
          <args>[]</args>
          <return>['ret:None', 'IPv4Address:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IPv6Interface" init="obj = IPv6Interface(address)">
        <api name="__init__">
          <expr>None</expr>
          <args>['address:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="hostmask">
          <expr>obj.ret = hostmask()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="with_prefixlen">
          <expr>obj.ret = with_prefixlen()</expr>
          <args>[]</args>
          <return>['ret:int']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="with_netmask">
          <expr>obj.ret = with_netmask()</expr>
          <args>[]</args>
          <return>['ret:int']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="with_hostmask">
          <expr>obj.ret = with_hostmask()</expr>
          <args>[]</args>
          <return>['ret:int']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_unspecified">
          <expr>obj.ret = is_unspecified()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_loopback">
          <expr>obj.ret = is_loopback()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IPv6Network" init="obj = IPv6Network(address,strict)">
        <api name="__init__">
          <expr>None</expr>
          <args>['address:None', 'strict:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[True]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="hosts">
          <expr>obj.hosts()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_site_local">
          <expr>obj.ret = is_site_local()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="ip_address">
        <expr>ret = ip_address(address)</expr>
        <args>['address:None']</args>
        <return>['IPv4Address:None', 'IPv6Address:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ip_network">
        <expr>ret = ip_network(address,strict)</expr>
        <args>['address:None', 'strict:None']</args>
        <return>['IPv4Network:None', 'IPv6Network:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[True]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ip_interface">
        <expr>ret = ip_interface(address)</expr>
        <args>['address:None']</args>
        <return>['IPv4Interface:None', 'IPv6Interface:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="v4_int_to_packed">
        <expr>ret = v4_int_to_packed(address)</expr>
        <args>['address:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="v6_int_to_packed">
        <expr>ret = v6_int_to_packed(address)</expr>
        <args>['address:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="summarize_address_range">
        <expr>summarize_address_range(first,last)</expr>
        <args>['first:None', 'last:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="collapse_addresses">
        <expr>ret = collapse_addresses(addresses)</expr>
        <args>['addresses:None']</args>
        <return>['_collapse_addresses_internal:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_mixed_type_key">
        <expr>ret = get_mixed_type_key(obj)</expr>
        <args>['obj:None']</args>
        <return>['ret:None', 'NotImplemented:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ipaddress.AddressValueError</exception>
        <exception>ipaddress.NetmaskValueError</exception>
        <exception>AddressValueError</exception>
        <exception>NetmaskValueError</exception>
        <exception>AddressValueError</exception>
        <exception>NetmaskValueError</exception>
        <exception>AddressValueError</exception>
        <exception>NetmaskValueError</exception>
        <exception>AddressValueError</exception>
        <exception>NetmaskValueError</exception>
        <exception>AddressValueError</exception>
        <exception>NetmaskValueError</exception>
        <exception>AddressValueError</exception>
        <exception>NetmaskValueError</exception>
        <exception>OverflowError</exception>
        <exception>OverflowError</exception>
        <exception>AttributeError</exception>
        <exception>ValueError</exception>
        <exception>AddressValueError</exception>
        <exception>ValueError</exception>
        <exception>ValueError</exception>
        <exception>AttributeError</exception>
        <exception>AttributeError</exception>
        <exception>AttributeError</exception>
        <exception>NetmaskValueError</exception>
        <exception>ValueError</exception>
        <exception>AttributeError</exception>
        <exception>AttributeError</exception>
        <exception>AddressValueError</exception>
        <exception>ValueError</exception>
        <exception>AttributeError</exception>
        <exception>AttributeError</exception>
      </errors>
    </module>
    <module name="tabnanny" imports="['os', 'sys', 'tokenize', 'getopt']" importfrom="[]">
      <class name="NannyNag" init="obj = NannyNag(lineno,msg,line)">
        <api name="__init__">
          <expr>None</expr>
          <args>['lineno:NoneType', 'msg:NoneType', 'line:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_lineno">
          <expr>obj.ret = get_lineno()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_msg">
          <expr>obj.ret = get_msg()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_line">
          <expr>obj.ret = get_line()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Whitespace" init="obj = Whitespace(ws)">
        <api name="__init__">
          <expr>None</expr>
          <args>['ws:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="longest_run_of_spaces">
          <expr>obj.ret = longest_run_of_spaces()</expr>
          <args>[]</args>
          <return>['max:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="indent_level">
          <expr>obj.ret = indent_level(tabsize)</expr>
          <args>['tabsize:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="equal">
          <expr>obj.ret = equal(other)</expr>
          <args>['other:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="not_equal_witness">
          <expr>obj.ret = not_equal_witness(other)</expr>
          <args>['other:None']</args>
          <return>['a:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="less">
          <expr>obj.ret = less(other)</expr>
          <args>['other:None']</args>
          <return>['ret:None', 'ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="not_less_witness">
          <expr>obj.ret = not_less_witness(other)</expr>
          <args>['other:None']</args>
          <return>['a:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="errprint">
        <expr>errprint()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>main()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="check">
        <expr>check(file)</expr>
        <args>['file:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="format_witnesses">
        <expr>ret = format_witnesses(w)</expr>
        <args>['w:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="process_tokens">
        <expr>process_tokens(tokens)</expr>
        <args>['tokens:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>getopt.error</exception>
        <exception>OSError</exception>
        <exception>tokenize.TokenError</exception>
        <exception>IndentationError</exception>
        <exception>NannyNag</exception>
      </errors>
    </module>
    <module name="getopt" imports="['os', 'sys']" importfrom="['gettext:gettext']">
      <class name="GetoptError" init="obj = GetoptError(msg,opt)">
        <api name="__init__">
          <expr>None</expr>
          <args>['msg:None', 'opt:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="getopt">
        <expr>getopt(args,shortopts,longopts)</expr>
        <args>['args:list', 'shortopts:str', 'longopts:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="gnu_getopt">
        <expr>gnu_getopt(args,shortopts,longopts)</expr>
        <args>['args:list', 'shortopts:str', 'longopts:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="do_longs">
        <expr>do_longs(opts,opt,longopts,args)</expr>
        <args>['opts:list', 'opt:str', 'longopts:list', 'args:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="long_has_args">
        <expr>long_has_args(opt,longopts)</expr>
        <args>['opt:str', 'longopts:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="do_shorts">
        <expr>do_shorts(opts,optstring,shortopts,args)</expr>
        <args>['opts:list', 'optstring:str', 'shortopts:str', 'args:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="short_has_arg">
        <expr>short_has_arg(opt,shortopts)</expr>
        <args>['opt:str', 'shortopts:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ImportError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module name="textwrap" imports="['re']" importfrom="[]">
      <class name="TextWrapper" init="obj = TextWrapper(width,initial_indent,subsequent_indent,expand_tabs,replace_whitespace,fix_sentence_endings,break_long_words,drop_whitespace,break_on_hyphens,tabsize)">
        <api name="__init__">
          <expr>None</expr>
          <args>['width:None', 'initial_indent:None', 'subsequent_indent:None', 'expand_tabs:None', 'replace_whitespace:None', 'fix_sentence_endings:None', 'break_long_words:None', 'drop_whitespace:None', 'break_on_hyphens:None', 'tabsize:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['max_lines:None', 'placeholder:None']</kwoargs>
          <defa>[70, '', '', True, True, False, True, True, True, 8]</defa>
          <kwodefa>[None, ' [...]']</kwodefa>
        </api>
        <api name="wrap">
          <expr>obj.wrap(text)</expr>
          <args>['text:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="fill">
          <expr>obj.fill(text)</expr>
          <args>['text:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="wrap">
        <expr>wrap(text,width)</expr>
        <args>['text:str', 'width:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[70]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="fill">
        <expr>fill(text,width)</expr>
        <args>['text:str', 'width:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[70]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="shorten">
        <expr>shorten(text,width)</expr>
        <args>['text:str', 'width:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dedent">
        <expr>dedent(text)</expr>
        <args>['text:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="indent">
        <expr>indent(text,prefix,predicate)</expr>
        <args>['text:str', 'prefix:str', 'predicate:function']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="sunau" imports="['audioop']" importfrom="['collections:namedtuple']">
      <class name="Error" init=""/>
      <class name="Au_read" init="obj = Au_read(f)">
        <api name="__init__">
          <expr>None</expr>
          <args>['f:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="initfp">
          <expr>obj.initfp(file)</expr>
          <args>['file:BytesIO']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getfp">
          <expr>obj.getfp()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getnchannels">
          <expr>obj.getnchannels()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getsampwidth">
          <expr>obj.getsampwidth()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getframerate">
          <expr>obj.getframerate()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getnframes">
          <expr>obj.getnframes()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getcomptype">
          <expr>obj.getcomptype()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getcompname">
          <expr>obj.getcompname()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getparams">
          <expr>obj.getparams()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getmarkers">
          <expr>obj.ret = getmarkers()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getmark">
          <expr>obj.getmark(id)</expr>
          <args>['id:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="readframes">
          <expr>obj.readframes(nframes)</expr>
          <args>['nframes:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="rewind">
          <expr>obj.rewind()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setpos">
          <expr>obj.setpos(pos)</expr>
          <args>['pos:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Au_write" init="obj = Au_write(f)">
        <api name="__init__">
          <expr>None</expr>
          <args>['f:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="initfp">
          <expr>obj.initfp(file)</expr>
          <args>['file:BufferedWriter']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getnchannels">
          <expr>obj.getnchannels()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getsampwidth">
          <expr>obj.getsampwidth()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getframerate">
          <expr>obj.getframerate()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getnframes">
          <expr>obj.getnframes()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getcomptype">
          <expr>obj.getcomptype()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getcompname">
          <expr>obj.getcompname()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setparams">
          <expr>obj.setparams(params)</expr>
          <args>['params:_sunau_params']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getparams">
          <expr>obj.getparams()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="writeframes">
          <expr>obj.writeframes(data)</expr>
          <args>['data:bytes']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="open">
        <expr>open(f,mode)</expr>
        <args>['f:BytesIO', 'mode:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
      </errors>
    </module>
    <module name="secrets" imports="['base64', 'binascii']" importfrom="['hmac:compare_digest', 'random:SystemRandom']">
      <api name="randbelow">
        <expr>randbelow(exclusive_upper_bound)</expr>
        <args>['exclusive_upper_bound:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="token_bytes">
        <expr>token_bytes(nbytes)</expr>
        <args>['nbytes:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="token_hex">
        <expr>token_hex(nbytes)</expr>
        <args>['nbytes:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="token_urlsafe">
        <expr>token_urlsafe(nbytes)</expr>
        <args>['nbytes:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="nturl2path" imports="['string', 'urllib.parse']" importfrom="[]">
      <api name="url2pathname">
        <expr>url2pathname(url)</expr>
        <args>['url:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="pathname2url">
        <expr>pathname2url(p)</expr>
        <args>['p:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="profile" imports="['sys', 'time', 'marshal', 'pstats', 'os', 'runpy']" importfrom="['optparse:OptionParser']">
      <class name="Profile" init="obj = Profile(timer,bias)">
        <api name="__init__">
          <expr>None</expr>
          <args>['timer:NoneType', 'bias:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="trace_dispatch">
          <expr>obj.trace_dispatch(frame,event,arg)</expr>
          <args>['frame:None', 'event:None', 'arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="trace_dispatch_i">
          <expr>obj.trace_dispatch_i(frame,event,arg)</expr>
          <args>['frame:None', 'event:None', 'arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="trace_dispatch_mac">
          <expr>obj.trace_dispatch_mac(frame,event,arg)</expr>
          <args>['frame:None', 'event:None', 'arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="trace_dispatch_l">
          <expr>obj.trace_dispatch_l(frame,event,arg)</expr>
          <args>['frame:None', 'event:None', 'arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="trace_dispatch_exception">
          <expr>obj.ret = trace_dispatch_exception(frame,t)</expr>
          <args>['frame:None', 't:None']</args>
          <return>['ret:None', '1:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="trace_dispatch_call">
          <expr>obj.trace_dispatch_call(frame,t)</expr>
          <args>['frame:fake_frame', 't:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="trace_dispatch_c_call">
          <expr>obj.ret = trace_dispatch_c_call(frame,t)</expr>
          <args>['frame:None', 't:None']</args>
          <return>['1:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="runcall">
          <expr>obj.ret = runcall()</expr>
          <args>[]</args>
          <return>['func:None']</return>
          <dependences>None</dependences>
          <posargs>['self:None', 'func:None']</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="calibrate">
          <expr>obj.ret = calibrate(m,verbose)</expr>
          <args>['m:None', 'verbose:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[0]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="run">
        <expr>run(statement,filename,sort)</expr>
        <args>['statement:str', 'filename:NoneType', 'sort:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, 'int']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="runctx">
        <expr>runctx(statement,globals,locals,filename,sort)</expr>
        <args>['statement:str', 'globals:dict', 'locals:dict', 'filename:NoneType', 'sort:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, 'int']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>ret = main()</expr>
        <args>[]</args>
        <return>['parser:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>SystemExit</exception>
        <exception>SystemExit</exception>
        <exception>BrokenPipeError</exception>
      </errors>
    </module>
    <module name="this" imports="[]" importfrom="[]"/>
    <module name="gzip" imports="['struct', 'sys', 'time', 'os', 'zlib', 'builtins', 'io', 'warnings', 'errno']" importfrom="['argparse:ArgumentParser']">
      <class name="GzipFile" init="obj = GzipFile(filename,mode,compresslevel,fileobj,mtime)">
        <api name="__init__">
          <expr>None</expr>
          <args>['filename:NoneType', 'mode:NoneType', 'compresslevel:NoneType', 'fileobj:NoneType', 'mtime:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, '_COMPRESS_LEVEL_BEST', None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="filename">
          <expr>obj.ret = filename()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="mtime">
          <expr>obj.mtime()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="closed">
          <expr>obj.closed()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="rewind">
          <expr>obj.rewind()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="readable">
          <expr>obj.readable()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="writable">
          <expr>obj.writable()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="seekable">
          <expr>obj.seekable()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="open">
        <expr>open(filename,mode,compresslevel,encoding,errors,newline)</expr>
        <args>['filename:str', 'mode:str', 'compresslevel:int', 'encoding:NoneType', 'errors:NoneType', 'newline:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['rb', '_COMPRESS_LEVEL_BEST', None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="write32u">
        <expr>write32u(output,value)</expr>
        <args>['output:BufferedWriter', 'value:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="compress">
        <expr>compress(data,compresslevel)</expr>
        <args>['data:bytes', 'compresslevel:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['mtime:NoneType']</kwoargs>
        <defa>['_COMPRESS_LEVEL_BEST']</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <api name="decompress">
        <expr>decompress(data)</expr>
        <args>['data:bytes']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>main()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>gzip.BadGzipFile</exception>
        <exception>UnicodeEncodeError</exception>
      </errors>
    </module>
    <module name="calendar" imports="['sys', 'datetime', 'locale', 'argparse']" importfrom="['itertools:repeat']">
      <class name="Calendar" init="obj = Calendar(firstweekday)">
        <api name="__init__">
          <expr>None</expr>
          <args>['firstweekday:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[0]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getfirstweekday">
          <expr>obj.getfirstweekday()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setfirstweekday">
          <expr>obj.setfirstweekday(firstweekday)</expr>
          <args>['firstweekday:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="iterweekdays">
          <expr>obj.iterweekdays()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="itermonthdates">
          <expr>obj.itermonthdates(year,month)</expr>
          <args>['year:int', 'month:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="itermonthdays">
          <expr>obj.itermonthdays(year,month)</expr>
          <args>['year:int', 'month:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="itermonthdays2">
          <expr>obj.itermonthdays2(year,month)</expr>
          <args>['year:int', 'month:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="itermonthdays3">
          <expr>obj.itermonthdays3(year,month)</expr>
          <args>['year:int', 'month:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="itermonthdays4">
          <expr>obj.itermonthdays4(year,month)</expr>
          <args>['year:int', 'month:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="yeardatescalendar">
          <expr>obj.ret = yeardatescalendar(year,width)</expr>
          <args>['year:int', 'width:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[3]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="yeardays2calendar">
          <expr>obj.ret = yeardays2calendar(year,width)</expr>
          <args>['year:None', 'width:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[3]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="yeardayscalendar">
          <expr>obj.ret = yeardayscalendar(year,width)</expr>
          <args>['year:int', 'width:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[3]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="TextCalendar" init="">
        <api name="prweek">
          <expr>obj.prweek(theweek,width)</expr>
          <args>['theweek:list', 'width:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="formatday">
          <expr>obj.formatday(day,weekday,width)</expr>
          <args>['day:int', 'weekday:int', 'width:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="formatweek">
          <expr>obj.formatweek(theweek,width)</expr>
          <args>['theweek:list', 'width:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="formatweekday">
          <expr>obj.formatweekday(day,width)</expr>
          <args>['day:int', 'width:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="prmonth">
          <expr>obj.prmonth(theyear,themonth,w,l)</expr>
          <args>['theyear:int', 'themonth:int', 'w:int', 'l:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[0, 0]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="formatmonth">
          <expr>obj.formatmonth(theyear,themonth,w,l)</expr>
          <args>['theyear:int', 'themonth:int', 'w:int', 'l:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[0, 0]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="formatyear">
          <expr>obj.formatyear(theyear,w,l,c,m)</expr>
          <args>['theyear:int', 'w:int', 'l:int', 'c:int', 'm:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[2, 1, 6, 3]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pryear">
          <expr>obj.pryear(theyear,w,l,c,m)</expr>
          <args>['theyear:int', 'w:int', 'l:int', 'c:int', 'm:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[0, 0, 6, 3]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="HTMLCalendar" init="">
        <api name="formatday">
          <expr>obj.formatday(day,weekday)</expr>
          <args>['day:int', 'weekday:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="formatweek">
          <expr>obj.formatweek(theweek)</expr>
          <args>['theweek:list']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="formatweekday">
          <expr>obj.formatweekday(day)</expr>
          <args>['day:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="formatmonth">
          <expr>obj.formatmonth(theyear,themonth,withyear)</expr>
          <args>['theyear:int', 'themonth:int', 'withyear:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[True]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="formatyear">
          <expr>obj.formatyear(theyear,width)</expr>
          <args>['theyear:int', 'width:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[3]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="formatyearpage">
          <expr>obj.formatyearpage(theyear,width,css,encoding)</expr>
          <args>['theyear:int', 'width:int', 'css:str', 'encoding:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[3, 'calendar.css', None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="different_locale" init="obj = different_locale(locale)">
        <api name="__init__">
          <expr>None</expr>
          <args>['locale:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="LocaleTextCalendar" init="obj = LocaleTextCalendar(firstweekday,locale)">
        <api name="__init__">
          <expr>None</expr>
          <args>['firstweekday:NoneType', 'locale:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[0, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="formatweekday">
          <expr>obj.ret = formatweekday(day,width)</expr>
          <args>['day:int', 'width:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="LocaleHTMLCalendar" init="obj = LocaleHTMLCalendar(firstweekday,locale)">
        <api name="__init__">
          <expr>None</expr>
          <args>['firstweekday:NoneType', 'locale:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[0, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="formatweekday">
          <expr>obj.formatweekday(day)</expr>
          <args>['day:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="isleap">
        <expr>isleap(year)</expr>
        <args>['year:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="leapdays">
        <expr>leapdays(y1,y2)</expr>
        <args>['y1:int', 'y2:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="weekday">
        <expr>weekday(year,month,day)</expr>
        <args>['year:int', 'month:int', 'day:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="monthrange">
        <expr>monthrange(year,month)</expr>
        <args>['year:int', 'month:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="setfirstweekday">
        <expr>setfirstweekday(firstweekday)</expr>
        <args>['firstweekday:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="format">
        <expr>format(cols,colwidth,spacing)</expr>
        <args>['cols:list', 'colwidth:int', 'spacing:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['_colwidth', '_spacing']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="formatstring">
        <expr>formatstring(cols,colwidth,spacing)</expr>
        <args>['cols:list', 'colwidth:int', 'spacing:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['_colwidth', '_spacing']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="timegm">
        <expr>timegm(tuple)</expr>
        <args>['tuple:struct_time']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>main(args)</expr>
        <args>['args:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>calendar.IllegalMonthError</exception>
        <exception>calendar.IllegalWeekdayError</exception>
      </errors>
    </module>
    <module name="smtplib" imports="['socket', 'io', 're', 'email.utils', 'email.message', 'email.generator', 'base64', 'hmac', 'copy', 'datetime', 'sys', 'ssl', 'warnings']" importfrom="['email.base64mime:body_encode']">
      <class name="SMTPNotSupportedError" init=""/>
      <class name="SMTPServerDisconnected" init=""/>
      <class name="SMTPResponseException" init="obj = SMTPResponseException(code,msg)">
        <api name="__init__">
          <expr>None</expr>
          <args>['code:NoneType', 'msg:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="SMTPSenderRefused" init="obj = SMTPSenderRefused(code,msg,sender)">
        <api name="__init__">
          <expr>None</expr>
          <args>['code:NoneType', 'msg:NoneType', 'sender:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="SMTPRecipientsRefused" init="obj = SMTPRecipientsRefused(recipients)">
        <api name="__init__">
          <expr>None</expr>
          <args>['recipients:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="SMTPDataError" init=""/>
      <class name="SMTPConnectError" init=""/>
      <class name="SMTPHeloError" init=""/>
      <class name="SMTPAuthenticationError" init=""/>
      <class name="SMTP" init="obj = SMTP(host,port,local_hostname,timeout,source_address)">
        <api name="__init__">
          <expr>None</expr>
          <args>['host:NoneType', 'port:NoneType', 'local_hostname:NoneType', 'timeout:NoneType', 'source_address:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['', 0, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_debuglevel">
          <expr>obj.set_debuglevel(debuglevel)</expr>
          <args>['debuglevel:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="connect">
          <expr>obj.connect(host,port,source_address)</expr>
          <args>['host:str', 'port:int', 'source_address:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['localhost', 0, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ehlo">
          <expr>obj.ehlo(name)</expr>
          <args>['name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_extn">
          <expr>obj.has_extn(opt)</expr>
          <args>['opt:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="help">
          <expr>obj.ret = help(args)</expr>
          <args>['args:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="noop">
          <expr>obj.noop()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="verify">
          <expr>obj.verify(address)</expr>
          <args>['address:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="expn">
          <expr>obj.expn(address)</expr>
          <args>['address:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="auth_cram_md5">
          <expr>obj.auth_cram_md5(challenge)</expr>
          <args>['challenge:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="auth_plain">
          <expr>obj.auth_plain(challenge)</expr>
          <args>['challenge:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="auth_login">
          <expr>obj.auth_login(challenge)</expr>
          <args>['challenge:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="login">
          <expr>obj.login(user,password)</expr>
          <args>['user:str', 'password:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['initial_response_ok:bool']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[True]</kwodefa>
        </api>
        <api name="starttls">
          <expr>obj.starttls(keyfile,certfile,context)</expr>
          <args>['keyfile:NoneType', 'certfile:NoneType', 'context:SSLContext']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="send_message">
          <expr>obj.send_message(msg,from_addr,to_addrs,mail_options,rcpt_options)</expr>
          <args>['msg:EmailMessage', 'from_addr:NoneType', 'to_addrs:NoneType', 'mail_options:tuple', 'rcpt_options:tuple']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="quit">
          <expr>obj.quit()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="SMTP_SSL" init="obj = SMTP_SSL(host,port,local_hostname,keyfile,certfile,timeout,source_address,context)">
        <api name="__init__">
          <expr>None</expr>
          <args>['host:NoneType', 'port:NoneType', 'local_hostname:NoneType', 'keyfile:NoneType', 'certfile:NoneType', 'timeout:NoneType', 'source_address:NoneType', 'context:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['', 0, None, None, None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="LMTP" init="obj = LMTP(host,port,local_hostname,source_address,timeout)">
        <api name="__init__">
          <expr>None</expr>
          <args>['host:NoneType', 'port:NoneType', 'local_hostname:NoneType', 'source_address:NoneType', 'timeout:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['', 'LMTP_PORT', None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="quoteaddr">
        <expr>quoteaddr(addrstring)</expr>
        <args>['addrstring:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="quotedata">
        <expr>quotedata(data)</expr>
        <args>['data:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="prompt">
        <expr>ret = prompt(prompt)</expr>
        <args>['prompt:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>smtplib.SMTPException</exception>
        <exception>ImportError</exception>
        <exception>SMTPServerDisconnected</exception>
        <exception>ValueError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>ValueError</exception>
        <exception>SMTPServerDisconnected</exception>
        <exception>SMTPAuthenticationError</exception>
        <exception>UnicodeEncodeError</exception>
        <exception>OSError</exception>
      </errors>
    </module>
    <module name="linecache" imports="['functools', 'sys', 'os', 'tokenize']" importfrom="[]">
      <api name="clearcache">
        <expr>clearcache()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getline">
        <expr>getline(filename,lineno,module_globals)</expr>
        <args>['filename:str', 'lineno:int', 'module_globals:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getlines">
        <expr>getlines(filename,module_globals)</expr>
        <args>['filename:str', 'module_globals:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="checkcache">
        <expr>checkcache(filename)</expr>
        <args>['filename:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="updatecache">
        <expr>updatecache(filename,module_globals)</expr>
        <args>['filename:str', 'module_globals:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="lazycache">
        <expr>lazycache(filename,module_globals)</expr>
        <args>['filename:str', 'module_globals:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>MemoryError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
      </errors>
    </module>
    <module name="wave" imports="['audioop', 'builtins', 'struct', 'sys']" importfrom="['chunk:Chunk', 'collections:namedtuple']">
      <class name="Error" init=""/>
      <class name="Wave_read" init="obj = Wave_read(f)">
        <api name="initfp">
          <expr>obj.initfp(file)</expr>
          <args>['file:BufferedReader']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="__init__">
          <expr>None</expr>
          <args>['f:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getfp">
          <expr>obj.getfp()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="rewind">
          <expr>obj.rewind()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tell">
          <expr>obj.tell()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getnchannels">
          <expr>obj.getnchannels()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getnframes">
          <expr>obj.getnframes()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getsampwidth">
          <expr>obj.getsampwidth()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getframerate">
          <expr>obj.getframerate()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getcomptype">
          <expr>obj.getcomptype()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getcompname">
          <expr>obj.getcompname()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getparams">
          <expr>obj.getparams()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getmarkers">
          <expr>obj.ret = getmarkers()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getmark">
          <expr>obj.getmark(id)</expr>
          <args>['id:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setpos">
          <expr>obj.setpos(pos)</expr>
          <args>['pos:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="readframes">
          <expr>obj.readframes(nframes)</expr>
          <args>['nframes:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Wave_write" init="obj = Wave_write(f)">
        <api name="__init__">
          <expr>None</expr>
          <args>['f:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="initfp">
          <expr>obj.initfp(file)</expr>
          <args>['file:BufferedWriter']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getnchannels">
          <expr>obj.getnchannels()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getsampwidth">
          <expr>obj.getsampwidth()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getframerate">
          <expr>obj.getframerate()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getnframes">
          <expr>obj.getnframes()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getcomptype">
          <expr>obj.getcomptype()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getcompname">
          <expr>obj.getcompname()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setparams">
          <expr>obj.setparams(params)</expr>
          <args>['params:_wave_params']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getparams">
          <expr>obj.getparams()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setmark">
          <expr>obj.setmark(id,pos,name)</expr>
          <args>['id:None', 'pos:None', 'name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getmark">
          <expr>obj.getmark(id)</expr>
          <args>['id:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getmarkers">
          <expr>obj.ret = getmarkers()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="writeframes">
          <expr>obj.writeframes(data)</expr>
          <args>['data:bytes']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="open">
        <expr>open(f,mode)</expr>
        <args>['f:BufferedReader', 'mode:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>EOFError</exception>
        <exception>struct.error</exception>
        <exception>struct.error</exception>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
      </errors>
    </module>
    <module name="optparse" imports="['sys', 'os', 'textwrap']" importfrom="['gettext:gettext', 'gettext:ngettext']">
      <class name="OptParseError" init="obj = OptParseError(msg)">
        <api name="__init__">
          <expr>None</expr>
          <args>['msg:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="HelpFormatter" init="obj = HelpFormatter(indent_increment,max_help_position,width,short_first)">
        <api name="__init__">
          <expr>None</expr>
          <args>['indent_increment:NoneType', 'max_help_position:NoneType', 'width:NoneType', 'short_first:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_parser">
          <expr>obj.set_parser(parser)</expr>
          <args>['parser:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_short_opt_delimiter">
          <expr>obj.set_short_opt_delimiter(delim)</expr>
          <args>['delim:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_long_opt_delimiter">
          <expr>obj.set_long_opt_delimiter(delim)</expr>
          <args>['delim:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="format_usage">
          <expr>obj.format_usage(usage)</expr>
          <args>['usage:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="format_heading">
          <expr>obj.format_heading(heading)</expr>
          <args>['heading:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="format_description">
          <expr>obj.ret = format_description(description)</expr>
          <args>['description:None']</args>
          <return>['ret:int', ':None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="format_epilog">
          <expr>obj.ret = format_epilog(epilog)</expr>
          <args>['epilog:None']</args>
          <return>['ret:int', ':None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="format_option">
          <expr>obj.ret = format_option(option)</expr>
          <args>['option:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="store_option_strings">
          <expr>obj.store_option_strings(parser)</expr>
          <args>['parser:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IndentedHelpFormatter" init="obj = IndentedHelpFormatter(indent_increment,max_help_position,width,short_first)">
        <api name="__init__">
          <expr>None</expr>
          <args>['indent_increment:NoneType', 'max_help_position:NoneType', 'width:NoneType', 'short_first:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[2, 24, None, 1]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="format_usage">
          <expr>obj.format_usage(usage)</expr>
          <args>['usage:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="format_heading">
          <expr>obj.format_heading(heading)</expr>
          <args>['heading:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="TitledHelpFormatter" init="obj = TitledHelpFormatter(indent_increment,max_help_position,width,short_first)">
        <api name="__init__">
          <expr>None</expr>
          <args>['indent_increment:NoneType', 'max_help_position:NoneType', 'width:NoneType', 'short_first:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[0, 24, None, 0]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="format_usage">
          <expr>obj.format_usage(usage)</expr>
          <args>['usage:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="format_heading">
          <expr>obj.format_heading(heading)</expr>
          <args>['heading:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Option" init="obj = Option()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="takes_value">
          <expr>obj.takes_value()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_opt_string">
          <expr>obj.get_opt_string()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="process">
          <expr>obj.process(opt,value,values,parser)</expr>
          <args>['opt:str', 'value:NoneType', 'values:Values', 'parser:OptionParser']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Values" init="obj = Values(defaults)">
        <api name="__init__">
          <expr>None</expr>
          <args>['defaults:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read_module">
          <expr>obj.read_module(modname,mode)</expr>
          <args>['modname:None', 'mode:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['careful']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read_file">
          <expr>obj.read_file(filename,mode)</expr>
          <args>['filename:None', 'mode:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['careful']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ensure_value">
          <expr>obj.ensure_value(attr,value)</expr>
          <args>['attr:str', 'value:list']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="OptionContainer" init="obj = OptionContainer(option_class,conflict_handler,description)">
        <api name="__init__">
          <expr>None</expr>
          <args>['option_class:NoneType', 'conflict_handler:NoneType', 'description:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_conflict_handler">
          <expr>obj.set_conflict_handler(handler)</expr>
          <args>['handler:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_description">
          <expr>obj.set_description(description)</expr>
          <args>['description:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_description">
          <expr>obj.ret = get_description()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="destroy">
          <expr>obj.destroy()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_options">
          <expr>obj.add_options(option_list)</expr>
          <args>['option_list:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_option">
          <expr>obj.ret = get_option(opt_str)</expr>
          <args>['opt_str:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_option">
          <expr>obj.ret = has_option(opt_str)</expr>
          <args>['opt_str:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="remove_option">
          <expr>obj.remove_option(opt_str)</expr>
          <args>['opt_str:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="format_option_help">
          <expr>obj.ret = format_option_help(formatter)</expr>
          <args>['formatter:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="format_help">
          <expr>obj.ret = format_help(formatter)</expr>
          <args>['formatter:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="OptionGroup" init="obj = OptionGroup(parser,title,description)">
        <api name="__init__">
          <expr>None</expr>
          <args>['parser:NoneType', 'title:NoneType', 'description:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_title">
          <expr>obj.set_title(title)</expr>
          <args>['title:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="OptionParser" init="obj = OptionParser(usage,option_list,option_class,version,conflict_handler,description,formatter,add_help_option,prog,epilog)">
        <api name="__init__">
          <expr>None</expr>
          <args>['usage:NoneType', 'option_list:NoneType', 'option_class:NoneType', 'version:NoneType', 'conflict_handler:NoneType', 'description:NoneType', 'formatter:NoneType', 'add_help_option:NoneType', 'prog:NoneType', 'epilog:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, 'Option', None, 'error', None, None, True, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_usage">
          <expr>obj.set_usage(usage)</expr>
          <args>['usage:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="enable_interspersed_args">
          <expr>obj.enable_interspersed_args()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="disable_interspersed_args">
          <expr>obj.disable_interspersed_args()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_process_default_values">
          <expr>obj.set_process_default_values(process)</expr>
          <args>['process:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_default">
          <expr>obj.set_default(dest,value)</expr>
          <args>['dest:str', 'value:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_defaults">
          <expr>obj.set_defaults()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_option_group">
          <expr>obj.add_option_group()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_option_group">
          <expr>obj.ret = get_option_group(opt_str)</expr>
          <args>['opt_str:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parse_args">
          <expr>obj.parse_args(args,values)</expr>
          <args>['args:list', 'values:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_prog_name">
          <expr>obj.get_prog_name()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_description">
          <expr>obj.ret = get_description()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_usage">
          <expr>obj.get_usage()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_version">
          <expr>obj.get_version()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="format_option_help">
          <expr>obj.format_option_help(formatter)</expr>
          <args>['formatter:IndentedHelpFormatter']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="check_builtin">
        <expr>check_builtin(option,opt,value)</expr>
        <args>['option:Option', 'opt:str', 'value:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="check_choice">
        <expr>check_choice(option,opt,value)</expr>
        <args>['option:Option', 'opt:str', 'value:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ImportError</exception>
        <exception>optparse.OptionError</exception>
        <exception>optparse.OptionConflictError</exception>
        <exception>optparse.OptionValueError</exception>
        <exception>optparse.BadOptionError</exception>
        <exception>optparse.AmbiguousOptionError</exception>
        <exception>ValueError</exception>
        <exception>BadOptionError</exception>
        <exception>OptionValueError</exception>
      </errors>
    </module>
    <module name="site" imports="['sys', 'os', 'builtins', 'io', 'sitecustomize', 'usercustomize', 'textwrap']" importfrom="[]">
      <api name="makepath">
        <expr>makepath()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="abs_paths">
        <expr>abs_paths()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="removeduppaths">
        <expr>ret = removeduppaths()</expr>
        <args>[]</args>
        <return>['known_paths:set']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="addpackage">
        <expr>addpackage(sitedir,name,known_paths)</expr>
        <args>['sitedir:str', 'name:str', 'known_paths:set']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="addsitedir">
        <expr>ret = addsitedir(sitedir,known_paths)</expr>
        <args>['sitedir:str', 'known_paths:set']</args>
        <return>['known_paths:set']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="check_enableusersite">
        <expr>ret = check_enableusersite()</expr>
        <args>[]</args>
        <return>['ret:None', 'ret:bool']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getuserbase">
        <expr>getuserbase()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getusersitepackages">
        <expr>getusersitepackages()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="addusersitepackages">
        <expr>ret = addusersitepackages(known_paths)</expr>
        <args>['known_paths:set']</args>
        <return>['known_paths:set']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getsitepackages">
        <expr>getsitepackages(prefixes)</expr>
        <args>['prefixes:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="addsitepackages">
        <expr>ret = addsitepackages(known_paths,prefixes)</expr>
        <args>['known_paths:None', 'prefixes:None']</args>
        <return>['known_paths:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="setquit">
        <expr>setquit()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="setcopyright">
        <expr>setcopyright()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="sethelper">
        <expr>sethelper()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="enablerlcompleter">
        <expr>enablerlcompleter()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="venv">
        <expr>ret = venv(known_paths)</expr>
        <args>['known_paths:None']</args>
        <return>['known_paths:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="execsitecustomize">
        <expr>execsitecustomize()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="execusercustomize">
        <expr>execusercustomize()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>main()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>OSError</exception>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>TypeError</exception>
        <exception>OSError</exception>
        <exception>Exception</exception>
        <exception>OSError</exception>
        <exception>ImportError</exception>
        <exception>Exception</exception>
        <exception>ImportError</exception>
        <exception>Exception</exception>
      </errors>
    </module>
    <module name="shlex" imports="['os', 're', 'sys', 'warnings']" importfrom="['collections:deque', 'io:StringIO']">
      <class name="shlex" init="obj = shlex(instream,infile,posix,punctuation_chars)">
        <api name="__init__">
          <expr>None</expr>
          <args>['instream:NoneType', 'infile:NoneType', 'posix:NoneType', 'punctuation_chars:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, False, False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="punctuation_chars">
          <expr>obj.punctuation_chars()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="push_token">
          <expr>obj.push_token(tok)</expr>
          <args>['tok:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="error_leader">
          <expr>obj.ret = error_leader(infile,lineno)</expr>
          <args>['infile:None', 'lineno:None']</args>
          <return>['ret:int']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="split">
        <expr>split(s,comments,posix)</expr>
        <args>['s:str', 'comments:bool', 'posix:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[False, True]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="join">
        <expr>join(split_command)</expr>
        <args>['split_command:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="quote">
        <expr>quote(s)</expr>
        <args>['s:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="filecmp" imports="['os', 'stat', 'sys', 'getopt']" importfrom="['itertools:filterfalse', 'types:GenericAlias']">
      <class name="dircmp" init="obj = dircmp(a,b,ignore,hide)">
        <api name="__init__">
          <expr>None</expr>
          <args>['a:NoneType', 'b:NoneType', 'ignore:NoneType', 'hide:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="phase0">
          <expr>obj.phase0()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="phase1">
          <expr>obj.phase1()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="phase2">
          <expr>obj.phase2()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="phase3">
          <expr>obj.phase3()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="report_partial_closure">
          <expr>obj.report_partial_closure()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="clear_cache">
        <expr>clear_cache()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="cmp">
        <expr>cmp(f1,f2,shallow)</expr>
        <args>['f1:str', 'f2:str', 'shallow:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[True]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="cmpfiles">
        <expr>cmpfiles(a,b,common,shallow)</expr>
        <args>['a:str', 'b:str', 'common:list', 'shallow:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[True]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="demo">
        <expr>demo()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
      </errors>
    </module>
    <module name="pathlib" imports="['fnmatch', 'functools', 'io', 'ntpath', 'os', 'posixpath', 're', 'sys', 'nt', 'pwd', 'grp']" importfrom="['_collections_abc:Sequence', 'errno:EINVAL', 'errno:ENOENT', 'errno:ENOTDIR', 'errno:EBADF', 'errno:ELOOP', 'operator:attrgetter', 'stat:S_ISDIR', 'stat:S_ISLNK', 'stat:S_ISREG', 'stat:S_ISSOCK', 'stat:S_ISBLK', 'stat:S_ISCHR', 'stat:S_ISFIFO', 'urllib.parse:quote_from_bytes']">
      <class name="PurePath" init="">
        <api name="as_posix">
          <expr>obj.ret = as_posix()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="as_uri">
          <expr>obj.ret = as_uri()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="anchor">
          <expr>obj.ret = anchor()</expr>
          <args>[]</args>
          <return>['anchor:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="name">
          <expr>obj.ret = name()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="suffix">
          <expr>obj.ret = suffix()</expr>
          <args>[]</args>
          <return>['ret:None', ':None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="suffixes">
          <expr>obj.ret = suffixes()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="stem">
          <expr>obj.ret = stem()</expr>
          <args>[]</args>
          <return>['ret:None', 'name:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="with_stem">
          <expr>obj.ret = with_stem(stem)</expr>
          <args>['stem:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="with_suffix">
          <expr>obj.ret = with_suffix(suffix)</expr>
          <args>['suffix:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_relative_to">
          <expr>obj.ret = is_relative_to()</expr>
          <args>[]</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parts">
          <expr>obj.ret = parts()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="joinpath">
          <expr>obj.ret = joinpath()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parent">
          <expr>obj.ret = parent()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parents">
          <expr>obj.ret = parents()</expr>
          <args>[]</args>
          <return>['_PathParents:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="match">
          <expr>obj.ret = match(path_pattern)</expr>
          <args>['path_pattern:None']</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="PurePosixPath" init=""/>
      <class name="PureWindowsPath" init=""/>
      <class name="Path" init="">
        <api name="cwd">
          <expr>obj.ret = cwd(cls)</expr>
          <args>['cls:None']</args>
          <return>['cls:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="home">
          <expr>obj.ret = home(cls)</expr>
          <args>['cls:None']</args>
          <return>['cls:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="samefile">
          <expr>obj.ret = samefile(other_path)</expr>
          <args>['other_path:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="iterdir">
          <expr>obj.iterdir()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="glob">
          <expr>obj.glob(pattern)</expr>
          <args>['pattern:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="rglob">
          <expr>obj.rglob(pattern)</expr>
          <args>['pattern:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="absolute">
          <expr>obj.ret = absolute()</expr>
          <args>[]</args>
          <return>['self:None', 'obj:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read_bytes">
          <expr>obj.ret = read_bytes()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read_text">
          <expr>obj.ret = read_text(encoding,errors)</expr>
          <args>['encoding:None', 'errors:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="write_bytes">
          <expr>obj.ret = write_bytes(data)</expr>
          <args>['data:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="write_text">
          <expr>obj.ret = write_text(data,encoding,errors)</expr>
          <args>['data:None', 'encoding:None', 'errors:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="touch">
          <expr>obj.touch(mode,exist_ok)</expr>
          <args>['mode:None', 'exist_ok:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[438, True]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="symlink_to">
          <expr>obj.symlink_to(target,target_is_directory)</expr>
          <args>['target:None', 'target_is_directory:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="exists">
          <expr>obj.ret = exists()</expr>
          <args>[]</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_file">
          <expr>obj.ret = is_file()</expr>
          <args>[]</args>
          <return>['S_ISREG:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_mount">
          <expr>obj.ret = is_mount()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_symlink">
          <expr>obj.ret = is_symlink()</expr>
          <args>[]</args>
          <return>['S_ISLNK:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_block_device">
          <expr>obj.ret = is_block_device()</expr>
          <args>[]</args>
          <return>['S_ISBLK:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_char_device">
          <expr>obj.ret = is_char_device()</expr>
          <args>[]</args>
          <return>['S_ISCHR:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_fifo">
          <expr>obj.ret = is_fifo()</expr>
          <args>[]</args>
          <return>['S_ISFIFO:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_socket">
          <expr>obj.ret = is_socket()</expr>
          <args>[]</args>
          <return>['S_ISSOCK:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="expanduser">
          <expr>obj.ret = expanduser()</expr>
          <args>[]</args>
          <return>['ret:None', 'self:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="PosixPath" init=""/>
      <class name="WindowsPath" init="">
        <api name="is_mount">
          <expr>obj.is_mount()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>FileNotFoundError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>ImportError</exception>
        <exception>ImportError</exception>
        <exception>PermissionError</exception>
        <exception>OSError</exception>
        <exception>PermissionError</exception>
        <exception>OSError</exception>
        <exception>PermissionError</exception>
        <exception>PermissionError</exception>
        <exception>AttributeError</exception>
        <exception>AttributeError</exception>
        <exception>AttributeError</exception>
        <exception>ValueError</exception>
        <exception>AttributeError</exception>
        <exception>TypeError</exception>
        <exception>TypeError</exception>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>FileNotFoundError</exception>
        <exception>OSError</exception>
        <exception>FileNotFoundError</exception>
        <exception>OSError</exception>
        <exception>ValueError</exception>
        <exception>OSError</exception>
        <exception>ValueError</exception>
        <exception>OSError</exception>
        <exception>ValueError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>ValueError</exception>
        <exception>OSError</exception>
        <exception>ValueError</exception>
        <exception>OSError</exception>
        <exception>ValueError</exception>
        <exception>OSError</exception>
        <exception>ValueError</exception>
        <exception>OSError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module name="webbrowser" imports="['os', 'shlex', 'shutil', 'sys', 'subprocess', 'threading', 'copy', 'glob', 'pwd', 'socket', 'tempfile', 'getopt']" importfrom="[]">
      <class name="Error" init=""/>
      <class name="BaseBrowser" init="obj = BaseBrowser(name)">
        <api name="__init__">
          <expr>None</expr>
          <args>['name:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="open_new">
          <expr>obj.ret = open_new(url)</expr>
          <args>['url:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="open_new_tab">
          <expr>obj.ret = open_new_tab(url)</expr>
          <args>['url:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="GenericBrowser" init="obj = GenericBrowser(name)">
        <api name="__init__">
          <expr>None</expr>
          <args>['name:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="BackgroundBrowser" init=""/>
      <class name="UnixBrowser" init=""/>
      <class name="Mozilla" init=""/>
      <class name="Netscape" init=""/>
      <class name="Galeon" init=""/>
      <class name="Chrome" init=""/>
      <class name="Opera" init=""/>
      <class name="Elinks" init=""/>
      <class name="Konqueror" init=""/>
      <class name="Grail" init=""/>
      <class name="WindowsDefault" init=""/>
      <class name="MacOSX" init="obj = MacOSX(name)">
        <api name="__init__">
          <expr>None</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="MacOSXOSAScript" init="obj = MacOSXOSAScript(name)">
        <api name="__init__">
          <expr>None</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="register">
        <expr>register(name,klass,instance)</expr>
        <args>['name:str', 'klass:type', 'instance:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['preferred:bool']</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[False]</kwodefa>
      </api>
      <api name="get">
        <expr>get(using)</expr>
        <args>['using:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="open">
        <expr>ret = open(url,new,autoraise)</expr>
        <args>['url:None', 'new:None', 'autoraise:None']</args>
        <return>['ret:bool']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0, True]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="open_new">
        <expr>ret = open_new(url)</expr>
        <args>['url:None']</args>
        <return>['open:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="open_new_tab">
        <expr>ret = open_new_tab(url)</expr>
        <args>['url:None']</args>
        <return>['open:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="register_X_browsers">
        <expr>register_X_browsers()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="register_standard_browsers">
        <expr>register_standard_browsers()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>main()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>subprocess.TimeoutExpired</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>FileNotFoundError</exception>
        <exception>PermissionError</exception>
        <exception>NotADirectoryError</exception>
        <exception>OSError</exception>
        <exception>getopt.error</exception>
      </errors>
    </module>
    <module name="aifc" imports="['struct', 'builtins', 'warnings', 'math', 'audioop', 'sys']" importfrom="['chunk:Chunk', 'collections:namedtuple']">
      <class name="Error" init=""/>
      <class name="Aifc_read" init="obj = Aifc_read(f)">
        <api name="initfp">
          <expr>obj.initfp(file)</expr>
          <args>['file:BufferedReader']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="__init__">
          <expr>None</expr>
          <args>['f:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getfp">
          <expr>obj.getfp()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="rewind">
          <expr>obj.rewind()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tell">
          <expr>obj.tell()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getnchannels">
          <expr>obj.getnchannels()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getnframes">
          <expr>obj.getnframes()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getsampwidth">
          <expr>obj.getsampwidth()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getframerate">
          <expr>obj.getframerate()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getcomptype">
          <expr>obj.getcomptype()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getcompname">
          <expr>obj.getcompname()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getparams">
          <expr>obj.getparams()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getmarkers">
          <expr>obj.getmarkers()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getmark">
          <expr>obj.getmark(id)</expr>
          <args>['id:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setpos">
          <expr>obj.setpos(pos)</expr>
          <args>['pos:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="readframes">
          <expr>obj.readframes(nframes)</expr>
          <args>['nframes:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Aifc_write" init="obj = Aifc_write(f)">
        <api name="__init__">
          <expr>None</expr>
          <args>['f:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="initfp">
          <expr>obj.initfp(file)</expr>
          <args>['file:BufferedWriter']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="aiff">
          <expr>obj.aiff()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="aifc">
          <expr>obj.aifc()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getnchannels">
          <expr>obj.getnchannels()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getsampwidth">
          <expr>obj.getsampwidth()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getframerate">
          <expr>obj.getframerate()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getnframes">
          <expr>obj.getnframes()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getcomptype">
          <expr>obj.getcomptype()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getcompname">
          <expr>obj.getcompname()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setparams">
          <expr>obj.setparams(params)</expr>
          <args>['params:tuple']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getparams">
          <expr>obj.getparams()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setmark">
          <expr>obj.setmark(id,pos,name)</expr>
          <args>['id:int', 'pos:int', 'name:bytes']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getmark">
          <expr>obj.getmark(id)</expr>
          <args>['id:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getmarkers">
          <expr>obj.getmarkers()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="writeframes">
          <expr>obj.writeframes(data)</expr>
          <args>['data:bytes']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="open">
        <expr>open(f,mode)</expr>
        <args>['f:BufferedReader', 'mode:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>struct.error</exception>
        <exception>struct.error</exception>
        <exception>struct.error</exception>
        <exception>struct.error</exception>
        <exception>EOFError</exception>
        <exception>EOFError</exception>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
      </errors>
    </module>
    <module name="formatter" imports="['sys', 'warnings']" importfrom="[]">
      <class name="NullFormatter" init="obj = NullFormatter(writer)">
        <api name="__init__">
          <expr>None</expr>
          <args>['writer:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="AbstractFormatter" init="obj = AbstractFormatter(writer)">
        <api name="__init__">
          <expr>None</expr>
          <args>['writer:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_paragraph">
          <expr>obj.end_paragraph(blankline)</expr>
          <args>['blankline:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_line_break">
          <expr>obj.add_line_break()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_hor_rule">
          <expr>obj.add_hor_rule()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_label_data">
          <expr>obj.add_label_data(format,counter,blankline)</expr>
          <args>['format:None', 'counter:None', 'blankline:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="format_counter">
          <expr>obj.ret = format_counter(format,counter)</expr>
          <args>['format:None', 'counter:None']</args>
          <return>['label:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="format_letter">
          <expr>obj.ret = format_letter(case,counter)</expr>
          <args>['case:None', 'counter:None']</args>
          <return>['label:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="format_roman">
          <expr>obj.ret = format_roman(case,counter)</expr>
          <args>['case:None', 'counter:None']</args>
          <return>['ret:None', 'label:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_flowing_data">
          <expr>obj.add_flowing_data(data)</expr>
          <args>['data:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_literal_data">
          <expr>obj.add_literal_data(data)</expr>
          <args>['data:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="flush_softspace">
          <expr>obj.flush_softspace()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="push_alignment">
          <expr>obj.push_alignment(align)</expr>
          <args>['align:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pop_alignment">
          <expr>obj.pop_alignment()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="push_font">
          <expr>obj.push_font(font)</expr>
          <args>['font:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pop_font">
          <expr>obj.pop_font()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="push_margin">
          <expr>obj.push_margin(margin)</expr>
          <args>['margin:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pop_margin">
          <expr>obj.pop_margin()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_spacing">
          <expr>obj.set_spacing(spacing)</expr>
          <args>['spacing:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="push_style">
          <expr>obj.push_style()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pop_style">
          <expr>obj.pop_style(n)</expr>
          <args>['n:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[1]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="assert_line_data">
          <expr>obj.assert_line_data(flag)</expr>
          <args>['flag:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[1]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="NullWriter" init=""/>
      <class name="AbstractWriter" init=""/>
      <class name="DumbWriter" init="obj = DumbWriter(file,maxcol)">
        <api name="__init__">
          <expr>None</expr>
          <args>['file:NoneType', 'maxcol:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, 72]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="reset">
          <expr>obj.reset()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
    </module>
    <module name="gettext" imports="['os', 're', 'sys', 'warnings', 'locale', 'builtins', 'copy']" importfrom="['struct:unpack', 'errno:ENOENT']">
      <class name="NullTranslations" init="obj = NullTranslations(fp)">
        <api name="__init__">
          <expr>None</expr>
          <args>['fp:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info">
          <expr>obj.ret = info()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="charset">
          <expr>obj.ret = charset()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="output_charset">
          <expr>obj.ret = output_charset()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_output_charset">
          <expr>obj.set_output_charset(charset)</expr>
          <args>['charset:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="install">
          <expr>obj.install(names)</expr>
          <args>['names:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="GNUTranslations" init=""/>
      <api name="c2py">
        <expr>c2py(plural)</expr>
        <args>['plural:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="find">
        <expr>find(domain,localedir,languages,all)</expr>
        <args>['domain:str', 'localedir:NoneType', 'languages:NoneType', 'all:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, False]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="translation">
        <expr>translation(domain,localedir,languages,class_,fallback,codeset)</expr>
        <args>['domain:str', 'localedir:NoneType', 'languages:NoneType', 'class_:NoneType', 'fallback:bool', 'codeset:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, False, '_unspecified']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="install">
        <expr>install(domain,localedir,codeset,names)</expr>
        <args>['domain:str', 'localedir:str', 'codeset:list', 'names:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, '_unspecified', None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="textdomain">
        <expr>textdomain(domain)</expr>
        <args>['domain:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="bindtextdomain">
        <expr>bindtextdomain(domain,localedir)</expr>
        <args>['domain:str', 'localedir:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="bind_textdomain_codeset">
        <expr>bind_textdomain_codeset(domain,codeset)</expr>
        <args>['domain:str', 'codeset:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dgettext">
        <expr>dgettext(domain,message)</expr>
        <args>['domain:str', 'message:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ldgettext">
        <expr>ldgettext(domain,message)</expr>
        <args>['domain:str', 'message:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dngettext">
        <expr>dngettext(domain,msgid1,msgid2,n)</expr>
        <args>['domain:str', 'msgid1:str', 'msgid2:str', 'n:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ldngettext">
        <expr>ldngettext(domain,msgid1,msgid2,n)</expr>
        <args>['domain:str', 'msgid1:str', 'msgid2:str', 'n:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dpgettext">
        <expr>dpgettext(domain,context,message)</expr>
        <args>['domain:str', 'context:str', 'message:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dnpgettext">
        <expr>dnpgettext(domain,context,msgid1,msgid2,n)</expr>
        <args>['domain:str', 'context:str', 'msgid1:str', 'msgid2:str', 'n:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="gettext">
        <expr>gettext(message)</expr>
        <args>['message:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="lgettext">
        <expr>lgettext(message)</expr>
        <args>['message:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ngettext">
        <expr>ngettext(msgid1,msgid2,n)</expr>
        <args>['msgid1:str', 'msgid2:str', 'n:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="lngettext">
        <expr>lngettext(msgid1,msgid2,n)</expr>
        <args>['msgid1:str', 'msgid2:str', 'n:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="pgettext">
        <expr>pgettext(context,message)</expr>
        <args>['context:str', 'message:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="npgettext">
        <expr>npgettext(context,msgid1,msgid2,n)</expr>
        <args>['context:str', 'msgid1:str', 'msgid2:str', 'n:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ValueError</exception>
        <exception>TypeError</exception>
        <exception>RecursionError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
      </errors>
    </module>
    <module name="imaplib" imports="['binascii', 'errno', 'random', 're', 'socket', 'subprocess', 'sys', 'time', 'calendar', 'ssl', 'hmac', 'getopt', 'getpass']" importfrom="['datetime:datetime', 'datetime:timezone', 'datetime:timedelta', 'io:DEFAULT_BUFFER_SIZE']">
      <class name="IMAP4" init="obj = IMAP4(host,port,timeout)">
        <api name="__init__">
          <expr>None</expr>
          <args>['host:NoneType', 'port:NoneType', 'timeout:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['', 'IMAP4_PORT', None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="open">
          <expr>obj.open(host,port,timeout)</expr>
          <args>['host:str', 'port:int', 'timeout:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['', 'IMAP4_PORT', None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="socket">
          <expr>obj.ret = socket()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="recent">
          <expr>obj.ret = recent()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="response">
          <expr>obj.ret = response(code)</expr>
          <args>['code:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="check">
          <expr>obj.ret = check()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="copy">
          <expr>obj.ret = copy(message_set,new_mailbox)</expr>
          <args>['message_set:None', 'new_mailbox:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="create">
          <expr>obj.ret = create(mailbox)</expr>
          <args>['mailbox:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="delete">
          <expr>obj.ret = delete(mailbox)</expr>
          <args>['mailbox:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="deleteacl">
          <expr>obj.ret = deleteacl(mailbox,who)</expr>
          <args>['mailbox:None', 'who:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="enable">
          <expr>obj.enable(capability)</expr>
          <args>['capability:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="expunge">
          <expr>obj.ret = expunge()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="fetch">
          <expr>obj.ret = fetch(message_set,message_parts)</expr>
          <args>['message_set:None', 'message_parts:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getacl">
          <expr>obj.ret = getacl(mailbox)</expr>
          <args>['mailbox:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getannotation">
          <expr>obj.ret = getannotation(mailbox,entry,attribute)</expr>
          <args>['mailbox:None', 'entry:None', 'attribute:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getquota">
          <expr>obj.ret = getquota(root)</expr>
          <args>['root:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getquotaroot">
          <expr>obj.getquotaroot(mailbox)</expr>
          <args>['mailbox:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="list">
          <expr>obj.ret = list(directory,pattern)</expr>
          <args>['directory:None', 'pattern:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['&quot;&quot;', '*']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="login">
          <expr>obj.login(user,password)</expr>
          <args>['user:str', 'password:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="login_cram_md5">
          <expr>obj.login_cram_md5(user,password)</expr>
          <args>['user:str', 'password:bytes']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="lsub">
          <expr>obj.ret = lsub(directory,pattern)</expr>
          <args>['directory:str', 'pattern:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['&quot;&quot;', '*']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="myrights">
          <expr>obj.ret = myrights(mailbox)</expr>
          <args>['mailbox:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="namespace">
          <expr>obj.ret = namespace()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="partial">
          <expr>obj.ret = partial(message_num,message_part,start,length)</expr>
          <args>['message_num:None', 'message_part:None', 'start:None', 'length:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="proxyauth">
          <expr>obj.ret = proxyauth(user)</expr>
          <args>['user:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="rename">
          <expr>obj.ret = rename(oldmailbox,newmailbox)</expr>
          <args>['oldmailbox:None', 'newmailbox:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="search">
          <expr>obj.search(charset)</expr>
          <args>['charset:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="select">
          <expr>obj.select(mailbox,readonly)</expr>
          <args>['mailbox:str', 'readonly:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['INBOX', False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setacl">
          <expr>obj.ret = setacl(mailbox,who,what)</expr>
          <args>['mailbox:None', 'who:None', 'what:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setannotation">
          <expr>obj.ret = setannotation()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setquota">
          <expr>obj.ret = setquota(root,limits)</expr>
          <args>['root:None', 'limits:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sort">
          <expr>obj.ret = sort(sort_criteria,charset)</expr>
          <args>['sort_criteria:None', 'charset:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="starttls">
          <expr>obj.ret = starttls(ssl_context)</expr>
          <args>['ssl_context:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="status">
          <expr>obj.ret = status(mailbox,names)</expr>
          <args>['mailbox:None', 'names:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="store">
          <expr>obj.ret = store(message_set,command,flags)</expr>
          <args>['message_set:bytes', 'command:str', 'flags:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="subscribe">
          <expr>obj.ret = subscribe(mailbox)</expr>
          <args>['mailbox:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="thread">
          <expr>obj.ret = thread(threading_algorithm,charset)</expr>
          <args>['threading_algorithm:None', 'charset:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="uid">
          <expr>obj.ret = uid(command)</expr>
          <args>['command:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unsubscribe">
          <expr>obj.ret = unsubscribe(mailbox)</expr>
          <args>['mailbox:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unselect">
          <expr>obj.unselect()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="xatom">
          <expr>obj.ret = xatom(name)</expr>
          <args>['name:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IMAP4_SSL" init="obj = IMAP4_SSL(host,port,keyfile,certfile,ssl_context,timeout)">
        <api name="__init__">
          <expr>None</expr>
          <args>['host:NoneType', 'port:NoneType', 'keyfile:NoneType', 'certfile:NoneType', 'ssl_context:NoneType', 'timeout:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['', 'IMAP4_SSL_PORT', None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IMAP4_stream" init="obj = IMAP4_stream(command)">
        <api name="__init__">
          <expr>None</expr>
          <args>['command:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="Internaldate2tuple">
        <expr>Internaldate2tuple(resp)</expr>
        <args>['resp:bytes']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="Int2AP">
        <expr>Int2AP(num)</expr>
        <args>['num:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ParseFlags">
        <expr>ret = ParseFlags(resp)</expr>
        <args>['resp:None']</args>
        <return>['tuple:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="Time2Internaldate">
        <expr>Time2Internaldate(date_time)</expr>
        <args>['date_time:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="run">
        <expr>ret = run(cmd,args)</expr>
        <args>['cmd:None', 'args:None']</args>
        <return>['dat:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>self.abort</exception>
        <exception>self.error</exception>
        <exception>self.abort</exception>
        <exception>AttributeError</exception>
        <exception>getopt.error</exception>
      </errors>
    </module>
    <module name="platform" imports="['collections', 'os', 're', 'sys', 'subprocess', 'functools', 'itertools', 'winreg', 'plistlib', 'java.lang', 'socket', 'struct', 'vms_lib']" importfrom="['sys:getwindowsversion', 'java.lang:System']">
      <class name="uname_result" init="">
        <api name="processor">
          <expr>obj.processor()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="libc_ver">
        <expr>libc_ver(executable,lib,version,chunksize)</expr>
        <args>['executable:NoneType', 'lib:str', 'version:str', 'chunksize:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, '', '', 16384]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="win32_is_iot">
        <expr>ret = win32_is_iot()</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="win32_edition">
        <expr>win32_edition()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="win32_ver">
        <expr>win32_ver(release,version,csd,ptype)</expr>
        <args>['release:str', 'version:str', 'csd:str', 'ptype:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['', '', '', '']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="mac_ver">
        <expr>mac_ver(release,versioninfo,machine)</expr>
        <args>['release:str', 'versioninfo:tuple', 'machine:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['', None, '']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="java_ver">
        <expr>java_ver(release,vendor,vminfo,osinfo)</expr>
        <args>['release:str', 'vendor:str', 'vminfo:tuple', 'osinfo:tuple']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['', '', None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="system_alias">
        <expr>system_alias(system,release,version)</expr>
        <args>['system:str', 'release:str', 'version:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="architecture">
        <expr>architecture(executable,bits,linkage)</expr>
        <args>['executable:str', 'bits:str', 'linkage:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, '', '']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="uname">
        <expr>uname()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="system">
        <expr>system()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="node">
        <expr>ret = node()</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="release">
        <expr>release()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="version">
        <expr>version()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="machine">
        <expr>machine()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="processor">
        <expr>ret = processor()</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="python_implementation">
        <expr>python_implementation()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="python_version">
        <expr>python_version()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="python_version_tuple">
        <expr>ret = python_version_tuple()</expr>
        <args>[]</args>
        <return>['tuple:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="python_branch">
        <expr>python_branch()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="python_revision">
        <expr>python_revision()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="python_build">
        <expr>python_build()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="python_compiler">
        <expr>python_compiler()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="platform">
        <expr>platform(aliased,terse)</expr>
        <args>['aliased:int', 'terse:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0, 0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ValueError</exception>
        <exception>AttributeError</exception>
        <exception>ValueError</exception>
        <exception>OSError</exception>
        <exception>ValueError</exception>
        <exception>OSError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>ImportError</exception>
        <exception>ImportError</exception>
        <exception>ValueError</exception>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>ImportError</exception>
        <exception>ImportError</exception>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>ValueError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>AttributeError</exception>
      </errors>
    </module>
    <module name="chunk" imports="[]" importfrom="[]">
      <class name="Chunk" init="obj = Chunk(file,align,bigendian,inclheader)">
        <api name="__init__">
          <expr>None</expr>
          <args>['file:NoneType', 'align:NoneType', 'bigendian:NoneType', 'inclheader:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[True, True, False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getname">
          <expr>obj.getname()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getsize">
          <expr>obj.ret = getsize()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="close">
          <expr>obj.close()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isatty">
          <expr>obj.ret = isatty()</expr>
          <args>[]</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tell">
          <expr>obj.tell()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>OSError</exception>
      </errors>
    </module>
    <module name="mailbox" imports="['os', 'time', 'calendar', 'socket', 'errno', 'copy', 'warnings', 'email', 'email.message', 'email.generator', 'io', 'contextlib', 'fcntl']" importfrom="['types:GenericAlias']">
      <class name="Mailbox" init="obj = Mailbox(path,factory,create)">
        <api name="__init__">
          <expr>None</expr>
          <args>['path:NoneType', 'factory:NoneType', 'create:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, True]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add">
          <expr>obj.add(message)</expr>
          <args>['message:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get">
          <expr>obj.ret = get(key,default)</expr>
          <args>['key:str', 'default:NoneType']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_string">
          <expr>obj.ret = get_string(key)</expr>
          <args>['key:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_bytes">
          <expr>obj.get_bytes(key)</expr>
          <args>['key:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_file">
          <expr>obj.get_file(key)</expr>
          <args>['key:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="iterkeys">
          <expr>obj.iterkeys()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="keys">
          <expr>obj.keys()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="values">
          <expr>obj.ret = values()</expr>
          <args>[]</args>
          <return>['list:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clear">
          <expr>obj.clear()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pop">
          <expr>obj.ret = pop(key,default)</expr>
          <args>['key:str', 'default:NoneType']</args>
          <return>['result:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="popitem">
          <expr>obj.popitem()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="update">
          <expr>obj.update(arg)</expr>
          <args>['arg:tuple']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="flush">
          <expr>obj.flush()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="lock">
          <expr>obj.lock()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unlock">
          <expr>obj.unlock()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="close">
          <expr>obj.close()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Maildir" init="obj = Maildir(dirname,factory,create)">
        <api name="__init__">
          <expr>None</expr>
          <args>['dirname:NoneType', 'factory:NoneType', 'create:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, True]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_bytes">
          <expr>obj.get_bytes(key)</expr>
          <args>['key:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_file">
          <expr>obj.get_file(key)</expr>
          <args>['key:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="flush">
          <expr>obj.flush()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="lock">
          <expr>obj.lock()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unlock">
          <expr>obj.unlock()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="list_folders">
          <expr>obj.list_folders()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_folder">
          <expr>obj.get_folder(folder)</expr>
          <args>['folder:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_folder">
          <expr>obj.add_folder(folder)</expr>
          <args>['folder:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="remove_folder">
          <expr>obj.remove_folder(folder)</expr>
          <args>['folder:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clean">
          <expr>obj.clean()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="next">
          <expr>obj.next()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="mbox" init="obj = mbox(path,factory,create)">
        <api name="__init__">
          <expr>None</expr>
          <args>['path:NoneType', 'factory:NoneType', 'create:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, True]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="MMDF" init="obj = MMDF(path,factory,create)">
        <api name="__init__">
          <expr>None</expr>
          <args>['path:NoneType', 'factory:NoneType', 'create:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, True]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="MH" init="obj = MH(path,factory,create)">
        <api name="__init__">
          <expr>None</expr>
          <args>['path:NoneType', 'factory:NoneType', 'create:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, True]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_bytes">
          <expr>obj.get_bytes(key)</expr>
          <args>['key:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_file">
          <expr>obj.get_file(key)</expr>
          <args>['key:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="lock">
          <expr>obj.lock()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="list_folders">
          <expr>obj.list_folders()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_folder">
          <expr>obj.get_folder(folder)</expr>
          <args>['folder:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_folder">
          <expr>obj.add_folder(folder)</expr>
          <args>['folder:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="remove_folder">
          <expr>obj.remove_folder(folder)</expr>
          <args>['folder:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pack">
          <expr>obj.pack()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Babyl" init="obj = Babyl(path,factory,create)">
        <api name="__init__">
          <expr>None</expr>
          <args>['path:NoneType', 'factory:NoneType', 'create:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, True]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_bytes">
          <expr>obj.get_bytes(key)</expr>
          <args>['key:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_file">
          <expr>obj.get_file(key)</expr>
          <args>['key:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Message" init="obj = Message(message)">
        <api name="__init__">
          <expr>None</expr>
          <args>['message:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="MaildirMessage" init="obj = MaildirMessage(message)">
        <api name="__init__">
          <expr>None</expr>
          <args>['message:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_flags">
          <expr>obj.get_flags()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="remove_flag">
          <expr>obj.remove_flag(flag)</expr>
          <args>['flag:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_date">
          <expr>obj.get_date()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_info">
          <expr>obj.get_info()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="mboxMessage" init=""/>
      <class name="MHMessage" init="obj = MHMessage(message)">
        <api name="__init__">
          <expr>None</expr>
          <args>['message:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="remove_sequence">
          <expr>obj.remove_sequence(sequence)</expr>
          <args>['sequence:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="BabylMessage" init="obj = BabylMessage(message)">
        <api name="__init__">
          <expr>None</expr>
          <args>['message:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="remove_label">
          <expr>obj.remove_label(label)</expr>
          <args>['label:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_visible">
          <expr>obj.get_visible()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="update_visible">
          <expr>obj.update_visible()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="MMDFMessage" init=""/>
      <class name="Error" init=""/>
      <errors>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>UnicodeError</exception>
        <exception>BaseException</exception>
        <exception>AttributeError</exception>
        <exception>PermissionError</exception>
        <exception>OSError</exception>
        <exception>KeyError</exception>
        <exception>FileNotFoundError</exception>
        <exception>KeyError</exception>
        <exception>FileNotFoundError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>StopIteration</exception>
        <exception>KeyError</exception>
        <exception>FileExistsError</exception>
        <exception>KeyError</exception>
        <exception>BaseException</exception>
        <exception>BaseException</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>ValueError</exception>
        <exception>AttributeError</exception>
        <exception>PermissionError</exception>
        <exception>ValueError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>ValueError</exception>
        <exception>OverflowError</exception>
        <exception>ValueError</exception>
        <exception>ValueError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>AttributeError</exception>
        <exception>PermissionError</exception>
        <exception>FileExistsError</exception>
        <exception>mailbox.NoSuchMailboxError</exception>
        <exception>mailbox.NotEmptyError</exception>
        <exception>mailbox.ExternalClashError</exception>
        <exception>mailbox.FormatError</exception>
      </errors>
    </module>
    <module name="netrc" imports="['os', 'shlex', 'stat', 'pwd']" importfrom="[]">
      <class name="NetrcParseError" init="obj = NetrcParseError(msg,filename,lineno)">
        <api name="__init__">
          <expr>None</expr>
          <args>['msg:NoneType', 'filename:NoneType', 'lineno:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="netrc" init="obj = netrc(file)">
        <api name="__init__">
          <expr>None</expr>
          <args>['file:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="authenticators">
          <expr>obj.ret = authenticators(host)</expr>
          <args>['host:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
      </errors>
    </module>
    <module name="argparse" imports="['os', 're', 'sys', 'copy', 'textwrap']" importfrom="['gettext:gettext', 'gettext:ngettext', 'warnings:warn']">
      <class name="HelpFormatter" init="obj = HelpFormatter(prog,indent_increment,max_help_position,width)">
        <api name="__init__">
          <expr>None</expr>
          <args>['prog:None', 'indent_increment:None', 'max_help_position:None', 'width:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[2, 24, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="start_section">
          <expr>obj.start_section(heading)</expr>
          <args>['heading:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_section">
          <expr>obj.end_section()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_text">
          <expr>obj.add_text(text)</expr>
          <args>['text:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_usage">
          <expr>obj.add_usage(usage,actions,groups,prefix)</expr>
          <args>['usage:NoneType', 'actions:list', 'groups:list', 'prefix:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_arguments">
          <expr>obj.add_arguments(actions)</expr>
          <args>['actions:list']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="RawDescriptionHelpFormatter" init=""/>
      <class name="RawTextHelpFormatter" init=""/>
      <class name="ArgumentDefaultsHelpFormatter" init=""/>
      <class name="MetavarTypeHelpFormatter" init=""/>
      <class name="ArgumentError" init="obj = ArgumentError(argument,message)">
        <api name="__init__">
          <expr>None</expr>
          <args>['argument:None', 'message:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ArgumentTypeError" init=""/>
      <class name="Action" init="obj = Action(option_strings,dest,nargs,const,default,type,choices,required,help,metavar)">
        <api name="__init__">
          <expr>None</expr>
          <args>['option_strings:None', 'dest:None', 'nargs:None', 'const:None', 'default:None', 'type:None', 'choices:None', 'required:None', 'help:None', 'metavar:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None, False, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="BooleanOptionalAction" init="obj = BooleanOptionalAction(option_strings,dest,default,type,choices,required,help,metavar)">
        <api name="__init__">
          <expr>None</expr>
          <args>['option_strings:None', 'dest:None', 'default:None', 'type:None', 'choices:None', 'required:None', 'help:None', 'metavar:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, False, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="FileType" init="obj = FileType(mode,bufsize,encoding,errors)">
        <api name="__init__">
          <expr>None</expr>
          <args>['mode:None', 'bufsize:None', 'encoding:None', 'errors:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['r', 'int', None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Namespace" init="obj = Namespace()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ArgumentParser" init="obj = ArgumentParser(prog,usage,description,epilog,parents,formatter_class,prefix_chars,fromfile_prefix_chars,argument_default,conflict_handler,add_help,allow_abbrev,exit_on_error)">
        <api name="__init__">
          <expr>None</expr>
          <args>['prog:None', 'usage:None', 'description:None', 'epilog:None', 'parents:None', 'formatter_class:None', 'prefix_chars:None', 'fromfile_prefix_chars:None', 'argument_default:None', 'conflict_handler:None', 'add_help:None', 'allow_abbrev:None', 'exit_on_error:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None, None, 'HelpFormatter', '-', None, None, 'error', True, True, True]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="add_subparsers">
          <expr>obj.add_subparsers()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parse_args">
          <expr>obj.parse_args(args,namespace)</expr>
          <args>['args:list', 'namespace:TestProgram']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="convert_arg_line_to_args">
          <expr>obj.ret = convert_arg_line_to_args(arg_line)</expr>
          <args>['arg_line:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parse_intermixed_args">
          <expr>obj.ret = parse_intermixed_args(args,namespace)</expr>
          <args>['args:list', 'namespace:NoneType']</args>
          <return>['args:Namespace']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>ValueError</exception>
        <exception>TypeError</exception>
        <exception>AttributeError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>AttributeError</exception>
        <exception>ArgumentError</exception>
        <exception>OSError</exception>
        <exception>ValueError</exception>
        <exception>ArgumentTypeError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module name="datetime" imports="['time', 'math', 'sys', 'warnings']" importfrom="['_datetime:*']">
      <class name="timedelta" init="">
        <api name="total_seconds">
          <expr>obj.ret = total_seconds()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="days">
          <expr>obj.ret = days()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="seconds">
          <expr>obj.ret = seconds()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="microseconds">
          <expr>obj.ret = microseconds()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="date" init="">
        <api name="today">
          <expr>obj.ret = today(cls)</expr>
          <args>['cls:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="fromisoformat">
          <expr>obj.ret = fromisoformat(cls,date_string)</expr>
          <args>['cls:None', 'date_string:None']</args>
          <return>['cls:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="fromisocalendar">
          <expr>obj.ret = fromisocalendar(cls,year,week,day)</expr>
          <args>['cls:None', 'year:None', 'week:None', 'day:None']</args>
          <return>['cls:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ctime">
          <expr>obj.ret = ctime()</expr>
          <args>[]</args>
          <return>['ret:int']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isoformat">
          <expr>obj.ret = isoformat()</expr>
          <args>[]</args>
          <return>['ret:int']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="year">
          <expr>obj.ret = year()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="month">
          <expr>obj.ret = month()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="day">
          <expr>obj.ret = day()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="timetuple">
          <expr>obj.ret = timetuple()</expr>
          <args>[]</args>
          <return>['_build_struct_time:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="weekday">
          <expr>obj.ret = weekday()</expr>
          <args>[]</args>
          <return>['ret:int']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isoweekday">
          <expr>obj.ret = isoweekday()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isocalendar">
          <expr>obj.ret = isocalendar()</expr>
          <args>[]</args>
          <return>['_IsoCalendarDate:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="tzinfo" init="">
        <api name="fromutc">
          <expr>obj.ret = fromutc(dt)</expr>
          <args>['dt:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IsoCalendarDate" init="">
        <api name="year">
          <expr>obj.ret = year()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="week">
          <expr>obj.ret = week()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="weekday">
          <expr>obj.ret = weekday()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="time" init="">
        <api name="hour">
          <expr>obj.ret = hour()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="minute">
          <expr>obj.ret = minute()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="second">
          <expr>obj.ret = second()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="microsecond">
          <expr>obj.ret = microsecond()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tzinfo">
          <expr>obj.ret = tzinfo()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="fold">
          <expr>obj.ret = fold()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isoformat">
          <expr>obj.ret = isoformat(timespec)</expr>
          <args>['timespec:None']</args>
          <return>['s:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['auto']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="fromisoformat">
          <expr>obj.ret = fromisoformat(cls,time_string)</expr>
          <args>['cls:None', 'time_string:None']</args>
          <return>['cls:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="datetime" init="">
        <api name="hour">
          <expr>obj.ret = hour()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="minute">
          <expr>obj.ret = minute()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="second">
          <expr>obj.ret = second()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="microsecond">
          <expr>obj.ret = microsecond()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tzinfo">
          <expr>obj.ret = tzinfo()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="fold">
          <expr>obj.ret = fold()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="now">
          <expr>obj.ret = now(cls,tz)</expr>
          <args>['cls:None', 'tz:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="utcnow">
          <expr>obj.ret = utcnow(cls)</expr>
          <args>['cls:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="fromisoformat">
          <expr>obj.ret = fromisoformat(cls,date_string)</expr>
          <args>['cls:None', 'date_string:None']</args>
          <return>['cls:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="timetuple">
          <expr>obj.ret = timetuple()</expr>
          <args>[]</args>
          <return>['_build_struct_time:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="timestamp">
          <expr>obj.ret = timestamp()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="utctimetuple">
          <expr>obj.ret = utctimetuple()</expr>
          <args>[]</args>
          <return>['_build_struct_time:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="timetz">
          <expr>obj.ret = timetz()</expr>
          <args>[]</args>
          <return>['time:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="astimezone">
          <expr>obj.ret = astimezone(tz)</expr>
          <args>['tz:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ctime">
          <expr>obj.ret = ctime()</expr>
          <args>[]</args>
          <return>['ret:int']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="strptime">
          <expr>obj.ret = strptime(cls,date_string,format)</expr>
          <args>['cls:None', 'date_string:None', 'format:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="timezone" init=""/>
      <errors>
        <exception>KeyError</exception>
        <exception>AttributeError</exception>
        <exception>AttributeError</exception>
        <exception>UnicodeEncodeError</exception>
        <exception>Exception</exception>
        <exception>UnicodeEncodeError</exception>
        <exception>Exception</exception>
        <exception>UnicodeEncodeError</exception>
        <exception>ValueError</exception>
        <exception>ValueError</exception>
        <exception>ImportError</exception>
      </errors>
    </module>
    <module name="io" imports="['abc']" importfrom="['_io:DEFAULT_BUFFER_SIZE', '_io:BlockingIOError', '_io:UnsupportedOperation', '_io:open', '_io:open_code', '_io:FileIO', '_io:BytesIO', '_io:StringIO', '_io:BufferedReader', '_io:BufferedWriter', '_io:BufferedRWPair', '_io:BufferedRandom', '_io:IncrementalNewlineDecoder', '_io:TextIOWrapper']">
      <class name="IOBase" init=""/>
      <class name="RawIOBase" init=""/>
      <class name="BufferedIOBase" init=""/>
      <class name="TextIOBase" init=""/>
      <errors>
        <exception>ImportError</exception>
      </errors>
    </module>
    <module name="types" imports="['sys', 'functools']" importfrom="[]">
      <class name="DynamicClassAttribute" init="obj = DynamicClassAttribute(fget,fset,fdel,doc)">
        <api name="__init__">
          <expr>None</expr>
          <args>['fget:None', 'fset:None', 'fdel:None', 'doc:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getter">
          <expr>obj.getter(fget)</expr>
          <args>['fget:function']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setter">
          <expr>obj.setter(fset)</expr>
          <args>['fset:function']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="deleter">
          <expr>obj.deleter(fdel)</expr>
          <args>['fdel:function']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="new_class">
        <expr>new_class(name,bases,kwds,exec_body)</expr>
        <args>['name:str', 'bases:tuple', 'kwds:NoneType', 'exec_body:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="resolve_bases">
        <expr>resolve_bases(bases)</expr>
        <args>['bases:tuple']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="prepare_class">
        <expr>prepare_class(name,bases,kwds)</expr>
        <args>['name:str', 'bases:tuple', 'kwds:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="coroutine">
        <expr>coroutine(func)</expr>
        <args>['func:function']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>TypeError</exception>
      </errors>
    </module>
    <module name="fnmatch" imports="['os', 'posixpath', 're', 'functools']" importfrom="['itertools:count']">
      <api name="fnmatch">
        <expr>fnmatch(name,pat)</expr>
        <args>['name:str', 'pat:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="filter">
        <expr>filter(names,pat)</expr>
        <args>['names:generator', 'pat:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="fnmatchcase">
        <expr>fnmatchcase(name,pat)</expr>
        <args>['name:str', 'pat:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="translate">
        <expr>translate(pat)</expr>
        <args>['pat:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="timeit" imports="['gc', 'sys', 'time', 'itertools', 'linecache', 'traceback', 'getopt', 'os', 'warnings']" importfrom="[]">
      <class name="Timer" init="obj = Timer(stmt,setup,timer,globals)">
        <api name="__init__">
          <expr>None</expr>
          <args>['stmt:NoneType', 'setup:NoneType', 'timer:NoneType', 'globals:builtin_function_or_method']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['pass', 'pass', 'default_timer', None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="autorange">
          <expr>obj.autorange(callback)</expr>
          <args>['callback:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="reindent">
        <expr>reindent(src,indent)</expr>
        <args>['src:str', 'indent:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="timeit">
        <expr>timeit(stmt,setup,timer,number,globals)</expr>
        <args>['stmt:str', 'setup:str', 'timer:FakeTimer', 'number:int', 'globals:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['pass', 'pass', 'default_timer', 'default_number', None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="repeat">
        <expr>repeat(stmt,setup,timer,repeat,number,globals)</expr>
        <args>['stmt:str', 'setup:str', 'timer:FakeTimer', 'repeat:int', 'number:int', 'globals:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['pass', 'pass', 'default_timer', 'default_repeat', 'default_number', None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>main(args)</expr>
        <args>['args:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['_wrap_timer:method']</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <errors>
        <exception>getopt.error</exception>
      </errors>
    </module>
    <module name="binhex" imports="['binascii', 'contextlib', 'io', 'os', 'struct', 'warnings']" importfrom="[]">
      <class name="Error" init=""/>
      <class name="FInfo" init="obj = FInfo()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="openrsrc" init=""/>
      <class name="BinHex" init="obj = BinHex(name_finfo_dlen_rlen,ofp)">
        <api name="__init__">
          <expr>None</expr>
          <args>['name_finfo_dlen_rlen:NoneType', 'ofp:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="write_rsrc">
          <expr>obj.write_rsrc(data)</expr>
          <args>['data:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="HexBin" init="obj = HexBin(ifp)">
        <api name="__init__">
          <expr>None</expr>
          <args>['ifp:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="getfileinfo">
        <expr>getfileinfo(name)</expr>
        <args>['name:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="binhex">
        <expr>binhex(inp,out)</expr>
        <args>['inp:str', 'out:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="hexbin">
        <expr>hexbin(inp,out)</expr>
        <args>['inp:str', 'out:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>binascii.Incomplete</exception>
      </errors>
    </module>
    <module name="bisect" imports="[]" importfrom="['_bisect:*']">
      <api name="insort_right">
        <expr>insort_right(a,x,lo,hi)</expr>
        <args>['a:list', 'x:int', 'lo:int', 'hi:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="bisect_right">
        <expr>bisect_right(a,x,lo,hi)</expr>
        <args>['a:list', 'x:int', 'lo:int', 'hi:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="insort_left">
        <expr>insort_left(a,x,lo,hi)</expr>
        <args>['a:list', 'x:int', 'lo:int', 'hi:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="bisect_left">
        <expr>bisect_left(a,x,lo,hi)</expr>
        <args>['a:list', 'x:int', 'lo:int', 'hi:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ImportError</exception>
      </errors>
    </module>
    <module name="typing" imports="['collections', 'collections.abc', 'contextlib', 'functools', 'operator', 're', 'sys', 'types']" importfrom="['abc:abstractmethod', 'abc:ABCMeta', 'types:WrapperDescriptorType', 'types:MethodWrapperType', 'types:MethodDescriptorType', 'types:GenericAlias']">
      <class name="ForwardRef" init="obj = ForwardRef(arg,is_argument,module)">
        <api name="__init__">
          <expr>None</expr>
          <args>['arg:None', 'is_argument:None', 'module:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['is_class:None']</kwoargs>
          <defa>[True, None]</defa>
          <kwodefa>[False]</kwodefa>
        </api>
      </class>
      <class name="TypeVar" init="obj = TypeVar(name)">
        <api name="__init__">
          <expr>None</expr>
          <args>['name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['bound:None', 'covariant:None', 'contravariant:None']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None, False, False]</kwodefa>
        </api>
      </class>
      <class name="Generic" init=""/>
      <class name="Protocol" init=""/>
      <class name="Annotated" init=""/>
      <class name="SupportsInt" init=""/>
      <class name="SupportsFloat" init=""/>
      <class name="SupportsComplex" init=""/>
      <class name="SupportsBytes" init=""/>
      <class name="SupportsIndex" init=""/>
      <class name="SupportsAbs" init=""/>
      <class name="SupportsRound" init=""/>
      <class name="NamedTupleMeta" init=""/>
      <class name="IO" init=""/>
      <class name="BinaryIO" init=""/>
      <class name="TextIO" init=""/>
      <class name="io" init=""/>
      <class name="re" init=""/>
      <api name="Any">
        <expr>Any(parameters)</expr>
        <args>['parameters:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="NoReturn">
        <expr>NoReturn(parameters)</expr>
        <args>['parameters:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ClassVar">
        <expr>ret = ClassVar(parameters)</expr>
        <args>['parameters:None']</args>
        <return>['_GenericAlias:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="Final">
        <expr>ret = Final(parameters)</expr>
        <args>['parameters:None']</args>
        <return>['_GenericAlias:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="Union">
        <expr>ret = Union(parameters)</expr>
        <args>['parameters:None']</args>
        <return>['ret:None', '_UnionGenericAlias:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="Optional">
        <expr>ret = Optional(parameters)</expr>
        <args>['parameters:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="Literal">
        <expr>ret = Literal()</expr>
        <args>[]</args>
        <return>['_LiteralGenericAlias:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="runtime_checkable">
        <expr>runtime_checkable(cls)</expr>
        <args>['cls:_ProtocolMeta']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="cast">
        <expr>cast(typ,val)</expr>
        <args>['typ:ABCMeta', 'val:SourceFileLoader']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_type_hints">
        <expr>get_type_hints(obj,globalns,localns,include_extras)</expr>
        <args>['obj:type', 'globalns:NoneType', 'localns:NoneType', 'include_extras:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, False]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_origin">
        <expr>ret = get_origin(tp)</expr>
        <args>['tp:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_args">
        <expr>ret = get_args(tp)</expr>
        <args>['tp:None']</args>
        <return>['ret:None', 'res:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="no_type_check">
        <expr>no_type_check(arg)</expr>
        <args>['arg:type']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="no_type_check_decorator">
        <expr>ret = no_type_check_decorator(decorator)</expr>
        <args>['decorator:None']</args>
        <return>['wrapped_decorator:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="overload">
        <expr>ret = overload(func)</expr>
        <args>['func:None']</args>
        <return>['_overload_dummy:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="final">
        <expr>ret = final(f)</expr>
        <args>['f:function']</args>
        <return>['f:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="NamedTuple">
        <expr>ret = NamedTuple()</expr>
        <args>[]</args>
        <return>['_make_nmtuple:None']</return>
        <dependences>None</dependences>
        <posargs>['typename:None', 'fields:None']</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="TypedDict">
        <expr>TypedDict()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>['typename:str', 'fields:list']</posargs>
        <kwoargs>['total:bool']</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[True]</kwodefa>
      </api>
      <api name="NewType">
        <expr>ret = NewType(name,tp)</expr>
        <args>['name:None', 'tp:None']</args>
        <return>['new_type:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>TypeError</exception>
        <exception>AttributeError</exception>
        <exception>AttributeError</exception>
        <exception>ValueError</exception>
        <exception>AttributeError</exception>
        <exception>TypeError</exception>
        <exception>AttributeError</exception>
        <exception>ValueError</exception>
        <exception>AttributeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module name="ntpath" imports="['os', 'sys', 'stat', 'genericpath', 'string']" importfrom="['genericpath:*', 'nt:readlink']">
      <api name="normcase">
        <expr>normcase(s)</expr>
        <args>['s:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isabs">
        <expr>isabs(s)</expr>
        <args>['s:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="join">
        <expr>join(path)</expr>
        <args>['path:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="splitdrive">
        <expr>splitdrive(p)</expr>
        <args>['p:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="split">
        <expr>split(p)</expr>
        <args>['p:FakePath']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="splitext">
        <expr>splitext(p)</expr>
        <args>['p:FakePath']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="basename">
        <expr>basename(p)</expr>
        <args>['p:FakePath']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dirname">
        <expr>dirname(p)</expr>
        <args>['p:FakePath']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="islink">
        <expr>islink(path)</expr>
        <args>['path:FakePath']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="lexists">
        <expr>lexists(path)</expr>
        <args>['path:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ismount">
        <expr>ismount(path)</expr>
        <args>['path:FakePath']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="expanduser">
        <expr>expanduser(path)</expr>
        <args>['path:FakePath']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="expandvars">
        <expr>expandvars(path)</expr>
        <args>['path:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="normpath">
        <expr>normpath(path)</expr>
        <args>['path:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="abspath">
        <expr>ret = abspath(path)</expr>
        <args>['path:None']</args>
        <return>['normpath:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="realpath">
        <expr>ret = realpath(path)</expr>
        <args>['path:None']</args>
        <return>[&quot;b'\\\\\\\\.\\\\NUL':None&quot;, '\\\\.\\NUL:None', 'path:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="relpath">
        <expr>relpath(path,start)</expr>
        <args>['path:bytes', 'start:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="commonpath">
        <expr>commonpath(paths)</expr>
        <args>['paths:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>TypeError</exception>
        <exception>AttributeError</exception>
        <exception>BytesWarning</exception>
        <exception>OSError</exception>
        <exception>ValueError</exception>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>ValueError</exception>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
        <exception>ValueError</exception>
        <exception>KeyError</exception>
        <exception>ValueError</exception>
        <exception>KeyError</exception>
        <exception>ValueError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>ValueError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>ValueError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>ImportError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>AttributeError</exception>
        <exception>BytesWarning</exception>
        <exception>DeprecationWarning</exception>
        <exception>ValueError</exception>
        <exception>TypeError</exception>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
      </errors>
    </module>
    <module name="dataclasses" imports="['re', 'sys', 'copy', 'types', 'inspect', 'keyword', 'builtins', 'functools']" importfrom="['types:GenericAlias']">
      <class name="InitVar" init="obj = InitVar(type)">
        <api name="__init__">
          <expr>None</expr>
          <args>['type:type']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Field" init="obj = Field(default,default_factory,init,repr,hash,compare,metadata)">
        <api name="__init__">
          <expr>None</expr>
          <args>['default:NoneType', 'default_factory:NoneType', 'init:NoneType', 'repr:builtin_function_or_method', 'hash:builtin_function_or_method', 'compare:NoneType', 'metadata:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="field">
        <expr>field()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['default:_MISSING_TYPE', 'default_factory:_MISSING_TYPE', 'init:bool', 'repr:bool', 'hash:NoneType', 'compare:bool', 'metadata:NoneType']</kwoargs>
        <defa>[]</defa>
        <kwodefa>['MISSING', 'MISSING', True, True, None, True, None]</kwodefa>
      </api>
      <api name="dataclass">
        <expr>dataclass()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>['cls:NoneType']</posargs>
        <kwoargs>['init:bool', 'repr:bool', 'eq:bool', 'order:bool', 'unsafe_hash:bool', 'frozen:bool']</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[True, True, True, False, False, False]</kwodefa>
      </api>
      <api name="fields">
        <expr>fields(class_or_instance)</expr>
        <args>['class_or_instance:type']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="is_dataclass">
        <expr>is_dataclass(obj)</expr>
        <args>['obj:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="asdict">
        <expr>asdict(obj)</expr>
        <args>['obj:C']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['dict_factory:type']</kwoargs>
        <defa>[]</defa>
        <kwodefa>['dict']</kwodefa>
      </api>
      <api name="astuple">
        <expr>astuple(obj)</expr>
        <args>['obj:C']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['tuple_factory:type']</kwoargs>
        <defa>[]</defa>
        <kwodefa>['tuple']</kwodefa>
      </api>
      <api name="make_dataclass">
        <expr>make_dataclass(cls_name,fields)</expr>
        <args>['cls_name:str', 'fields:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['bases:tuple', 'namespace:NoneType', 'init:bool', 'repr:bool', 'eq:bool', 'order:bool', 'unsafe_hash:bool', 'frozen:bool']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None, None, True, True, True, False, False, False]</kwodefa>
      </api>
      <api name="replace">
        <expr>replace()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>['obj:A']</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>dataclasses.FrozenInstanceError</exception>
        <exception>AttributeError</exception>
      </errors>
    </module>
    <module name="rlcompleter" imports="['atexit', 'builtins', 'keyword', 're', 'readline']" importfrom="[]">
      <class name="Completer" init="obj = Completer(namespace)">
        <api name="__init__">
          <expr>None</expr>
          <args>['namespace:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="complete">
          <expr>obj.complete(text,state)</expr>
          <args>['text:str', 'state:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="get_class_members">
        <expr>get_class_members(klass)</expr>
        <args>['klass:type']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>IndexError</exception>
        <exception>Exception</exception>
        <exception>ImportError</exception>
      </errors>
    </module>
    <module name="weakref" imports="['sys', 'itertools', 'gc']" importfrom="['_weakref:getweakrefcount', '_weakref:getweakrefs', '_weakref:ref', '_weakref:proxy', '_weakref:CallableProxyType', '_weakref:ProxyType', '_weakref:ReferenceType', '_weakrefset:WeakSet', 'copy:deepcopy']">
      <class name="WeakMethod" init=""/>
      <class name="WeakValueDictionary" init="obj = WeakValueDictionary()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>['self:None', 'other:None']</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get">
          <expr>obj.get(key,default)</expr>
          <args>['key:str', 'default:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="items">
          <expr>obj.items()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="keys">
          <expr>obj.keys()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="itervaluerefs">
          <expr>obj.itervaluerefs()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setdefault">
          <expr>obj.setdefault(key,default)</expr>
          <args>['key:int', 'default:RefCycle']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="valuerefs">
          <expr>obj.valuerefs()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="KeyedRef" init="obj = KeyedRef(ob,callback,key)">
        <api name="__init__">
          <expr>None</expr>
          <args>['ob:None', 'callback:None', 'key:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="WeakKeyDictionary" init="obj = WeakKeyDictionary(dict)">
        <api name="__init__">
          <expr>None</expr>
          <args>['dict:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="items">
          <expr>obj.items()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="keys">
          <expr>obj.keys()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="keyrefs">
          <expr>obj.keyrefs()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="finalize" init="obj = finalize()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>['self:None', 'obj:None', 'func:None']</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="detach">
          <expr>obj.detach()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="peek">
          <expr>obj.peek()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="alive">
          <expr>obj.alive()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="atexit">
          <expr>obj.atexit(value)</expr>
          <args>['value:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>IndexError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>IndexError</exception>
        <exception>KeyError</exception>
        <exception>TypeError</exception>
        <exception>Exception</exception>
      </errors>
    </module>
    <module name="os" imports="['abc', 'sys', 'stat', 'posixpath', 'posix', 'ntpath', 'nt', 'warnings', 'subprocess', 'io']" importfrom="['posix:*', 'nt:*', 'os.path:curdir', 'os.path:pardir', 'os.path:sep', 'os.path:pathsep', 'os.path:defpath', 'os.path:extsep', 'os.path:altsep', 'os.path:devnull', '_collections_abc:MutableMapping', '_collections_abc:Mapping']">
      <class name="PathLike" init=""/>
      <api name="makedirs">
        <expr>makedirs(name,mode,exist_ok)</expr>
        <args>['name:str', 'mode:int', 'exist_ok:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[511, False]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="removedirs">
        <expr>removedirs(name)</expr>
        <args>['name:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="renames">
        <expr>renames(old,new)</expr>
        <args>['old:None', 'new:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="walk">
        <expr>walk(top,topdown,onerror,followlinks)</expr>
        <args>['top:str', 'topdown:bool', 'onerror:NoneType', 'followlinks:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[True, None, False]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="fwalk">
        <expr>fwalk(top,topdown,onerror)</expr>
        <args>['top:bytes', 'topdown:bool', 'onerror:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['follow_symlinks:bool', 'dir_fd:NoneType']</kwoargs>
        <defa>['.', True, None]</defa>
        <kwodefa>[False, None]</kwodefa>
      </api>
      <api name="execl">
        <expr>execl(file)</expr>
        <args>['file:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="execle">
        <expr>execle(file)</expr>
        <args>['file:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="execlp">
        <expr>execlp(file)</expr>
        <args>['file:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="execlpe">
        <expr>execlpe(file)</expr>
        <args>['file:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="execvp">
        <expr>execvp(file,args)</expr>
        <args>['file:None', 'args:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="execvpe">
        <expr>execvpe(file,args,env)</expr>
        <args>['file:str', 'args:list', 'env:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_exec_path">
        <expr>get_exec_path(env)</expr>
        <args>['env:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getenv">
        <expr>getenv(key,default)</expr>
        <args>['key:str', 'default:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getenvb">
        <expr>ret = getenvb(key,default)</expr>
        <args>['key:None', 'default:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="spawnv">
        <expr>spawnv(mode,file,args)</expr>
        <args>['mode:int', 'file:str', 'args:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="spawnve">
        <expr>spawnve(mode,file,args,env)</expr>
        <args>['mode:int', 'file:str', 'args:tuple', 'env:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="spawnvp">
        <expr>spawnvp(mode,file,args)</expr>
        <args>['mode:int', 'file:str', 'args:tuple']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="spawnvpe">
        <expr>spawnvpe(mode,file,args,env)</expr>
        <args>['mode:int', 'file:str', 'args:tuple', 'env:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="spawnl">
        <expr>spawnl(mode,file)</expr>
        <args>['mode:int', 'file:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="spawnle">
        <expr>spawnle(mode,file)</expr>
        <args>['mode:int', 'file:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="spawnlp">
        <expr>ret = spawnlp(mode,file)</expr>
        <args>['mode:int', 'file:str']</args>
        <return>['spawnvp:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="spawnlpe">
        <expr>ret = spawnlpe(mode,file)</expr>
        <args>['mode:int', 'file:str']</args>
        <return>['spawnvpe:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="popen">
        <expr>popen(cmd,mode,buffering)</expr>
        <args>['cmd:str', 'mode:str', 'buffering:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['r', 'int']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="fdopen">
        <expr>fdopen(fd)</expr>
        <args>['fd:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="add_dll_directory">
        <expr>ret = add_dll_directory(path)</expr>
        <args>['path:None']</args>
        <return>['_AddedDllDirectory:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>ImportError</exception>
        <exception>ImportError</exception>
        <exception>ImportError</exception>
        <exception>FileExistsError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>StopIteration</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>FileNotFoundError</exception>
        <exception>NotADirectoryError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>KeyError</exception>
        <exception>TypeError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>AttributeError</exception>
      </errors>
    </module>
    <module name="fractions" imports="['math', 'numbers', 'operator', 're', 'sys']" importfrom="['decimal:Decimal']">
      <class name="Fraction" init="">
        <api name="from_decimal">
          <expr>obj.ret = from_decimal(cls,dec)</expr>
          <args>['cls:None', 'dec:None']</args>
          <return>['cls:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="limit_denominator">
          <expr>obj.limit_denominator(max_denominator)</expr>
          <args>['max_denominator:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[1000000]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="numerator">
          <expr>obj.ret = numerator(a)</expr>
          <args>['a:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="denominator">
          <expr>obj.ret = denominator(a)</expr>
          <args>['a:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module name="tarfile" imports="['sys', 'os', 'io', 'shutil', 'stat', 'time', 'struct', 'copy', 're', 'pwd', 'grp', 'argparse']" importfrom="['builtins:open', 'gzip:GzipFile', 'bz2:BZ2File', 'lzma:LZMAFile', 'lzma:LZMAError']">
      <class name="TarError" init=""/>
      <class name="ExFileObject" init="obj = ExFileObject(tarfile,tarinfo)">
        <api name="__init__">
          <expr>None</expr>
          <args>['tarfile:NoneType', 'tarinfo:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="TarInfo" init="obj = TarInfo(name)">
        <api name="__init__">
          <expr>None</expr>
          <args>['name:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="path">
          <expr>obj.path(name)</expr>
          <args>['name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="linkpath">
          <expr>obj.linkpath(linkname)</expr>
          <args>['linkname:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tobuf">
          <expr>obj.tobuf(format,encoding,errors)</expr>
          <args>['format:int', 'encoding:str', 'errors:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['DEFAULT_FORMAT', 'ENCODING', 'surrogateescape']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="create_pax_global_header">
          <expr>obj.ret = create_pax_global_header(cls,pax_headers)</expr>
          <args>['cls:None', 'pax_headers:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isfile">
          <expr>obj.ret = isfile()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isdir">
          <expr>obj.isdir()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="issym">
          <expr>obj.issym()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="islnk">
          <expr>obj.islnk()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ischr">
          <expr>obj.ischr()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isblk">
          <expr>obj.isblk()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isfifo">
          <expr>obj.isfifo()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="issparse">
          <expr>obj.ret = issparse()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isdev">
          <expr>obj.ret = isdev()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="TarFile" init="obj = TarFile(name,mode,fileobj,format,tarinfo,dereference,ignore_zeros,encoding,errors,pax_headers,debug,errorlevel,copybufsize)">
        <api name="__init__">
          <expr>None</expr>
          <args>['name:NoneType', 'mode:NoneType', 'fileobj:NoneType', 'format:builtin_function_or_method', 'tarinfo:NoneType', 'dereference:NoneType', 'ignore_zeros:NoneType', 'encoding:NoneType', 'errors:NoneType', 'pax_headers:NoneType', 'debug:NoneType', 'errorlevel:NoneType', 'copybufsize:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, 'r', None, None, None, None, None, None, 'surrogateescape', None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="open">
          <expr>obj.ret = open(cls,name,mode,fileobj,bufsize)</expr>
          <args>['cls:None', 'name:None', 'mode:None', 'fileobj:None', 'bufsize:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, 'r', None, 'RECORDSIZE']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="gzopen">
          <expr>obj.ret = gzopen(cls,name,mode,fileobj,compresslevel)</expr>
          <args>['cls:None', 'name:None', 'mode:None', 'fileobj:None', 'compresslevel:None']</args>
          <return>['t:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['r', None, 9]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="bz2open">
          <expr>obj.ret = bz2open(cls,name,mode,fileobj,compresslevel)</expr>
          <args>['cls:None', 'name:None', 'mode:None', 'fileobj:None', 'compresslevel:None']</args>
          <return>['t:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['r', None, 9]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="xzopen">
          <expr>obj.ret = xzopen(cls,name,mode,fileobj,preset)</expr>
          <args>['cls:None', 'name:None', 'mode:None', 'fileobj:None', 'preset:None']</args>
          <return>['t:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['r', None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getnames">
          <expr>obj.getnames()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="extractall">
          <expr>obj.extractall(path,members)</expr>
          <args>['path:str', 'members:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['numeric_owner:bool']</kwoargs>
          <defa>['.', None]</defa>
          <kwodefa>[False]</kwodefa>
        </api>
      </class>
      <api name="stn">
        <expr>stn(s,length,encoding,errors)</expr>
        <args>['s:str', 'length:int', 'encoding:str', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="nts">
        <expr>nts(s,encoding,errors)</expr>
        <args>['s:bytes', 'encoding:str', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="nti">
        <expr>nti(s)</expr>
        <args>['s:bytes']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="itn">
        <expr>itn(n,digits,format)</expr>
        <args>['n:int', 'digits:int', 'format:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[8, 'DEFAULT_FORMAT']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="calc_chksums">
        <expr>calc_chksums(buf)</expr>
        <args>['buf:bytes']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="copyfileobj">
        <expr>copyfileobj(src,dst,length,exception,bufsize)</expr>
        <args>['src:BufferedReader', 'dst:_Stream', 'length:int', 'exception:type', 'bufsize:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, 'OSError', None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="is_tarfile">
        <expr>is_tarfile(name)</expr>
        <args>['name:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>main()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ImportError</exception>
        <exception>ImportError</exception>
        <exception>NameError</exception>
        <exception>ValueError</exception>
        <exception>tarfile.ExtractError</exception>
        <exception>tarfile.ReadError</exception>
        <exception>tarfile.CompressionError</exception>
        <exception>tarfile.StreamError</exception>
        <exception>tarfile.HeaderError</exception>
        <exception>tarfile.EmptyHeaderError</exception>
        <exception>tarfile.TruncatedHeaderError</exception>
        <exception>tarfile.EOFHeaderError</exception>
        <exception>tarfile.InvalidHeaderError</exception>
        <exception>tarfile.SubsequentHeaderError</exception>
        <exception>self.exception</exception>
        <exception>UnicodeEncodeError</exception>
        <exception>UnicodeEncodeError</exception>
        <exception>ValueError</exception>
        <exception>HeaderError</exception>
        <exception>ValueError</exception>
        <exception>HeaderError</exception>
        <exception>ValueError</exception>
        <exception>UnicodeDecodeError</exception>
        <exception>ReadError</exception>
        <exception>CompressionError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>EOFError</exception>
        <exception>ImportError</exception>
        <exception>LZMAError</exception>
        <exception>EOFError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>ExtractError</exception>
        <exception>OSError</exception>
        <exception>ExtractError</exception>
        <exception>FileExistsError</exception>
        <exception>symlink_exception</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>EOFHeaderError</exception>
        <exception>InvalidHeaderError</exception>
        <exception>EmptyHeaderError</exception>
        <exception>TruncatedHeaderError</exception>
        <exception>SubsequentHeaderError</exception>
        <exception>Exception</exception>
        <exception>TarError</exception>
      </errors>
    </module>
    <module name="stringprep" imports="[]" importfrom="['unicodedata:ucd_3_2_0']">
      <api name="in_table_a1">
        <expr>in_table_a1(code)</expr>
        <args>['code:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="in_table_b1">
        <expr>in_table_b1(code)</expr>
        <args>['code:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="map_table_b3">
        <expr>map_table_b3(code)</expr>
        <args>['code:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="map_table_b2">
        <expr>map_table_b2(a)</expr>
        <args>['a:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="in_table_c11">
        <expr>in_table_c11(code)</expr>
        <args>['code:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="in_table_c12">
        <expr>in_table_c12(code)</expr>
        <args>['code:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="in_table_c11_c12">
        <expr>in_table_c11_c12(code)</expr>
        <args>['code:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="in_table_c21">
        <expr>in_table_c21(code)</expr>
        <args>['code:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="in_table_c22">
        <expr>in_table_c22(code)</expr>
        <args>['code:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="in_table_c21_c22">
        <expr>in_table_c21_c22(code)</expr>
        <args>['code:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="in_table_c3">
        <expr>in_table_c3(code)</expr>
        <args>['code:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="in_table_c4">
        <expr>in_table_c4(code)</expr>
        <args>['code:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="in_table_c5">
        <expr>in_table_c5(code)</expr>
        <args>['code:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="in_table_c6">
        <expr>in_table_c6(code)</expr>
        <args>['code:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="in_table_c7">
        <expr>in_table_c7(code)</expr>
        <args>['code:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="in_table_c8">
        <expr>in_table_c8(code)</expr>
        <args>['code:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="in_table_c9">
        <expr>in_table_c9(code)</expr>
        <args>['code:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="in_table_d1">
        <expr>in_table_d1(code)</expr>
        <args>['code:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="in_table_d2">
        <expr>in_table_d2(code)</expr>
        <args>['code:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="dis" imports="['sys', 'types', 'collections', 'io', 'argparse']" importfrom="['opcode:*']">
      <class name="Instruction" init=""/>
      <class name="Bytecode" init="obj = Bytecode(x)">
        <api name="__init__">
          <expr>None</expr>
          <args>['x:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['first_line:None', 'current_offset:None']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None, None]</kwodefa>
        </api>
        <api name="from_traceback">
          <expr>obj.ret = from_traceback(cls,tb)</expr>
          <args>['cls:None', 'tb:None']</args>
          <return>['cls:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="info">
          <expr>obj.info()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="dis">
        <expr>dis(x)</expr>
        <args>['x:function']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['file:NoneType', 'depth:int']</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[None, None]</kwodefa>
      </api>
      <api name="distb">
        <expr>distb(tb)</expr>
        <args>['tb:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['file:NoneType']</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <api name="pretty_flags">
        <expr>pretty_flags(flags)</expr>
        <args>['flags:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="code_info">
        <expr>code_info(x)</expr>
        <args>['x:function']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="show_code">
        <expr>show_code(co)</expr>
        <args>['co:function']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['file:NoneType']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <api name="get_instructions">
        <expr>get_instructions(x)</expr>
        <args>['x:function']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['first_line:NoneType']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <api name="disassemble">
        <expr>disassemble(co,lasti)</expr>
        <args>['co:code', 'lasti:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['file:NoneType']</kwoargs>
        <defa>['int']</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <api name="findlabels">
        <expr>findlabels(code)</expr>
        <args>['code:bytes']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="findlinestarts">
        <expr>findlinestarts(code)</expr>
        <args>['code:code']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>SyntaxError</exception>
        <exception>TypeError</exception>
        <exception>AttributeError</exception>
      </errors>
    </module>
    <module name="posixpath" imports="['os', 'sys', 'stat', 'genericpath', 'pwd', 're']" importfrom="['genericpath:*']">
      <api name="normcase">
        <expr>normcase(s)</expr>
        <args>['s:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isabs">
        <expr>isabs(s)</expr>
        <args>['s:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="join">
        <expr>join(a)</expr>
        <args>['a:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="split">
        <expr>split(p)</expr>
        <args>['p:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="splitext">
        <expr>splitext(p)</expr>
        <args>['p:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="splitdrive">
        <expr>splitdrive(p)</expr>
        <args>['p:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="basename">
        <expr>basename(p)</expr>
        <args>['p:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dirname">
        <expr>dirname(p)</expr>
        <args>['p:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="islink">
        <expr>islink(path)</expr>
        <args>['path:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="lexists">
        <expr>lexists(path)</expr>
        <args>['path:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ismount">
        <expr>ret = ismount(path)</expr>
        <args>['path:None']</args>
        <return>['ret:bool']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="expanduser">
        <expr>expanduser(path)</expr>
        <args>['path:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="expandvars">
        <expr>ret = expandvars(path)</expr>
        <args>['path:None']</args>
        <return>['path:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="normpath">
        <expr>normpath(path)</expr>
        <args>['path:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="abspath">
        <expr>abspath(path)</expr>
        <args>['path:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="realpath">
        <expr>realpath(filename)</expr>
        <args>['filename:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="relpath">
        <expr>relpath(path,start)</expr>
        <args>['path:str', 'start:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="commonpath">
        <expr>ret = commonpath(paths)</expr>
        <args>['paths:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>TypeError</exception>
        <exception>AttributeError</exception>
        <exception>BytesWarning</exception>
        <exception>OSError</exception>
        <exception>ValueError</exception>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>ValueError</exception>
        <exception>OSError</exception>
        <exception>ValueError</exception>
        <exception>OSError</exception>
        <exception>ValueError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>TypeError</exception>
        <exception>AttributeError</exception>
        <exception>BytesWarning</exception>
        <exception>DeprecationWarning</exception>
        <exception>ValueError</exception>
        <exception>TypeError</exception>
        <exception>AttributeError</exception>
      </errors>
    </module>
    <module name="pipes" imports="['re', 'os', 'tempfile']" importfrom="['shlex:quote']">
      <class name="Template" init="obj = Template()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="reset">
          <expr>obj.reset()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clone">
          <expr>obj.ret = clone()</expr>
          <args>[]</args>
          <return>['t:Template']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="debug">
          <expr>obj.debug(flag)</expr>
          <args>['flag:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="prepend">
          <expr>obj.prepend(cmd,kind)</expr>
          <args>['cmd:int', 'kind:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="copy">
          <expr>obj.copy(infile,outfile)</expr>
          <args>['infile:str', 'outfile:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="makepipeline">
        <expr>makepipeline(infile,steps,outfile)</expr>
        <args>['infile:str', 'steps:list', 'outfile:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="sysconfig" imports="['os', 'sys', 're', 'pprint', 'types', 'warnings']" importfrom="['os.path:pardir', 'os.path:realpath', '_aix_support:aix_platform']">
      <api name="is_python_build">
        <expr>is_python_build(check_home)</expr>
        <args>['check_home:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[False]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_makefile_filename">
        <expr>get_makefile_filename()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parse_config_h">
        <expr>ret = parse_config_h(fp,vars)</expr>
        <args>['fp:None', 'vars:None']</args>
        <return>['vars:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_config_h_filename">
        <expr>ret = get_config_h_filename()</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_scheme_names">
        <expr>ret = get_scheme_names()</expr>
        <args>[]</args>
        <return>['tuple:type']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_path_names">
        <expr>ret = get_path_names()</expr>
        <args>[]</args>
        <return>['_SCHEME_KEYS:tuple']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_paths">
        <expr>get_paths(scheme,vars,expand)</expr>
        <args>['scheme:str', 'vars:NoneType', 'expand:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['_get_default_scheme', None, True]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_path">
        <expr>get_path(name,scheme,vars,expand)</expr>
        <args>['name:str', 'scheme:str', 'vars:NoneType', 'expand:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['_get_default_scheme', None, True]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_config_vars">
        <expr>get_config_vars()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_config_var">
        <expr>get_config_var(name)</expr>
        <args>['name:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_platform">
        <expr>get_platform()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_python_version">
        <expr>ret = get_python_version()</expr>
        <args>[]</args>
        <return>['_PY_VERSION_SHORT:str']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>OSError</exception>
        <exception>KeyError</exception>
        <exception>ValueError</exception>
        <exception>ValueError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>ValueError</exception>
        <exception>AttributeError</exception>
      </errors>
    </module>
    <module name="asyncore" imports="['select', 'socket', 'sys', 'time', 'warnings', 'os']" importfrom="['errno:EALREADY', 'errno:EINPROGRESS', 'errno:EWOULDBLOCK', 'errno:ECONNRESET', 'errno:EINVAL', 'errno:ENOTCONN', 'errno:ESHUTDOWN', 'errno:EISCONN', 'errno:EBADF', 'errno:ECONNABORTED', 'errno:EPIPE', 'errno:EAGAIN', 'errno:errorcode']">
      <class name="ExitNow" init=""/>
      <class name="dispatcher" init="obj = dispatcher(sock,map)">
        <api name="__init__">
          <expr>None</expr>
          <args>['sock:NoneType', 'map:type']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="create_socket">
          <expr>obj.create_socket(family,type)</expr>
          <args>['family:AddressFamily', 'type:SocketKind']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_reuse_addr">
          <expr>obj.set_reuse_addr()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="connect">
          <expr>obj.connect(address)</expr>
          <args>['address:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="log">
          <expr>obj.log(message)</expr>
          <args>['message:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="handle_error">
          <expr>obj.handle_error()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="dispatcher_with_send" init="obj = dispatcher_with_send(sock,map)">
        <api name="__init__">
          <expr>None</expr>
          <args>['sock:NoneType', 'map:type']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="file_wrapper" init="obj = file_wrapper(fd)">
        <api name="__init__">
          <expr>None</expr>
          <args>['fd:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="file_dispatcher" init="obj = file_dispatcher(fd,map)">
        <api name="__init__">
          <expr>None</expr>
          <args>['fd:NoneType', 'map:type']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_file">
          <expr>obj.set_file(fd)</expr>
          <args>['fd:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="read">
        <expr>read(obj)</expr>
        <args>['obj:SendfileTestServer']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="write">
        <expr>write(obj)</expr>
        <args>['obj:SMTPChannel']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="readwrite">
        <expr>readwrite(obj,flags)</expr>
        <args>['obj:echo_client', 'flags:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="poll">
        <expr>poll(timeout,map)</expr>
        <args>['timeout:float', 'map:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0.0, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="poll2">
        <expr>poll2(timeout,map)</expr>
        <args>['timeout:float', 'map:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0.0, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="loop">
        <expr>loop(timeout,use_poll,map,count)</expr>
        <args>['timeout:float', 'use_poll:bool', 'map:NoneType', 'count:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[30.0, False, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="compact_traceback">
        <expr>compact_traceback()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="close_all">
        <expr>close_all(map,ignore_all)</expr>
        <args>['map:NoneType', 'ignore_all:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, False]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>NameError</exception>
        <exception>ValueError</exception>
        <exception>OverflowError</exception>
        <exception>NameError</exception>
        <exception>_reraised_exceptions</exception>
        <exception>_reraised_exceptions</exception>
        <exception>_reraised_exceptions</exception>
        <exception>OSError</exception>
        <exception>_reraised_exceptions</exception>
        <exception>TypeError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>_reraised_exceptions</exception>
      </errors>
    </module>
    <module name="sndhdr" imports="[]" importfrom="['collections:namedtuple']">
      <api name="what">
        <expr>what(filename)</expr>
        <args>['filename:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="whathdr">
        <expr>whathdr(filename)</expr>
        <args>['filename:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_long_be">
        <expr>get_long_be(b)</expr>
        <args>['b:bytes']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_long_le">
        <expr>ret = get_long_le(b)</expr>
        <args>['b:bytes']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_short_be">
        <expr>ret = get_short_be(b)</expr>
        <args>['b:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_short_le">
        <expr>get_short_le(b)</expr>
        <args>['b:bytes']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="selectors" imports="['math', 'select', 'sys']" importfrom="['abc:ABCMeta', 'abc:abstractmethod', 'collections:namedtuple', 'collections.abc:Mapping']">
      <class name="BaseSelector" init="">
        <api name="modify">
          <expr>obj.ret = modify(fileobj,events,data)</expr>
          <args>['fileobj:None', 'events:None', 'data:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="select">
          <expr>obj.select(timeout)</expr>
          <args>['timeout:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_key">
          <expr>obj.ret = get_key(fileobj)</expr>
          <args>['fileobj:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="SelectSelector" init="obj = SelectSelector()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="select">
          <expr>obj.select(timeout)</expr>
          <args>['timeout:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="PollSelector" init=""/>
      <class name="EpollSelector" init="">
        <api name="select">
          <expr>obj.select(timeout)</expr>
          <args>['timeout:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="DevpollSelector" init=""/>
      <class name="KqueueSelector" init="obj = KqueueSelector()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="select">
          <expr>obj.ret = select(timeout)</expr>
          <args>['timeout:None']</args>
          <return>['ready:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>AttributeError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>ValueError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>InterruptedError</exception>
        <exception>OSError</exception>
        <exception>KeyError</exception>
        <exception>InterruptedError</exception>
        <exception>InterruptedError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>InterruptedError</exception>
        <exception>OSError</exception>
      </errors>
    </module>
    <module name="tempfile" imports="['functools', 'warnings', 'io', 'os', 'shutil', 'errno', 'sys', 'types', 'weakref']" importfrom="['random:Random']">
      <class name="SpooledTemporaryFile" init="obj = SpooledTemporaryFile(max_size,mode,buffering,encoding,newline,suffix,prefix,dir)">
        <api name="__init__">
          <expr>None</expr>
          <args>['max_size:NoneType', 'mode:NoneType', 'buffering:NoneType', 'encoding:NoneType', 'newline:NoneType', 'suffix:NoneType', 'prefix:NoneType', 'dir:builtin_function_or_method']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['errors:NoneType']</kwoargs>
          <defa>[0, 'w+b', 'int', None, None, None, None, None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="closed">
          <expr>obj.closed()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="encoding">
          <expr>obj.encoding()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="errors">
          <expr>obj.errors()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="mode">
          <expr>obj.mode()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="name">
          <expr>obj.name()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="newlines">
          <expr>obj.newlines()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="TemporaryDirectory" init="obj = TemporaryDirectory(suffix,prefix,dir)">
        <api name="__init__">
          <expr>None</expr>
          <args>['suffix:NoneType', 'prefix:NoneType', 'dir:builtin_function_or_method']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="gettempprefix">
        <expr>gettempprefix()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="gettempprefixb">
        <expr>ret = gettempprefixb()</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="gettempdir">
        <expr>gettempdir()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="gettempdirb">
        <expr>gettempdirb()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="mkstemp">
        <expr>mkstemp(suffix,prefix,dir,text)</expr>
        <args>['suffix:NoneType', 'prefix:NoneType', 'dir:NoneType', 'text:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, False]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="mkdtemp">
        <expr>mkdtemp(suffix,prefix,dir)</expr>
        <args>['suffix:NoneType', 'prefix:NoneType', 'dir:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="mktemp">
        <expr>mktemp(suffix,prefix,dir)</expr>
        <args>['suffix:str', 'prefix:str', 'dir:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['', 'template', None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="NamedTemporaryFile">
        <expr>NamedTemporaryFile(mode,buffering,encoding,newline,suffix,prefix,dir,delete)</expr>
        <args>['mode:str', 'buffering:int', 'encoding:NoneType', 'newline:NoneType', 'suffix:NoneType', 'prefix:NoneType', 'dir:NoneType', 'delete:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['errors:NoneType']</kwoargs>
        <defa>['w+b', 'int', None, None, None, None, None, True]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <api name="TemporaryFile">
        <expr>TemporaryFile(mode,buffering,encoding,newline,suffix,prefix,dir)</expr>
        <args>['mode:str', 'buffering:int', 'encoding:NoneType', 'newline:NoneType', 'suffix:NoneType', 'prefix:NoneType', 'dir:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['errors:NoneType']</kwoargs>
        <defa>['w+b', 'int', None, None, None, None, None]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <errors>
        <exception>OSError</exception>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>FileExistsError</exception>
        <exception>PermissionError</exception>
        <exception>OSError</exception>
        <exception>FileExistsError</exception>
        <exception>PermissionError</exception>
        <exception>FileExistsError</exception>
        <exception>PermissionError</exception>
        <exception>BaseException</exception>
        <exception>IsADirectoryError</exception>
        <exception>OSError</exception>
        <exception>AttributeError</exception>
        <exception>AttributeError</exception>
      </errors>
    </module>
    <module name="queue" imports="['threading', 'types']" importfrom="['collections:deque', 'heapq:heappush', 'heapq:heappop', 'time:monotonic', '_queue:SimpleQueue', '_queue:Empty']">
      <class name="Full" init=""/>
      <class name="Queue" init="obj = Queue(maxsize)">
        <api name="__init__">
          <expr>None</expr>
          <args>['maxsize:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[0]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="task_done">
          <expr>obj.task_done()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="join">
          <expr>obj.join()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="qsize">
          <expr>obj.qsize()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="empty">
          <expr>obj.empty()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="full">
          <expr>obj.full()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="put_nowait">
          <expr>obj.put_nowait(item)</expr>
          <args>['item:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_nowait">
          <expr>obj.get_nowait()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="PriorityQueue" init=""/>
      <class name="LifoQueue" init=""/>
      <errors>
        <exception>ImportError</exception>
        <exception>ImportError</exception>
      </errors>
    </module>
    <module name="copy" imports="['types', 'weakref']" importfrom="['copyreg:dispatch_table', 'org.python.core:PyStringMap']">
      <class name="Error" init=""/>
      <api name="copy">
        <expr>copy(x)</expr>
        <args>['x:memoryview']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="deepcopy">
        <expr>deepcopy(x,memo,_nil)</expr>
        <args>['x:st', 'memo:NoneType', '_nil:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
      </errors>
    </module>
    <module name="bdb" imports="['fnmatch', 'sys', 'os', 'linecache', 'reprlib']" importfrom="['inspect:CO_GENERATOR', 'inspect:CO_COROUTINE', 'inspect:CO_ASYNC_GENERATOR']">
      <class name="BdbQuit" init=""/>
      <class name="Bdb" init="obj = Bdb(skip)">
        <api name="__init__">
          <expr>None</expr>
          <args>['skip:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="trace_dispatch">
          <expr>obj.ret = trace_dispatch(frame,event,arg)</expr>
          <args>['frame:None', 'event:None', 'arg:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_skipped_module">
          <expr>obj.is_skipped_module(module_name)</expr>
          <args>['module_name:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="stop_here">
          <expr>obj.ret = stop_here(frame)</expr>
          <args>['frame:None']</args>
          <return>['ret:None', 'ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="break_here">
          <expr>obj.ret = break_here(frame)</expr>
          <args>['frame:None']</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="break_anywhere">
          <expr>obj.ret = break_anywhere(frame)</expr>
          <args>['frame:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_until">
          <expr>obj.set_until(frame,lineno)</expr>
          <args>['frame:None', 'lineno:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_next">
          <expr>obj.set_next(frame)</expr>
          <args>['frame:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_return">
          <expr>obj.set_return(frame)</expr>
          <args>['frame:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_trace">
          <expr>obj.set_trace(frame)</expr>
          <args>['frame:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_continue">
          <expr>obj.set_continue()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_quit">
          <expr>obj.set_quit()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_break">
          <expr>obj.ret = set_break(filename,lineno,temporary,cond,funcname)</expr>
          <args>['filename:None', 'lineno:None', 'temporary:None', 'cond:None', 'funcname:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clear_break">
          <expr>obj.ret = clear_break(filename,lineno)</expr>
          <args>['filename:None', 'lineno:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clear_bpbynumber">
          <expr>obj.ret = clear_bpbynumber(arg)</expr>
          <args>['arg:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clear_all_file_breaks">
          <expr>obj.ret = clear_all_file_breaks(filename)</expr>
          <args>['filename:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clear_all_breaks">
          <expr>obj.ret = clear_all_breaks()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_break">
          <expr>obj.ret = get_break(filename,lineno)</expr>
          <args>['filename:None', 'lineno:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_breaks">
          <expr>obj.ret = get_breaks(filename,lineno)</expr>
          <args>['filename:None', 'lineno:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_file_breaks">
          <expr>obj.ret = get_file_breaks(filename)</expr>
          <args>['filename:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_all_breaks">
          <expr>obj.ret = get_all_breaks()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_stack">
          <expr>obj.get_stack(f,t)</expr>
          <args>['f:None', 't:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="format_stack_entry">
          <expr>obj.ret = format_stack_entry(frame_lineno,lprefix)</expr>
          <args>['frame_lineno:None', 'lprefix:None']</args>
          <return>['s:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[': ']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="runeval">
          <expr>obj.ret = runeval(expr,globals,locals)</expr>
          <args>['expr:None', 'globals:None', 'locals:None']</args>
          <return>['eval:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="runctx">
          <expr>obj.runctx(cmd,globals,locals)</expr>
          <args>['cmd:None', 'globals:None', 'locals:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="runcall">
          <expr>obj.ret = runcall()</expr>
          <args>[]</args>
          <return>['res:None']</return>
          <dependences>None</dependences>
          <posargs>['self:None', 'func:None']</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Breakpoint" init="obj = Breakpoint(file,line,temporary,cond,funcname)">
        <api name="__init__">
          <expr>None</expr>
          <args>['file:NoneType', 'line:NoneType', 'temporary:NoneType', 'cond:NoneType', 'funcname:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="enable">
          <expr>obj.enable()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="disable">
          <expr>obj.disable()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="bpprint">
          <expr>obj.bpprint(out)</expr>
          <args>['out:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="bpformat">
          <expr>obj.ret = bpformat()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Tdb" init=""/>
      <api name="set_trace">
        <expr>set_trace()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="checkfuncname">
        <expr>ret = checkfuncname(b,frame)</expr>
        <args>['b:None', 'frame:None']</args>
        <return>['ret:bool']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="effective">
        <expr>effective(file,line,frame)</expr>
        <args>['file:None', 'line:None', 'frame:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="foo">
        <expr>foo(n)</expr>
        <args>['n:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="bar">
        <expr>ret = bar(a)</expr>
        <args>['a:None']</args>
        <return>['ret:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ValueError</exception>
        <exception>ValueError</exception>
        <exception>IndexError</exception>
        <exception>BdbQuit</exception>
        <exception>BdbQuit</exception>
        <exception>BdbQuit</exception>
      </errors>
    </module>
    <module name="zipfile" imports="['binascii', 'importlib.util', 'io', 'itertools', 'os', 'posixpath', 'shutil', 'stat', 'struct', 'sys', 'threading', 'time', 'contextlib', 'zlib', 'bz2', 'lzma', 'warnings', 'argparse']" importfrom="[]">
      <class name="BadZipFile" init=""/>
      <class name="LargeZipFile" init=""/>
      <class name="ZipInfo" init="obj = ZipInfo(filename,date_time)">
        <api name="__init__">
          <expr>None</expr>
          <args>['filename:NoneType', 'date_time:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['NoName', None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="FileHeader">
          <expr>obj.FileHeader(zip64)</expr>
          <args>['zip64:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="from_file">
          <expr>obj.ret = from_file(cls,filename,arcname)</expr>
          <args>['cls:None', 'filename:None', 'arcname:None']</args>
          <return>['zinfo:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['strict_timestamps:None']</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[True]</kwodefa>
        </api>
      </class>
      <class name="LZMACompressor" init="obj = LZMACompressor()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="LZMADecompressor" init="obj = LZMADecompressor()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ZipExtFile" init="obj = ZipExtFile(fileobj,mode,zipinfo,pwd,close_fileobj)">
        <api name="__init__">
          <expr>None</expr>
          <args>['fileobj:NoneType', 'mode:NoneType', 'zipinfo:NoneType', 'pwd:NoneType', 'close_fileobj:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="peek">
          <expr>obj.peek(n)</expr>
          <args>['n:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[1]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="readable">
          <expr>obj.readable()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read1">
          <expr>obj.read1(n)</expr>
          <args>['n:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="seekable">
          <expr>obj.seekable()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ZipFile" init="obj = ZipFile(file,mode,compression,allowZip64,compresslevel)">
        <api name="__init__">
          <expr>None</expr>
          <args>['file:NoneType', 'mode:NoneType', 'compression:NoneType', 'allowZip64:NoneType', 'compresslevel:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['strict_timestamps:NoneType']</kwoargs>
          <defa>['r', 'ZIP_STORED', True, None]</defa>
          <kwodefa>[True]</kwodefa>
        </api>
        <api name="infolist">
          <expr>obj.infolist()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="printdir">
          <expr>obj.printdir(file)</expr>
          <args>['file:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setpassword">
          <expr>obj.setpassword(pwd)</expr>
          <args>['pwd:bytes']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="comment">
          <expr>obj.comment(comment)</expr>
          <args>['comment:bytes']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="open">
          <expr>obj.open(name,mode,pwd)</expr>
          <args>['name:ZipInfo', 'mode:str', 'pwd:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['force_zip64:bool']</kwoargs>
          <defa>['r', None]</defa>
          <kwodefa>[False]</kwodefa>
        </api>
        <api name="extract">
          <expr>obj.extract(member,path,pwd)</expr>
          <args>['member:str', 'path:NoneType', 'pwd:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="extractall">
          <expr>obj.extractall(path,members,pwd)</expr>
          <args>['path:NoneType', 'members:NoneType', 'pwd:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="writestr">
          <expr>obj.writestr(zinfo_or_arcname,data,compress_type,compresslevel)</expr>
          <args>['zinfo_or_arcname:str', 'data:bytes', 'compress_type:NoneType', 'compresslevel:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="PyZipFile" init="obj = PyZipFile(file,mode,compression,allowZip64,optimize)">
        <api name="__init__">
          <expr>None</expr>
          <args>['file:NoneType', 'mode:NoneType', 'compression:NoneType', 'allowZip64:NoneType', 'optimize:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['r', 'ZIP_STORED', True, 'int']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="CompleteDirs" init="">
        <api name="resolve_dir">
          <expr>obj.resolve_dir(name)</expr>
          <args>['name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="make">
          <expr>obj.ret = make(cls,source)</expr>
          <args>['cls:None', 'source:None']</args>
          <return>['source:None', 'cls:None', 'res:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="FastLookup" init=""/>
      <class name="Path" init="obj = Path(root,at)">
        <api name="__init__">
          <expr>None</expr>
          <args>['root:NoneType', 'at:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="name">
          <expr>obj.name()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read_text">
          <expr>obj.read_text()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read_bytes">
          <expr>obj.read_bytes()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_file">
          <expr>obj.is_file()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="exists">
          <expr>obj.ret = exists()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="iterdir">
          <expr>obj.iterdir()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="joinpath">
          <expr>obj.joinpath(add)</expr>
          <args>['add:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parent">
          <expr>obj.parent()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="is_zipfile">
        <expr>is_zipfile(filename)</expr>
        <args>['filename:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>main(args)</expr>
        <args>['args:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ImportError</exception>
        <exception>ImportError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>UnicodeEncodeError</exception>
        <exception>struct.error</exception>
        <exception>OSError</exception>
      </errors>
    </module>
    <module name="stat" imports="[]" importfrom="['_stat:*']">
      <api name="S_IMODE">
        <expr>S_IMODE(mode)</expr>
        <args>['mode:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="S_IFMT">
        <expr>S_IFMT(mode)</expr>
        <args>['mode:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="S_ISDIR">
        <expr>S_ISDIR(mode)</expr>
        <args>['mode:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="S_ISCHR">
        <expr>S_ISCHR(mode)</expr>
        <args>['mode:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="S_ISBLK">
        <expr>S_ISBLK(mode)</expr>
        <args>['mode:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="S_ISREG">
        <expr>S_ISREG(mode)</expr>
        <args>['mode:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="S_ISFIFO">
        <expr>S_ISFIFO(mode)</expr>
        <args>['mode:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="S_ISLNK">
        <expr>S_ISLNK(mode)</expr>
        <args>['mode:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="S_ISSOCK">
        <expr>S_ISSOCK(mode)</expr>
        <args>['mode:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="S_ISDOOR">
        <expr>S_ISDOOR(mode)</expr>
        <args>['mode:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="S_ISPORT">
        <expr>S_ISPORT(mode)</expr>
        <args>['mode:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="S_ISWHT">
        <expr>S_ISWHT(mode)</expr>
        <args>['mode:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="filemode">
        <expr>filemode(mode)</expr>
        <args>['mode:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ImportError</exception>
      </errors>
    </module>
    <module name="pyclbr" imports="['io', 'sys', 'importlib.util', 'tokenize', 'os']" importfrom="['token:NAME', 'token:DEDENT', 'token:OP']">
      <class name="Function" init="obj = Function(module,name,file,lineno,parent)">
        <api name="__init__">
          <expr>None</expr>
          <args>['module:NoneType', 'name:NoneType', 'file:NoneType', 'lineno:NoneType', 'parent:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Class" init="obj = Class(module,name,super,file,lineno,parent)">
        <api name="__init__">
          <expr>None</expr>
          <args>['module:NoneType', 'name:NoneType', 'super:type', 'file:NoneType', 'lineno:NoneType', 'parent:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="readmodule">
        <expr>ret = readmodule(module,path)</expr>
        <args>['module:None', 'path:None']</args>
        <return>['res:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="readmodule_ex">
        <expr>readmodule_ex(module,path)</expr>
        <args>['module:str', 'path:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>ImportError</exception>
        <exception>StopIteration</exception>
      </errors>
    </module>
    <module name="keyword" imports="[]" importfrom="[]"/>
    <module name="graphlib" imports="[]" importfrom="[]">
      <class name="TopologicalSorter" init="obj = TopologicalSorter(graph)">
        <api name="__init__">
          <expr>None</expr>
          <args>['graph:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="static_order">
          <expr>obj.static_order()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>graphlib.CycleError</exception>
        <exception>StopIteration</exception>
      </errors>
    </module>
    <module name="modulefinder" imports="['dis', 'importlib._bootstrap_external', 'importlib.machinery', 'marshal', 'os', 'io', 'sys']" importfrom="[]">
      <class name="Module" init="obj = Module(name,file,path)">
        <api name="__init__">
          <expr>None</expr>
          <args>['name:NoneType', 'file:NoneType', 'path:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ModuleFinder" init="obj = ModuleFinder(path,debug,excludes,replace_paths)">
        <api name="__init__">
          <expr>None</expr>
          <args>['path:NoneType', 'debug:NoneType', 'excludes:NoneType', 'replace_paths:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, 0, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run_script">
          <expr>obj.run_script(pathname)</expr>
          <args>['pathname:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="load_file">
          <expr>obj.load_file(pathname)</expr>
          <args>['pathname:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="scan_opcodes">
          <expr>obj.scan_opcodes(co)</expr>
          <args>['co:code']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="report">
          <expr>obj.report()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="any_missing">
          <expr>obj.ret = any_missing()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="AddPackagePath">
        <expr>AddPackagePath(packagename,path)</expr>
        <args>['packagename:None', 'path:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ReplacePackage">
        <expr>ReplacePackage(oldname,newname)</expr>
        <args>['oldname:None', 'newname:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>OSError</exception>
        <exception>KeyError</exception>
        <exception>ImportError</exception>
        <exception>ImportError</exception>
        <exception>ImportError</exception>
        <exception>ImportError</exception>
        <exception>SyntaxError</exception>
        <exception>KeyboardInterrupt</exception>
      </errors>
    </module>
    <module name="pty" imports="['os', 'sys', 'tty']" importfrom="['select:select', 'fcntl:ioctl', 'fcntl:I_PUSH']">
      <api name="openpty">
        <expr>openpty()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="master_open">
        <expr>ret = master_open()</expr>
        <args>[]</args>
        <return>['_open_terminal:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="slave_open">
        <expr>ret = slave_open(tty_name)</expr>
        <args>['tty_name:str']</args>
        <return>['result:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="fork">
        <expr>fork()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="spawn">
        <expr>ret = spawn(argv,master_read,stdin_read)</expr>
        <args>['argv:None', 'master_read:None', 'stdin_read:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['_read', '_read']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>tty.error</exception>
        <exception>OSError</exception>
      </errors>
    </module>
    <module name="symtable" imports="['weakref', 'os', 'sys']" importfrom="['_symtable:USE', '_symtable:DEF_GLOBAL', '_symtable:DEF_NONLOCAL', '_symtable:DEF_LOCAL', '_symtable:DEF_PARAM', '_symtable:DEF_IMPORT', '_symtable:DEF_BOUND', '_symtable:DEF_ANNOT', '_symtable:SCOPE_OFF', '_symtable:SCOPE_MASK', '_symtable:FREE', '_symtable:LOCAL', '_symtable:GLOBAL_IMPLICIT', '_symtable:GLOBAL_EXPLICIT', '_symtable:CELL']">
      <class name="SymbolTableFactory" init="obj = SymbolTableFactory()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="SymbolTable" init="obj = SymbolTable(raw_table,filename)">
        <api name="__init__">
          <expr>None</expr>
          <args>['raw_table:NoneType', 'filename:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_type">
          <expr>obj.ret = get_type()</expr>
          <args>[]</args>
          <return>['module:NoneType', 'function:NoneType', 'class:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_id">
          <expr>obj.ret = get_id()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_name">
          <expr>obj.ret = get_name()</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_lineno">
          <expr>obj.ret = get_lineno()</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_optimized">
          <expr>obj.is_optimized()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_nested">
          <expr>obj.is_nested()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_children">
          <expr>obj.has_children()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_symbols">
          <expr>obj.ret = get_symbols()</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_children">
          <expr>obj.get_children()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Function" init="">
        <api name="get_parameters">
          <expr>obj.ret = get_parameters()</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_locals">
          <expr>obj.ret = get_locals()</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_globals">
          <expr>obj.ret = get_globals()</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_nonlocals">
          <expr>obj.ret = get_nonlocals()</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_frees">
          <expr>obj.ret = get_frees()</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Class" init="">
        <api name="get_methods">
          <expr>obj.ret = get_methods()</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Symbol" init="obj = Symbol(name,flags,namespaces)">
        <api name="__init__">
          <expr>None</expr>
          <args>['name:NoneType', 'flags:NoneType', 'namespaces:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['module_scope:NoneType']</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[False]</kwodefa>
        </api>
        <api name="get_name">
          <expr>obj.ret = get_name()</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_referenced">
          <expr>obj.is_referenced()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_parameter">
          <expr>obj.is_parameter()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_global">
          <expr>obj.is_global()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_nonlocal">
          <expr>obj.is_nonlocal()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_declared_global">
          <expr>obj.is_declared_global()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_local">
          <expr>obj.is_local()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_annotated">
          <expr>obj.is_annotated()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_free">
          <expr>obj.is_free()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_imported">
          <expr>obj.is_imported()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_assigned">
          <expr>obj.is_assigned()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_namespace">
          <expr>obj.is_namespace()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_namespaces">
          <expr>obj.ret = get_namespaces()</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_namespace">
          <expr>obj.get_namespace()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="symtable">
        <expr>symtable(code,filename,compile_type)</expr>
        <args>['code:str', 'filename:str', 'compile_type:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="xdrlib" imports="['struct']" importfrom="['io:BytesIO', 'functools:wraps']">
      <class name="Error" init="obj = Error(msg)">
        <api name="__init__">
          <expr>None</expr>
          <args>['msg:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Packer" init="obj = Packer()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="reset">
          <expr>obj.reset()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_buffer">
          <expr>obj.ret = get_buffer()</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pack_int">
          <expr>obj.pack_int(x)</expr>
          <args>['x:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pack_bool">
          <expr>obj.pack_bool(x)</expr>
          <args>['x:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pack_uhyper">
          <expr>obj.pack_uhyper(x)</expr>
          <args>['x:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pack_float">
          <expr>obj.pack_float(x)</expr>
          <args>['x:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pack_double">
          <expr>obj.pack_double(x)</expr>
          <args>['x:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pack_string">
          <expr>obj.pack_string(s)</expr>
          <args>['s:bytes']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pack_list">
          <expr>obj.pack_list(list,pack_item)</expr>
          <args>['list:range', 'pack_item:method']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pack_array">
          <expr>obj.pack_array(list,pack_item)</expr>
          <args>['list:list', 'pack_item:method']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Unpacker" init="obj = Unpacker(data)">
        <api name="__init__">
          <expr>None</expr>
          <args>['data:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="reset">
          <expr>obj.reset(data)</expr>
          <args>['data:bytes']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_position">
          <expr>obj.get_position()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_position">
          <expr>obj.set_position(position)</expr>
          <args>['position:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_buffer">
          <expr>obj.ret = get_buffer()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="done">
          <expr>obj.done()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unpack_int">
          <expr>obj.unpack_int()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unpack_bool">
          <expr>obj.unpack_bool()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unpack_hyper">
          <expr>obj.ret = unpack_hyper()</expr>
          <args>[]</args>
          <return>['x:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unpack_float">
          <expr>obj.ret = unpack_float()</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unpack_double">
          <expr>obj.ret = unpack_double()</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unpack_string">
          <expr>obj.unpack_string()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unpack_list">
          <expr>obj.ret = unpack_list(unpack_item)</expr>
          <args>['unpack_item:method']</args>
          <return>['list:list']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unpack_array">
          <expr>obj.ret = unpack_array(unpack_item)</expr>
          <args>['unpack_item:method']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="raise_conversion_error">
        <expr>raise_conversion_error(function)</expr>
        <args>['function:function']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>xdrlib.ConversionError</exception>
        <exception>TypeError</exception>
        <exception>TypeError</exception>
      </errors>
    </module>
    <module name="smtpd" imports="['sys', 'os', 'errno', 'getopt', 'time', 'socket', 'asyncore', 'asynchat', 'collections', 'smtplib', 'pwd']" importfrom="['warnings:warn', 'email._header_value_parser:get_addr_spec', 'email._header_value_parser:get_angle_addr', 'io:StringIO', 'Mailman:Utils', 'Mailman:Message', 'Mailman:MailList']">
      <class name="Devnull" init=""/>
      <class name="SMTPChannel" init="obj = SMTPChannel(server,conn,addr,data_size_limit,map,enable_SMTPUTF8,decode_data)">
        <api name="max_command_size_limit">
          <expr>obj.max_command_size_limit()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="__init__">
          <expr>None</expr>
          <args>['server:NoneType', 'conn:NoneType', 'addr:NoneType', 'data_size_limit:NoneType', 'map:type', 'enable_SMTPUTF8:NoneType', 'decode_data:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['DATA_SIZE_DEFAULT', None, False, False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="collect_incoming_data">
          <expr>obj.collect_incoming_data(data)</expr>
          <args>['data:bytes']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="found_terminator">
          <expr>obj.found_terminator()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="smtp_HELO">
          <expr>obj.smtp_HELO(arg)</expr>
          <args>['arg:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="smtp_EHLO">
          <expr>obj.smtp_EHLO(arg)</expr>
          <args>['arg:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="smtp_NOOP">
          <expr>obj.smtp_NOOP(arg)</expr>
          <args>['arg:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="smtp_QUIT">
          <expr>obj.smtp_QUIT(arg)</expr>
          <args>['arg:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="smtp_HELP">
          <expr>obj.smtp_HELP(arg)</expr>
          <args>['arg:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="smtp_VRFY">
          <expr>obj.smtp_VRFY(arg)</expr>
          <args>['arg:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="smtp_MAIL">
          <expr>obj.smtp_MAIL(arg)</expr>
          <args>['arg:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="smtp_RCPT">
          <expr>obj.smtp_RCPT(arg)</expr>
          <args>['arg:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="smtp_RSET">
          <expr>obj.smtp_RSET(arg)</expr>
          <args>['arg:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="smtp_DATA">
          <expr>obj.smtp_DATA(arg)</expr>
          <args>['arg:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="smtp_EXPN">
          <expr>obj.smtp_EXPN(arg)</expr>
          <args>['arg:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="SMTPServer" init="obj = SMTPServer(localaddr,remoteaddr,data_size_limit,map,enable_SMTPUTF8,decode_data)">
        <api name="__init__">
          <expr>None</expr>
          <args>['localaddr:NoneType', 'remoteaddr:NoneType', 'data_size_limit:NoneType', 'map:type', 'enable_SMTPUTF8:NoneType', 'decode_data:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['DATA_SIZE_DEFAULT', None, False, False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="handle_accepted">
          <expr>obj.handle_accepted(conn,addr)</expr>
          <args>['conn:None', 'addr:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="DebuggingServer" init=""/>
      <class name="PureProxy" init="obj = PureProxy()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="MailmanProxy" init="obj = MailmanProxy()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Options" init=""/>
      <api name="usage">
        <expr>usage(code,msg)</expr>
        <args>['code:None', 'msg:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parseargs">
        <expr>ret = parseargs()</expr>
        <args>[]</args>
        <return>['options:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ValueError</exception>
        <exception>smtplib.SMTPRecipientsRefused</exception>
        <exception>OSError</exception>
        <exception>getopt.error</exception>
        <exception>ValueError</exception>
        <exception>ValueError</exception>
        <exception>ImportError</exception>
        <exception>PermissionError</exception>
        <exception>KeyboardInterrupt</exception>
      </errors>
    </module>
    <module name="cProfile" imports="['profile', 'pstats', 'marshal', 'os', 'sys', 'runpy']" importfrom="['optparse:OptionParser']">
      <class name="Profile" init="">
        <api name="dump_stats">
          <expr>obj.dump_stats(file)</expr>
          <args>['file:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="runcall">
          <expr>obj.ret = runcall()</expr>
          <args>[]</args>
          <return>['func:None']</return>
          <dependences>None</dependences>
          <posargs>['self:None', 'func:None']</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="run">
        <expr>run(statement,filename,sort)</expr>
        <args>['statement:str', 'filename:NoneType', 'sort:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, 'int']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="runctx">
        <expr>runctx(statement,globals,locals,filename,sort)</expr>
        <args>['statement:str', 'globals:dict', 'locals:dict', 'filename:NoneType', 'sort:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, 'int']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="label">
        <expr>label(code)</expr>
        <args>['code:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>ret = main()</expr>
        <args>[]</args>
        <return>['parser:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>KeyError</exception>
        <exception>BrokenPipeError</exception>
      </errors>
    </module>
    <module name="warnings" imports="['sys', 'linecache', 'tracemalloc', 're', 'builtins', 'traceback']" importfrom="['_warnings:filters', '_warnings:warn', '_warnings:warn_explicit']">
      <class name="WarningMessage" init="obj = WarningMessage(message,category,filename,lineno,file,line,source)">
        <api name="__init__">
          <expr>None</expr>
          <args>['message:NoneType', 'category:NoneType', 'filename:NoneType', 'lineno:NoneType', 'file:NoneType', 'line:NoneType', 'source:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="catch_warnings" init="obj = catch_warnings()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['record:NoneType', 'module:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[False, None]</kwodefa>
        </api>
      </class>
      <api name="showwarning">
        <expr>showwarning(message,category,filename,lineno,file,line)</expr>
        <args>['message:str', 'category:type', 'filename:str', 'lineno:int', 'file:StringIO', 'line:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="formatwarning">
        <expr>formatwarning(message,category,filename,lineno,line)</expr>
        <args>['message:UserWarning', 'category:type', 'filename:str', 'lineno:int', 'line:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="filterwarnings">
        <expr>filterwarnings(action,message,category,module,lineno,append)</expr>
        <args>['action:str', 'message:str', 'category:type', 'module:str', 'lineno:int', 'append:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['', 'Warning', '', 0, False]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="simplefilter">
        <expr>simplefilter(action,category,lineno,append)</expr>
        <args>['action:str', 'category:type', 'lineno:int', 'append:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['Warning', 0, False]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="resetwarnings">
        <expr>resetwarnings()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="warn">
        <expr>warn(message,category,stacklevel,source)</expr>
        <args>['message:None', 'category:None', 'stacklevel:None', 'source:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, 1, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="warn_explicit">
        <expr>warn_explicit(message,category,filename,lineno,module,registry,module_globals,source)</expr>
        <args>['message:None', 'category:None', 'filename:None', 'lineno:None', 'module:None', 'registry:None', 'module_globals:None', 'source:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>OSError</exception>
        <exception>Exception</exception>
        <exception>Exception</exception>
        <exception>Exception</exception>
        <exception>Exception</exception>
        <exception>NameError</exception>
        <exception>NameError</exception>
        <exception>ValueError</exception>
        <exception>_OptionError</exception>
        <exception>ValueError</exception>
        <exception>OverflowError</exception>
        <exception>ImportError</exception>
        <exception>AttributeError</exception>
        <exception>ValueError</exception>
        <exception>ImportError</exception>
      </errors>
    </module>
    <module name="pickle" imports="['sys', 're', 'io', 'codecs', 'doctest', 'argparse', 'pprint']" importfrom="['types:FunctionType', 'copyreg:dispatch_table', 'itertools:islice', 'functools:partial', 'sys:maxsize', 'struct:pack', 'struct:unpack', '_pickle:PickleBuffer', 'org.python.core:PyStringMap', '_pickle:PickleError', '_pickle:PicklingError', '_pickle:UnpicklingError', '_pickle:Pickler', '_pickle:Unpickler', '_pickle:dump', '_pickle:dumps', '_pickle:load', '_pickle:loads']">
      <class name="PickleError" init=""/>
      <api name="whichmodule">
        <expr>whichmodule(obj,name)</expr>
        <args>['obj:type', 'name:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="encode_long">
        <expr>encode_long(x)</expr>
        <args>['x:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="decode_long">
        <expr>decode_long(data)</expr>
        <args>['data:bytes']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ImportError</exception>
        <exception>pickle.PicklingError</exception>
        <exception>pickle.UnpicklingError</exception>
        <exception>ImportError</exception>
        <exception>AttributeError</exception>
        <exception>AttributeError</exception>
        <exception>UnicodeEncodeError</exception>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
        <exception>AttributeError</exception>
        <exception>UnicodeEncodeError</exception>
        <exception>_Stop</exception>
        <exception>UnicodeDecodeError</exception>
        <exception>StopIteration</exception>
        <exception>TypeError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
      </errors>
    </module>
    <module name="threading" imports="['os', 'sys', 'functools']" importfrom="['time:monotonic', '_weakrefset:WeakSet', 'itertools:islice', 'itertools:count', '_collections:deque', '_thread:stack_size']">
      <class name="Condition" init="obj = Condition(lock)">
        <api name="__init__">
          <expr>None</expr>
          <args>['lock:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="wait_for">
          <expr>obj.wait_for(predicate,timeout)</expr>
          <args>['predicate:function', 'timeout:float']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="notify_all">
          <expr>obj.notify_all()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Semaphore" init="obj = Semaphore(value)">
        <api name="__init__">
          <expr>None</expr>
          <args>['value:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[1]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="BoundedSemaphore" init="obj = BoundedSemaphore(value)">
        <api name="__init__">
          <expr>None</expr>
          <args>['value:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[1]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Event" init="obj = Event()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_set">
          <expr>obj.is_set()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set">
          <expr>obj.set()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Barrier" init="obj = Barrier(parties,action,timeout)">
        <api name="__init__">
          <expr>None</expr>
          <args>['parties:None', 'action:None', 'timeout:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="reset">
          <expr>obj.reset()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="abort">
          <expr>obj.abort()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parties">
          <expr>obj.parties()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="n_waiting">
          <expr>obj.n_waiting()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="broken">
          <expr>obj.broken()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Thread" init="obj = Thread(group,target,name,args,kwargs)">
        <api name="__init__">
          <expr>None</expr>
          <args>['group:None', 'target:None', 'name:None', 'args:None', 'kwargs:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['daemon:None']</kwoargs>
          <defa>[None, None, None, None, None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="start">
          <expr>obj.start()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="join">
          <expr>obj.join(timeout)</expr>
          <args>['timeout:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="name">
          <expr>obj.name(name)</expr>
          <args>['name:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ident">
          <expr>obj.ret = ident()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="daemon">
          <expr>obj.daemon(daemonic)</expr>
          <args>['daemonic:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isDaemon">
          <expr>obj.ret = isDaemon()</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setDaemon">
          <expr>obj.setDaemon(daemonic)</expr>
          <args>['daemonic:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getName">
          <expr>obj.ret = getName()</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setName">
          <expr>obj.setName(name)</expr>
          <args>['name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Timer" init="obj = Timer(interval,function,args,kwargs)">
        <api name="__init__">
          <expr>None</expr>
          <args>['interval:None', 'function:None', 'args:None', 'kwargs:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="cancel">
          <expr>obj.cancel()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="setprofile">
        <expr>setprofile(func)</expr>
        <args>['func:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="settrace">
        <expr>settrace(func)</expr>
        <args>['func:method']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="RLock">
        <expr>RLock()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="current_thread">
        <expr>current_thread()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="active_count">
        <expr>ret = active_count()</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="enumerate">
        <expr>enumerate()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main_thread">
        <expr>main_thread()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ImportError</exception>
        <exception>AttributeError</exception>
        <exception>AttributeError</exception>
        <exception>KeyError</exception>
        <exception>ValueError</exception>
        <exception>RuntimeError</exception>
        <exception>ValueError</exception>
        <exception>threading.BrokenBarrierError</exception>
        <exception>Exception</exception>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
      </errors>
    </module>
    <module name="asynchat" imports="['asyncore']" importfrom="['collections:deque']">
      <class name="async_chat" init="obj = async_chat(sock,map)">
        <api name="__init__">
          <expr>None</expr>
          <args>['sock:NoneType', 'map:type']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_terminator">
          <expr>obj.set_terminator(term)</expr>
          <args>['term:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="handle_read">
          <expr>obj.handle_read()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="handle_write">
          <expr>obj.handle_write()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="push">
          <expr>obj.push(data)</expr>
          <args>['data:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="push_with_producer">
          <expr>obj.push_with_producer(producer)</expr>
          <args>['producer:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="readable">
          <expr>obj.ret = readable()</expr>
          <args>[]</args>
          <return>['1:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="writable">
          <expr>obj.ret = writable()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="close_when_done">
          <expr>obj.close_when_done()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="discard_buffers">
          <expr>obj.discard_buffers()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="simple_producer" init="obj = simple_producer(data,buffer_size)">
        <api name="__init__">
          <expr>None</expr>
          <args>['data:NoneType', 'buffer_size:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[512]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="more">
          <expr>obj.more()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="find_prefix_at_end">
        <expr>find_prefix_at_end(haystack,needle)</expr>
        <args>['haystack:bytes', 'needle:bytes']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>BlockingIOError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>OSError</exception>
      </errors>
    </module>
    <module name="re" imports="['enum', 'sre_compile', 'sre_parse', 'functools', 'copyreg']" importfrom="[]">
      <class name="RegexFlag" init=""/>
      <class name="Scanner" init="obj = Scanner(lexicon,flags)">
        <api name="__init__">
          <expr>None</expr>
          <args>['lexicon:None', 'flags:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[0]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="scan">
          <expr>obj.scan(string)</expr>
          <args>['string:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="match">
        <expr>match(pattern,string,flags)</expr>
        <args>['pattern:str', 'string:str', 'flags:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="fullmatch">
        <expr>fullmatch(pattern,string,flags)</expr>
        <args>['pattern:bytes', 'string:bytes', 'flags:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="search">
        <expr>search(pattern,string,flags)</expr>
        <args>['pattern:str', 'string:str', 'flags:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="sub">
        <expr>sub(pattern,repl,string,count,flags)</expr>
        <args>['pattern:str', 'repl:str', 'string:str', 'count:int', 'flags:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0, 0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="subn">
        <expr>subn(pattern,repl,string,count,flags)</expr>
        <args>['pattern:str', 'repl:str', 'string:str', 'count:int', 'flags:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0, 0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="split">
        <expr>split(pattern,string,maxsplit,flags)</expr>
        <args>['pattern:str', 'string:str', 'maxsplit:int', 'flags:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0, 0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="findall">
        <expr>findall(pattern,string,flags)</expr>
        <args>['pattern:str', 'string:str', 'flags:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="finditer">
        <expr>finditer(pattern,string,flags)</expr>
        <args>['pattern:Pattern', 'string:str', 'flags:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="compile">
        <expr>compile(pattern,flags)</expr>
        <args>['pattern:str', 'flags:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="purge">
        <expr>purge()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="template">
        <expr>ret = template(pattern,flags)</expr>
        <args>['pattern:None', 'flags:None']</args>
        <return>['_compile:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="escape">
        <expr>escape(pattern)</expr>
        <args>['pattern:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
        <exception>StopIteration</exception>
        <exception>RuntimeError</exception>
        <exception>KeyError</exception>
      </errors>
    </module>
    <module name="uu" imports="['binascii', 'os', 'sys']" importfrom="[]">
      <class name="Error" init=""/>
      <api name="encode">
        <expr>encode(in_file,out_file,name,mode)</expr>
        <args>['in_file:BufferedReader', 'out_file:BufferedWriter', 'name:str', 'mode:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['backtick:bool']</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[False]</kwodefa>
      </api>
      <api name="decode">
        <expr>decode(in_file,out_file,mode,quiet)</expr>
        <args>['in_file:BufferedReader', 'out_file:NoneType', 'mode:NoneType', 'quiet:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, False]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ValueError</exception>
        <exception>binascii.Error</exception>
      </errors>
    </module>
    <module name="shelve" imports="['collections.abc']" importfrom="['pickle:Pickler', 'pickle:Unpickler', 'io:BytesIO']">
      <class name="Shelf" init="obj = Shelf(dict,protocol,writeback,keyencoding)">
        <api name="__init__">
          <expr>None</expr>
          <args>['dict:type', 'protocol:NoneType', 'writeback:NoneType', 'keyencoding:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, False, 'utf-8']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get">
          <expr>obj.get(key,default)</expr>
          <args>['key:str', 'default:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="BsdDbShelf" init="obj = BsdDbShelf(dict,protocol,writeback,keyencoding)">
        <api name="__init__">
          <expr>None</expr>
          <args>['dict:type', 'protocol:NoneType', 'writeback:NoneType', 'keyencoding:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, False, 'utf-8']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="DbfilenameShelf" init="obj = DbfilenameShelf(filename,flag,protocol,writeback)">
        <api name="__init__">
          <expr>None</expr>
          <args>['filename:NoneType', 'flag:NoneType', 'protocol:NoneType', 'writeback:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['c', None, False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="open">
        <expr>open(filename,flag,protocol,writeback)</expr>
        <args>['filename:str', 'flag:str', 'protocol:int', 'writeback:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['c', None, False]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>AttributeError</exception>
      </errors>
    </module>
    <module name="telnetlib" imports="['sys', 'socket', 'selectors', 're']" importfrom="['time:monotonic']">
      <class name="Telnet" init="obj = Telnet(host,port,timeout)">
        <api name="__init__">
          <expr>None</expr>
          <args>['host:NoneType', 'port:NoneType', 'timeout:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, 0, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="open">
          <expr>obj.open(host,port,timeout)</expr>
          <args>['host:str', 'port:int', 'timeout:object']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[0, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_debuglevel">
          <expr>obj.set_debuglevel(debuglevel)</expr>
          <args>['debuglevel:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_socket">
          <expr>obj.get_socket()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read_until">
          <expr>obj.ret = read_until(match,timeout)</expr>
          <args>['match:None', 'timeout:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read_all">
          <expr>obj.ret = read_all()</expr>
          <args>[]</args>
          <return>['buf:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read_some">
          <expr>obj.ret = read_some()</expr>
          <args>[]</args>
          <return>['buf:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read_very_eager">
          <expr>obj.ret = read_very_eager()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read_lazy">
          <expr>obj.ret = read_lazy()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read_sb_data">
          <expr>obj.ret = read_sb_data()</expr>
          <args>[]</args>
          <return>['buf:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_option_negotiation_callback">
          <expr>obj.set_option_negotiation_callback(callback)</expr>
          <args>['callback:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sock_avail">
          <expr>obj.ret = sock_avail()</expr>
          <args>[]</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="interact">
          <expr>obj.interact()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="listener">
          <expr>obj.listener()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="expect">
          <expr>obj.expect(list,timeout)</expr>
          <args>['list:None', 'timeout:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>EOFError</exception>
        <exception>EOFError</exception>
        <exception>EOFError</exception>
      </errors>
    </module>
    <module name="socketserver" imports="['socket', 'selectors', 'os', 'sys', 'threading', 'traceback']" importfrom="['io:BufferedIOBase', 'time:monotonic', 'io:BytesIO']">
      <class name="BaseServer" init="obj = BaseServer(server_address,RequestHandlerClass)">
        <api name="__init__">
          <expr>None</expr>
          <args>['server_address:NoneType', 'RequestHandlerClass:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="server_activate">
          <expr>obj.server_activate()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="serve_forever">
          <expr>obj.serve_forever(poll_interval)</expr>
          <args>['poll_interval:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[0.5]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="shutdown">
          <expr>obj.shutdown()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="handle_request">
          <expr>obj.ret = handle_request()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="verify_request">
          <expr>obj.ret = verify_request(request,client_address)</expr>
          <args>['request:None', 'client_address:None']</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="handle_error">
          <expr>obj.handle_error(request,client_address)</expr>
          <args>['request:None', 'client_address:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="TCPServer" init="obj = TCPServer(server_address,RequestHandlerClass,bind_and_activate)">
        <api name="__init__">
          <expr>None</expr>
          <args>['server_address:NoneType', 'RequestHandlerClass:NoneType', 'bind_and_activate:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[True]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="server_bind">
          <expr>obj.server_bind()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="server_activate">
          <expr>obj.server_activate()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="UDPServer" init=""/>
      <class name="ForkingMixIn" init=""/>
      <class name="ThreadingMixIn" init="">
        <api name="process_request_thread">
          <expr>obj.process_request_thread(request,client_address)</expr>
          <args>['request:None', 'client_address:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ForkingUDPServer" init=""/>
      <class name="ForkingTCPServer" init=""/>
      <class name="ThreadingUDPServer" init=""/>
      <class name="ThreadingTCPServer" init=""/>
      <class name="UnixStreamServer" init=""/>
      <class name="UnixDatagramServer" init=""/>
      <class name="ThreadingUnixStreamServer" init=""/>
      <class name="ThreadingUnixDatagramServer" init=""/>
      <class name="BaseRequestHandler" init="obj = BaseRequestHandler(request,client_address,server)">
        <api name="__init__">
          <expr>None</expr>
          <args>['request:NoneType', 'client_address:NoneType', 'server:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamRequestHandler" init="">
        <api name="setup">
          <expr>obj.setup()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finish">
          <expr>obj.finish()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="DatagramRequestHandler" init="">
        <api name="setup">
          <expr>obj.setup()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="finish">
          <expr>obj.finish()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>OSError</exception>
        <exception>Exception</exception>
        <exception>OSError</exception>
        <exception>ChildProcessError</exception>
        <exception>OSError</exception>
        <exception>ChildProcessError</exception>
        <exception>OSError</exception>
        <exception>Exception</exception>
        <exception>Exception</exception>
        <exception>socket.error</exception>
      </errors>
    </module>
    <module name="decimal" imports="[]" importfrom="['_decimal:*']">
      <errors>
        <exception>ImportError</exception>
      </errors>
    </module>
    <module name="pickletools" imports="['codecs', 'io', 'pickle', 're', 'sys', 'doctest', 'argparse']" importfrom="['struct:unpack', 'pickle:decode_long']">
      <class name="ArgumentDescriptor" init="obj = ArgumentDescriptor(name,n,reader,doc)">
        <api name="__init__">
          <expr>None</expr>
          <args>['name:NoneType', 'n:NoneType', 'reader:NoneType', 'doc:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StackObject" init="obj = StackObject(name,obtype,doc)">
        <api name="__init__">
          <expr>None</expr>
          <args>['name:NoneType', 'obtype:NoneType', 'doc:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="OpcodeInfo" init="obj = OpcodeInfo(name,code,arg,stack_before,stack_after,proto,doc)">
        <api name="__init__">
          <expr>None</expr>
          <args>['name:NoneType', 'code:NoneType', 'arg:NoneType', 'stack_before:NoneType', 'stack_after:NoneType', 'proto:NoneType', 'doc:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="read_uint1">
        <expr>read_uint1(f)</expr>
        <args>['f:BytesIO']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_uint2">
        <expr>read_uint2(f)</expr>
        <args>['f:BytesIO']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_int4">
        <expr>read_int4(f)</expr>
        <args>['f:BytesIO']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_uint4">
        <expr>read_uint4(f)</expr>
        <args>['f:BytesIO']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_uint8">
        <expr>read_uint8(f)</expr>
        <args>['f:BytesIO']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_stringnl">
        <expr>read_stringnl(f,decode,stripquotes)</expr>
        <args>['f:BytesIO', 'decode:bool', 'stripquotes:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[True, True]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_stringnl_noescape">
        <expr>read_stringnl_noescape(f)</expr>
        <args>['f:BytesIO']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_stringnl_noescape_pair">
        <expr>read_stringnl_noescape_pair(f)</expr>
        <args>['f:BytesIO']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_string1">
        <expr>read_string1(f)</expr>
        <args>['f:BytesIO']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_string4">
        <expr>read_string4(f)</expr>
        <args>['f:BytesIO']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_bytes1">
        <expr>read_bytes1(f)</expr>
        <args>['f:BytesIO']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_bytes4">
        <expr>read_bytes4(f)</expr>
        <args>['f:BytesIO']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_bytes8">
        <expr>read_bytes8(f)</expr>
        <args>['f:BytesIO']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_bytearray8">
        <expr>read_bytearray8(f)</expr>
        <args>['f:BytesIO']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_unicodestringnl">
        <expr>read_unicodestringnl(f)</expr>
        <args>['f:BytesIO']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_unicodestring1">
        <expr>read_unicodestring1(f)</expr>
        <args>['f:BytesIO']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_unicodestring4">
        <expr>read_unicodestring4(f)</expr>
        <args>['f:BytesIO']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_unicodestring8">
        <expr>read_unicodestring8(f)</expr>
        <args>['f:BytesIO']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_decimalnl_short">
        <expr>read_decimalnl_short(f)</expr>
        <args>['f:BytesIO']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_decimalnl_long">
        <expr>read_decimalnl_long(f)</expr>
        <args>['f:BytesIO']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_floatnl">
        <expr>read_floatnl(f)</expr>
        <args>['f:BytesIO']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_float8">
        <expr>read_float8(f)</expr>
        <args>['f:BytesIO']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_long1">
        <expr>read_long1(f)</expr>
        <args>['f:BytesIO']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_long4">
        <expr>read_long4(f)</expr>
        <args>['f:BytesIO']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="assure_pickle_consistency">
        <expr>assure_pickle_consistency(verbose)</expr>
        <args>['verbose:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[False]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="genops">
        <expr>genops(pickle)</expr>
        <args>['pickle:bytes']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="optimize">
        <expr>optimize(p)</expr>
        <args>['p:bytes']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dis">
        <expr>dis(pickle,out,memo,indentlevel,annotate)</expr>
        <args>['pickle:BytesIO', 'out:NoneType', 'memo:dict', 'indentlevel:int', 'annotate:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, 4, 0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module name="fileinput" imports="['sys', 'os', 'warnings', 'gzip', 'bz2', 'getopt']" importfrom="['types:GenericAlias']">
      <class name="FileInput" init="obj = FileInput(files,inplace,backup)">
        <api name="__init__">
          <expr>None</expr>
          <args>['files:NoneType', 'inplace:NoneType', 'backup:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['mode:NoneType', 'openhook:NoneType']</kwoargs>
          <defa>[None, False, '']</defa>
          <kwodefa>['r', None]</kwodefa>
        </api>
        <api name="readline">
          <expr>obj.readline()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="input">
        <expr>input(files,inplace,backup)</expr>
        <args>['files:object', 'inplace:object', 'backup:object']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['mode:object', 'openhook:object']</kwoargs>
        <defa>[None, False, '']</defa>
        <kwodefa>['r', None]</kwodefa>
      </api>
      <api name="close">
        <expr>close()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="nextfile">
        <expr>nextfile()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="filename">
        <expr>filename()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="lineno">
        <expr>lineno()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="filelineno">
        <expr>filelineno()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="fileno">
        <expr>fileno()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isfirstline">
        <expr>isfirstline()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isstdin">
        <expr>isstdin()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="hook_compressed">
        <expr>hook_compressed(filename,mode)</expr>
        <args>['filename:str', 'mode:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="hook_encoded">
        <expr>hook_encoded(encoding,errors)</expr>
        <args>['encoding:str', 'errors:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>StopIteration</exception>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module name="codecs" imports="['builtins', 'sys', 'encodings']" importfrom="['_codecs:*']">
      <class name="CodecInfo" init=""/>
      <class name="Codec" init="">
        <api name="encode">
          <expr>obj.encode(input,errors)</expr>
          <args>['input:None', 'errors:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,errors)</expr>
          <args>['input:None', 'errors:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalEncoder" init="obj = IncrementalEncoder(errors)">
        <api name="__init__">
          <expr>None</expr>
          <args>['errors:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="encode">
          <expr>obj.encode(input,final)</expr>
          <args>['input:str', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="reset">
          <expr>obj.reset()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getstate">
          <expr>obj.getstate()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setstate">
          <expr>obj.setstate(state)</expr>
          <args>['state:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="BufferedIncrementalEncoder" init="obj = BufferedIncrementalEncoder(errors)">
        <api name="__init__">
          <expr>None</expr>
          <args>['errors:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="encode">
          <expr>obj.ret = encode(input,final)</expr>
          <args>['input:None', 'final:None']</args>
          <return>['result:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getstate">
          <expr>obj.ret = getstate()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setstate">
          <expr>obj.setstate(state)</expr>
          <args>['state:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IncrementalDecoder" init="obj = IncrementalDecoder(errors)">
        <api name="__init__">
          <expr>None</expr>
          <args>['errors:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.decode(input,final)</expr>
          <args>['input:bytes', 'final:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getstate">
          <expr>obj.getstate()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setstate">
          <expr>obj.setstate(state)</expr>
          <args>['state:tuple']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="BufferedIncrementalDecoder" init="obj = BufferedIncrementalDecoder(errors)">
        <api name="__init__">
          <expr>None</expr>
          <args>['errors:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="decode">
          <expr>obj.ret = decode(input,final)</expr>
          <args>['input:None', 'final:None']</args>
          <return>['result:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getstate">
          <expr>obj.getstate()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setstate">
          <expr>obj.setstate(state)</expr>
          <args>['state:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamWriter" init="obj = StreamWriter(stream,errors)">
        <api name="__init__">
          <expr>None</expr>
          <args>['stream:None', 'errors:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="writelines">
          <expr>obj.writelines(list)</expr>
          <args>['list:list']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamReader" init="obj = StreamReader(stream,errors)">
        <api name="__init__">
          <expr>None</expr>
          <args>['stream:None', 'errors:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="readlines">
          <expr>obj.readlines(sizehint,keepends)</expr>
          <args>['sizehint:NoneType', 'keepends:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, True]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamReaderWriter" init="obj = StreamReaderWriter(stream,Reader,Writer,errors)">
        <api name="__init__">
          <expr>None</expr>
          <args>['stream:None', 'Reader:None', 'Writer:None', 'errors:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="StreamRecoder" init="obj = StreamRecoder(stream,encode,decode,Reader,Writer,errors)">
        <api name="__init__">
          <expr>None</expr>
          <args>['stream:None', 'encode:None', 'decode:None', 'Reader:None', 'Writer:None', 'errors:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['strict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="open">
        <expr>open(filename,mode,encoding,errors,buffering)</expr>
        <args>['filename:str', 'mode:str', 'encoding:str', 'errors:str', 'buffering:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['r', None, 'strict', 'int']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="EncodedFile">
        <expr>EncodedFile(file,data_encoding,file_encoding,errors)</expr>
        <args>['file:BytesIO', 'data_encoding:str', 'file_encoding:str', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, 'strict']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getencoder">
        <expr>getencoder(encoding)</expr>
        <args>['encoding:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getdecoder">
        <expr>getdecoder(encoding)</expr>
        <args>['encoding:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getincrementalencoder">
        <expr>getincrementalencoder(encoding)</expr>
        <args>['encoding:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getincrementaldecoder">
        <expr>getincrementaldecoder(encoding)</expr>
        <args>['encoding:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getreader">
        <expr>getreader(encoding)</expr>
        <args>['encoding:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getwriter">
        <expr>getwriter(encoding)</expr>
        <args>['encoding:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="iterencode">
        <expr>iterencode(iterator,encoding,errors)</expr>
        <args>['iterator:str', 'encoding:str', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['strict']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="iterdecode">
        <expr>iterdecode(iterator,encoding,errors)</expr>
        <args>['iterator:generator', 'encoding:str', 'errors:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['strict']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="make_identity_dict">
        <expr>make_identity_dict(rng)</expr>
        <args>['rng:range']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="make_encoding_map">
        <expr>ret = make_encoding_map(decoding_map)</expr>
        <args>['decoding_map:None']</args>
        <return>['m:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ImportError</exception>
        <exception>UnicodeDecodeError</exception>
        <exception>LookupError</exception>
      </errors>
    </module>
    <module name="runpy" imports="['sys', 'importlib.machinery', 'importlib.util', 'io', 'types', 'os']" importfrom="['pkgutil:read_code', 'pkgutil:get_importer', 'warnings:warn']">
      <api name="run_module">
        <expr>ret = run_module(mod_name,init_globals,run_name,alter_sys)</expr>
        <args>['mod_name:None', 'init_globals:None', 'run_name:None', 'alter_sys:None']</args>
        <return>['_run_module_code:None', '_run_code:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, False]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="run_path">
        <expr>ret = run_path(path_name,init_globals,run_name)</expr>
        <args>['path_name:None', 'init_globals:None', 'run_name:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>KeyError</exception>
        <exception>ImportError</exception>
        <exception>ImportError</exception>
        <exception>AttributeError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>error</exception>
        <exception>ImportError</exception>
        <exception>_Error</exception>
        <exception>ImportError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module name="mimetypes" imports="['os', 'sys', 'posixpath', 'urllib.parse', 'winreg', 'getopt']" importfrom="[]">
      <class name="MimeTypes" init="obj = MimeTypes(filenames,strict)">
        <api name="__init__">
          <expr>None</expr>
          <args>['filenames:NoneType', 'strict:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, True]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="guess_type">
          <expr>obj.guess_type(url,strict)</expr>
          <args>['url:str', 'strict:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[True]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="guess_extension">
          <expr>obj.guess_extension(type,strict)</expr>
          <args>['type:str', 'strict:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[True]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read">
          <expr>obj.read(filename,strict)</expr>
          <args>['filename:str', 'strict:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[True]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read_windows_registry">
          <expr>obj.read_windows_registry(strict)</expr>
          <args>['strict:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[True]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="guess_type">
        <expr>guess_type(url,strict)</expr>
        <args>['url:str', 'strict:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[True]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="guess_all_extensions">
        <expr>ret = guess_all_extensions(type,strict)</expr>
        <args>['type:None', 'strict:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[True]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="guess_extension">
        <expr>guess_extension(type,strict)</expr>
        <args>['type:str', 'strict:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[True]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="add_type">
        <expr>ret = add_type(type,ext,strict)</expr>
        <args>['type:str', 'ext:str', 'strict:bool']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[True]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="init">
        <expr>init(files)</expr>
        <args>['files:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_mime_types">
        <expr>read_mime_types(file)</expr>
        <args>['file:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>getopt.error</exception>
      </errors>
    </module>
    <module name="glob" imports="['contextlib', 'os', 're', 'fnmatch', 'sys']" importfrom="[]">
      <api name="glob">
        <expr>glob(pathname)</expr>
        <args>['pathname:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['recursive:bool']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[False]</kwodefa>
      </api>
      <api name="iglob">
        <expr>iglob(pathname)</expr>
        <args>['pathname:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['recursive:bool']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[False]</kwodefa>
      </api>
      <api name="glob0">
        <expr>ret = glob0(dirname,pattern)</expr>
        <args>['dirname:None', 'pattern:None']</args>
        <return>['_glob0:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="glob1">
        <expr>ret = glob1(dirname,pattern)</expr>
        <args>['dirname:None', 'pattern:None']</args>
        <return>['_glob1:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="has_magic">
        <expr>has_magic(s)</expr>
        <args>['s:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="escape">
        <expr>escape(pathname)</expr>
        <args>['pathname:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>OSError</exception>
        <exception>OSError</exception>
      </errors>
    </module>
    <module name="configparser" imports="['functools', 'io', 'itertools', 'os', 're', 'sys', 'warnings']" importfrom="['collections.abc:MutableMapping', 'collections:ChainMap']">
      <class name="Error" init="obj = Error(msg)">
        <api name="__init__">
          <expr>None</expr>
          <args>['msg:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Interpolation" init="">
        <api name="before_get">
          <expr>obj.before_get(parser,section,option,value,defaults)</expr>
          <args>['parser:RawConfigParser', 'section:str', 'option:str', 'value:str', 'defaults:ChainMap']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="before_set">
          <expr>obj.before_set(parser,section,option,value)</expr>
          <args>['parser:ConfigParser', 'section:str', 'option:str', 'value:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="before_read">
          <expr>obj.before_read(parser,section,option,value)</expr>
          <args>['parser:RawConfigParser', 'section:str', 'option:str', 'value:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="before_write">
          <expr>obj.before_write(parser,section,option,value)</expr>
          <args>['parser:ConfigParser', 'section:str', 'option:str', 'value:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="BasicInterpolation" init="">
        <api name="before_get">
          <expr>obj.before_get(parser,section,option,value,defaults)</expr>
          <args>['parser:ConfigParser', 'section:str', 'option:str', 'value:str', 'defaults:ChainMap']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="before_set">
          <expr>obj.before_set(parser,section,option,value)</expr>
          <args>['parser:ConfigParser', 'section:str', 'option:str', 'value:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ExtendedInterpolation" init="">
        <api name="before_get">
          <expr>obj.before_get(parser,section,option,value,defaults)</expr>
          <args>['parser:ConfigParser', 'section:str', 'option:str', 'value:str', 'defaults:dict']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="before_set">
          <expr>obj.before_set(parser,section,option,value)</expr>
          <args>['parser:ConfigParser', 'section:str', 'option:str', 'value:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="LegacyInterpolation" init="">
        <api name="before_get">
          <expr>obj.before_get(parser,section,option,value,vars)</expr>
          <args>['parser:ConfigParser', 'section:str', 'option:str', 'value:str', 'vars:dict']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="before_set">
          <expr>obj.before_set(parser,section,option,value)</expr>
          <args>['parser:ConfigParser', 'section:str', 'option:str', 'value:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="RawConfigParser" init="obj = RawConfigParser(defaults,dict_type,allow_no_value)">
        <api name="__init__">
          <expr>None</expr>
          <args>['defaults:NoneType', 'dict_type:NoneType', 'allow_no_value:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['delimiters:NoneType', 'comment_prefixes:NoneType', 'inline_comment_prefixes:NoneType', 'strict:NoneType', 'empty_lines_in_values:NoneType', 'default_section:NoneType', 'interpolation:NoneType', 'converters:NoneType']</kwoargs>
          <defa>[None, '_default_dict', False]</defa>
          <kwodefa>[None, None, None, True, True, 'DEFAULTSECT', '_UNSET', '_UNSET']</kwodefa>
        </api>
        <api name="defaults">
          <expr>obj.defaults()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sections">
          <expr>obj.sections()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_section">
          <expr>obj.has_section(section)</expr>
          <args>['section:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="options">
          <expr>obj.options(section)</expr>
          <args>['section:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read">
          <expr>obj.read(filenames,encoding)</expr>
          <args>['filenames:list', 'encoding:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="read_string">
          <expr>obj.read_string(string,source)</expr>
          <args>['string:str', 'source:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['&lt;string&gt;']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="readfp">
          <expr>obj.readfp(fp,filename)</expr>
          <args>['fp:None', 'filename:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getint">
          <expr>obj.getint(section,option)</expr>
          <args>['section:str', 'option:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['raw:bool', 'vars:NoneType', 'fallback:object']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[False, None, '_UNSET']</kwodefa>
        </api>
        <api name="getfloat">
          <expr>obj.getfloat(section,option)</expr>
          <args>['section:str', 'option:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['raw:bool', 'vars:NoneType', 'fallback:object']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[False, None, '_UNSET']</kwodefa>
        </api>
        <api name="getboolean">
          <expr>obj.getboolean(section,option)</expr>
          <args>['section:str', 'option:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['raw:bool', 'vars:NoneType', 'fallback:object']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[False, None, '_UNSET']</kwodefa>
        </api>
        <api name="popitem">
          <expr>obj.popitem()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_option">
          <expr>obj.has_option(section,option)</expr>
          <args>['section:str', 'option:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="remove_option">
          <expr>obj.remove_option(section,option)</expr>
          <args>['section:str', 'option:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="converters">
          <expr>obj.converters()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ConfigParser" init=""/>
      <class name="SafeConfigParser" init="obj = SafeConfigParser()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="SectionProxy" init="obj = SectionProxy(parser,name)">
        <api name="__init__">
          <expr>None</expr>
          <args>['parser:NoneType', 'name:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parser">
          <expr>obj.parser()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="name">
          <expr>obj.name()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ConverterMapping" init="obj = ConverterMapping(parser)">
        <api name="__init__">
          <expr>None</expr>
          <args>['parser:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>configparser.NoSectionError</exception>
        <exception>configparser.DuplicateSectionError</exception>
        <exception>configparser.DuplicateOptionError</exception>
        <exception>configparser.NoOptionError</exception>
        <exception>configparser.InterpolationError</exception>
        <exception>configparser.InterpolationMissingOptionError</exception>
        <exception>configparser.InterpolationSyntaxError</exception>
        <exception>configparser.InterpolationDepthError</exception>
        <exception>configparser.ParsingError</exception>
        <exception>configparser.MissingSectionHeaderError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>NoSectionError</exception>
        <exception>NoOptionError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>AttributeError</exception>
        <exception>DuplicateSectionError</exception>
        <exception>ValueError</exception>
        <exception>NoSectionError</exception>
        <exception>KeyError</exception>
        <exception>NoSectionError</exception>
        <exception>NoOptionError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>TypeError</exception>
        <exception>TypeError</exception>
        <exception>AttributeError</exception>
      </errors>
    </module>
    <module name="symbol" imports="['warnings']" importfrom="[]"/>
    <module name="cmd" imports="['string', 'sys', 'readline']" importfrom="[]">
      <class name="Cmd" init="obj = Cmd(completekey,stdin,stdout)">
        <api name="__init__">
          <expr>None</expr>
          <args>['completekey:NoneType', 'stdin:NoneType', 'stdout:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['tab', None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="cmdloop">
          <expr>obj.cmdloop(intro)</expr>
          <args>['intro:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="completedefault">
          <expr>obj.ret = completedefault()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="completenames">
          <expr>obj.ret = completenames(text)</expr>
          <args>['text:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="complete">
          <expr>obj.ret = complete(text,state)</expr>
          <args>['text:None', 'state:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="complete_help">
          <expr>obj.ret = complete_help()</expr>
          <args>[]</args>
          <return>['list:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_help">
          <expr>obj.do_help(arg)</expr>
          <args>['arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>ImportError</exception>
        <exception>EOFError</exception>
        <exception>ImportError</exception>
        <exception>AttributeError</exception>
        <exception>AttributeError</exception>
        <exception>IndexError</exception>
        <exception>AttributeError</exception>
      </errors>
    </module>
    <module name="crypt" imports="['sys', 'errno', 'string']" importfrom="['random:SystemRandom', 'collections:namedtuple']">
      <api name="mksalt">
        <expr>ret = mksalt(method)</expr>
        <args>['method:None']</args>
        <return>['s:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['rounds:None']</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <api name="crypt">
        <expr>ret = crypt(word,salt)</expr>
        <args>['word:None', 'salt:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ModuleNotFoundError</exception>
        <exception>OSError</exception>
      </errors>
    </module>
    <module name="functools" imports="['types', 'weakref']" importfrom="['abc:get_cache_token', 'collections:namedtuple', 'reprlib:recursive_repr', '_thread:RLock', 'types:GenericAlias', '_functools:cmp_to_key', '_functools:reduce', '_functools:partial']">
      <class name="K" init=""/>
      <class name="partial" init=""/>
      <class name="partialmethod" init="obj = partialmethod()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>['self:NoneType', 'func:NoneType']</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="singledispatchmethod" init="obj = singledispatchmethod(func)">
        <api name="__init__">
          <expr>None</expr>
          <args>['func:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="cached_property" init="obj = cached_property(func)">
        <api name="__init__">
          <expr>None</expr>
          <args>['func:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="update_wrapper">
        <expr>update_wrapper(wrapper,wrapped,assigned,updated)</expr>
        <args>['wrapper:function', 'wrapped:function', 'assigned:tuple', 'updated:tuple']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['WRAPPER_ASSIGNMENTS', 'WRAPPER_UPDATES']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="wraps">
        <expr>wraps(wrapped,assigned,updated)</expr>
        <args>['wrapped:function', 'assigned:tuple', 'updated:tuple']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['WRAPPER_ASSIGNMENTS', 'WRAPPER_UPDATES']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="total_ordering">
        <expr>total_ordering(cls)</expr>
        <args>['cls:type']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="cmp_to_key">
        <expr>cmp_to_key(mycmp)</expr>
        <args>['mycmp:function']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="reduce">
        <expr>ret = reduce(function,sequence,initial)</expr>
        <args>['function:None', 'sequence:None', 'initial:None']</args>
        <return>['value:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['_initial_missing']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="lru_cache">
        <expr>lru_cache(maxsize,typed)</expr>
        <args>['maxsize:int', 'typed:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[128, False]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="cache">
        <expr>ret = cache()</expr>
        <args>[]</args>
        <return>['lru_cache:None']</return>
        <dependences>None</dependences>
        <posargs>['user_function:None']</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="singledispatch">
        <expr>singledispatch(func)</expr>
        <args>['func:function']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>StopIteration</exception>
        <exception>ImportError</exception>
        <exception>ImportError</exception>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>AttributeError</exception>
        <exception>TypeError</exception>
      </errors>
    </module>
    <module name="imp" imports="['importlib', 'os', 'sys', 'tokenize', 'types', 'warnings', 'importlib.machinery']" importfrom="['_imp:lock_held', '_imp:acquire_lock', '_imp:release_lock', '_imp:get_frozen_object', '_imp:is_frozen_package', '_imp:init_frozen', '_imp:is_builtin', '_imp:is_frozen', '_imp:create_dynamic', 'importlib._bootstrap_external:SourcelessFileLoader', 'importlib:machinery', 'importlib:util']">
      <class name="NullImporter" init="obj = NullImporter(path)">
        <api name="__init__">
          <expr>None</expr>
          <args>['path:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="find_module">
          <expr>obj.ret = find_module(fullname)</expr>
          <args>['fullname:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="new_module">
        <expr>ret = new_module(name)</expr>
        <args>['name:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_magic">
        <expr>ret = get_magic()</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_tag">
        <expr>get_tag()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="cache_from_source">
        <expr>cache_from_source(path,debug_override)</expr>
        <args>['path:str', 'debug_override:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="source_from_cache">
        <expr>ret = source_from_cache(path)</expr>
        <args>['path:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_suffixes">
        <expr>get_suffixes()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="load_source">
        <expr>load_source(name,pathname,file)</expr>
        <args>['name:str', 'pathname:str', 'file:TextIOWrapper']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="load_compiled">
        <expr>ret = load_compiled(name,pathname,file)</expr>
        <args>['name:str', 'pathname:str', 'file:NoneType']</args>
        <return>['module:module']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="load_package">
        <expr>ret = load_package(name,path)</expr>
        <args>['name:str', 'path:str']</args>
        <return>['_exec:function', '_load:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="load_module">
        <expr>load_module(name,file,filename,details)</expr>
        <args>['name:str', 'file:TextIOWrapper', 'filename:str', 'details:tuple']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="find_module">
        <expr>find_module(name,path)</expr>
        <args>['name:str', 'path:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="reload">
        <expr>reload(module)</expr>
        <args>['module:module']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="init_builtin">
        <expr>ret = init_builtin(name)</expr>
        <args>['name:None']</args>
        <return>['_builtin_from_name:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="load_dynamic">
        <expr>load_dynamic(name,path,file)</expr>
        <args>['name:str', 'path:str', 'file:BufferedReader']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ImportError</exception>
        <exception>ImportError</exception>
      </errors>
    </module>
    <module name="sre_compile" imports="['sre_parse', 'sys']" importfrom="['sre_constants:*']">
      <api name="isstring">
        <expr>isstring(obj)</expr>
        <args>['obj:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dis">
        <expr>dis(code)</expr>
        <args>['code:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="compile">
        <expr>compile(p,flags)</expr>
        <args>['p:str', 'flags:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>IndexError</exception>
      </errors>
    </module>
    <module name="uuid" imports="['os', 'sys', 'platform', 'io', 'shutil', 'subprocess', 'socket', 'random', 'time']" importfrom="['enum:Enum', 'hashlib:md5', 'hashlib:sha1']">
      <class name="SafeUUID" init=""/>
      <class name="UUID" init="obj = UUID(hex,bytes,bytes_le,fields,int,version)">
        <api name="__init__">
          <expr>None</expr>
          <args>['hex:builtin_function_or_method', 'bytes:type', 'bytes_le:NoneType', 'fields:NoneType', 'int:type', 'version:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['is_safe:NoneType']</kwoargs>
          <defa>[None, None, None, None, None, None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="bytes">
          <expr>obj.bytes()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="bytes_le">
          <expr>obj.bytes_le()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="fields">
          <expr>obj.fields()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="time_low">
          <expr>obj.time_low()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="time_mid">
          <expr>obj.time_mid()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="time_hi_version">
          <expr>obj.time_hi_version()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clock_seq_hi_variant">
          <expr>obj.clock_seq_hi_variant()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clock_seq_low">
          <expr>obj.clock_seq_low()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="time">
          <expr>obj.time()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clock_seq">
          <expr>obj.clock_seq()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="node">
          <expr>obj.node()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="hex">
          <expr>obj.hex()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="urn">
          <expr>obj.urn()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="variant">
          <expr>obj.variant()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="version">
          <expr>obj.version()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="getnode">
        <expr>getnode()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="uuid1">
        <expr>uuid1(node,clock_seq)</expr>
        <args>['node:NoneType', 'clock_seq:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="uuid3">
        <expr>uuid3(namespace,name)</expr>
        <args>['namespace:UUID', 'name:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="uuid4">
        <expr>uuid4()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="uuid5">
        <expr>uuid5(namespace,name)</expr>
        <args>['namespace:UUID', 'name:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>OSError</exception>
        <exception>ValueError</exception>
        <exception>IndexError</exception>
        <exception>ValueError</exception>
        <exception>ValueError</exception>
        <exception>IndexError</exception>
        <exception>OSError</exception>
        <exception>ImportError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module name="socket" imports="['os', 'sys', 'io', 'selectors', 'errno', 'array']" importfrom="['_socket:*', 'enum:IntEnum', 'enum:IntFlag']">
      <class name="socket" init="obj = socket(family,type,proto,fileno)">
        <api name="__init__">
          <expr>None</expr>
          <args>['family:None', 'type:None', 'proto:None', 'fileno:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['int', 'int', 'int', None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="accept">
          <expr>obj.accept()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="makefile">
          <expr>obj.makefile(mode,buffering)</expr>
          <args>['mode:str', 'buffering:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['encoding:NoneType', 'errors:NoneType', 'newline:NoneType']</kwoargs>
          <defa>['r', None]</defa>
          <kwodefa>[None, None, None]</kwodefa>
        </api>
        <api name="sendfile">
          <expr>obj.ret = sendfile(file,offset,count)</expr>
          <args>['file:BufferedReader', 'offset:int', 'count:NoneType']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[0, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="family">
          <expr>obj.family()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="type">
          <expr>obj.type()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="SocketIO" init="obj = SocketIO(sock,mode)">
        <api name="__init__">
          <expr>None</expr>
          <args>['sock:None', 'mode:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="readinto">
          <expr>obj.readinto(b)</expr>
          <args>['b:memoryview']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="write">
          <expr>obj.write(b)</expr>
          <args>['b:memoryview']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="readable">
          <expr>obj.readable()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="writable">
          <expr>obj.writable()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="name">
          <expr>obj.name()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="mode">
          <expr>obj.mode()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="fromfd">
        <expr>fromfd(fd,family,type,proto)</expr>
        <args>['fd:int', 'family:AddressFamily', 'type:SocketKind', 'proto:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="send_fds">
        <expr>ret = send_fds(sock,buffers,fds,flags,address)</expr>
        <args>['sock:socket', 'buffers:list', 'fds:list', 'flags:int', 'address:NoneType']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="recv_fds">
        <expr>recv_fds(sock,bufsize,maxfds,flags)</expr>
        <args>['sock:socket', 'bufsize:int', 'maxfds:int', 'flags:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="fromshare">
        <expr>ret = fromshare(info)</expr>
        <args>['info:None']</args>
        <return>['socket:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="socketpair">
        <expr>socketpair(family,type,proto)</expr>
        <args>['family:NoneType', 'type:SocketKind', 'proto:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['AF_INET', 'SOCK_STREAM', 0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getfqdn">
        <expr>getfqdn(name)</expr>
        <args>['name:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="create_connection">
        <expr>create_connection(address,timeout,source_address)</expr>
        <args>['address:tuple', 'timeout:object', 'source_address:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['_GLOBAL_DEFAULT_TIMEOUT', None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="has_dualstack_ipv6">
        <expr>has_dualstack_ipv6()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="create_server">
        <expr>create_server(address)</expr>
        <args>['address:tuple']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['family:AddressFamily', 'backlog:NoneType', 'reuse_port:bool', 'dualstack_ipv6:bool']</kwoargs>
        <defa>[]</defa>
        <kwodefa>['AF_INET', None, False, False]</kwodefa>
      </api>
      <api name="getaddrinfo">
        <expr>getaddrinfo(host,port,family,type,proto,flags)</expr>
        <args>['host:str', 'port:int', 'family:int', 'type:SocketKind', 'proto:int', 'flags:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0, 0, 0, 0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ImportError</exception>
        <exception>ValueError</exception>
        <exception>error</exception>
        <exception>error</exception>
        <exception>BlockingIOError</exception>
        <exception>_GiveupOnSendfile</exception>
        <exception>NameError</exception>
        <exception>BlockingIOError</exception>
        <exception>InterruptedError</exception>
        <exception>timeout</exception>
        <exception>error</exception>
        <exception>error</exception>
        <exception>error</exception>
        <exception>error</exception>
        <exception>error</exception>
        <exception>error</exception>
        <exception>error</exception>
        <exception>error</exception>
      </errors>
    </module>
    <module name="ssl" imports="['sys', 'os', 'socket', 'base64', 'errno', 'warnings']" importfrom="['collections:namedtuple', 'enum:Enum', 'enum:IntEnum', 'enum:IntFlag', '_ssl:OPENSSL_VERSION_NUMBER', '_ssl:OPENSSL_VERSION_INFO', '_ssl:OPENSSL_VERSION', '_ssl:MemoryBIO', '_ssl:SSLSession', '_ssl:SSLError', '_ssl:SSLZeroReturnError', '_ssl:SSLWantReadError', '_ssl:SSLWantWriteError', '_ssl:SSLSyscallError', '_ssl:SSLEOFError', '_ssl:SSLCertVerificationError', '_ssl:txt2obj', '_ssl:nid2obj', '_ssl:RAND_status', '_ssl:RAND_add', '_ssl:RAND_bytes', '_ssl:RAND_pseudo_bytes', '_ssl:RAND_egd', '_ssl:HAS_SNI', '_ssl:HAS_ECDH', '_ssl:HAS_NPN', '_ssl:HAS_ALPN', '_ssl:HAS_SSLv2', '_ssl:HAS_SSLv3', '_ssl:HAS_TLSv1', '_ssl:HAS_TLSv1_1', '_ssl:HAS_TLSv1_2', '_ssl:HAS_TLSv1_3', '_ssl:enum_certificates', '_ssl:enum_crls', 'socket:socket', 'socket:SOCK_STREAM', 'socket:create_connection', 'socket:SOL_SOCKET', 'socket:SO_TYPE', 'time:strptime', 'calendar:timegm']">
      <class name="TLSVersion" init=""/>
      <class name="Purpose" init=""/>
      <class name="SSLContext" init="">
        <api name="wrap_socket">
          <expr>obj.wrap_socket(sock,server_side,do_handshake_on_connect,suppress_ragged_eofs,server_hostname,session)</expr>
          <args>['sock:socket', 'server_side:bool', 'do_handshake_on_connect:bool', 'suppress_ragged_eofs:bool', 'server_hostname:str', 'session:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False, True, True, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="wrap_bio">
          <expr>obj.wrap_bio(incoming,outgoing,server_side,server_hostname,session)</expr>
          <args>['incoming:MemoryBIO', 'outgoing:MemoryBIO', 'server_side:bool', 'server_hostname:str', 'session:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_npn_protocols">
          <expr>obj.set_npn_protocols(npn_protocols)</expr>
          <args>['npn_protocols:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_servername_callback">
          <expr>obj.set_servername_callback(server_name_callback)</expr>
          <args>['server_name_callback:function']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_alpn_protocols">
          <expr>obj.set_alpn_protocols(alpn_protocols)</expr>
          <args>['alpn_protocols:list']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="load_default_certs">
          <expr>obj.load_default_certs(purpose)</expr>
          <args>['purpose:Purpose']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="options">
          <expr>obj.options(value)</expr>
          <args>['value:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="protocol">
          <expr>obj.protocol()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="verify_flags">
          <expr>obj.verify_flags(value)</expr>
          <args>['value:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="verify_mode">
          <expr>obj.verify_mode(value)</expr>
          <args>['value:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="SSLObject" init="obj = SSLObject()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="context">
          <expr>obj.context(ctx)</expr>
          <args>['ctx:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="session">
          <expr>obj.session(session)</expr>
          <args>['session:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="session_reused">
          <expr>obj.ret = session_reused()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="server_side">
          <expr>obj.ret = server_side()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="server_hostname">
          <expr>obj.ret = server_hostname()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unwrap">
          <expr>obj.unwrap()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="SSLSocket" init="">
        <api name="context">
          <expr>obj.context(ctx)</expr>
          <args>['ctx:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="session">
          <expr>obj.session(session)</expr>
          <args>['session:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="session_reused">
          <expr>obj.session_reused()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dup">
          <expr>obj.dup()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sendmsg">
          <expr>obj.sendmsg()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="recvmsg">
          <expr>obj.recvmsg()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="recvmsg_into">
          <expr>obj.recvmsg_into()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="unwrap">
          <expr>obj.unwrap()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="match_hostname">
        <expr>match_hostname(cert,hostname)</expr>
        <args>['cert:dict', 'hostname:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_default_verify_paths">
        <expr>get_default_verify_paths()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="create_default_context">
        <expr>create_default_context(purpose)</expr>
        <args>['purpose:Purpose']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['cafile:NoneType', 'capath:NoneType', 'cadata:NoneType']</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[None, None, None]</kwodefa>
      </api>
      <api name="wrap_socket">
        <expr>wrap_socket(sock,keyfile,certfile,server_side,cert_reqs,ssl_version,ca_certs,do_handshake_on_connect,suppress_ragged_eofs,ciphers)</expr>
        <args>['sock:socket', 'keyfile:str', 'certfile:NoneType', 'server_side:bool', 'cert_reqs:VerifyMode', 'ssl_version:_SSLMethod', 'ca_certs:NoneType', 'do_handshake_on_connect:bool', 'suppress_ragged_eofs:bool', 'ciphers:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, False, 'CERT_NONE', 'PROTOCOL_TLS', None, True, True, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="cert_time_to_seconds">
        <expr>cert_time_to_seconds(cert_time)</expr>
        <args>['cert_time:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="DER_cert_to_PEM_cert">
        <expr>DER_cert_to_PEM_cert(der_cert_bytes)</expr>
        <args>['der_cert_bytes:bytes']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="PEM_cert_to_DER_cert">
        <expr>PEM_cert_to_DER_cert(pem_cert_string)</expr>
        <args>['pem_cert_string:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_server_certificate">
        <expr>get_server_certificate(addr,ssl_version,ca_certs)</expr>
        <args>['addr:tuple', 'ssl_version:_SSLMethod', 'ca_certs:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['PROTOCOL_TLS', None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_protocol_name">
        <expr>get_protocol_name(protocol_code)</expr>
        <args>['protocol_code:_SSLMethod']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>AttributeError</exception>
        <exception>ValueError</exception>
        <exception>PermissionError</exception>
        <exception>ValueError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>ValueError</exception>
        <exception>SSLError</exception>
        <exception>OSError</exception>
        <exception>ValueError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module name="quopri" imports="['sys', 'getopt']" importfrom="['binascii:a2b_qp', 'binascii:b2a_qp', 'io:BytesIO']">
      <api name="needsquoting">
        <expr>needsquoting(c,quotetabs,header)</expr>
        <args>['c:bytes', 'quotetabs:bool', 'header:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="quote">
        <expr>quote(c)</expr>
        <args>['c:bytes']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="encode">
        <expr>encode(input,output,quotetabs,header)</expr>
        <args>['input:BytesIO', 'output:BytesIO', 'quotetabs:bool', 'header:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[False]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="encodestring">
        <expr>encodestring(s,quotetabs,header)</expr>
        <args>['s:bytes', 'quotetabs:bool', 'header:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[False, False]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="decode">
        <expr>decode(input,output,header)</expr>
        <args>['input:BytesIO', 'output:BytesIO', 'header:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[False]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="decodestring">
        <expr>decodestring(s,header)</expr>
        <args>['s:bytes', 'header:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[False]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ishex">
        <expr>ishex(c)</expr>
        <args>['c:bytes']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="unhex">
        <expr>unhex(s)</expr>
        <args>['s:bytes']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>main()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ImportError</exception>
        <exception>getopt.error</exception>
        <exception>OSError</exception>
      </errors>
    </module>
    <module name="getpass" imports="['contextlib', 'io', 'os', 'sys', 'warnings', 'pwd', 'termios']" importfrom="[]">
      <class name="GetPassWarning" init=""/>
      <api name="unix_getpass">
        <expr>unix_getpass(prompt,stream)</expr>
        <args>['prompt:str', 'stream:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['Password: ', None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="win_getpass">
        <expr>ret = win_getpass(prompt,stream)</expr>
        <args>['prompt:None', 'stream:None']</args>
        <return>['fallback_getpass:None', 'pw:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['Password: ', None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="fallback_getpass">
        <expr>ret = fallback_getpass(prompt,stream)</expr>
        <args>['prompt:str', 'stream:NoneType']</args>
        <return>['_raw_input:function']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['Password: ', None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getuser">
        <expr>getuser()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>OSError</exception>
        <exception>termios.error</exception>
        <exception>UnicodeEncodeError</exception>
        <exception>ImportError</exception>
        <exception>AttributeError</exception>
      </errors>
    </module>
    <module name="pprint" imports="['collections', 're', 'sys', 'types', 'time']" importfrom="['io:StringIO']">
      <class name="PrettyPrinter" init="obj = PrettyPrinter(indent,width,depth,stream)">
        <api name="__init__">
          <expr>None</expr>
          <args>['indent:NoneType', 'width:NoneType', 'depth:NoneType', 'stream:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['compact:NoneType', 'sort_dicts:NoneType']</kwoargs>
          <defa>[1, 80, None, None]</defa>
          <kwodefa>[False, True]</kwodefa>
        </api>
        <api name="isrecursive">
          <expr>obj.isrecursive(object)</expr>
          <args>['object:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isreadable">
          <expr>obj.isreadable(object)</expr>
          <args>['object:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="pprint">
        <expr>pprint(object,stream,indent,width,depth)</expr>
        <args>['object:list', 'stream:NoneType', 'indent:int', 'width:int', 'depth:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['compact:bool', 'sort_dicts:bool']</kwoargs>
        <defa>[None, 1, 80, None]</defa>
        <kwodefa>[False, True]</kwodefa>
      </api>
      <api name="pformat">
        <expr>pformat(object,indent,width,depth)</expr>
        <args>['object:list', 'indent:int', 'width:int', 'depth:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['compact:bool', 'sort_dicts:bool']</kwoargs>
        <defa>[1, 80, None]</defa>
        <kwodefa>[False, True]</kwodefa>
      </api>
      <api name="pp">
        <expr>pp(object)</expr>
        <args>['object:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['sort_dicts:None']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[False]</kwodefa>
      </api>
      <api name="saferepr">
        <expr>saferepr(object)</expr>
        <args>['object:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isreadable">
        <expr>isreadable(object)</expr>
        <args>['object:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isrecursive">
        <expr>isrecursive(object)</expr>
        <args>['object:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>TypeError</exception>
        <exception>StopIteration</exception>
        <exception>StopIteration</exception>
      </errors>
    </module>
    <module name="difflib" imports="['re', 'doctest', 'difflib']" importfrom="['heapq:nlargest', 'collections:namedtuple', 'types:GenericAlias']">
      <class name="SequenceMatcher" init="obj = SequenceMatcher(isjunk,a,b,autojunk)">
        <api name="__init__">
          <expr>None</expr>
          <args>['isjunk:NoneType', 'a:NoneType', 'b:NoneType', 'autojunk:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, '', '', True]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_seqs">
          <expr>obj.set_seqs(a,b)</expr>
          <args>['a:list', 'b:list']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_matching_blocks">
          <expr>obj.get_matching_blocks()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_grouped_opcodes">
          <expr>obj.get_grouped_opcodes(n)</expr>
          <args>['n:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[3]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ratio">
          <expr>obj.ratio()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="quick_ratio">
          <expr>obj.quick_ratio()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="real_quick_ratio">
          <expr>obj.real_quick_ratio()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Differ" init="obj = Differ(linejunk,charjunk)">
        <api name="__init__">
          <expr>None</expr>
          <args>['linejunk:NoneType', 'charjunk:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="compare">
          <expr>obj.compare(a,b)</expr>
          <args>['a:list', 'b:list']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="HtmlDiff" init="obj = HtmlDiff(tabsize,wrapcolumn,linejunk,charjunk)">
        <api name="__init__">
          <expr>None</expr>
          <args>['tabsize:NoneType', 'wrapcolumn:NoneType', 'linejunk:NoneType', 'charjunk:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[8, None, None, 'IS_CHARACTER_JUNK']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="make_file">
          <expr>obj.make_file(fromlines,tolines,fromdesc,todesc,context,numlines)</expr>
          <args>['fromlines:list', 'tolines:list', 'fromdesc:str', 'todesc:str', 'context:bool', 'numlines:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['charset:str']</kwoargs>
          <defa>['', '', False, 5]</defa>
          <kwodefa>['utf-8']</kwodefa>
        </api>
        <api name="make_table">
          <expr>obj.make_table(fromlines,tolines,fromdesc,todesc,context,numlines)</expr>
          <args>['fromlines:list', 'tolines:list', 'fromdesc:str', 'todesc:str', 'context:bool', 'numlines:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['', '', False, 5]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="get_close_matches">
        <expr>get_close_matches(word,possibilities,n,cutoff)</expr>
        <args>['word:str', 'possibilities:list', 'n:int', 'cutoff:float']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[3, 0.6]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="IS_LINE_JUNK">
        <expr>IS_LINE_JUNK(line,pat)</expr>
        <args>['line:str', 'pat:builtin_function_or_method']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="IS_CHARACTER_JUNK">
        <expr>IS_CHARACTER_JUNK(ch,ws)</expr>
        <args>['ch:str', 'ws:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[' \t']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="unified_diff">
        <expr>unified_diff(a,b,fromfile,tofile,fromfiledate,tofiledate,n,lineterm)</expr>
        <args>['a:list', 'b:list', 'fromfile:str', 'tofile:str', 'fromfiledate:str', 'tofiledate:str', 'n:int', 'lineterm:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['', '', '', '', 3, '\n']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="context_diff">
        <expr>context_diff(a,b,fromfile,tofile,fromfiledate,tofiledate,n,lineterm)</expr>
        <args>['a:list', 'b:list', 'fromfile:str', 'tofile:str', 'fromfiledate:str', 'tofiledate:str', 'n:int', 'lineterm:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['', '', '', '', 3, '\n']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="diff_bytes">
        <expr>diff_bytes(dfunc,a,b,fromfile,tofile,fromfiledate,tofiledate,n,lineterm)</expr>
        <args>['dfunc:function', 'a:list', 'b:list', 'fromfile:bytes', 'tofile:bytes', 'fromfiledate:bytes', 'tofiledate:bytes', 'n:int', 'lineterm:bytes']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[b'', b'', b'', b'', 3, b'\n']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ndiff">
        <expr>ndiff(a,b,linejunk,charjunk)</expr>
        <args>['a:list', 'b:list', 'linejunk:NoneType', 'charjunk:function']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, 'IS_CHARACTER_JUNK']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="restore">
        <expr>restore(delta,which)</expr>
        <args>['delta:list', 'which:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>StopIteration</exception>
        <exception>StopIteration</exception>
        <exception>TypeError</exception>
        <exception>TypeError</exception>
        <exception>KeyError</exception>
      </errors>
    </module>
    <module name="statistics" imports="['math', 'numbers', 'random']" importfrom="['fractions:Fraction', 'decimal:Decimal', 'itertools:groupby', 'bisect:bisect_left', 'bisect:bisect_right', 'math:hypot', 'math:sqrt', 'math:fabs', 'math:exp', 'math:erf', 'math:tau', 'math:log', 'math:fsum', 'operator:itemgetter', 'collections:Counter']">
      <class name="NormalDist" init="obj = NormalDist(mu,sigma)">
        <api name="__init__">
          <expr>None</expr>
          <args>['mu:NoneType', 'sigma:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[0.0, 1.0]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="from_samples">
          <expr>obj.ret = from_samples(cls,data)</expr>
          <args>['cls:None', 'data:None']</args>
          <return>['cls:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="samples">
          <expr>obj.samples(n)</expr>
          <args>['n:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['seed:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="pdf">
          <expr>obj.pdf(x)</expr>
          <args>['x:float']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="cdf">
          <expr>obj.cdf(x)</expr>
          <args>['x:float']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="quantiles">
          <expr>obj.quantiles(n)</expr>
          <args>['n:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[4]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="overlap">
          <expr>obj.overlap(other)</expr>
          <args>['other:NormalDist']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="zscore">
          <expr>obj.zscore(x)</expr>
          <args>['x:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="median">
          <expr>obj.median()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="mode">
          <expr>obj.mode()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="stdev">
          <expr>obj.stdev()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="mean">
        <expr>mean(data)</expr>
        <args>['data:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="fmean">
        <expr>fmean(data)</expr>
        <args>['data:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="geometric_mean">
        <expr>geometric_mean(data)</expr>
        <args>['data:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="harmonic_mean">
        <expr>harmonic_mean(data)</expr>
        <args>['data:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="median">
        <expr>median(data)</expr>
        <args>['data:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="median_low">
        <expr>median_low(data)</expr>
        <args>['data:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="median_high">
        <expr>median_high(data)</expr>
        <args>['data:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="median_grouped">
        <expr>median_grouped(data,interval)</expr>
        <args>['data:list', 'interval:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[1]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="mode">
        <expr>mode(data)</expr>
        <args>['data:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="multimode">
        <expr>multimode(data)</expr>
        <args>['data:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="quantiles">
        <expr>quantiles(data)</expr>
        <args>['data:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['n:int', 'method:str']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[4, 'exclusive']</kwodefa>
      </api>
      <api name="variance">
        <expr>variance(data,xbar)</expr>
        <args>['data:list', 'xbar:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="pvariance">
        <expr>pvariance(data,mu)</expr>
        <args>['data:list', 'mu:float']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="stdev">
        <expr>stdev(data,xbar)</expr>
        <args>['data:list', 'xbar:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="pstdev">
        <expr>pstdev(data,mu)</expr>
        <args>['data:list', 'mu:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>statistics.StatisticsError</exception>
        <exception>AttributeError</exception>
        <exception>AttributeError</exception>
        <exception>OverflowError</exception>
        <exception>ValueError</exception>
        <exception>TypeError</exception>
        <exception>TypeError</exception>
        <exception>ZeroDivisionError</exception>
        <exception>ValueError</exception>
        <exception>ZeroDivisionError</exception>
        <exception>TypeError</exception>
        <exception>IndexError</exception>
        <exception>AttributeError</exception>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
      </errors>
    </module>
    <module name="nntplib" imports="['re', 'socket', 'collections', 'datetime', 'sys', 'ssl', 'netrc', 'argparse']" importfrom="['email.header:decode_header']">
      <class name="NNTPError" init="obj = NNTPError()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="NNTP" init="obj = NNTP(host,port,user,password,readermode,usenetrc,timeout)">
        <api name="__init__">
          <expr>None</expr>
          <args>['host:NoneType', 'port:NoneType', 'user:NoneType', 'password:NoneType', 'readermode:NoneType', 'usenetrc:NoneType', 'timeout:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['NNTP_PORT', None, None, None, False, '_GLOBAL_DEFAULT_TIMEOUT']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getwelcome">
          <expr>obj.ret = getwelcome()</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_debuglevel">
          <expr>obj.set_debuglevel(level)</expr>
          <args>['level:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="newgroups">
          <expr>obj.newgroups(date)</expr>
          <args>['date:date']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['file:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="newnews">
          <expr>obj.ret = newnews(group,date)</expr>
          <args>['group:None', 'date:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['file:None']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="list">
          <expr>obj.list(group_pattern)</expr>
          <args>['group_pattern:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['file:NoneType']</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="description">
          <expr>obj.description(group)</expr>
          <args>['group:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="descriptions">
          <expr>obj.ret = descriptions(group_pattern)</expr>
          <args>['group_pattern:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="help">
          <expr>obj.help()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['file:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="stat">
          <expr>obj.ret = stat(message_spec)</expr>
          <args>['message_spec:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="next">
          <expr>obj.ret = next()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="last">
          <expr>obj.ret = last()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="head">
          <expr>obj.ret = head(message_spec)</expr>
          <args>['message_spec:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['file:None']</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="body">
          <expr>obj.ret = body(message_spec)</expr>
          <args>['message_spec:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['file:None']</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="article">
          <expr>obj.ret = article(message_spec)</expr>
          <args>['message_spec:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['file:None']</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="slave">
          <expr>obj.ret = slave()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="xhdr">
          <expr>obj.xhdr(hdr,str)</expr>
          <args>['hdr:str', 'str:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['file:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="xover">
          <expr>obj.xover(start,end)</expr>
          <args>['start:int', 'end:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['file:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="over">
          <expr>obj.over(message_spec)</expr>
          <args>['message_spec:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['file:None']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="date">
          <expr>obj.date()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="post">
          <expr>obj.ret = post(data)</expr>
          <args>['data:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ihave">
          <expr>obj.ret = ihave(message_id,data)</expr>
          <args>['message_id:None', 'data:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="login">
          <expr>obj.login(user,password,usenetrc)</expr>
          <args>['user:str', 'password:str', 'usenetrc:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, True]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="NNTP_SSL" init="obj = NNTP_SSL(host,port,user,password,ssl_context,readermode,usenetrc,timeout)">
        <api name="__init__">
          <expr>None</expr>
          <args>['host:NoneType', 'port:NoneType', 'user:NoneType', 'password:NoneType', 'ssl_context:NoneType', 'readermode:NoneType', 'usenetrc:NoneType', 'timeout:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['NNTP_SSL_PORT', None, None, None, None, False, '_GLOBAL_DEFAULT_TIMEOUT']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="decode_header">
        <expr>decode_header(header_str)</expr>
        <args>['header_str:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="cut">
        <expr>ret = cut(s,lim)</expr>
        <args>['s:None', 'lim:None']</args>
        <return>['s:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ImportError</exception>
        <exception>nntplib.NNTPReplyError</exception>
        <exception>nntplib.NNTPTemporaryError</exception>
        <exception>nntplib.NNTPPermanentError</exception>
        <exception>nntplib.NNTPProtocolError</exception>
        <exception>nntplib.NNTPDataError</exception>
        <exception>OSError</exception>
        <exception>EOFError</exception>
        <exception>NNTPPermanentError</exception>
        <exception>NNTPTemporaryError</exception>
        <exception>AttributeError</exception>
        <exception>NNTPPermanentError</exception>
        <exception>OSError</exception>
        <exception>NNTPPermanentError</exception>
        <exception>NNTPTemporaryError</exception>
      </errors>
    </module>
    <module name="py_compile" imports="['enum', 'importlib._bootstrap_external', 'importlib.machinery', 'importlib.util', 'os', 'os.path', 'sys', 'traceback']" importfrom="[]">
      <class name="PyCompileError" init="obj = PyCompileError(exc_type,exc_value,file,msg)">
        <api name="__init__">
          <expr>None</expr>
          <args>['exc_type:NoneType', 'exc_value:NoneType', 'file:NoneType', 'msg:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="PycInvalidationMode" init=""/>
      <api name="compile">
        <expr>compile(file,cfile,dfile,doraise,optimize,invalidation_mode,quiet)</expr>
        <args>['file:str', 'cfile:str', 'dfile:NoneType', 'doraise:bool', 'optimize:int', 'invalidation_mode:NoneType', 'quiet:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, False, 'int', None, 0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>ret = main(args)</expr>
        <args>['args:None']</args>
        <return>['rv:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>Exception</exception>
        <exception>FileExistsError</exception>
        <exception>PyCompileError</exception>
        <exception>OSError</exception>
        <exception>PyCompileError</exception>
      </errors>
    </module>
    <module name="sre_parse" imports="['unicodedata', 'warnings']" importfrom="['sre_constants:*']">
      <class name="Verbose" init=""/>
      <class name="State" init="obj = State()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="groups">
          <expr>obj.groups()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="opengroup">
          <expr>obj.opengroup(name)</expr>
          <args>['name:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="closegroup">
          <expr>obj.closegroup(gid,p)</expr>
          <args>['gid:int', 'p:SubPattern']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="checkgroup">
          <expr>obj.checkgroup(gid)</expr>
          <args>['gid:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="checklookbehindgroup">
          <expr>obj.checklookbehindgroup(gid,source)</expr>
          <args>['gid:int', 'source:Tokenizer']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="SubPattern" init="obj = SubPattern(state,data)">
        <api name="__init__">
          <expr>None</expr>
          <args>['state:None', 'data:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Tokenizer" init="obj = Tokenizer(string)">
        <api name="__init__">
          <expr>None</expr>
          <args>['string:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="match">
          <expr>obj.match(char)</expr>
          <args>['char:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getwhile">
          <expr>obj.getwhile(n,charset)</expr>
          <args>['n:int', 'charset:frozenset']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getuntil">
          <expr>obj.getuntil(terminator,name)</expr>
          <args>['terminator:str', 'name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pos">
          <expr>obj.ret = pos()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tell">
          <expr>obj.tell()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="seek">
          <expr>obj.seek(index)</expr>
          <args>['index:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="fix_flags">
        <expr>fix_flags(src,flags)</expr>
        <args>['src:str', 'flags:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parse">
        <expr>parse(str,flags,state)</expr>
        <args>['str:str', 'flags:int', 'state:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parse_template">
        <expr>parse_template(source,state)</expr>
        <args>['source:str', 'state:Pattern']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="expand_template">
        <expr>expand_template(template,match)</expr>
        <args>['template:tuple', 'match:Match']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>IndexError</exception>
        <exception>IndexError</exception>
        <exception>KeyError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>KeyError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>ValueError</exception>
        <exception>error</exception>
        <exception>Verbose</exception>
        <exception>KeyError</exception>
        <exception>ValueError</exception>
        <exception>KeyError</exception>
        <exception>IndexError</exception>
      </errors>
    </module>
    <module name="abc" imports="[]" importfrom="['_abc:get_cache_token']">
      <class name="abstractclassmethod" init="obj = abstractclassmethod(callable)">
        <api name="__init__">
          <expr>None</expr>
          <args>['callable:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="abstractstaticmethod" init="obj = abstractstaticmethod(callable)">
        <api name="__init__">
          <expr>None</expr>
          <args>['callable:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="abstractproperty" init=""/>
      <class name="ABCMeta" init="">
        <api name="register">
          <expr>obj.ret = register(cls,subclass)</expr>
          <args>['cls:None', 'subclass:None']</args>
          <return>['_abc_register:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ABC" init=""/>
      <api name="abstractmethod">
        <expr>abstractmethod(funcobj)</expr>
        <args>['funcobj:function']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ImportError</exception>
      </errors>
    </module>
    <module name="contextlib" imports="['abc', 'sys']" importfrom="['collections:deque', 'functools:wraps', 'types:MethodType', 'types:GenericAlias']">
      <class name="AbstractContextManager" init=""/>
      <class name="AbstractAsyncContextManager" init=""/>
      <class name="ContextDecorator" init=""/>
      <class name="closing" init="obj = closing(thing)">
        <api name="__init__">
          <expr>None</expr>
          <args>['thing:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="redirect_stdout" init=""/>
      <class name="redirect_stderr" init=""/>
      <class name="suppress" init="obj = suppress()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ExitStack" init=""/>
      <class name="AsyncExitStack" init="">
        <api name="push_async_exit">
          <expr>obj.ret = push_async_exit(exit)</expr>
          <args>['exit:None']</args>
          <return>['exit:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="push_async_callback">
          <expr>obj.push_async_callback()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>['self:AsyncExitStack', 'callback:function']</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="nullcontext" init="obj = nullcontext(enter_result)">
        <api name="__init__">
          <expr>None</expr>
          <args>['enter_result:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="contextmanager">
        <expr>contextmanager(func)</expr>
        <args>['func:function']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="asynccontextmanager">
        <expr>asynccontextmanager(func)</expr>
        <args>['func:function']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>StopIteration</exception>
        <exception>StopIteration</exception>
        <exception>StopIteration</exception>
        <exception>RuntimeError</exception>
        <exception>BaseException</exception>
        <exception>AttributeError</exception>
        <exception>BaseException</exception>
        <exception>AttributeError</exception>
      </errors>
    </module>
    <module name="signal" imports="[]" importfrom="['_signal:*', 'enum:IntEnum']">
      <api name="signal">
        <expr>signal(signalnum,handler)</expr>
        <args>['signalnum:Signals', 'handler:function']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getsignal">
        <expr>getsignal(signalnum)</expr>
        <args>['signalnum:Signals']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="pthread_sigmask">
        <expr>pthread_sigmask(how,mask)</expr>
        <args>['how:Sigmasks', 'mask:tuple']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="sigpending">
        <expr>ret = sigpending()</expr>
        <args>[]</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="sigwait">
        <expr>ret = sigwait(sigset)</expr>
        <args>['sigset:None']</args>
        <return>['_int_to_enum:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="valid_signals">
        <expr>valid_signals()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ValueError</exception>
        <exception>ValueError</exception>
        <exception>TypeError</exception>
      </errors>
    </module>
    <module name="tty" imports="[]" importfrom="['termios:*']">
      <api name="setraw">
        <expr>setraw(fd,when)</expr>
        <args>['fd:int', 'when:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['TCSAFLUSH']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="setcbreak">
        <expr>setcbreak(fd,when)</expr>
        <args>['fd:None', 'when:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['TCSAFLUSH']</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="copyreg" imports="[]" importfrom="[]">
      <api name="pickle">
        <expr>pickle(ob_type,pickle_function,constructor_ob)</expr>
        <args>['ob_type:type', 'pickle_function:builtin_function_or_method', 'constructor_ob:builtin_function_or_method']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="constructor">
        <expr>constructor(object)</expr>
        <args>['object:builtin_function_or_method']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="pickle_complex">
        <expr>pickle_complex(c)</expr>
        <args>['c:complex']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="add_extension">
        <expr>add_extension(module,name,code)</expr>
        <args>['module:str', 'name:str', 'code:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="remove_extension">
        <expr>remove_extension(module,name,code)</expr>
        <args>['module:str', 'name:str', 'code:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="clear_extension_cache">
        <expr>clear_extension_cache()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>NameError</exception>
        <exception>AttributeError</exception>
      </errors>
    </module>
    <module name="reprlib" imports="['builtins']" importfrom="['itertools:islice', '_thread:get_ident']">
      <class name="Repr" init="obj = Repr()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="repr_tuple">
          <expr>obj.repr_tuple(x,level)</expr>
          <args>['x:tuple', 'level:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="repr_list">
          <expr>obj.repr_list(x,level)</expr>
          <args>['x:list', 'level:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="repr_array">
          <expr>obj.repr_array(x,level)</expr>
          <args>['x:array', 'level:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="repr_set">
          <expr>obj.repr_set(x,level)</expr>
          <args>['x:set', 'level:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="repr_frozenset">
          <expr>obj.repr_frozenset(x,level)</expr>
          <args>['x:frozenset', 'level:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="repr_deque">
          <expr>obj.ret = repr_deque(x,level)</expr>
          <args>['x:deque', 'level:int']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="repr_dict">
          <expr>obj.repr_dict(x,level)</expr>
          <args>['x:dict', 'level:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="repr_str">
          <expr>obj.repr_str(x,level)</expr>
          <args>['x:str', 'level:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="repr_int">
          <expr>obj.repr_int(x,level)</expr>
          <args>['x:int', 'level:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="recursive_repr">
        <expr>recursive_repr(fillvalue)</expr>
        <args>['fillvalue:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['...']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>Exception</exception>
        <exception>Exception</exception>
      </errors>
    </module>
    <module name="contextvars" imports="[]" importfrom="['_contextvars:Context', '_contextvars:ContextVar', '_contextvars:Token', '_contextvars:copy_context']"/>
    <module name="numbers" imports="[]" importfrom="['abc:ABCMeta', 'abc:abstractmethod']">
      <class name="Number" init=""/>
      <class name="Complex" init="">
        <api name="real">
          <expr>obj.real()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="imag">
          <expr>obj.imag()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="conjugate">
          <expr>obj.conjugate()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Real" init="">
        <api name="real">
          <expr>obj.ret = real()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="imag">
          <expr>obj.ret = imag()</expr>
          <args>[]</args>
          <return>['0:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="conjugate">
          <expr>obj.ret = conjugate()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Rational" init="">
        <api name="numerator">
          <expr>obj.numerator()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="denominator">
          <expr>obj.denominator()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Integral" init="">
        <api name="numerator">
          <expr>obj.ret = numerator()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="denominator">
          <expr>obj.ret = denominator()</expr>
          <args>[]</args>
          <return>['1:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
    </module>
    <module name="hashlib" imports="[]" importfrom="['_hashlib:pbkdf2_hmac', '_hashlib:scrypt']">
      <errors>
        <exception>ImportError</exception>
        <exception>AttributeError</exception>
        <exception>ValueError</exception>
        <exception>ValueError</exception>
        <exception>ImportError</exception>
        <exception>ImportError</exception>
        <exception>ImportError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module name="tokenize" imports="['collections', 'itertools', 're', 'sys', 'token', 'argparse']" importfrom="['builtins:open', 'codecs:lookup', 'codecs:BOM_UTF8', 'io:TextIOWrapper', 'token:*', 'token:EXACT_TOKEN_TYPES']">
      <class name="TokenInfo" init="">
        <api name="exact_type">
          <expr>obj.exact_type()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="TokenError" init=""/>
      <class name="StopTokenizing" init=""/>
      <class name="Untokenizer" init="obj = Untokenizer()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="untokenize">
          <expr>obj.untokenize(iterable)</expr>
          <args>['iterable:list']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="group">
        <expr>ret = group()</expr>
        <args>[]</args>
        <return>['ret:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="any">
        <expr>ret = any()</expr>
        <args>[]</args>
        <return>['ret:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="maybe">
        <expr>ret = maybe()</expr>
        <args>[]</args>
        <return>['ret:int']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="untokenize">
        <expr>untokenize(iterable)</expr>
        <args>['iterable:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="detect_encoding">
        <expr>detect_encoding(readline)</expr>
        <args>['readline:builtin_function_or_method']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="open">
        <expr>open(filename)</expr>
        <args>['filename:PosixPath']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="tokenize">
        <expr>tokenize(readline)</expr>
        <args>['readline:method-wrapper']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="generate_tokens">
        <expr>generate_tokens(readline)</expr>
        <args>['readline:method-wrapper']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>main()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>StopIteration</exception>
        <exception>IndentationError</exception>
        <exception>TokenError</exception>
        <exception>SyntaxError</exception>
        <exception>OSError</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>Exception</exception>
      </errors>
    </module>
    <module name="csv" imports="['re']" importfrom="['_csv:Error', '_csv:writer', '_csv:reader', '_csv:register_dialect', '_csv:unregister_dialect', '_csv:get_dialect', '_csv:list_dialects', '_csv:field_size_limit', '_csv:QUOTE_MINIMAL', '_csv:QUOTE_ALL', '_csv:QUOTE_NONNUMERIC', '_csv:QUOTE_NONE', '_csv:Dialect', 'io:StringIO']">
      <class name="Dialect" init="obj = Dialect()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="excel" init=""/>
      <class name="excel_tab" init=""/>
      <class name="unix_dialect" init=""/>
      <class name="DictReader" init="obj = DictReader(f,fieldnames,restkey,restval,dialect)">
        <api name="__init__">
          <expr>None</expr>
          <args>['f:NoneType', 'fieldnames:NoneType', 'restkey:NoneType', 'restval:NoneType', 'dialect:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, 'excel']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="fieldnames">
          <expr>obj.fieldnames(value)</expr>
          <args>['value:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="DictWriter" init="obj = DictWriter(f,fieldnames,restval,extrasaction,dialect)">
        <api name="__init__">
          <expr>None</expr>
          <args>['f:NoneType', 'fieldnames:NoneType', 'restval:NoneType', 'extrasaction:NoneType', 'dialect:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['', 'raise', 'excel']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="writeheader">
          <expr>obj.writeheader()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Sniffer" init="obj = Sniffer()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sniff">
          <expr>obj.sniff(sample,delimiters)</expr>
          <args>['sample:str', 'delimiters:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="has_header">
          <expr>obj.has_header(sample)</expr>
          <args>['sample:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>TypeError</exception>
        <exception>StopIteration</exception>
        <exception>NameError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>ValueError</exception>
        <exception>OverflowError</exception>
        <exception>ValueError</exception>
        <exception>TypeError</exception>
      </errors>
    </module>
    <module name="sched" imports="['time', 'heapq', 'threading']" importfrom="['collections:namedtuple', 'time:monotonic']">
      <class name="Event" init=""/>
      <class name="scheduler" init="obj = scheduler(timefunc,delayfunc)">
        <api name="__init__">
          <expr>None</expr>
          <args>['timefunc:NoneType', 'delayfunc:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['_time', None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="enter">
          <expr>obj.enter(delay,priority,action,argument,kwargs)</expr>
          <args>['delay:float', 'priority:int', 'action:function', 'argument:tuple', 'kwargs:object']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, '_sentinel']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="cancel">
          <expr>obj.cancel(event)</expr>
          <args>['event:Event']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="empty">
          <expr>obj.empty()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="run">
          <expr>obj.run(blocking)</expr>
          <args>['blocking:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[True]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="queue">
          <expr>obj.ret = queue()</expr>
          <args>[]</args>
          <return>['list:type']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
    </module>
    <module name="genericpath" imports="['os', 'stat']" importfrom="[]">
      <api name="exists">
        <expr>exists(path)</expr>
        <args>['path:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isfile">
        <expr>isfile(path)</expr>
        <args>['path:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isdir">
        <expr>isdir(s)</expr>
        <args>['s:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getsize">
        <expr>getsize(filename)</expr>
        <args>['filename:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getmtime">
        <expr>getmtime(filename)</expr>
        <args>['filename:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getatime">
        <expr>getatime(filename)</expr>
        <args>['filename:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getctime">
        <expr>getctime(filename)</expr>
        <args>['filename:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="commonprefix">
        <expr>commonprefix(m)</expr>
        <args>['m:tuple']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="samestat">
        <expr>samestat(s1,s2)</expr>
        <args>['s1:stat_result', 's2:stat_result']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="samefile">
        <expr>samefile(f1,f2)</expr>
        <args>['f1:str', 'f2:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="sameopenfile">
        <expr>sameopenfile(fp1,fp2)</expr>
        <args>['fp1:int', 'fp2:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>OSError</exception>
        <exception>ValueError</exception>
        <exception>OSError</exception>
        <exception>ValueError</exception>
        <exception>OSError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module name="turtle" imports="['tkinter', 'types', 'math', 'time', 'inspect', 'sys', 're']" importfrom="['os.path:isfile', 'os.path:split', 'os.path:join', 'copy:deepcopy', 'tkinter:simpledialog']">
      <class name="Vec2D" init="">
        <api name="rotate">
          <expr>obj.rotate(angle)</expr>
          <args>['angle:float']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ScrolledCanvas" init="obj = ScrolledCanvas(master,width,height,canvwidth,canvheight)">
        <api name="__init__">
          <expr>None</expr>
          <args>['master:NoneType', 'width:NoneType', 'height:NoneType', 'canvwidth:NoneType', 'canvheight:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[500, 350, 600, 500]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="reset">
          <expr>obj.reset(canvwidth,canvheight,bg)</expr>
          <args>['canvwidth:None', 'canvheight:None', 'bg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="onResize">
          <expr>obj.onResize(event)</expr>
          <args>['event:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="TurtleScreenBase" init="obj = TurtleScreenBase(cv)">
        <api name="__init__">
          <expr>None</expr>
          <args>['cv:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="textinput">
          <expr>obj.ret = textinput(title,prompt)</expr>
          <args>['title:None', 'prompt:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="numinput">
          <expr>obj.ret = numinput(title,prompt,default,minval,maxval)</expr>
          <args>['title:None', 'prompt:None', 'default:None', 'minval:None', 'maxval:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Terminator" init=""/>
      <class name="TurtleGraphicsError" init=""/>
      <class name="Shape" init="obj = Shape(type_,data)">
        <api name="__init__">
          <expr>None</expr>
          <args>['type_:NoneType', 'data:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="addcomponent">
          <expr>obj.addcomponent(poly,fill,outline)</expr>
          <args>['poly:None', 'fill:None', 'outline:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Tbuffer" init="obj = Tbuffer(bufsize)">
        <api name="__init__">
          <expr>None</expr>
          <args>['bufsize:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[10]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="push">
          <expr>obj.push(item)</expr>
          <args>['item:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pop">
          <expr>obj.ret = pop()</expr>
          <args>[]</args>
          <return>['ret:None', 'item:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="nr_of_items">
          <expr>obj.ret = nr_of_items()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="TurtleScreen" init="obj = TurtleScreen(cv,mode,colormode,delay)">
        <api name="__init__">
          <expr>None</expr>
          <args>['cv:NoneType', 'mode:NoneType', 'colormode:NoneType', 'delay:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clear">
          <expr>obj.clear()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setworldcoordinates">
          <expr>obj.setworldcoordinates(llx,lly,urx,ury)</expr>
          <args>['llx:None', 'lly:None', 'urx:None', 'ury:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="register_shape">
          <expr>obj.register_shape(name,shape)</expr>
          <args>['name:None', 'shape:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="colormode">
          <expr>obj.ret = colormode(cmode)</expr>
          <args>['cmode:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="turtles">
          <expr>obj.ret = turtles()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tracer">
          <expr>obj.ret = tracer(n,delay)</expr>
          <args>['n:None', 'delay:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="delay">
          <expr>obj.ret = delay(delay)</expr>
          <args>['delay:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="window_width">
          <expr>obj.ret = window_width()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="window_height">
          <expr>obj.ret = window_height()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getcanvas">
          <expr>obj.ret = getcanvas()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getshapes">
          <expr>obj.ret = getshapes()</expr>
          <args>[]</args>
          <return>['sorted:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="listen">
          <expr>obj.listen(xdummy,ydummy)</expr>
          <args>['xdummy:None', 'ydummy:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ontimer">
          <expr>obj.ontimer(fun,t)</expr>
          <args>['fun:None', 't:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[0]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="bgpic">
          <expr>obj.ret = bgpic(picname)</expr>
          <args>['picname:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="TNavigator" init="obj = TNavigator(mode)">
        <api name="__init__">
          <expr>None</expr>
          <args>['mode:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['DEFAULT_MODE']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="degrees">
          <expr>obj.degrees(fullcircle)</expr>
          <args>['fullcircle:float']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[360.0]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="radians">
          <expr>obj.radians()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="forward">
          <expr>obj.forward(distance)</expr>
          <args>['distance:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="back">
          <expr>obj.back(distance)</expr>
          <args>['distance:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="right">
          <expr>obj.right(angle)</expr>
          <args>['angle:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="left">
          <expr>obj.left(angle)</expr>
          <args>['angle:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pos">
          <expr>obj.pos()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="xcor">
          <expr>obj.xcor()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ycor">
          <expr>obj.ycor()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="home">
          <expr>obj.home()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="setx">
          <expr>obj.setx(x)</expr>
          <args>['x:float']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sety">
          <expr>obj.sety(y)</expr>
          <args>['y:float']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="distance">
          <expr>obj.distance(x,y)</expr>
          <args>['x:Vec2D', 'y:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="towards">
          <expr>obj.towards(x,y)</expr>
          <args>['x:int', 'y:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="heading">
          <expr>obj.heading()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="circle">
          <expr>obj.circle(radius,extent,steps)</expr>
          <args>['radius:None', 'extent:None', 'steps:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="TPen" init="obj = TPen(resizemode)">
        <api name="__init__">
          <expr>None</expr>
          <args>['resizemode:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="resizemode">
          <expr>obj.ret = resizemode(rmode)</expr>
          <args>['rmode:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pensize">
          <expr>obj.ret = pensize(width)</expr>
          <args>['width:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="penup">
          <expr>obj.penup()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pendown">
          <expr>obj.pendown()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isdown">
          <expr>obj.isdown()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="color">
          <expr>obj.color()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pencolor">
          <expr>obj.ret = pencolor()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="fillcolor">
          <expr>obj.ret = fillcolor()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="showturtle">
          <expr>obj.showturtle()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="hideturtle">
          <expr>obj.hideturtle()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="isvisible">
          <expr>obj.isvisible()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="RawTurtle" init="obj = RawTurtle(canvas,shape,undobuffersize,visible)">
        <api name="__init__">
          <expr>None</expr>
          <args>['canvas:NoneType', 'shape:NoneType', 'undobuffersize:NoneType', 'visible:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="undobufferentries">
          <expr>obj.ret = undobufferentries()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clear">
          <expr>obj.clear()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="clone">
          <expr>obj.ret = clone()</expr>
          <args>[]</args>
          <return>['q:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="shape">
          <expr>obj.ret = shape(name)</expr>
          <args>['name:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="shapesize">
          <expr>obj.shapesize(stretch_wid,stretch_len,outline)</expr>
          <args>['stretch_wid:None', 'stretch_len:None', 'outline:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="shearfactor">
          <expr>obj.ret = shearfactor(shear)</expr>
          <args>['shear:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tiltangle">
          <expr>obj.ret = tiltangle(angle)</expr>
          <args>['angle:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="tilt">
          <expr>obj.tilt(angle)</expr>
          <args>['angle:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="shapetransform">
          <expr>obj.ret = shapetransform(t11,t12,t21,t22)</expr>
          <args>['t11:None', 't12:None', 't21:None', 't22:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_shapepoly">
          <expr>obj.ret = get_shapepoly()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="stamp">
          <expr>obj.ret = stamp()</expr>
          <args>[]</args>
          <return>['stitem:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="filling">
          <expr>obj.ret = filling()</expr>
          <args>[]</args>
          <return>['isinstance:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="begin_fill">
          <expr>obj.begin_fill()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_fill">
          <expr>obj.end_fill()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dot">
          <expr>obj.dot(size)</expr>
          <args>['size:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="write">
          <expr>obj.write(arg,move,align,font)</expr>
          <args>['arg:None', 'move:None', 'align:None', 'font:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[False, 'left', None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="begin_poly">
          <expr>obj.begin_poly()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="end_poly">
          <expr>obj.end_poly()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_poly">
          <expr>obj.ret = get_poly()</expr>
          <args>[]</args>
          <return>['tuple:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getscreen">
          <expr>obj.ret = getscreen()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getturtle">
          <expr>obj.ret = getturtle()</expr>
          <args>[]</args>
          <return>['self:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="onrelease">
          <expr>obj.onrelease(fun,btn,add)</expr>
          <args>['fun:None', 'btn:None', 'add:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[1, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ondrag">
          <expr>obj.ondrag(fun,btn,add)</expr>
          <args>['fun:None', 'btn:None', 'add:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[1, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="undo">
          <expr>obj.undo()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Turtle" init="obj = Turtle(shape,undobuffersize,visible)">
        <api name="__init__">
          <expr>None</expr>
          <args>['shape:NoneType', 'undobuffersize:NoneType', 'visible:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="config_dict">
        <expr>config_dict(filename)</expr>
        <args>['filename:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="readconfig">
        <expr>readconfig(cfgdict)</expr>
        <args>['cfgdict:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="Screen">
        <expr>ret = Screen()</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="write_docstringdict">
        <expr>write_docstringdict(filename)</expr>
        <args>['filename:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['turtle_docstringdict']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="read_docstrings">
        <expr>read_docstrings(lang)</expr>
        <args>['lang:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getmethparlist">
        <expr>getmethparlist(ob)</expr>
        <args>['ob:function']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="switchpen">
        <expr>switchpen()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="demo1">
        <expr>demo1()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="demo2">
        <expr>demo2()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ValueError</exception>
        <exception>ValueError</exception>
        <exception>Exception</exception>
        <exception>Exception</exception>
        <exception>TK.TclError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>AttributeError</exception>
        <exception>Exception</exception>
        <exception>ImportError</exception>
        <exception>Exception</exception>
      </errors>
    </module>
    <module name="hmac" imports="['warnings', 'hashlib']" importfrom="[]">
      <class name="HMAC" init="obj = HMAC(key,msg,digestmod)">
        <api name="__init__">
          <expr>None</expr>
          <args>['key:None', 'msg:None', 'digestmod:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, '']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="name">
          <expr>obj.name()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="digest_cons">
          <expr>obj.digest_cons()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="inner">
          <expr>obj.inner()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="outer">
          <expr>obj.outer()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="new">
        <expr>new(key,msg,digestmod)</expr>
        <args>['key:str', 'msg:NoneType', 'digestmod:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, '']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="digest">
        <expr>digest(key,msg,digest)</expr>
        <args>['key:bytes', 'msg:bytes', 'digest:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ImportError</exception>
      </errors>
    </module>
    <module name="zipapp" imports="['contextlib', 'os', 'pathlib', 'shutil', 'stat', 'sys', 'zipfile', 'argparse']" importfrom="[]">
      <api name="create_archive">
        <expr>create_archive(source,target,interpreter,main,filter,compressed)</expr>
        <args>['source:PosixPath', 'target:PosixPath', 'interpreter:NoneType', 'main:NoneType', 'filter:NoneType', 'compressed:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None, False]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_interpreter">
        <expr>get_interpreter(archive)</expr>
        <args>['archive:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>main(args)</expr>
        <args>['args:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>zipapp.ZipAppError</exception>
      </errors>
    </module>
    <module name="code" imports="['sys', 'traceback', 'readline', 'argparse']" importfrom="['codeop:CommandCompiler', 'codeop:compile_command']">
      <class name="InteractiveInterpreter" init="obj = InteractiveInterpreter(locals)">
        <api name="__init__">
          <expr>None</expr>
          <args>['locals:builtin_function_or_method']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="runsource">
          <expr>obj.ret = runsource(source,filename,symbol)</expr>
          <args>['source:None', 'filename:None', 'symbol:None']</args>
          <return>['ret:bool']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['&lt;input&gt;', 'single']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="showsyntaxerror">
          <expr>obj.showsyntaxerror(filename)</expr>
          <args>['filename:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="showtraceback">
          <expr>obj.showtraceback()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="InteractiveConsole" init="obj = InteractiveConsole(locals,filename)">
        <api name="__init__">
          <expr>None</expr>
          <args>['locals:builtin_function_or_method', 'filename:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, '&lt;console&gt;']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="interact">
          <expr>obj.interact(banner,exitmsg)</expr>
          <args>['banner:str', 'exitmsg:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="interact">
        <expr>interact(banner,readfunc,local,exitmsg)</expr>
        <args>['banner:None', 'readfunc:None', 'local:None', 'exitmsg:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>OverflowError</exception>
        <exception>SyntaxError</exception>
        <exception>ValueError</exception>
        <exception>SystemExit</exception>
        <exception>ValueError</exception>
        <exception>AttributeError</exception>
        <exception>AttributeError</exception>
        <exception>EOFError</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>ImportError</exception>
      </errors>
    </module>
    <module name="bz2" imports="['io', 'os']" importfrom="['builtins:open', 'threading:RLock', '_bz2:BZ2Compressor', '_bz2:BZ2Decompressor']">
      <class name="BZ2File" init="obj = BZ2File(filename,mode)">
        <api name="__init__">
          <expr>None</expr>
          <args>['filename:None', 'mode:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['compresslevel:None']</kwoargs>
          <defa>['r']</defa>
          <kwodefa>[9]</kwodefa>
        </api>
        <api name="closed">
          <expr>obj.closed()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="seekable">
          <expr>obj.seekable()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="readable">
          <expr>obj.readable()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="writable">
          <expr>obj.writable()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="open">
        <expr>open(filename,mode,compresslevel,encoding,errors,newline)</expr>
        <args>['filename:str', 'mode:str', 'compresslevel:int', 'encoding:NoneType', 'errors:NoneType', 'newline:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['rb', 9, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="compress">
        <expr>compress(data,compresslevel)</expr>
        <args>['data:bytes', 'compresslevel:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[9]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="decompress">
        <expr>decompress(data)</expr>
        <args>['data:bytes']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>OSError</exception>
      </errors>
    </module>
    <module name="string" imports="['re']" importfrom="['collections:ChainMap']">
      <class name="Template" init="obj = Template(template)">
        <api name="__init__">
          <expr>None</expr>
          <args>['template:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="substitute">
          <expr>obj.substitute()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>['self:Template', 'mapping:dict']</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['_sentinel_dict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="safe_substitute">
          <expr>obj.safe_substitute()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>['self:Template', 'mapping:dict']</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['_sentinel_dict']</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Formatter" init="">
        <api name="format_field">
          <expr>obj.format_field(value,format_spec)</expr>
          <args>['value:str', 'format_spec:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="parse">
          <expr>obj.parse(format_string)</expr>
          <args>['format_string:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="capwords">
        <expr>capwords(s,sep)</expr>
        <args>['s:str', 'sep:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="pkgutil" imports="['importlib', 'importlib.util', 'importlib.machinery', 'os', 'os.path', 're', 'sys', 'warnings', 'marshal', 'inspect', 'zipimport']" importfrom="['collections:namedtuple', 'functools:singledispatch', 'types:ModuleType', 'zipimport:zipimporter']">
      <class name="ImpImporter" init="obj = ImpImporter(path)">
        <api name="__init__">
          <expr>None</expr>
          <args>['path:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ImpLoader" init="obj = ImpLoader(fullname,file,filename,etc)">
        <api name="__init__">
          <expr>None</expr>
          <args>['fullname:None', 'file:None', 'filename:None', 'etc:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_data">
          <expr>obj.ret = get_data(pathname)</expr>
          <args>['pathname:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_package">
          <expr>obj.ret = is_package(fullname)</expr>
          <args>['fullname:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="read_code">
        <expr>ret = read_code(stream)</expr>
        <args>['stream:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="walk_packages">
        <expr>walk_packages(path,prefix,onerror)</expr>
        <args>['path:list', 'prefix:str', 'onerror:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, '', None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="iter_modules">
        <expr>iter_modules(path,prefix)</expr>
        <args>['path:list', 'prefix:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, '']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="iter_importer_modules">
        <expr>iter_importer_modules(importer,prefix)</expr>
        <args>['importer:NoneType', 'prefix:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="iter_zipimport_modules">
        <expr>iter_zipimport_modules(importer,prefix)</expr>
        <args>['importer:zipimporter', 'prefix:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_importer">
        <expr>get_importer(path_item)</expr>
        <args>['path_item:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="iter_importers">
        <expr>iter_importers(fullname)</expr>
        <args>['fullname:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_loader">
        <expr>get_loader(module_or_name)</expr>
        <args>['module_or_name:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="find_loader">
        <expr>find_loader(fullname)</expr>
        <args>['fullname:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="extend_path">
        <expr>extend_path(path,name)</expr>
        <args>['path:list', 'name:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_data">
        <expr>get_data(package,resource)</expr>
        <args>['package:str', 'resource:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="resolve_name">
        <expr>resolve_name(name)</expr>
        <args>['name:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>Exception</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
        <exception>ImportError</exception>
        <exception>AttributeError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>KeyError</exception>
        <exception>AttributeError</exception>
        <exception>OSError</exception>
        <exception>ImportError</exception>
      </errors>
    </module>
    <module name="enum" imports="['sys', 'warnings']" importfrom="['types:MappingProxyType', 'types:DynamicClassAttribute']">
      <class name="auto" init=""/>
      <class name="EnumMeta" init=""/>
      <class name="Enum" init="">
        <api name="name">
          <expr>obj.ret = name()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="value">
          <expr>obj.ret = value()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="IntEnum" init=""/>
      <class name="Flag" init=""/>
      <class name="IntFlag" init=""/>
      <api name="unique">
        <expr>unique(enumeration)</expr>
        <args>['enumeration:EnumMeta']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>TypeError</exception>
        <exception>KeyError</exception>
        <exception>AttributeError</exception>
        <exception>ValueError</exception>
        <exception>KeyError</exception>
        <exception>TypeError</exception>
        <exception>KeyError</exception>
        <exception>TypeError</exception>
        <exception>Exception</exception>
        <exception>TypeError</exception>
        <exception>Exception</exception>
      </errors>
    </module>
    <module name="lzma" imports="['builtins', 'io', 'os']" importfrom="['_lzma:*']">
      <class name="LZMAFile" init="obj = LZMAFile(filename,mode)">
        <api name="__init__">
          <expr>None</expr>
          <args>['filename:None', 'mode:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['format:None', 'check:None', 'preset:None', 'filters:None']</kwoargs>
          <defa>[None, 'r']</defa>
          <kwodefa>[None, 'int', None, None]</kwodefa>
        </api>
        <api name="closed">
          <expr>obj.closed()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="seekable">
          <expr>obj.seekable()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="readable">
          <expr>obj.readable()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="writable">
          <expr>obj.writable()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="open">
        <expr>open(filename,mode)</expr>
        <args>['filename:str', 'mode:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['format:NoneType', 'check:int', 'preset:NoneType', 'filters:NoneType', 'encoding:NoneType', 'errors:NoneType', 'newline:NoneType']</kwoargs>
        <defa>['rb']</defa>
        <kwodefa>[None, 'int', None, None, None, None, None]</kwodefa>
      </api>
      <api name="compress">
        <expr>compress(data,format,check,preset,filters)</expr>
        <args>['data:list', 'format:int', 'check:int', 'preset:NoneType', 'filters:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['FORMAT_XZ', 'int', None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="decompress">
        <expr>decompress(data,format,memlimit,filters)</expr>
        <args>['data:list', 'format:int', 'memlimit:NoneType', 'filters:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['FORMAT_AUTO', None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>LZMAError</exception>
      </errors>
    </module>
    <module name="sre_constants" imports="[]" importfrom="['_sre:MAXREPEAT', '_sre:MAXGROUPS']">
      <class name="error" init="obj = error(msg,pattern,pos)">
        <api name="__init__">
          <expr>None</expr>
          <args>['msg:None', 'pattern:None', 'pos:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="dump">
        <expr>dump(f,d,prefix)</expr>
        <args>['f:None', 'd:None', 'prefix:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="pdb" imports="['os', 'io', 're', 'sys', 'cmd', 'bdb', 'dis', 'code', 'glob', 'pprint', 'signal', 'inspect', 'tokenize', 'traceback', 'linecache', 'shlex', 'runpy', 'pydoc', 'getopt', 'pdb']" importfrom="[]">
      <class name="Restart" init=""/>
      <class name="Pdb" init="obj = Pdb(completekey,stdin,stdout,skip,nosigint,readrc)">
        <api name="__init__">
          <expr>None</expr>
          <args>['completekey:NoneType', 'stdin:NoneType', 'stdout:NoneType', 'skip:NoneType', 'nosigint:NoneType', 'readrc:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['tab', None, None, None, False, True]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sigint_handler">
          <expr>obj.sigint_handler(signum,frame)</expr>
          <args>['signum:None', 'frame:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="user_call">
          <expr>obj.user_call(frame,argument_list)</expr>
          <args>['frame:None', 'argument_list:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="user_line">
          <expr>obj.user_line(frame)</expr>
          <args>['frame:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="bp_commands">
          <expr>obj.ret = bp_commands(frame)</expr>
          <args>['frame:None']</args>
          <return>['1:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="user_return">
          <expr>obj.user_return(frame,return_value)</expr>
          <args>['frame:None', 'return_value:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="user_exception">
          <expr>obj.user_exception(frame,exc_info)</expr>
          <args>['frame:None', 'exc_info:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="preloop">
          <expr>obj.preloop()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="displayhook">
          <expr>obj.displayhook(obj)</expr>
          <args>['obj:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="default">
          <expr>obj.default(line)</expr>
          <args>['line:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="precmd">
          <expr>obj.ret = precmd(line)</expr>
          <args>['line:None']</args>
          <return>['line:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_commands">
          <expr>obj.do_commands(arg)</expr>
          <args>['arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_tbreak">
          <expr>obj.do_tbreak(arg)</expr>
          <args>['arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="lineinfo">
          <expr>obj.ret = lineinfo(identifier)</expr>
          <args>['identifier:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_enable">
          <expr>obj.do_enable(arg)</expr>
          <args>['arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_disable">
          <expr>obj.do_disable(arg)</expr>
          <args>['arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_condition">
          <expr>obj.do_condition(arg)</expr>
          <args>['arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_ignore">
          <expr>obj.do_ignore(arg)</expr>
          <args>['arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_clear">
          <expr>obj.do_clear(arg)</expr>
          <args>['arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_where">
          <expr>obj.do_where(arg)</expr>
          <args>['arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_up">
          <expr>obj.do_up(arg)</expr>
          <args>['arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_down">
          <expr>obj.do_down(arg)</expr>
          <args>['arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_until">
          <expr>obj.ret = do_until(arg)</expr>
          <args>['arg:None']</args>
          <return>['1:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_step">
          <expr>obj.ret = do_step(arg)</expr>
          <args>['arg:None']</args>
          <return>['1:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_next">
          <expr>obj.ret = do_next(arg)</expr>
          <args>['arg:None']</args>
          <return>['1:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_run">
          <expr>obj.do_run(arg)</expr>
          <args>['arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_return">
          <expr>obj.ret = do_return(arg)</expr>
          <args>['arg:None']</args>
          <return>['1:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_continue">
          <expr>obj.ret = do_continue(arg)</expr>
          <args>['arg:None']</args>
          <return>['1:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_jump">
          <expr>obj.do_jump(arg)</expr>
          <args>['arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_debug">
          <expr>obj.do_debug(arg)</expr>
          <args>['arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_quit">
          <expr>obj.ret = do_quit(arg)</expr>
          <args>['arg:None']</args>
          <return>['1:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_EOF">
          <expr>obj.ret = do_EOF(arg)</expr>
          <args>['arg:None']</args>
          <return>['1:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_args">
          <expr>obj.do_args(arg)</expr>
          <args>['arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_retval">
          <expr>obj.do_retval(arg)</expr>
          <args>['arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_p">
          <expr>obj.do_p(arg)</expr>
          <args>['arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_pp">
          <expr>obj.do_pp(arg)</expr>
          <args>['arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_list">
          <expr>obj.do_list(arg)</expr>
          <args>['arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_longlist">
          <expr>obj.do_longlist(arg)</expr>
          <args>['arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_source">
          <expr>obj.do_source(arg)</expr>
          <args>['arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_whatis">
          <expr>obj.do_whatis(arg)</expr>
          <args>['arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_display">
          <expr>obj.do_display(arg)</expr>
          <args>['arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_undisplay">
          <expr>obj.do_undisplay(arg)</expr>
          <args>['arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="complete_undisplay">
          <expr>obj.ret = complete_undisplay(text,line,begidx,endidx)</expr>
          <args>['text:None', 'line:None', 'begidx:None', 'endidx:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_interact">
          <expr>obj.do_interact(arg)</expr>
          <args>['arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_alias">
          <expr>obj.do_alias(arg)</expr>
          <args>['arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_unalias">
          <expr>obj.do_unalias(arg)</expr>
          <args>['arg:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="complete_unalias">
          <expr>obj.ret = complete_unalias(text,line,begidx,endidx)</expr>
          <args>['text:None', 'line:None', 'begidx:None', 'endidx:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="help_exec">
          <expr>obj.help_exec()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="help_pdb">
          <expr>obj.help_pdb()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="find_function">
        <expr>find_function(funcname,filename)</expr>
        <args>['funcname:str', 'filename:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getsourcelines">
        <expr>getsourcelines(obj)</expr>
        <args>['obj:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="lasti2lineno">
        <expr>ret = lasti2lineno(code,lasti)</expr>
        <args>['code:None', 'lasti:None']</args>
        <return>['lineno:None', '0:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="run">
        <expr>run(statement,globals,locals)</expr>
        <args>['statement:None', 'globals:None', 'locals:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="runeval">
        <expr>ret = runeval(expression,globals,locals)</expr>
        <args>['expression:None', 'globals:None', 'locals:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="runctx">
        <expr>runctx(statement,globals,locals)</expr>
        <args>['statement:None', 'globals:None', 'locals:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="runcall">
        <expr>ret = runcall()</expr>
        <args>[]</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="set_trace">
        <expr>set_trace()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['header:str']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <api name="post_mortem">
        <expr>post_mortem(t)</expr>
        <args>['t:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="pm">
        <expr>pm()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="help">
        <expr>help()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>main()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>OSError</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>ValueError</exception>
        <exception>AttributeError</exception>
        <exception>Exception</exception>
        <exception>KeyError</exception>
        <exception>AttributeError</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>ValueError</exception>
        <exception>ValueError</exception>
        <exception>ValueError</exception>
        <exception>ValueError</exception>
        <exception>IndexError</exception>
        <exception>IndexError</exception>
        <exception>ValueError</exception>
        <exception>IndexError</exception>
        <exception>ValueError</exception>
        <exception>EOFError</exception>
        <exception>ValueError</exception>
        <exception>ValueError</exception>
        <exception>ValueError</exception>
        <exception>ValueError</exception>
        <exception>ValueError</exception>
        <exception>ValueError</exception>
        <exception>ValueError</exception>
        <exception>ValueError</exception>
        <exception>ValueError</exception>
        <exception>Exception</exception>
        <exception>ValueError</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>TypeError</exception>
        <exception>Exception</exception>
        <exception>Exception</exception>
        <exception>KeyError</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>AttributeError</exception>
        <exception>AttributeError</exception>
        <exception>Exception</exception>
        <exception>Restart</exception>
        <exception>SystemExit</exception>
        <exception>SyntaxError</exception>
      </errors>
    </module>
    <module name="plistlib" imports="['binascii', 'codecs', 'datetime', 'enum', 'itertools', 'os', 're', 'struct']" importfrom="['io:BytesIO', 'xml.parsers.expat:ParserCreate']">
      <class name="UID" init="obj = UID(data)">
        <api name="__init__">
          <expr>None</expr>
          <args>['data:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="load">
        <expr>load(fp)</expr>
        <args>['fp:BytesIO']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['fmt:NoneType', 'dict_type:type']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None, 'dict']</kwodefa>
      </api>
      <api name="loads">
        <expr>loads(value)</expr>
        <args>['value:bytes']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['fmt:NoneType', 'dict_type:type']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None, 'dict']</kwodefa>
      </api>
      <api name="dump">
        <expr>dump(value,fp)</expr>
        <args>['value:list', 'fp:BytesIO']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['fmt:PlistFormat', 'sort_keys:bool', 'skipkeys:bool']</kwoargs>
        <defa>[]</defa>
        <kwodefa>['FMT_XML', True, False]</kwodefa>
      </api>
      <api name="dumps">
        <expr>dumps(value)</expr>
        <args>['value:list']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['fmt:PlistFormat', 'skipkeys:bool', 'sort_keys:bool']</kwoargs>
        <defa>[]</defa>
        <kwodefa>['FMT_XML', False, True]</kwodefa>
      </api>
      <errors>
        <exception>plistlib.InvalidFileException</exception>
        <exception>OSError</exception>
        <exception>IndexError</exception>
        <exception>OverflowError</exception>
        <exception>ValueError</exception>
        <exception>TypeError</exception>
        <exception>struct.error</exception>
        <exception>UnicodeEncodeError</exception>
      </errors>
    </module>
    <module name="poplib" imports="['errno', 're', 'socket', 'sys', 'ssl', 'hashlib']" importfrom="[]">
      <class name="error_proto" init=""/>
      <class name="POP3" init="obj = POP3(host,port,timeout)">
        <api name="__init__">
          <expr>None</expr>
          <args>['host:NoneType', 'port:NoneType', 'timeout:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['POP3_PORT', None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getwelcome">
          <expr>obj.getwelcome()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_debuglevel">
          <expr>obj.set_debuglevel(level)</expr>
          <args>['level:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="user">
          <expr>obj.user(user)</expr>
          <args>['user:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pass_">
          <expr>obj.pass_(pswd)</expr>
          <args>['pswd:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="stat">
          <expr>obj.stat()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="list">
          <expr>obj.list(which)</expr>
          <args>['which:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="retr">
          <expr>obj.retr(which)</expr>
          <args>['which:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dele">
          <expr>obj.dele(which)</expr>
          <args>['which:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="noop">
          <expr>obj.noop()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="rset">
          <expr>obj.ret = rset()</expr>
          <args>[]</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="quit">
          <expr>obj.quit()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="rpop">
          <expr>obj.rpop(user)</expr>
          <args>['user:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="apop">
          <expr>obj.apop(user,password)</expr>
          <args>['user:str', 'password:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="top">
          <expr>obj.top(which,howmuch)</expr>
          <args>['which:int', 'howmuch:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="uidl">
          <expr>obj.uidl(which)</expr>
          <args>['which:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="utf8">
          <expr>obj.utf8()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="stls">
          <expr>obj.stls(context)</expr>
          <args>['context:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="POP3_SSL" init="obj = POP3_SSL(host,port,keyfile,certfile,timeout,context)">
        <api name="__init__">
          <expr>None</expr>
          <args>['host:NoneType', 'port:NoneType', 'keyfile:NoneType', 'certfile:NoneType', 'timeout:NoneType', 'context:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['POP3_SSL_PORT', None, None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="stls">
          <expr>obj.stls(keyfile,certfile,context)</expr>
          <args>['keyfile:NoneType', 'certfile:NoneType', 'context:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>ImportError</exception>
        <exception>OSError</exception>
        <exception>error_proto</exception>
      </errors>
    </module>
    <module name="heapq" imports="['doctest']" importfrom="['_heapq:*']">
      <api name="heappush">
        <expr>heappush(heap,item)</expr>
        <args>['heap:list', 'item:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="heappop">
        <expr>heappop(heap)</expr>
        <args>['heap:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="heapreplace">
        <expr>heapreplace(heap,item)</expr>
        <args>['heap:list', 'item:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="heappushpop">
        <expr>heappushpop(heap,item)</expr>
        <args>['heap:list', 'item:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="heapify">
        <expr>heapify(x)</expr>
        <args>['x:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="merge">
        <expr>merge()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['key:NoneType', 'reverse:bool']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[None, False]</kwodefa>
      </api>
      <api name="nsmallest">
        <expr>nsmallest(n,iterable,key)</expr>
        <args>['n:int', 'iterable:list', 'key:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="nlargest">
        <expr>nlargest(n,iterable,key)</expr>
        <args>['n:int', 'iterable:list', 'key:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>StopIteration</exception>
        <exception>StopIteration</exception>
        <exception>StopIteration</exception>
        <exception>StopIteration</exception>
        <exception>TypeError</exception>
        <exception>AttributeError</exception>
        <exception>TypeError</exception>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>ImportError</exception>
        <exception>ImportError</exception>
        <exception>ImportError</exception>
      </errors>
    </module>
    <module name="pstats" imports="['sys', 'os', 'time', 'marshal', 're', 'cmd', 'readline']" importfrom="['enum:Enum', 'functools:cmp_to_key', 'dataclasses:dataclass', 'typing:Dict']">
      <class name="SortKey" init=""/>
      <class name="FunctionProfile" init=""/>
      <class name="StatsProfile" init=""/>
      <class name="Stats" init="obj = Stats()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['stream:NoneType']</kwoargs>
          <defa>[]</defa>
          <kwodefa>[None]</kwodefa>
        </api>
        <api name="init">
          <expr>obj.init(arg)</expr>
          <args>['arg:Profile']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dump_stats">
          <expr>obj.dump_stats(filename)</expr>
          <args>['filename:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sort_stats">
          <expr>obj.sort_stats()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="reverse_order">
          <expr>obj.ret = reverse_order()</expr>
          <args>[]</args>
          <return>['self:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="strip_dirs">
          <expr>obj.strip_dirs()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_stats_profile">
          <expr>obj.ret = get_stats_profile()</expr>
          <args>[]</args>
          <return>['StatsProfile:type', 'stats_profile:StatsProfile']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="print_stats">
          <expr>obj.print_stats()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="print_callees">
          <expr>obj.print_callees()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="print_callers">
          <expr>obj.print_callers()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="TupleComp" init="obj = TupleComp(comp_select_list)">
        <api name="__init__">
          <expr>None</expr>
          <args>['comp_select_list:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="compare">
          <expr>obj.compare(left,right)</expr>
          <args>['left:tuple', 'right:tuple']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ProfileBrowser" init="obj = ProfileBrowser(profile)">
        <api name="__init__">
          <expr>None</expr>
          <args>['profile:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_add">
          <expr>obj.ret = do_add(line)</expr>
          <args>['line:None']</args>
          <return>['0:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="help_add">
          <expr>obj.help_add()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_callees">
          <expr>obj.ret = do_callees(line)</expr>
          <args>['line:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="help_callees">
          <expr>obj.help_callees()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_callers">
          <expr>obj.ret = do_callers(line)</expr>
          <args>['line:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="help_callers">
          <expr>obj.help_callers()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_EOF">
          <expr>obj.ret = do_EOF(line)</expr>
          <args>['line:None']</args>
          <return>['1:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="help_EOF">
          <expr>obj.help_EOF()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_quit">
          <expr>obj.ret = do_quit(line)</expr>
          <args>['line:None']</args>
          <return>['1:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="help_quit">
          <expr>obj.help_quit()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="help_read">
          <expr>obj.help_read()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_reverse">
          <expr>obj.ret = do_reverse(line)</expr>
          <args>['line:None']</args>
          <return>['0:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="help_reverse">
          <expr>obj.help_reverse()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_sort">
          <expr>obj.ret = do_sort(line)</expr>
          <args>['line:None']</args>
          <return>['0:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="help_sort">
          <expr>obj.help_sort()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="complete_sort">
          <expr>obj.ret = complete_sort(text)</expr>
          <args>['text:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_stats">
          <expr>obj.ret = do_stats(line)</expr>
          <args>['line:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="help_stats">
          <expr>obj.help_stats()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="do_strip">
          <expr>obj.do_strip(line)</expr>
          <args>['line:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="help_strip">
          <expr>obj.help_strip()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="help_help">
          <expr>obj.help_help()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="postcmd">
          <expr>obj.ret = postcmd(stop,line)</expr>
          <args>['stop:None', 'line:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="func_strip_path">
        <expr>func_strip_path(func_name)</expr>
        <args>['func_name:tuple']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="func_get_function_name">
        <expr>ret = func_get_function_name(func)</expr>
        <args>['func:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="func_std_string">
        <expr>func_std_string(func_name)</expr>
        <args>['func_name:tuple']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="add_func_stats">
        <expr>add_func_stats(target,source)</expr>
        <args>['target:tuple', 'source:tuple']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="add_callers">
        <expr>add_callers(target,source)</expr>
        <args>['target:dict', 'source:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="count_calls">
        <expr>ret = count_calls(callers)</expr>
        <args>['callers:None']</args>
        <return>['nc:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="f8">
        <expr>f8(x)</expr>
        <args>['x:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>Exception</exception>
        <exception>re.error</exception>
        <exception>ImportError</exception>
        <exception>ValueError</exception>
        <exception>ValueError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>Exception</exception>
        <exception>KeyboardInterrupt</exception>
      </errors>
    </module>
    <module name="colorsys" imports="[]" importfrom="[]">
      <api name="rgb_to_yiq">
        <expr>rgb_to_yiq(r,g,b)</expr>
        <args>['r:float', 'g:float', 'b:float']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="yiq_to_rgb">
        <expr>yiq_to_rgb(y,i,q)</expr>
        <args>['y:float', 'i:float', 'q:float']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="rgb_to_hls">
        <expr>rgb_to_hls(r,g,b)</expr>
        <args>['r:float', 'g:float', 'b:float']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="hls_to_rgb">
        <expr>hls_to_rgb(h,l,s)</expr>
        <args>['h:float', 'l:float', 's:float']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="rgb_to_hsv">
        <expr>rgb_to_hsv(r,g,b)</expr>
        <args>['r:float', 'g:float', 'b:float']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="hsv_to_rgb">
        <expr>hsv_to_rgb(h,s,v)</expr>
        <args>['h:float', 's:float', 'v:float']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="base64" imports="['re', 'struct', 'binascii', 'sys', 'getopt']" importfrom="[]">
      <api name="b64encode">
        <expr>b64encode(s,altchars)</expr>
        <args>['s:bytes', 'altchars:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="b64decode">
        <expr>b64decode(s,altchars,validate)</expr>
        <args>['s:bytes', 'altchars:NoneType', 'validate:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, False]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="standard_b64encode">
        <expr>standard_b64encode(s)</expr>
        <args>['s:bytes']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="standard_b64decode">
        <expr>standard_b64decode(s)</expr>
        <args>['s:bytes']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="urlsafe_b64encode">
        <expr>urlsafe_b64encode(s)</expr>
        <args>['s:bytes']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="urlsafe_b64decode">
        <expr>urlsafe_b64decode(s)</expr>
        <args>['s:bytes']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="b32encode">
        <expr>b32encode(s)</expr>
        <args>['s:bytes']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="b32decode">
        <expr>b32decode(s,casefold,map01)</expr>
        <args>['s:bytes', 'casefold:bool', 'map01:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[False, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="b16encode">
        <expr>b16encode(s)</expr>
        <args>['s:bytes']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="b16decode">
        <expr>b16decode(s,casefold)</expr>
        <args>['s:bytes', 'casefold:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[False]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="a85encode">
        <expr>a85encode(b)</expr>
        <args>['b:bytes']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['foldspaces:bool', 'wrapcol:int', 'pad:bool', 'adobe:bool']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[False, 0, False, False]</kwodefa>
      </api>
      <api name="a85decode">
        <expr>a85decode(b)</expr>
        <args>['b:bytes']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['foldspaces:bool', 'adobe:bool', 'ignorechars:bytes']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[False, False, b' \t\n\r\x0b']</kwodefa>
      </api>
      <api name="b85encode">
        <expr>b85encode(b,pad)</expr>
        <args>['b:bytes', 'pad:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[False]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="b85decode">
        <expr>b85decode(b)</expr>
        <args>['b:bytes']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="encode">
        <expr>encode(input,output)</expr>
        <args>['input:StringIO', 'output:BytesIO']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="decode">
        <expr>decode(input,output)</expr>
        <args>['input:BytesIO', 'output:BytesIO']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="encodebytes">
        <expr>encodebytes(s)</expr>
        <args>['s:bytes']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="decodebytes">
        <expr>decodebytes(s)</expr>
        <args>['s:bytes']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>main()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>UnicodeEncodeError</exception>
        <exception>TypeError</exception>
        <exception>KeyError</exception>
        <exception>struct.error</exception>
        <exception>TypeError</exception>
        <exception>struct.error</exception>
        <exception>TypeError</exception>
        <exception>getopt.error</exception>
      </errors>
    </module>
    <module name="pydoc" imports="['builtins', 'importlib._bootstrap', 'importlib._bootstrap_external', 'importlib.machinery', 'importlib.util', 'inspect', 'io', 'os', 'pkgutil', 'platform', 're', 'sys', 'sysconfig', 'time', 'tokenize', 'types', 'urllib.parse', 'warnings', 'tempfile', 'subprocess', 'tty', 'pydoc_data.topics', 'textwrap', 'http.server', 'email.message', 'select', 'threading', 'webbrowser', 'getopt']" importfrom="['collections:deque', 'reprlib:Repr', 'traceback:format_exception_only']">
      <class name="ErrorDuringImport" init="obj = ErrorDuringImport(filename,exc_info)">
        <api name="__init__">
          <expr>None</expr>
          <args>['filename:NoneType', 'exc_info:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Doc" init="">
        <api name="document">
          <expr>obj.ret = document(object,name)</expr>
          <args>['object:None', 'name:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="fail">
          <expr>obj.fail(object,name)</expr>
          <args>['object:None', 'name:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getdocloc">
          <expr>obj.ret = getdocloc(object,basedir)</expr>
          <args>['object:None', 'basedir:None']</args>
          <return>['docloc:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="HTMLRepr" init="obj = HTMLRepr()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="repr1">
          <expr>obj.repr1(x,level)</expr>
          <args>['x:TestCgitb', 'level:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="repr_string">
          <expr>obj.repr_string(x,level)</expr>
          <args>['x:str', 'level:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="repr_instance">
          <expr>obj.ret = repr_instance(x,level)</expr>
          <args>['x:None', 'level:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="HTMLDoc" init="">
        <api name="page">
          <expr>obj.ret = page(title,contents)</expr>
          <args>['title:None', 'contents:None']</args>
          <return>['ret:int']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="preformat">
          <expr>obj.preformat(text)</expr>
          <args>['text:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="namelink">
          <expr>obj.namelink(name)</expr>
          <args>['name:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="classlink">
          <expr>obj.classlink(object,modname)</expr>
          <args>['object:type', 'modname:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="modulelink">
          <expr>obj.ret = modulelink(object)</expr>
          <args>['object:None']</args>
          <return>['ret:int']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="modpkglink">
          <expr>obj.ret = modpkglink(modpkginfo)</expr>
          <args>['modpkginfo:None']</args>
          <return>['ret:None', 'ret:int']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="formatvalue">
          <expr>obj.ret = formatvalue(object)</expr>
          <args>['object:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="index">
          <expr>obj.ret = index(dir,shadowed)</expr>
          <args>['dir:None', 'shadowed:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="TextRepr" init="obj = TextRepr()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="repr1">
          <expr>obj.repr1(x,level)</expr>
          <args>['x:TestCgitb', 'level:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="repr_string">
          <expr>obj.repr_string(x,level)</expr>
          <args>['x:str', 'level:int']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="repr_instance">
          <expr>obj.ret = repr_instance(x,level)</expr>
          <args>['x:None', 'level:None']</args>
          <return>['cram:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="TextDoc" init="">
        <api name="indent">
          <expr>obj.indent(text,prefix)</expr>
          <args>['text:str', 'prefix:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['    ']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="formatvalue">
          <expr>obj.ret = formatvalue(object)</expr>
          <args>['object:None']</args>
          <return>['ret:int']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="Helper" init="obj = Helper(input,output)">
        <api name="__init__">
          <expr>None</expr>
          <args>['input:builtin_function_or_method', 'output:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="output">
          <expr>obj.output()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="ModuleScanner" init=""/>
      <class name="DocHandler" init=""/>
      <class name="DocServer" init=""/>
      <class name="ServerThread" init=""/>
      <class name="BadUsage" init=""/>
      <api name="pathdirs">
        <expr>ret = pathdirs()</expr>
        <args>[]</args>
        <return>['dirs:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getdoc">
        <expr>getdoc(object)</expr>
        <args>['object:EnumMeta']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="splitdoc">
        <expr>splitdoc(doc)</expr>
        <args>['doc:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="classname">
        <expr>classname(object,modname)</expr>
        <args>['object:EnumMeta', 'modname:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="isdata">
        <expr>isdata(object)</expr>
        <args>['object:module']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="replace">
        <expr>replace(text)</expr>
        <args>['text:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="cram">
        <expr>cram(text,maxlen)</expr>
        <args>['text:str', 'maxlen:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="stripid">
        <expr>stripid(text)</expr>
        <args>['text:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="allmethods">
        <expr>allmethods(cl)</expr>
        <args>['cl:type']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="visiblename">
        <expr>visiblename(name,all,obj)</expr>
        <args>['name:str', 'all:NoneType', 'obj:EnumMeta']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="classify_class_attrs">
        <expr>classify_class_attrs(object)</expr>
        <args>['object:EnumMeta']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="sort_attributes">
        <expr>sort_attributes(attrs,object)</expr>
        <args>['attrs:list', 'object:EnumMeta']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ispackage">
        <expr>ispackage(path)</expr>
        <args>['path:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="source_synopsis">
        <expr>source_synopsis(file)</expr>
        <args>['file:TextIOWrapper']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="synopsis">
        <expr>synopsis(filename,cache)</expr>
        <args>['filename:str', 'cache:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="importfile">
        <expr>ret = importfile(path)</expr>
        <args>['path:str']</args>
        <return>['ret:NoneType']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="safeimport">
        <expr>safeimport(path,forceload,cache)</expr>
        <args>['path:str', 'forceload:int', 'cache:dict']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="pager">
        <expr>pager(text)</expr>
        <args>['text:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getpager">
        <expr>getpager()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="plain">
        <expr>plain(text)</expr>
        <args>['text:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="pipepager">
        <expr>pipepager(text,cmd)</expr>
        <args>['text:None', 'cmd:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="tempfilepager">
        <expr>tempfilepager(text,cmd)</expr>
        <args>['text:None', 'cmd:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ttypager">
        <expr>ttypager(text)</expr>
        <args>['text:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="plainpager">
        <expr>plainpager(text)</expr>
        <args>['text:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="describe">
        <expr>describe(thing)</expr>
        <args>['thing:EnumMeta']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="locate">
        <expr>locate(path,forceload)</expr>
        <args>['path:str', 'forceload:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="resolve">
        <expr>resolve(thing,forceload)</expr>
        <args>['thing:EnumMeta', 'forceload:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="render_doc">
        <expr>render_doc(thing,title,forceload,renderer)</expr>
        <args>['thing:EnumMeta', 'title:str', 'forceload:int', 'renderer:_PlainTextDoc']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['Python Library Documentation: %s', 0, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="doc">
        <expr>doc(thing,title,forceload,output)</expr>
        <args>['thing:EnumMeta', 'title:str', 'forceload:int', 'output:StringIO']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['Python Library Documentation: %s', 0, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="writedoc">
        <expr>writedoc(thing,forceload)</expr>
        <args>['thing:None', 'forceload:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="writedocs">
        <expr>writedocs(dir,pkgpath,done)</expr>
        <args>['dir:None', 'pkgpath:None', 'done:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['', None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="apropos">
        <expr>apropos(key)</expr>
        <args>['key:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="browse">
        <expr>browse(port)</expr>
        <args>['port:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['open_browser:None', 'hostname:None']</kwoargs>
        <defa>[0]</defa>
        <kwodefa>[True, 'localhost']</kwodefa>
      </api>
      <api name="ispath">
        <expr>ret = ispath(x)</expr>
        <args>['x:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="cli">
        <expr>cli()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>AttributeError</exception>
        <exception>AttributeError</exception>
        <exception>TypeError</exception>
        <exception>TypeError</exception>
        <exception>OSError</exception>
        <exception>AttributeError</exception>
        <exception>AttributeError</exception>
        <exception>TypeError</exception>
        <exception>AttributeError</exception>
        <exception>TypeError</exception>
        <exception>Exception</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>TypeError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>TypeError</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>OSError</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>ImportError</exception>
        <exception>AttributeError</exception>
        <exception>ValueError</exception>
        <exception>AttributeError</exception>
        <exception>ImportError</exception>
        <exception>ErrorDuringImport</exception>
        <exception>ImportError</exception>
        <exception>ErrorDuringImport</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>EOFError</exception>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
        <exception>ImportError</exception>
        <exception>SyntaxError</exception>
        <exception>Exception</exception>
        <exception>ImportError</exception>
        <exception>KeyboardInterrupt</exception>
        <exception>EOFError</exception>
        <exception>ErrorDuringImport</exception>
        <exception>BadUsage</exception>
      </errors>
    </module>
    <module name="codeop" imports="['warnings']" importfrom="[]">
      <class name="Compile" init="obj = Compile()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="CommandCompiler" init="obj = CommandCompiler()">
        <api name="__init__">
          <expr>None</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="compile_command">
        <expr>compile_command(source,filename,symbol)</expr>
        <args>['source:str', 'filename:str', 'symbol:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['&lt;input&gt;', 'single']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>SyntaxError</exception>
        <exception>SyntaxError</exception>
        <exception>SyntaxError</exception>
      </errors>
    </module>
    <module name="zipimport" imports="['marshal', 'sys', 'time']" importfrom="['importlib.abc:ResourceReader', 'zlib:decompress', 'io:BytesIO', 'pathlib:Path']">
      <class name="zipimporter" init="obj = zipimporter(path)">
        <api name="__init__">
          <expr>None</expr>
          <args>['path:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="find_loader">
          <expr>obj.find_loader(fullname,path)</expr>
          <args>['fullname:None', 'path:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="find_module">
          <expr>obj.ret = find_module(fullname,path)</expr>
          <args>['fullname:None', 'path:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_code">
          <expr>obj.ret = get_code(fullname)</expr>
          <args>['fullname:None']</args>
          <return>['code:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_data">
          <expr>obj.ret = get_data(pathname)</expr>
          <args>['pathname:None']</args>
          <return>['_get_data:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_filename">
          <expr>obj.ret = get_filename(fullname)</expr>
          <args>['fullname:None']</args>
          <return>['modpath:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_source">
          <expr>obj.ret = get_source(fullname)</expr>
          <args>['fullname:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="is_package">
          <expr>obj.ret = is_package(fullname)</expr>
          <args>['fullname:None']</args>
          <return>['mi:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="load_module">
          <expr>obj.ret = load_module(fullname)</expr>
          <args>['fullname:None']</args>
          <return>['mod:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="get_resource_reader">
          <expr>obj.ret = get_resource_reader(fullname)</expr>
          <args>['fullname:None']</args>
          <return>['ret:None', '_ZipImportResourceReader:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <errors>
        <exception>zipimport.ZipImportError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>ZipImportError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>UnicodeDecodeError</exception>
        <exception>Exception</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>Exception</exception>
        <exception>ImportError</exception>
        <exception>ImportError</exception>
        <exception>KeyError</exception>
        <exception>IndexError</exception>
        <exception>TypeError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module name="locale" imports="['sys', 'encodings', 'encodings.aliases', 're', 'functools', 'warnings', 'os']" importfrom="['builtins:str', '_locale:*']">
      <api name="localeconv">
        <expr>localeconv()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="format_string">
        <expr>format_string(f,val,grouping,monetary)</expr>
        <args>['f:str', 'val:float', 'grouping:bool', 'monetary:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[False, False]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="format">
        <expr>format(percent,value,grouping,monetary)</expr>
        <args>['percent:str', 'value:float', 'grouping:bool', 'monetary:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[False, False]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="currency">
        <expr>currency(val,symbol,grouping,international)</expr>
        <args>['val:int', 'symbol:bool', 'grouping:bool', 'international:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[True, False, False]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="str">
        <expr>ret = str(val)</expr>
        <args>['val:None']</args>
        <return>['_format:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="delocalize">
        <expr>delocalize(string)</expr>
        <args>['string:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="atof">
        <expr>atof(string,func)</expr>
        <args>['string:str', 'func:type']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['float']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="atoi">
        <expr>atoi(string)</expr>
        <args>['string:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="normalize">
        <expr>normalize(localename)</expr>
        <args>['localename:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getdefaultlocale">
        <expr>getdefaultlocale(envvars)</expr>
        <args>['envvars:tuple']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getlocale">
        <expr>getlocale(category)</expr>
        <args>['category:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['LC_CTYPE']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="setlocale">
        <expr>setlocale(category,locale)</expr>
        <args>['category:int', 'locale:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="resetlocale">
        <expr>resetlocale(category)</expr>
        <args>['category:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['LC_ALL']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="getpreferredencoding">
        <expr>getpreferredencoding(do_setlocale)</expr>
        <args>['do_setlocale:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[True]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ImportError</exception>
        <exception>TypeError</exception>
        <exception>ValueError</exception>
        <exception>ImportError</exception>
        <exception>AttributeError</exception>
        <exception>Error</exception>
        <exception>NameError</exception>
        <exception>NameError</exception>
      </errors>
    </module>
    <module name="ast" imports="['sys', 'inspect', 'warnings', 'argparse']" importfrom="['_ast:*', 'contextlib:contextmanager', 'contextlib:nullcontext', 'enum:IntEnum', 'enum:auto', 'collections:deque']">
      <class name="NodeVisitor" init="">
        <api name="visit_Constant">
          <expr>obj.ret = visit_Constant(node)</expr>
          <args>['node:None']</args>
          <return>['ret:None']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="NodeTransformer" init=""/>
      <class name="Num" init=""/>
      <class name="Str" init=""/>
      <class name="Bytes" init=""/>
      <class name="NameConstant" init=""/>
      <class name="Ellipsis" init=""/>
      <class name="slice" init=""/>
      <class name="Index" init=""/>
      <class name="ExtSlice" init=""/>
      <class name="Suite" init=""/>
      <class name="AugLoad" init=""/>
      <class name="AugStore" init=""/>
      <class name="Param" init=""/>
      <api name="parse">
        <expr>parse(source,filename,mode)</expr>
        <args>['source:str', 'filename:str', 'mode:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['type_comments:bool', 'feature_version:NoneType']</kwoargs>
        <defa>['&lt;unknown&gt;', 'exec']</defa>
        <kwodefa>[False, None]</kwodefa>
      </api>
      <api name="literal_eval">
        <expr>literal_eval(node_or_string)</expr>
        <args>['node_or_string:Constant']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="dump">
        <expr>dump(node,annotate_fields,include_attributes)</expr>
        <args>['node:Module', 'annotate_fields:bool', 'include_attributes:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['indent:NoneType']</kwoargs>
        <defa>[True, False]</defa>
        <kwodefa>[None]</kwodefa>
      </api>
      <api name="copy_location">
        <expr>copy_location(new_node,old_node)</expr>
        <args>['new_node:Constant', 'old_node:Constant']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="fix_missing_locations">
        <expr>fix_missing_locations(node)</expr>
        <args>['node:Module']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="increment_lineno">
        <expr>increment_lineno(node,n)</expr>
        <args>['node:Expression', 'n:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[1]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="iter_fields">
        <expr>iter_fields(node)</expr>
        <args>['node:Module']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="iter_child_nodes">
        <expr>iter_child_nodes(node)</expr>
        <args>['node:Module']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_docstring">
        <expr>get_docstring(node,clean)</expr>
        <args>['node:Module', 'clean:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[True]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_source_segment">
        <expr>get_source_segment(source,node)</expr>
        <args>['source:str', 'node:Call']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['padded:bool']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[False]</kwodefa>
      </api>
      <api name="walk">
        <expr>walk(node)</expr>
        <args>['node:Expression']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="unparse">
        <expr>unparse(ast_obj)</expr>
        <args>['ast_obj:Module']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="main">
        <expr>main()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>AttributeError</exception>
        <exception>AttributeError</exception>
        <exception>AttributeError</exception>
        <exception>AttributeError</exception>
        <exception>ValueError</exception>
        <exception>StopIteration</exception>
      </errors>
    </module>
    <module name="shutil" imports="['os', 'sys', 'stat', 'fnmatch', 'collections', 'errno', 'zlib', 'bz2', 'lzma', 'posix', 'nt', 'tarfile', 'zipfile']" importfrom="['pwd:getpwnam', 'grp:getgrnam']">
      <class name="RegistryError" init=""/>
      <api name="copyfileobj">
        <expr>copyfileobj(fsrc,fdst,length)</expr>
        <args>['fsrc:BufferedReader', 'fdst:_SocketWriter', 'length:int']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[0]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="copyfile">
        <expr>copyfile(src,dst)</expr>
        <args>['src:str', 'dst:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['follow_symlinks:bool']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[True]</kwodefa>
      </api>
      <api name="copymode">
        <expr>copymode(src,dst)</expr>
        <args>['src:str', 'dst:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['follow_symlinks:bool']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[True]</kwodefa>
      </api>
      <api name="copystat">
        <expr>copystat(src,dst)</expr>
        <args>['src:str', 'dst:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['follow_symlinks:bool']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[True]</kwodefa>
      </api>
      <api name="copy">
        <expr>copy(src,dst)</expr>
        <args>['src:str', 'dst:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['follow_symlinks:bool']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[True]</kwodefa>
      </api>
      <api name="copy2">
        <expr>copy2(src,dst)</expr>
        <args>['src:str', 'dst:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>['follow_symlinks:bool']</kwoargs>
        <defa>[]</defa>
        <kwodefa>[True]</kwodefa>
      </api>
      <api name="ignore_patterns">
        <expr>ignore_patterns()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="copytree">
        <expr>copytree(src,dst,symlinks,ignore,copy_function,ignore_dangling_symlinks,dirs_exist_ok)</expr>
        <args>['src:str', 'dst:str', 'symlinks:bool', 'ignore:function', 'copy_function:function', 'ignore_dangling_symlinks:bool', 'dirs_exist_ok:bool']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[False, None, 'copy2', False, False]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="rmtree">
        <expr>rmtree(path,ignore_errors,onerror)</expr>
        <args>['path:str', 'ignore_errors:bool', 'onerror:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[False, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="move">
        <expr>move(src,dst,copy_function)</expr>
        <args>['src:str', 'dst:str', 'copy_function:function']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['copy2']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_archive_formats">
        <expr>get_archive_formats()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="register_archive_format">
        <expr>register_archive_format(name,function,extra_args,description)</expr>
        <args>['name:str', 'function:function', 'extra_args:list', 'description:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, '']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="unregister_archive_format">
        <expr>unregister_archive_format(name)</expr>
        <args>['name:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="make_archive">
        <expr>make_archive(base_name,format,root_dir,base_dir,verbose,dry_run,owner,group,logger)</expr>
        <args>['base_name:str', 'format:str', 'root_dir:NoneType', 'base_dir:NoneType', 'verbose:int', 'dry_run:int', 'owner:NoneType', 'group:NoneType', 'logger:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None, 0, 0, None, None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_unpack_formats">
        <expr>get_unpack_formats()</expr>
        <args>[]</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="register_unpack_format">
        <expr>register_unpack_format(name,extensions,function,extra_args,description)</expr>
        <args>['name:str', 'extensions:list', 'function:function', 'extra_args:list', 'description:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, '']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="unregister_unpack_format">
        <expr>unregister_unpack_format(name)</expr>
        <args>['name:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="unpack_archive">
        <expr>unpack_archive(filename,extract_dir,format)</expr>
        <args>['filename:str', 'extract_dir:str', 'format:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="disk_usage">
        <expr>disk_usage(path)</expr>
        <args>['path:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="chown">
        <expr>chown(path,user,group)</expr>
        <args>['path:str', 'user:NoneType', 'group:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="get_terminal_size">
        <expr>get_terminal_size(fallback)</expr>
        <args>['fallback:tuple']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="which">
        <expr>which(cmd,mode,path)</expr>
        <args>['cmd:str', 'mode:int', 'path:NoneType']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[None, None]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ImportError</exception>
        <exception>ImportError</exception>
        <exception>ImportError</exception>
        <exception>ImportError</exception>
        <exception>ImportError</exception>
        <exception>shutil.Error</exception>
        <exception>shutil.SameFileError</exception>
        <exception>shutil.SpecialFileError</exception>
        <exception>shutil.ExecError</exception>
        <exception>shutil.ReadError</exception>
        <exception>Exception</exception>
        <exception>OSError</exception>
        <exception>Exception</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>_GiveupOnFastCopy</exception>
        <exception>_GiveupOnFastCopy</exception>
        <exception>IsADirectoryError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>NotImplementedError</exception>
        <exception>OSError</exception>
        <exception>Error</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>Exception</exception>
        <exception>Exception</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>OSError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>tarfile.TarError</exception>
        <exception>KeyError</exception>
        <exception>KeyError</exception>
        <exception>ValueError</exception>
        <exception>KeyError</exception>
        <exception>ValueError</exception>
        <exception>AttributeError</exception>
        <exception>ValueError</exception>
        <exception>OSError</exception>
        <exception>AttributeError</exception>
        <exception>ValueError</exception>
      </errors>
    </module>
    <module name="struct" imports="[]" importfrom="['_struct:*']"/>
    <module name="token" imports="[]" importfrom="[]">
      <api name="ISTERMINAL">
        <expr>ret = ISTERMINAL(x)</expr>
        <args>['x:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ISNONTERMINAL">
        <expr>ret = ISNONTERMINAL(x)</expr>
        <args>['x:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ISEOF">
        <expr>ret = ISEOF(x)</expr>
        <args>['x:None']</args>
        <return>['ret:None']</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
    </module>
    <module name="ftplib" imports="['sys', 'socket', 'ssl', 're']" importfrom="[]">
      <class name="Error" init=""/>
      <class name="FTP" init="obj = FTP(host,user,passwd,acct,timeout,source_address)">
        <api name="__init__">
          <expr>None</expr>
          <args>['host:NoneType', 'user:NoneType', 'passwd:NoneType', 'acct:NoneType', 'timeout:NoneType', 'source_address:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['encoding:NoneType']</kwoargs>
          <defa>['', '', '', '', '_GLOBAL_DEFAULT_TIMEOUT', None]</defa>
          <kwodefa>['utf-8']</kwodefa>
        </api>
        <api name="connect">
          <expr>obj.connect(host,port,timeout,source_address)</expr>
          <args>['host:str', 'port:int', 'timeout:int', 'source_address:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['', 0, 'int', None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="getwelcome">
          <expr>obj.ret = getwelcome()</expr>
          <args>[]</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_debuglevel">
          <expr>obj.set_debuglevel(level)</expr>
          <args>['level:None']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="set_pasv">
          <expr>obj.set_pasv(val)</expr>
          <args>['val:bool']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="sanitize">
          <expr>obj.sanitize(s)</expr>
          <args>['s:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="abort">
          <expr>obj.ret = abort()</expr>
          <args>[]</args>
          <return>['resp:str']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="makeport">
          <expr>obj.makeport()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="ntransfercmd">
          <expr>obj.ntransfercmd(cmd,rest)</expr>
          <args>['cmd:str', 'rest:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="transfercmd">
          <expr>obj.transfercmd(cmd,rest)</expr>
          <args>['cmd:str', 'rest:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="login">
          <expr>obj.login(user,passwd,acct)</expr>
          <args>['user:str', 'passwd:str', 'acct:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['', '', '']</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="retrbinary">
          <expr>obj.retrbinary(cmd,callback,blocksize,rest)</expr>
          <args>['cmd:str', 'callback:function', 'blocksize:int', 'rest:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[8192, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="storbinary">
          <expr>obj.storbinary(cmd,fp,blocksize,callback,rest)</expr>
          <args>['cmd:str', 'fp:BytesIO', 'blocksize:int', 'callback:NoneType', 'rest:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[8192, None, None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="storlines">
          <expr>obj.storlines(cmd,fp,callback)</expr>
          <args>['cmd:str', 'fp:BytesIO', 'callback:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="acct">
          <expr>obj.ret = acct(password)</expr>
          <args>['password:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="nlst">
          <expr>obj.nlst()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="dir">
          <expr>obj.dir()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="mlsd">
          <expr>obj.mlsd(path,facts)</expr>
          <args>['path:str', 'facts:list']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>['', None]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="rename">
          <expr>obj.rename(fromname,toname)</expr>
          <args>['fromname:str', 'toname:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="delete">
          <expr>obj.delete(filename)</expr>
          <args>['filename:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="cwd">
          <expr>obj.cwd(dirname)</expr>
          <args>['dirname:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="size">
          <expr>obj.size(filename)</expr>
          <args>['filename:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="mkd">
          <expr>obj.mkd(dirname)</expr>
          <args>['dirname:str']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="rmd">
          <expr>obj.ret = rmd(dirname)</expr>
          <args>['dirname:str']</args>
          <return>['ret:NoneType']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="pwd">
          <expr>obj.ret = pwd()</expr>
          <args>[]</args>
          <return>[':NoneType', 'parse257:function']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <class name="FTP_TLS" init="obj = FTP_TLS(host,user,passwd,acct,keyfile,certfile,context,timeout,source_address)">
        <api name="__init__">
          <expr>None</expr>
          <args>['host:NoneType', 'user:NoneType', 'passwd:NoneType', 'acct:NoneType', 'keyfile:NoneType', 'certfile:NoneType', 'context:NoneType', 'timeout:NoneType', 'source_address:NoneType']</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>['encoding:NoneType']</kwoargs>
          <defa>['', '', '', '', None, None, None, '_GLOBAL_DEFAULT_TIMEOUT', None]</defa>
          <kwodefa>['utf-8']</kwodefa>
        </api>
        <api name="ccc">
          <expr>obj.ccc()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="prot_p">
          <expr>obj.prot_p()</expr>
          <args>[]</args>
          <return>[]</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="prot_c">
          <expr>obj.ret = prot_c()</expr>
          <args>[]</args>
          <return>['resp:str']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
        <api name="abort">
          <expr>obj.ret = abort()</expr>
          <args>[]</args>
          <return>['resp:str']</return>
          <dependences>None</dependences>
          <posargs>[]</posargs>
          <kwoargs>[]</kwoargs>
          <defa>[]</defa>
          <kwodefa>[]</kwodefa>
        </api>
      </class>
      <api name="parse150">
        <expr>parse150(resp)</expr>
        <args>['resp:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parse227">
        <expr>parse227(resp)</expr>
        <args>['resp:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parse229">
        <expr>parse229(resp,peer)</expr>
        <args>['resp:str', 'peer:tuple']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="parse257">
        <expr>parse257(resp)</expr>
        <args>['resp:str']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="print_line">
        <expr>print_line(line)</expr>
        <args>['line:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>[]</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <api name="ftpcp">
        <expr>ftpcp(source,sourcename,target,targetname,type)</expr>
        <args>['source:None', 'sourcename:None', 'target:None', 'targetname:None', 'type:None']</args>
        <return>[]</return>
        <dependences>None</dependences>
        <posargs>[]</posargs>
        <kwoargs>[]</kwoargs>
        <defa>['', 'I']</defa>
        <kwodefa>[]</kwodefa>
      </api>
      <errors>
        <exception>ftplib.error_reply</exception>
        <exception>ftplib.error_temp</exception>
        <exception>ftplib.error_perm</exception>
        <exception>ftplib.error_proto</exception>
        <exception>OSError</exception>
        <exception>EOFError</exception>
        <exception>error_perm</exception>
        <exception>ImportError</exception>
      </errors>
    </module>
  </library>
</apisepc>
